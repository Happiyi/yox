{"version":3,"file":"yox.esm.js","sources":["../../../../yox-common/src/util/env.ts","../../../../yox-common/src/function/isDef.ts","../../../../yox-common/src/util/is.ts","../../../../yox-common/src/function/execute.ts","../../../../yox-common/src/util/CustomEvent.ts","../../../../yox-common/src/util/array.ts","../../../../yox-common/src/util/string.ts","../../../../yox-common/src/util/keypath.ts","../../../../yox-common/src/util/object.ts","../../../../yox-common/src/function/toString.ts","../../../../yox-common/src/util/logger.ts","../../../../yox-common/src/util/Emitter.ts","../../../../yox-common/src/function/isNative.ts","../../../../yox-common/src/function/nextTick.ts","../../../../yox-common/src/util/NextTask.ts","../../../../yox-config/src/config.ts","../../../../yox-common/src/function/guid.ts","../../../../yox-snabbdom/src/field.ts","../../../../yox-snabbdom/src/nativeAttr.ts","../../../../yox-snabbdom/src/nativeProp.ts","../../../../yox-snabbdom/src/directive.ts","../../../../yox-snabbdom/src/component.ts","../../../../yox-snabbdom/src/snabbdom.ts","../../../../yox-common/src/function/toNumber.ts","../../../../yox-expression-compiler/src/nodeType.ts","../../../../yox-template-compiler/src/nodeType.ts","../../../../yox-common/src/function/isUndef.ts","../../../../yox-template-compiler/src/renderer.ts","../../../../yox-observer/src/Computed.ts","../../../../yox-observer/src/function/matchBest.ts","../../../../yox-observer/src/function/readValue.ts","../../../../yox-observer/src/function/diffString.ts","../../../../yox-observer/src/function/diffArray.ts","../../../../yox-observer/src/function/diffObject.ts","../../../../yox-observer/src/function/diffRecursion.ts","../../../../yox-observer/src/function/diffWatcher.ts","../../../../yox-observer/src/function/filterWatcher.ts","../../../../yox-observer/src/function/formatWatcherOptions.ts","../../../../yox-observer/src/Observer.ts","../../../../yox-dom/src/dom.ts","../../../../yox-common/src/function/debounce.ts","../../../src/directive/event.ts","../../../src/directive/model.ts","../../../src/directive/binding.ts","../../../src/filter/hasSlot.ts","../../../src/Yox.ts"],"sourcesContent":["import ValueHolder from '../../../yox-type/src/interface/ValueHolder'\n\n/**\n * 为了压缩，定义的常量\n */\nexport const TRUE = true\nexport const FALSE = false\nexport const NULL = null\nexport const UNDEFINED = void 0\n\nexport const RAW_TRUE = 'true'\nexport const RAW_FALSE = 'false'\nexport const RAW_NULL = 'null'\nexport const RAW_UNDEFINED = 'undefined'\n\nexport const RAW_KEY = 'key'\nexport const RAW_REF = 'ref'\nexport const RAW_SLOT = 'slot'\nexport const RAW_NAME = 'name'\n\nexport const RAW_FILTER = 'filter'\nexport const RAW_PARTIAL = 'partial'\nexport const RAW_COMPONENT = 'component'\nexport const RAW_DIRECTIVE = 'directive'\nexport const RAW_TRANSITION = 'transition'\n\nexport const RAW_THIS = 'this'\nexport const RAW_VALUE = 'value'\nexport const RAW_LENGTH = 'length'\nexport const RAW_FUNCTION = 'function'\nexport const RAW_TEMPLATE = 'template'\nexport const RAW_WILDCARD = '*'\n\nexport const KEYPATH_PARENT = '..'\nexport const KEYPATH_CURRENT = RAW_THIS\n\nexport const RAW_MINUS_ONE = -1\n\n/**\n * Single instance for window in browser\n */\nexport const WINDOW = typeof window !== RAW_UNDEFINED ? window : UNDEFINED\n\n/**\n * Single instance for document in browser\n */\nexport const DOCUMENT = typeof document !== RAW_UNDEFINED ? document : UNDEFINED\n\n/**\n * tap 事件\n *\n * 非常有用的抽象事件，比如 pc 端是 click 事件，移动端是 touchend 事件\n *\n * 这样只需 on-tap=\"handler\" 就可以完美兼容各端\n *\n * 框架未实现此事件，通过 Yox.dom.specialEvents 提供给外部扩展\n *\n */\nexport const EVENT_TAP = 'tap'\n\n/**\n * 点击事件\n */\nexport const EVENT_CLICK = 'click'\n\n/**\n * 输入事件\n */\nexport const EVENT_INPUT = 'input'\n\n/**\n * 变化事件\n */\nexport const EVENT_CHANGE = 'change'\n\n/**\n * 唯一内置的特殊事件：model\n */\nexport const EVENT_MODEL = 'model'\n\n/**\n * Single instance for noop function\n */\nexport const EMPTY_FUNCTION = function () {\n  /** yox */\n}\n\n/**\n * 空对象，很多地方会用到，比如 `a || EMPTY_OBJECT` 确保是个对象\n */\nexport const EMPTY_OBJECT = Object.freeze({})\n\n/**\n * 空数组\n */\nexport const EMPTY_ARRAY = Object.freeze([])\n\n/**\n * 空字符串\n */\nexport const EMPTY_STRING = ''\n\n/**\n * 全局 value holder，避免频繁的创建临时对象\n */\nexport const VALUE_HOLDER: ValueHolder = {\n  value: UNDEFINED\n}","import * as env from '../util/env'\n\nexport default function (target: any): boolean {\n  return target !== env.UNDEFINED\n}\n","import * as env from './env'\n\n/**\n * Check if value is a function.\n *\n * @param value\n * @return\n */\nexport function func(value: any): boolean {\n  return typeof value === env.RAW_FUNCTION\n}\n\n/**\n * Check if value is an array.\n *\n * @param value\n * @return\n */\nexport function array(value: any): boolean {\n  return Array.isArray(value)\n}\n\n/**\n * Check if value is an object.\n *\n * @param value\n * @return\n */\nexport function object(value: any): boolean {\n  // 低版本 IE 会把 null 和 undefined 当作 object\n  return value !== env.NULL && typeof value === 'object'\n}\n\n/**\n * Check if value is a string.\n *\n * @param value\n * @return\n */\nexport function string(value: any): boolean {\n  return typeof value === 'string'\n}\n\n/**\n * Check if value is a number.\n *\n * @param value\n * @return\n */\nexport function number(value: any): boolean {\n  return typeof value === 'number'\n}\n\n/**\n * Check if value is boolean.\n *\n * @param value\n * @return\n */\nexport function boolean(value: any): boolean {\n  return typeof value === 'boolean'\n}\n\n/**\n * Check if value is numeric.\n *\n * @param value\n * @return\n */\nexport function numeric(value: any): boolean {\n  return number(value)\n    || (string(value) && !isNaN(parseFloat(value)) && isFinite(value))\n}\n","import isDef from './isDef'\nimport * as is from '../util/is'\n\n/**\n * 任性地执行一个函数，不管它有没有、是不是\n *\n * @param fn 调用的函数\n * @param context 执行函数时的 this 指向\n * @param args 调用函数的参数，多参数时传入数组\n * @return 调用函数的返回值\n */\nexport default function (fn: any, context?: any, args?: any): any {\n  if (is.func(fn)) {\n    return is.array(args)\n      ? fn.apply(context, args)\n      : isDef(context)\n        ? fn.call(context, args)\n        : isDef(args)\n          ? fn(args)\n          : fn()\n  }\n}\n","import CustomEventInterface from '../../../yox-type/src/event/CustomEvent'\nimport Yox from '../../../yox-type/src/interface/Yox'\n\nimport * as env from './env'\n\nexport default class CustomEvent implements CustomEventInterface {\n\n  public static PHASE_CURRENT = 0\n\n  public static PHASE_UPWARD = 1\n\n  public static PHASE_DOWNWARD = env.RAW_MINUS_ONE\n\n  // 事件名称\n  type: string\n\n  // 事件当前阶段\n  phase: number\n\n  // 哪个组件发出的事件\n  target?: Yox\n\n  // 原始事件，比如 DOM 事件\n  originalEvent?: CustomEventInterface | Event\n\n  // 是否已阻止事件的默认行为\n  isPrevented?: true\n\n  // 是否已停止事件冒泡\n  isStoped?: true\n\n  // 处理当前事件的监听器，方便外部获取 listener 进行解绑\n  listener?: Function\n\n  /**\n   * 构造函数\n   *\n   * 可以传事件名称，也可以传原生事件对象\n   */\n  constructor(type: string, originalEvent?: CustomEventInterface | Event) {\n    this.type = type\n    this.phase = CustomEvent.PHASE_CURRENT\n    if (originalEvent) {\n      this.originalEvent = originalEvent\n    }\n  }\n\n  /**\n   * 阻止事件的默认行为\n   */\n  preventDefault(): CustomEventInterface {\n    const instance = this\n    if (!instance.isPrevented) {\n      const { originalEvent } = instance\n      if (originalEvent) {\n        originalEvent.preventDefault()\n      }\n      instance.isPrevented = env.TRUE\n    }\n    return instance\n  }\n\n  /**\n   * 停止事件广播\n   */\n  stopPropagation(): CustomEventInterface {\n    const instance = this\n    if (!instance.isStoped) {\n      const { originalEvent } = instance\n      if (originalEvent) {\n        originalEvent.stopPropagation()\n      }\n      instance.isStoped = env.TRUE\n    }\n    return instance\n  }\n\n  prevent(): CustomEventInterface {\n    return this.preventDefault()\n  }\n\n  stop(): CustomEventInterface {\n    return this.stopPropagation()\n  }\n\n}\n","import * as is from './is'\nimport * as env from './env'\nimport execute from '../function/execute'\n\n/**\n * 遍历数组\n *\n * @param array\n * @param callback 返回 false 可停止遍历\n * @param reversed 是否逆序遍历\n */\nexport function each<T>(\n  array: T[],\n  callback: (item: T, index: number, length: number) => boolean | void,\n  reversed?: boolean\n): void {\n  const { length } = array\n  if (length) {\n    if (reversed) {\n      for (let i = length - 1; i >= 0; i--) {\n        if (callback(array[i], i, length) === env.FALSE) {\n          break\n        }\n      }\n    }\n    else {\n      for (let i = 0; i < length; i++) {\n        if (callback(array[i], i, length) === env.FALSE) {\n          break\n        }\n      }\n    }\n  }\n}\n\nfunction nativePush<T>(array: T[], item: T) {\n  array[array.length] = item\n}\n\nfunction nativeUnshift<T>(array: T[], item: T) {\n  array.unshift(item)\n}\n\n/**\n * 添加\n *\n * @param array\n * @param value\n * @param action\n */\nfunction addItem<T>(array: T[], value: T | T[], action: Function) {\n  if (is.array(value)) {\n    each(\n      value as T[],\n      function (item: T) {\n        action(array, item)\n      }\n    )\n  }\n  else {\n    action(array, value)\n  }\n}\n\n/**\n * 往后加\n *\n * @param array\n * @param target\n */\nexport function push<T>(array: T[], target: T | T[]): void {\n  addItem(array, target, nativePush)\n}\n\n/**\n * 往前加\n *\n * @param array\n * @param target\n */\nexport function unshift<T>(array: T[], target: T | T[]): void {\n  addItem(array, target, nativeUnshift)\n}\n\n/**\n * 数组项在数组中的位置\n *\n * @param array 数组\n * @param target 数组项\n * @param strict 是否全等判断，默认是全等\n * @return 如果未找到，返回 -1\n */\nexport function indexOf<T>(array: T[], target: T, strict?: boolean): number {\n  let result = env.RAW_MINUS_ONE\n  each(\n    array,\n    function (item: any, index: number) {\n      if (strict === env.FALSE ? item == target : item === target) {\n        result = index\n        return env.FALSE\n      }\n    }\n  )\n  return result\n}\n\n/**\n * 获取数组最后一项\n *\n * @param array 数组\n * @return\n */\nexport function last<T>(array: T[]): T | void {\n  const { length } = array\n  if (length > 0) {\n    return array[length - 1]\n  }\n}\n\n/**\n * 弹出数组最后一项\n *\n * 项目里用的太多，仅用于节省字符...\n *\n * @param array 数组\n * @return 弹出的数组项\n */\nexport function pop<T>(array: T[]): T | void {\n  const { length } = array\n  if (length > 0) {\n    return array.pop()\n  }\n}\n\n/**\n * 删除数组项\n *\n * @param array 数组\n * @param item 待删除项\n * @param strict 是否全等判断，默认是全等\n * @return 删除的数量\n */\nexport function remove<T>(array: T[], target: T, strict?: boolean): number {\n  let result = 0\n  each(\n    array,\n    function (item: T, index: number) {\n      if (strict === env.FALSE ? item == target : item === target) {\n        array.splice(index, 1)\n        result++\n      }\n    },\n    env.TRUE\n  )\n  return result\n}\n\n/**\n * 数组是否包含 item\n *\n * @param array 数组\n * @param target 可能包含的数组项\n * @param strict 是否全等判断，默认是全等\n * @return\n */\nexport function has<T>(array: T[], target: T, strict?: boolean): boolean {\n  return indexOf(array, target, strict) >= 0\n}\n\n/**\n * 把类数组转成数组\n *\n * @param array 类数组\n * @return\n */\nexport function toArray<T>(array: T[] | ArrayLike<T>): T[] {\n  return is.array(array)\n    ? array\n    : execute(env.EMPTY_ARRAY.slice, array)\n}\n\n/**\n * 把数组转成对象\n *\n * @param array 数组\n * @param key 数组项包含的字段名称，如果数组项是基本类型，可不传\n * @param value\n * @return\n */\nexport function toObject(array: any[], key?: string | null, value?: any): Object {\n  let result = {}\n  each(\n    array,\n    function (item: any) {\n      result[key ? item[key] : item] = value || item\n    }\n  )\n  return result\n}\n\n/**\n * 把数组合并成字符串\n *\n * @param array\n * @param separator\n * @return\n */\nexport function join(array: string[], separator: string): string {\n  return array.join(separator)\n}\n\n/**\n * 用于判断长度大于 0 的数组\n *\n * @param array\n * @return\n */\nexport function falsy(array: any): boolean {\n  return !is.array(array) || !array.length\n}\n","import * as is from './is'\nimport * as env from './env'\n\nimport isDef from '../function/isDef'\n\nconst camelizePattern = /-([a-z])/gi,\n\nhyphenatePattern = /\\B([A-Z])/g,\n\ncapitalizePattern = /^[a-z]/,\n\ncamelizeCache: Record<string, string> = {},\n\nhyphenateCache: Record<string, string> = {},\n\ncapitalizeCache: Record<string, string> = {}\n\n/**\n * 连字符转成驼峰\n *\n * @param str\n * @return 驼峰格式的字符串\n */\nexport function camelize(str: string): string {\n  if (!camelizeCache[str]) {\n    camelizeCache[str] = str.replace(\n      camelizePattern,\n      function ($0, $1) {\n        return upper($1)\n      }\n    )\n  }\n  return camelizeCache[str]\n}\n\n/**\n * 驼峰转成连字符\n *\n * @param str\n * @return 连字符格式的字符串\n */\nexport function hyphenate(str: string): string {\n  if (!hyphenateCache[str]) {\n    hyphenateCache[str] = str.replace(\n      hyphenatePattern,\n      function ($0, $1) {\n        return '-' + lower($1)\n      }\n    )\n  }\n  return hyphenateCache[str]\n}\n\n/**\n * 首字母大写\n *\n * @param str\n * @return\n */\nexport function capitalize(str: string): string {\n  if (!capitalizeCache[str]) {\n    capitalizeCache[str] = str.replace(\n      capitalizePattern,\n      upper\n    )\n  }\n  return capitalizeCache[str]\n}\n\n/**\n * 清除两侧空白符\n *\n * @param str\n * @return 清除两侧空白符的字符串\n */\nexport function trim(str: any): string {\n  return falsy(str)\n    ? env.EMPTY_STRING\n    : str.trim()\n}\n\n/**\n * 截取字符串\n *\n * @param str\n * @param start\n * @param end\n * @return\n */\nexport function slice(str: string, start: number, end?: number): string {\n  return is.number(end)\n    ? start === end\n      ? env.EMPTY_STRING\n      : str.slice(start, end)\n    : str.slice(start)\n}\n\n/**\n * 获取子串的起始位置\n *\n * @param str\n * @param part\n * @param start\n * @return\n */\nexport function indexOf(str: string, part: string, start?: number): number {\n  return str.indexOf(part, isDef(start) ? start : 0)\n}\n\n/**\n * 获取子串的起始位置\n *\n * @param str\n * @param part\n * @param end\n * @return\n */\nexport function lastIndexOf(str: string, part: string, end?: number): number {\n  return str.lastIndexOf(part, isDef(end) ? end : str.length)\n}\n\n/**\n * str 是否以 part 开头\n *\n * @param str\n * @param part\n * @return\n */\nexport function startsWith(str: string, part: string): boolean {\n  return indexOf(str, part) === 0\n}\n\n/**\n * str 是否以 part 结束\n *\n * @param str\n * @param part\n * @return\n */\nexport function endsWith(str: string, part: string): boolean {\n  const offset = str.length - part.length\n  return offset >= 0 && lastIndexOf(str, part) === offset\n}\n\n/**\n * 获取某个位置的字符\n */\nexport function charAt(str: string, index?: number): string {\n  return str.charAt(index || 0)\n}\n\n/**\n * 获取某个位置的字符编码\n */\nexport function codeAt(str: string, index?: number): number {\n  return str.charCodeAt(index || 0)\n}\n\n/**\n * 大写格式\n */\nexport function upper(str: string): string {\n  return str.toUpperCase()\n}\n\n/**\n * 小写格式\n */\nexport function lower(str: string): string {\n  return str.toLowerCase()\n}\n\n/**\n * str 是否包含 part\n *\n * @param str\n * @param part\n * @return 是否包含\n */\nexport function has(str: string, part: string): boolean {\n  return indexOf(str, part) >= 0\n}\n\n/**\n * 判断长度大于 0 的字符串\n *\n * @param str\n * @return\n */\nexport function falsy(str: any): boolean {\n  return !is.string(str) || !str.length\n}\n","import * as env from './env'\nimport * as string from './string'\n\nimport isDef from '../function/isDef'\n\nconst dotPattern = /\\./g,\n\nasteriskPattern = /\\*/g,\n\ndoubleAsteriskPattern = /\\*\\*/g,\n\nsplitCache: Record<string, string[]> = {},\n\npatternCache: Record<string, RegExp> = {}\n\nexport const separator = '.'\n\n/**\n * 判断 keypath 是否以 prefix 开头，如果是，返回匹配上的前缀长度，否则返回 -1\n *\n * @param keypath\n * @param prefix\n * @return\n */\nexport function match(keypath: string, prefix: string): number {\n  if (keypath === prefix) {\n    return prefix.length\n  }\n  prefix += separator\n  return string.startsWith(keypath, prefix)\n    ? prefix.length\n    : env.RAW_MINUS_ONE\n}\n\n/**\n * 遍历 keypath 的每个部分\n *\n * @param keypath\n * @param callback 返回 false 可中断遍历\n */\nexport function each(keypath: string, callback: (key: string, isLast: boolean) => boolean | void) {\n  // 判断字符串是因为 keypath 有可能是 toString\n  // 而 splitCache.toString 是个函数\n  const list = isDef(splitCache[keypath])\n    ? splitCache[keypath]\n    : (splitCache[keypath] = keypath.split(separator))\n\n  for (let i = 0, lastIndex = list.length - 1; i <= lastIndex; i++) {\n    if (callback(list[i], i === lastIndex) === env.FALSE) {\n      break\n    }\n  }\n}\n\n/**\n * 遍历 keypath 的每个部分\n *\n * @param keypath1\n * @param keypath2\n */\nexport function join(keypath1: string, keypath2: string): string {\n  return keypath1 && keypath2\n    ? keypath1 + separator + keypath2\n    : keypath1 || keypath2\n}\n\n/**\n * 是否模糊匹配\n *\n * @param keypath\n */\nexport function isFuzzy(keypath: string): boolean {\n  return string.has(keypath, env.RAW_WILDCARD)\n}\n\n/**\n * 模糊匹配 keypath\n *\n * @param keypath\n * @param pattern\n */\nexport function matchFuzzy(keypath: string, pattern: string): string | void {\n  let cache = patternCache[pattern]\n  if (!cache) {\n    const str = pattern\n      .replace(dotPattern, '\\\\.')\n      .replace(asteriskPattern, '(\\\\w+)')\n      .replace(doubleAsteriskPattern, '([\\.\\\\w]+?)')\n    cache = patternCache[pattern] = new RegExp(`^${str}$`)\n  }\n  const result = keypath.match(cache)\n  if (result) {\n    return result[1]\n  }\n}","import * as is from './is'\nimport * as env from './env'\nimport * as array from './array'\nimport * as keypathUtil from './keypath'\n\nimport isDef from '../function/isDef'\n\nimport * as type from '../../../yox-type/src/type'\nimport ValueHolder from '../../../yox-type/src/interface/ValueHolder'\n\n/**\n * 获取对象的 key 的数组\n *\n * @param object\n * @return\n */\nexport function keys(object: type.data): string[] {\n  return Object.keys(object)\n}\n\nfunction sortKeyByAsc(a: string, b: string): number {\n  return a.length - b.length\n}\n\nfunction sortKeyByDesc(a: string, b: string): number {\n  return b.length - a.length\n}\n\n/**\n * 排序对象的 key\n *\n * @param object\n * @param desc 是否逆序，默认从小到大排序\n * @return\n */\nexport function sort(object: type.data, desc?: boolean): string[] {\n  return keys(object).sort(\n    desc ? sortKeyByDesc : sortKeyByAsc\n  )\n}\n\n/**\n * 遍历对象\n *\n * @param object\n * @param callback 返回 false 可停止遍历\n */\nexport function each(object: type.data, callback: (value: any, key: string) => boolean | void): void {\n  for (let key in object) {\n    if (callback(object[key], key) === env.FALSE) {\n      break\n    }\n  }\n}\n\n/**\n * 清空对象所有的键值对\n *\n * @param object\n */\nexport function clear(object: type.data): void {\n  each(\n    object,\n    function (_, key) {\n      delete object[key]\n    }\n  )\n}\n\n/**\n * 扩展对象\n *\n * @return\n */\nexport function extend(original: type.data, object: type.data): type.data {\n  each(\n    object,\n    function (value, key) {\n      original[key] = value\n    }\n  )\n  return original\n}\n\n/**\n * 合并对象\n *\n * @return\n */\nexport function merge(object1: type.data | void, object2: type.data | void): type.data | void {\n  return object1 && object2\n    ? extend(extend({}, object1), object2)\n    : object1 || object2\n}\n\n/**\n * 拷贝对象\n *\n * @param object\n * @param deep 是否需要深拷贝\n * @return\n */\nexport function copy(object: any, deep?: boolean): any {\n  let result = object\n  if (is.array(object)) {\n    if (deep) {\n      result = []\n      array.each(\n        object,\n        function (item, index) {\n          result[index] = copy(item, deep)\n        }\n      )\n    }\n    else {\n      result = object.slice()\n    }\n  }\n  else if (is.object(object)) {\n    result = {}\n    each(\n      object,\n      function (value, key) {\n        result[key] = deep ? copy(value, deep) : value\n      }\n    )\n  }\n  return result\n}\n\n/**\n * 从对象中查找一个 keypath\n *\n * 返回值是空时，表示没找到值\n *\n * @param object\n * @param keypath\n * @return\n */\nexport function get(object: any, keypath: string): ValueHolder | undefined {\n\n  /**\n   * 考虑以下情况:\n   *\n   * {\n   *   'a.b.c.d': 1,\n   *   'a.b.c': {\n   *      d: 2\n   *   }\n   * }\n   *\n   * 此时 keypath 是 `a.b.c.d`，可以获取到 1\n   * 如果没有这个 key，按 keypath 推进是取不到值的，因为没有 a.b.c 对象\n   * 个人觉得没有必要支持字面量，情况实在太多，会把这个函数搞的性能很差\n   */\n\n  keypathUtil.each(\n    keypath,\n    function (key, isLast) {\n\n      if (object != env.NULL) {\n\n        // 先直接取值\n        let value = object[key],\n\n        // 紧接着判断值是否存在\n        // 下面会处理计算属性的值，不能在它后面设置 hasValue\n        hasValue = isDef(value)\n\n        // 如果是计算属性，取计算属性的值\n        if (value && is.func(value.get)) {\n          value = value.get()\n        }\n\n        if (isLast) {\n          if (hasValue) {\n            env.VALUE_HOLDER.value = value\n            object = env.VALUE_HOLDER\n          }\n          else {\n            object = env.UNDEFINED\n          }\n        }\n        else {\n          object = value\n        }\n      }\n      else {\n        object = env.UNDEFINED\n        return env.FALSE\n      }\n\n    }\n  )\n\n  return object\n\n}\n\n/**\n * 为对象设置一个键值对\n *\n * @param object\n * @param keypath\n * @param value\n * @param autofill 是否自动填充不存在的对象，默认自动填充\n */\nexport function set(object: type.data, keypath: string, value: any, autofill?: boolean): void {\n  keypathUtil.each(\n    keypath,\n    function (key, isLast) {\n      if (isLast) {\n        object[key] = value\n      }\n      else if (object[key]) {\n        object = object[key]\n      }\n      else if (autofill) {\n        object = object[key] = {}\n      }\n      else {\n        return env.FALSE\n      }\n    }\n  )\n}\n\n/**\n * 对象是否包含某个 key\n *\n * @param object\n * @param key\n * @return\n */\nexport function has(object: type.data, key: string | number): boolean {\n  // 不用 hasOwnProperty，性能差\n  return isDef(object[key])\n}\n\n/**\n * 是否是空对象\n *\n * @param object\n * @return\n */\nexport function falsy(object: any): boolean {\n  return !is.object(object)\n    || is.array(object)\n    || !keys(object).length\n}","import * as env from '../util/env'\nimport isDef from './isDef'\n\nexport default function (target: any, defaultValue?: string): string {\n  return target != env.NULL && target.toString\n    ? target.toString()\n    : isDef(defaultValue)\n      ? defaultValue as string\n      : env.EMPTY_STRING\n}\n","import * as env from './env'\nimport toString from '../function/toString'\n\nexport const DEBUG = 1\nexport const INFO = 2\nexport const WARN = 3\nexport const ERROR = 4\nexport const FATAL = 5\n\n/**\n * 是否有原生的日志特性，没有必要单独实现\n */\nconst nativeConsole: Console | null = typeof console !== env.RAW_UNDEFINED ? console : env.NULL,\n\n/**\n * 当前是否是源码调试，如果开启了代码压缩，empty function 里的注释会被干掉\n */\nlevel = /yox/.test(toString(env.EMPTY_FUNCTION)) ? DEBUG : WARN,\n\n/**\n * console 样式前缀\n */\nstylePrefix = '%c'\n\n/**\n * 全局调试开关\n */\nfunction getLevel() {\n  if (env.WINDOW) {\n    const logLevel = env.WINDOW['YOX_LOG_LEVEL']\n    if (logLevel >= DEBUG && logLevel <= FATAL) {\n      return logLevel as number\n    }\n  }\n  return level\n}\n\nfunction getStyle(backgroundColor: string) {\n  return `background-color:${backgroundColor};border-radius:12px;color:#fff;font-size:10px;padding:3px 6px;`\n}\n\n/**\n * 打印 debug 日志\n *\n * @param msg\n */\nexport function debug(msg: string, tag?: string): void {\n  if (nativeConsole && getLevel() <= DEBUG) {\n    nativeConsole.log(stylePrefix + (tag || 'Yox debug'), getStyle('#999'), msg)\n  }\n}\n\n/**\n * 打印 info 日志\n *\n * @param msg\n */\nexport function info(msg: string, tag?: string): void {\n  if (nativeConsole && getLevel() <= INFO) {\n    nativeConsole.log(stylePrefix + (tag || 'Yox info'), getStyle('#2db7f5'), msg)\n  }\n}\n\n/**\n * 打印 warn 日志\n *\n * @param msg\n */\nexport function warn(msg: string, tag?: string): void {\n  if (nativeConsole && getLevel() <= WARN) {\n    nativeConsole.warn(stylePrefix + (tag || 'Yox warn'), getStyle('#f90'), msg)\n  }\n}\n\n/**\n * 打印 error 日志\n *\n * @param msg\n */\nexport function error(msg: string, tag?: string): void {\n  if (nativeConsole && getLevel() <= ERROR) {\n    nativeConsole.error(stylePrefix + (tag || 'Yox error'), getStyle('#ed4014'), msg)\n  }\n}\n\n/**\n * 致命错误，中断程序\n *\n * @param msg\n */\nexport function fatal(msg: string, tag?: string): void {\n  if (getLevel() <= FATAL) {\n    throw new Error(`[${tag || 'Yox fatal'}]: ${msg}`)\n  }\n}\n","import execute from '../function/execute'\n\nimport * as is from './is'\nimport * as env from './env'\nimport * as array from './array'\nimport * as object from './object'\nimport * as string from './string'\nimport * as logger from './logger'\n\nimport CustomEvent from './CustomEvent'\n\nimport * as type from '../../../yox-type/src/type'\nimport EmitterOptions from '../../../yox-type/src/options/Emitter'\nimport EmitterInterface from '../../../yox-type/src/event/Emitter'\n\ninterface Namespace {\n  name: string\n  ns: string\n}\n\nexport default class Emitter implements EmitterInterface {\n\n  /**\n   * 是否开启命名空间\n   */\n  ns: boolean\n\n  /**\n   * 已注册的事件监听\n   */\n  listeners: Record<string, EmitterOptions[]>\n\n  /**\n   * 原生事件监听，一个事件对应一个 listener\n   */\n  nativeListeners?: Record<string, type.nativeListener>\n\n  constructor(ns?: boolean) {\n    this.ns = ns || env.FALSE\n    this.listeners = {}\n  }\n\n  /**\n   * 发射事件\n   *\n   * @param bullet 事件或事件名称\n   * @param data 事件数据\n   */\n  fire(\n    type: string,\n    args: any[] | void,\n    filter?: (type: string, args: any[] | void, options: EmitterOptions) => boolean | void\n  ): boolean {\n\n    let instance = this,\n\n    { name, ns } = parseNamespace(instance.ns, type),\n\n    list = instance.listeners[name],\n\n    isComplete = env.TRUE\n\n    if (list) {\n\n      // 避免遍历过程中，数组发生变化，比如增删了\n      list = object.copy(list)\n\n      // 判断是否是发射事件\n      // 如果 args 的第一个参数是 CustomEvent 类型，表示发射事件\n      // 因为事件处理函数的参数列表是 (event, data)\n      const event = args && args[0] instanceof CustomEvent\n        ? args[0] as CustomEvent\n        : env.UNDEFINED\n\n      array.each(\n        list,\n        function (options: EmitterOptions, _: number) {\n\n          // 命名空间不匹配\n          if (!matchNamespace(ns, options)\n            // 在 fire 过程中被移除了\n            || !array.has(list, options)\n            // 传了 filter，则用 filter 判断是否过滤此 options\n            || (filter && !filter(type, args, options))\n          ) {\n            return\n          }\n\n          // 为 event 对象加上当前正在处理的 listener\n          // 这样方便业务层移除事件绑定\n          // 比如 on('xx', function) 这样定义了匿名 listener\n          // 在这个 listener 里面获取不到当前 listener 的引用\n          // 为了能引用到，有时候会先定义 var listener = function,\n          // 然后再 on('xx', listener) 这样其实是没有必要的\n          if (event) {\n            event.listener = options.fn\n          }\n\n          let result = execute(options.fn, options.ctx, args)\n\n          if (event) {\n            event.listener = env.UNDEFINED\n          }\n\n          // 执行次数\n          options.num = options.num ? (options.num + 1) : 1\n\n          // 注册的 listener 可以指定最大执行次数\n          if (options.num === options.max) {\n            instance.off(type, options.fn)\n          }\n\n          // 如果没有返回 false，而是调用了 event.stop 也算是返回 false\n          if (event) {\n            if (result === env.FALSE) {\n              event.prevent().stop()\n            }\n            else if (event.isStoped) {\n              result = env.FALSE\n            }\n          }\n\n          if (result === env.FALSE) {\n            return isComplete = env.FALSE\n          }\n        }\n      )\n\n    }\n\n    return isComplete\n\n  }\n\n  /**\n   * 注册监听\n   *\n   * @param type\n   * @param listener\n   */\n  on(\n    type: string,\n    listener?: Function | EmitterOptions\n  ): void {\n\n    const instance = this,\n\n    { listeners } = instance,\n\n    options: EmitterOptions = is.func(listener)\n      ? { fn: listener as Function }\n      : listener as EmitterOptions\n\n    if (is.object(options) && is.func(options.fn)) {\n      const { name, ns } = parseNamespace(instance.ns, type)\n      options.ns = ns\n      array.push(\n        listeners[name] || (listeners[name] = []),\n        options\n      )\n    }\n    else if (process.env.NODE_ENV === 'development') {\n      logger.fatal(`Invoke emitter.on(type, listener) failed.`)\n    }\n\n  }\n\n  /**\n   * 取消监听\n   *\n   * @param type\n   * @param listener\n   */\n  off(\n    type?: string,\n    listener?: Function\n  ): void {\n\n    const instance = this,\n\n    { listeners } = instance\n\n    if (type) {\n\n      const { name, ns } = parseNamespace(instance.ns, type),\n\n      matchListener = createMatchListener(listener),\n\n      each = function (list: EmitterOptions[], name: string) {\n        array.each(\n          list,\n          function (options: EmitterOptions, index: number) {\n            if (matchListener(options) && matchNamespace(ns, options)) {\n              list.splice(index, 1)\n            }\n          },\n          env.TRUE\n        )\n        if (!list.length) {\n          delete listeners[name]\n        }\n      }\n\n      if (name) {\n        if (listeners[name]) {\n          each(listeners[name], name)\n        }\n      }\n      else if (ns) {\n        object.each(listeners, each)\n      }\n\n    }\n    else {\n      // 清空\n      instance.listeners = {}\n      // 在开发阶段进行警告，比如传了 type 进来，type 是个空值\n      // 但你不知道它是空值\n      if (process.env.NODE_ENV === 'development') {\n        if (arguments.length > 0) {\n          logger.warn(`emitter.off(type) is invoked, but the \"type\" argument is undefined or null.`)\n        }\n      }\n    }\n\n  }\n\n  /**\n   * 是否已监听某个事件\n   *\n   * @param type\n   * @param listener\n   */\n  has(\n    type: string,\n    listener?: Function\n  ): boolean {\n\n    let instance = this,\n\n    { listeners } = instance,\n\n    { name, ns } = parseNamespace(instance.ns, type),\n\n    result = env.TRUE,\n\n    matchListener = createMatchListener(listener),\n\n    each = function (list: EmitterOptions[]) {\n      array.each(\n        list,\n        function (options: EmitterOptions) {\n          if (matchListener(options) && matchNamespace(ns, options)) {\n            return result = env.FALSE\n          }\n        }\n      )\n      return result\n    }\n\n    if (name) {\n      if (listeners[name]) {\n        each(listeners[name])\n      }\n    }\n    else if (ns) {\n      object.each(listeners, each)\n    }\n\n    return !result\n\n  }\n\n}\n\n/**\n * 把事件类型解析成命名空间格式\n *\n * @param ns\n * @param type\n */\nfunction parseNamespace(ns: boolean, type: string): Namespace {\n\n  const result = {\n    name: type,\n    ns: env.EMPTY_STRING,\n  }\n\n  if (ns) {\n    const index = string.indexOf(type, '.')\n    if (index >= 0) {\n      result.name = string.slice(type, 0, index)\n      result.ns = string.slice(type, index + 1)\n    }\n  }\n\n  return result\n\n}\n\n\nfunction matchTrue(options: EmitterOptions) {\n  return env.TRUE\n}\n\n/**\n * 外部会传入 Function 或 EmitterOptions 或 空\n *\n * 这里根据传入值的不同类型，创建不同的判断函数\n *\n * 如果传入的是 EmitterOptions，则全等判断\n *\n * 如果传入的是 Function，则判断函数是否全等\n *\n * 如果传入的是空，则直接返回 true\n *\n * @param listener\n */\nfunction createMatchListener(listener: Function | void): (options: EmitterOptions) => boolean {\n  return is.func(listener)\n      ? function (options: EmitterOptions) {\n          return listener === options.fn\n        }\n      : matchTrue\n}\n\n/**\n * 判断 options 是否能匹配命名空间\n *\n * 如果 namespace 和 options.ns 都不为空，则需完全匹配\n *\n * 如果他们两个其中任何一个为空，则不判断命名空间\n *\n * @param namespace\n * @param options\n */\nfunction matchNamespace(namespace: string, options: EmitterOptions): boolean {\n  const { ns } = options\n  return ns && namespace\n    ? ns === namespace\n    : env.TRUE\n}","import * as is from '../util/is'\nimport toString from './toString'\n\nexport default function (target: any): boolean {\n  return is.func(target) && /native code/.test(toString(target))\n}","import * as env from '../util/env'\nimport isNative from './isNative'\n\ndeclare const setImmediate: Function\n\nlet nextTick: Function\n\n// IE (10+) 和 node\nif (typeof setImmediate === env.RAW_FUNCTION && isNative(setImmediate)) {\n  nextTick = setImmediate\n}\n// 用 MessageChannel 去做 setImmediate 的 polyfill\n// 原理是将新的 message 事件加入到原有的 dom events 之后\n// 兼容性 IE10+ 和其他标准浏览器\nif (typeof MessageChannel === env.RAW_FUNCTION && isNative(MessageChannel)) {\n  nextTick = function (fn: any) {\n    const channel = new MessageChannel()\n    channel.port1.onmessage = fn\n    channel.port2.postMessage(1)\n  }\n}\nelse {\n  nextTick = setTimeout\n}\n\nexport default nextTick\n","import NextTaskInterface from '../../../yox-type/src/interface/NextTask'\nimport TaskInterface from '../../../yox-type/src/interface/Task'\n\nimport * as array from './array'\nimport execute from '../function/execute'\nimport nextTick from '../function/nextTick'\n\nlet shared: NextTask | void\n\nexport default class NextTask implements NextTaskInterface {\n\n  /**\n   * 全局单例\n   */\n  public static shared(): NextTask {\n    return shared || (shared = new NextTask())\n  }\n\n  /**\n   * 异步队列\n   */\n  tasks: TaskInterface[]\n\n  constructor() {\n    this.tasks = []\n  }\n\n  /**\n   * 在队尾添加异步任务\n   */\n  append(func: Function, context?: any): void {\n    const instance = this, { tasks } = instance\n    array.push(\n      tasks,\n      {\n        fn: func,\n        ctx: context\n      }\n    )\n    if (tasks.length === 1) {\n      nextTick(\n        function () {\n          instance.run()\n        }\n      )\n    }\n  }\n\n  /**\n   * 在队首添加异步任务\n   */\n  prepend(func: Function, context?: any): void {\n    const instance = this, { tasks } = instance\n    array.unshift(\n      tasks,\n      {\n        fn: func,\n        ctx: context\n      }\n    )\n    if (tasks.length === 1) {\n      nextTick(\n        function () {\n          instance.run()\n        }\n      )\n    }\n  }\n\n  /**\n   * 清空异步队列\n   */\n  clear(): void {\n    this.tasks.length = 0\n  }\n\n  /**\n   * 立即执行异步任务，并清空队列\n   */\n  run(): void {\n    const { tasks } = this\n    if (tasks.length) {\n      this.tasks = []\n      array.each(\n        tasks,\n        function (task) {\n          execute(task.fn, task.ctx)\n        }\n      )\n    }\n  }\n\n}\n","export const SYNTAX_IF = '#if'\nexport const SYNTAX_ELSE = 'else'\nexport const SYNTAX_ELSE_IF = 'else if'\nexport const SYNTAX_EACH = '#each'\nexport const SYNTAX_PARTIAL = '#partial'\nexport const SYNTAX_IMPORT = '>'\nexport const SYNTAX_SPREAD = '...'\nexport const SYNTAX_COMMENT = /^!\\s/\n\nexport const SLOT_DATA_PREFIX = '$slot_'\nexport const SLOT_NAME_DEFAULT = 'children'\n\nexport const HINT_STRING = 1\nexport const HINT_NUMBER = 2\nexport const HINT_BOOLEAN = 3\n\nexport const DIRECTIVE_ON = 'on'\nexport const DIRECTIVE_LAZY = 'lazy'\nexport const DIRECTIVE_MODEL = 'model'\nexport const DIRECTIVE_EVENT = 'event'\nexport const DIRECTIVE_BINDING = 'binding'\nexport const DIRECTIVE_CUSTOM = 'o'\n\nexport const HOOK_BEFORE_CREATE = 'beforeCreate'\nexport const HOOK_AFTER_CREATE = 'afterCreate'\nexport const HOOK_BEFORE_MOUNT = 'beforeMount'\nexport const HOOK_AFTER_MOUNT = 'afterMount'\nexport const HOOK_BEFORE_UPDATE = 'beforeUpdate'\nexport const HOOK_AFTER_UPDATE = 'afterUpdate'\nexport const HOOK_BEFORE_DESTROY = 'beforeDestroy'\nexport const HOOK_AFTER_DESTROY = 'afterDestroy'\n\n// 路由钩子\nexport const HOOK_BEFORE_ROUTE_ENTER = 'beforeRouteEnter'\nexport const HOOK_AFTER_ROUTE_ENTER = 'afterRouteEnter'\nexport const HOOK_BEFORE_ROUTE_UPDATE = 'beforeRouteUpdate'\nexport const HOOK_AFTER_ROUTE_UPDATE = 'afterRouteUpdate'\nexport const HOOK_BEFORE_ROUTE_LEAVE = 'beforeRouteLeave'\nexport const HOOK_AFTER_ROUTE_LEAVE = 'afterRouteLeave'\n","let guid = 0\n\nexport default function (): number {\n  return ++guid\n}\n","// vnode.data 内部使用的几个字段\n\nexport const ID = '$id'\n\nexport const VNODE = '$vnode'\n\nexport const LOADING = '$loading'\n\nexport const COMPONENT = '$component'\n\nexport const LEAVING = '$leaving'","import * as env from '../../yox-common/src/util/env'\nimport * as object from '../../yox-common/src/util/object'\n\nimport VNode from '../../yox-type/src/vnode/VNode'\nimport Attribute from '../../yox-type/src/vnode/Attribute'\n\nexport function update(api: any, vnode: VNode, oldVnode?: VNode) {\n\n  const { node, nativeAttrs } = vnode,\n\n  oldNativeAttrs = oldVnode && oldVnode.nativeAttrs\n\n  if (nativeAttrs || oldNativeAttrs) {\n\n    const newValue = nativeAttrs || env.EMPTY_OBJECT,\n\n    oldValue = oldNativeAttrs || env.EMPTY_OBJECT\n\n    object.each(\n      newValue,\n      function (attr: Attribute, name: string) {\n        if (!oldValue[name]\n          || attr.value !== oldValue[name].value\n        ) {\n          api.attr(node, name, attr.value)\n        }\n      }\n    )\n\n    object.each(\n      oldValue,\n      function (_: Attribute, name: string) {\n        if (!newValue[name]) {\n          api.removeAttr(node, name)\n        }\n      }\n    )\n\n  }\n\n}\n","import * as env from '../../yox-common/src/util/env'\nimport * as object from '../../yox-common/src/util/object'\n\nimport VNode from '../../yox-type/src/vnode/VNode'\nimport Property from '../../yox-type/src/vnode/Property'\n\nexport function update(api: any, vnode: VNode, oldVnode?: VNode) {\n\n  const { node, nativeProps } = vnode,\n\n  oldNativeProps = oldVnode && oldVnode.nativeProps\n\n  if (nativeProps || oldNativeProps) {\n\n    const newValue = nativeProps || env.EMPTY_OBJECT,\n\n    oldValue = oldNativeProps || env.EMPTY_OBJECT\n\n    object.each(\n      newValue,\n      function (prop: Property, name: string) {\n        if (!oldValue[name]\n          || prop.value !== oldValue[name].value\n        ) {\n          api.prop(node, name, prop.value)\n        }\n      }\n    )\n\n    object.each(\n      oldValue,\n      function (prop: Property, name: string) {\n        if (!newValue[name]) {\n          api.removeProp(node, name, prop.hint)\n        }\n      }\n    )\n\n  }\n\n}","import * as env from '../../yox-common/src/util/env'\nimport * as object from '../../yox-common/src/util/object'\n\nimport VNode from '../../yox-type/src/vnode/VNode'\nimport Directive from '../../yox-type/src/vnode/Directive'\n\nimport * as field from './field'\n\nexport function update(vnode: VNode, oldVnode?: VNode) {\n\n  const { data, directives } = vnode,\n\n  oldDirectives = oldVnode && oldVnode.directives\n\n  if (directives || oldDirectives) {\n\n    const node = data[field.COMPONENT] || vnode.node,\n\n    isKeypathChange = oldVnode && vnode.keypath !== oldVnode.keypath,\n\n    newValue = directives || env.EMPTY_OBJECT,\n\n    oldValue = oldDirectives || env.EMPTY_OBJECT\n\n    object.each(\n      newValue,\n      function (directive: Directive, name: string) {\n        const { once, bind, unbind } = directive.hooks\n        if (!oldValue[name]) {\n          bind(node, directive, vnode)\n        }\n        else if (once\n          || directive.value !== oldValue[name].value\n          || isKeypathChange\n        ) {\n          if (unbind) {\n            unbind(node, oldValue[name], oldVnode as VNode)\n          }\n          bind(node, directive, vnode)\n        }\n      }\n    )\n\n    object.each(\n      oldValue,\n      function (directive: Directive, name: string) {\n        if (!newValue[name]) {\n          const { unbind } = directive.hooks\n          if (unbind) {\n            unbind(node, directive, oldVnode as VNode)\n          }\n        }\n      }\n    )\n\n  }\n\n}\n\nexport function remove(vnode: VNode) {\n  const { directives } = vnode\n  if (directives) {\n    const node = vnode.data[field.COMPONENT] || vnode.node\n    object.each(\n      directives,\n      function (directive: Directive) {\n        const { unbind } = directive.hooks\n        if (unbind) {\n          unbind(node, directive, vnode)\n        }\n      }\n    )\n  }\n}\n","import VNode from '../../yox-type/src/vnode/VNode'\n\nimport isDef from '../../yox-common/src/function/isDef'\nimport * as env from '../../yox-common/src/util/env'\nimport * as object from '../../yox-common/src/util/object'\n\nimport * as field from './field'\n\nexport function update(vnode: VNode, oldVnode?: VNode) {\n\n  let { data, ref, props, slots, model, context } = vnode, node: any\n\n  if (vnode.isComponent) {\n    node = data[field.COMPONENT]\n    // 更新时才要 set\n    // 因为初始化时，所有这些都经过构造函数完成了\n    if (oldVnode) {\n\n      // 更新组件时，如果写了 <Component model=\"xx\"/>\n      // 必须把双向绑定的值写到 props 里，否则一旦 propTypes 加了默认值\n      // 传下去的数据就错了\n      if (isDef(model)) {\n        if (!props) {\n          props = {}\n        }\n        props[node.$model] = model\n      }\n\n      const result = object.merge(props ? node.checkProps(props) : env.UNDEFINED, slots)\n      if (result) {\n        node.forceUpdate(result)\n      }\n    }\n  }\n  else {\n    node = vnode.node\n  }\n\n  if (ref) {\n    const refs = context.$refs\n    if (refs) {\n      refs[ref] = node\n    }\n  }\n\n}\n","import * as is from '../../yox-common/src/util/is'\nimport * as env from '../../yox-common/src/util/env'\nimport * as array from '../../yox-common/src/util/array'\nimport * as object from '../../yox-common/src/util/object'\nimport * as logger from '../../yox-common/src/util/logger'\n\nimport guid from '../../yox-common/src/function/guid'\nimport isDef from '../../yox-common/src/function/isDef'\nimport execute from '../../yox-common/src/function/execute'\n\nimport * as type from '../../yox-type/src/type'\nimport API from '../../yox-type/src/interface/API'\nimport Yox from '../../yox-type/src/interface/Yox'\nimport VNode from '../../yox-type/src/vnode/VNode'\nimport YoxOptions from '../../yox-type/src/options/Yox'\n\nimport * as field from './field'\n\nimport * as nativeAttr from './nativeAttr'\nimport * as nativeProp from './nativeProp'\nimport * as directive from './directive'\nimport * as component from './component'\n\nfunction isPatchable(vnode: VNode, oldVnode: VNode): boolean {\n  return vnode.tag === oldVnode.tag\n    && vnode.key === oldVnode.key\n}\n\nfunction createKeyToIndex(vnodes: (VNode | void)[], startIndex: number, endIndex: number): Record<string, number> {\n\n  let result: Record<string, number> | void,\n\n  vnode: VNode | void,\n\n  key: string | void\n\n  while (startIndex <= endIndex) {\n    vnode = vnodes[startIndex]\n    if (vnode && (key = vnode.key)) {\n      if (!result) {\n        result = {}\n      }\n      result[key] = startIndex\n    }\n    startIndex++\n  }\n\n  return result || env.EMPTY_OBJECT\n\n}\n\nfunction insertBefore(api: API, parentNode: Node, node: Node, referenceNode: Node | void) {\n  if (referenceNode) {\n    api.before(parentNode, node, referenceNode)\n  }\n  else {\n    api.append(parentNode, node)\n  }\n}\n\nfunction createComponent(vnode: VNode, options: YoxOptions) {\n\n  const child = (vnode.parent || vnode.context).createComponent(options, vnode)\n\n  vnode.data[field.COMPONENT] = child\n  vnode.data[field.LOADING] = env.FALSE\n\n  component.update(vnode)\n  directive.update(vnode)\n\n  return child\n\n}\n\nfunction createData(): type.data {\n  const data = {}\n  data[field.ID] = guid()\n  return data\n}\n\nfunction createVnode(api: API, vnode: VNode) {\n\n  let { tag, node, data, isComponent, isComment, isText, isStyle, isOption, children, text, html, context } = vnode\n\n  if (node && data) {\n    return\n  }\n\n  data = createData()\n\n  vnode.data = data\n\n  if (isText) {\n    vnode.node = api.createText(text as string)\n    return\n  }\n\n  if (isComment) {\n    vnode.node = api.createComment(text as string)\n    return\n  }\n\n  if (isComponent) {\n\n    let componentOptions: YoxOptions | undefined = env.UNDEFINED\n\n    // 动态组件，tag 可能为空\n    if (tag) {\n      context.loadComponent(\n        tag,\n        function (options: YoxOptions) {\n          if (object.has(data, field.LOADING)) {\n            // 异步组件\n            if (data[field.LOADING]) {\n              // 尝试使用最新的 vnode\n              if (data[field.VNODE]) {\n                vnode = data[field.VNODE]\n                // 用完就删掉\n                delete data[field.VNODE]\n              }\n              enterVnode(\n                vnode,\n                createComponent(vnode, options)\n              )\n            }\n          }\n          // 同步组件\n          else {\n            componentOptions = options\n          }\n        }\n      )\n    }\n\n    // 不论是同步还是异步组件，都需要一个占位元素\n    vnode.node = api.createComment(env.RAW_COMPONENT)\n\n    if (componentOptions) {\n      createComponent(vnode, componentOptions as YoxOptions)\n    }\n    else {\n      data[field.LOADING] = env.TRUE\n    }\n\n  }\n  else {\n\n    node = vnode.node = api.createElement(vnode.tag as string, vnode.isSvg)\n\n    if (children) {\n      addVnodes(api, node, children)\n    }\n    else if (text) {\n      api.text(node as Element, text, isStyle, isOption)\n    }\n    else if (html) {\n      api.html(node as Element, html, isStyle, isOption)\n    }\n\n    nativeAttr.update(api, vnode)\n    nativeProp.update(api, vnode)\n    component.update(vnode)\n    directive.update(vnode)\n\n  }\n}\n\nfunction addVnodes(api: API, parentNode: Node, vnodes: VNode[], startIndex?: number, endIndex?: number, before?: VNode) {\n  let vnode: VNode, start = startIndex || 0, end = isDef(endIndex) ? endIndex as number : vnodes.length - 1\n  while (start <= end) {\n    vnode = vnodes[start]\n    createVnode(api, vnode)\n    insertVnode(api, parentNode, vnode, before)\n    start++\n  }\n}\n\nfunction insertVnode(api: API, parentNode: Node, vnode: VNode, before?: VNode) {\n\n  const { node, data, context } = vnode,\n\n  hasParent = api.parent(node)\n\n  // 这里不调用 insertBefore，避免判断两次\n  if (before) {\n    api.before(parentNode, node, before.node)\n  }\n  else {\n    api.append(parentNode, node)\n  }\n\n  // 普通元素和组件的占位节点都会走到这里\n  // 但是占位节点不用 enter，而是等组件加载回来之后再调 enter\n  if (!hasParent) {\n    let enter: Function | void = env.UNDEFINED\n    if (vnode.isComponent) {\n      const component = data[field.COMPONENT]\n      if (component) {\n        enter = function () {\n          enterVnode(vnode, component)\n        }\n      }\n    }\n    else if (!vnode.isStatic && !vnode.isText && !vnode.isComment) {\n      enter = function () {\n        enterVnode(vnode)\n      }\n    }\n    if (enter) {\n      // 执行到这时，组件还没有挂载到 DOM 树\n      // 如果此时直接触发 enter，外部还需要做多余的工作，比如 setTimeout\n      // 索性这里直接等挂载到 DOM 数之后再触发\n      context.$observer.nextTask.prepend(enter)\n    }\n  }\n\n}\n\nfunction removeVnodes(api: API, parentNode: Node, vnodes: (VNode | void)[], startIndex?: number, endIndex?: number) {\n  let vnode: VNode | void, start = startIndex || 0, end = isDef(endIndex) ? endIndex as number : vnodes.length - 1\n  while (start <= end) {\n    vnode = vnodes[start]\n    if (vnode) {\n      removeVnode(api, parentNode, vnode)\n    }\n    start++\n  }\n}\n\nfunction removeVnode(api: API, parentNode: Node, vnode: VNode) {\n  const { node } = vnode\n  if (vnode.isStatic || vnode.isText || vnode.isComment) {\n    api.remove(parentNode, node)\n  }\n  else {\n\n    let done = function () {\n      destroyVnode(api, vnode)\n      api.remove(parentNode, node)\n    },\n\n    component: Yox | void\n\n    if (vnode.isComponent) {\n      component = vnode.data[field.COMPONENT]\n      // 异步组件，还没加载成功就被删除了\n      if (!component) {\n        done()\n        return\n      }\n    }\n\n    leaveVnode(vnode, component, done)\n\n  }\n}\n\nfunction destroyVnode(api: API, vnode: VNode) {\n\n  /**\n   * 如果一个子组件的模板是这样写的：\n   *\n   * <div>\n   *   {{#if visible}}\n   *      <slot name=\"children\"/>\n   *   {{/if}}\n   * </div>\n   *\n   * 当 visible 从 true 变为 false 时，不能销毁 slot 导入的任何 vnode\n   * 不论是组件或是元素，都不能销毁，只能简单的 remove，\n   * 否则子组件下一次展现它们时，会出问题\n   */\n\n  const { data, children, parent, slot } = vnode\n\n  // 销毁插槽组件\n\n  // 如果宿主组件正在销毁，$vnode 属性会在调 destroy() 之前被删除\n  // 这里表示的是宿主组件还没被销毁\n  // 如果宿主组件被销毁了，则它的一切都要进行销毁\n  if (slot && parent && parent.$vnode) {\n    // 如果更新时，父组件没有传入该 slot，则子组件需要销毁该 slot\n    const slots = parent.get(slot)\n    // slots 要么没有，要么是数组，不可能是别的\n    if (slots && array.has(slots, vnode)) {\n      return\n    }\n  }\n\n  if (vnode.isComponent) {\n    const component = data[field.COMPONENT]\n    if (component) {\n      directive.remove(vnode)\n      component.destroy()\n    }\n    else [\n      data[field.LOADING] = env.FALSE\n    ]\n  }\n  else {\n    directive.remove(vnode)\n    if (children) {\n      array.each(\n        children,\n        function (child: VNode) {\n          destroyVnode(api, child)\n        }\n      )\n    }\n  }\n\n}\n\n/**\n * vnode 触发 enter hook 时，外部一般会做一些淡入动画\n */\nfunction enterVnode(vnode: VNode, component: Yox | void) {\n  // 如果组件根元素和组件本身都写了 transition\n  // 优先用外面定义的\n  // 因为这明确是在覆盖配置\n  let { data, transition } = vnode\n  if (component && !transition) {\n    // 再看组件根元素是否有 transition\n    transition = (component.$vnode as VNode).transition\n  }\n  execute(data[field.LEAVING])\n  if (transition) {\n    const { enter } = transition\n    if (enter) {\n      enter(\n        vnode.node as HTMLElement\n      )\n      return\n    }\n  }\n}\n\n/**\n * vnode 触发 leave hook 时，外部一般会做一些淡出动画\n * 动画结束后才能移除节点，否则无法产生动画\n * 这里由外部调用 done 来通知内部动画结束\n */\nfunction leaveVnode(vnode: VNode, component: Yox | void, done: () => void) {\n  // 如果组件根元素和组件本身都写了 transition\n  // 优先用外面定义的\n  // 因为这明确是在覆盖配置\n  let { data, transition } = vnode\n  if (component && !transition) {\n    // 再看组件根元素是否有 transition\n    transition = (component.$vnode as VNode).transition\n  }\n  if (transition) {\n    const { leave } = transition\n    if (leave) {\n      leave(\n        vnode.node as HTMLElement,\n        data[field.LEAVING] = function () {\n          if (data[field.LEAVING]) {\n            done()\n            data[field.LEAVING] = env.UNDEFINED\n          }\n        }\n      )\n      return\n    }\n  }\n  // 如果没有淡出动画，直接结束\n  done()\n}\n\nfunction updateChildren(api: API, parentNode: Node, children: VNode[], oldChildren: (VNode | void)[]) {\n\n  let startIndex = 0,\n  endIndex = children.length - 1,\n  startVnode = children[startIndex],\n  endVnode = children[endIndex],\n\n  oldStartIndex = 0,\n  oldEndIndex = oldChildren.length - 1,\n  oldStartVnode = oldChildren[oldStartIndex],\n  oldEndVnode = oldChildren[oldEndIndex],\n\n  oldKeyToIndex: Record<string, number> | void,\n  oldIndex: number | void\n\n  while (oldStartIndex <= oldEndIndex && startIndex <= endIndex) {\n\n    // 下面有设为 UNDEFINED 的逻辑\n    if (!startVnode) {\n      startVnode = children[++startIndex];\n    }\n    else if (!endVnode) {\n      endVnode = children[--endIndex];\n    }\n    else if (!oldStartVnode) {\n      oldStartVnode = oldChildren[++oldStartIndex]\n    }\n    else if (!oldEndVnode) {\n      oldEndVnode = oldChildren[--oldEndIndex]\n    }\n\n    // 从头到尾比较，位置相同且值得 patch\n    else if (isPatchable(startVnode, oldStartVnode)) {\n      patch(api, startVnode, oldStartVnode)\n      startVnode = children[++startIndex]\n      oldStartVnode = oldChildren[++oldStartIndex]\n    }\n\n    // 从尾到头比较，位置相同且值得 patch\n    else if (isPatchable(endVnode, oldEndVnode)) {\n      patch(api, endVnode, oldEndVnode)\n      endVnode = children[--endIndex]\n      oldEndVnode = oldChildren[--oldEndIndex]\n    }\n\n    // 比较完两侧的节点，剩下就是 位置发生改变的节点 和 全新的节点\n\n    // 当 endVnode 和 oldStartVnode 值得 patch\n    // 说明元素被移到右边了\n    else if (isPatchable(endVnode, oldStartVnode)) {\n      patch(api, endVnode, oldStartVnode)\n      insertBefore(\n        api,\n        parentNode,\n        oldStartVnode.node,\n        api.next(oldEndVnode.node)\n      )\n      endVnode = children[--endIndex]\n      oldStartVnode = oldChildren[++oldStartIndex]\n    }\n\n    // 当 oldEndVnode 和 startVnode 值得 patch\n    // 说明元素被移到左边了\n    else if (isPatchable(startVnode, oldEndVnode)) {\n      patch(api, startVnode, oldEndVnode)\n      insertBefore(\n        api,\n        parentNode,\n        oldEndVnode.node,\n        oldStartVnode.node\n      )\n      startVnode = children[++startIndex]\n      oldEndVnode = oldChildren[--oldEndIndex]\n    }\n\n    // 尝试同级元素的 key\n    else {\n\n      if (!oldKeyToIndex) {\n        oldKeyToIndex = createKeyToIndex(oldChildren, oldStartIndex, oldEndIndex)\n      }\n\n      // 新节点之前的位置\n      oldIndex = startVnode.key\n        ? oldKeyToIndex[startVnode.key]\n        : env.UNDEFINED\n\n      // 移动元素\n      if (isDef(oldIndex)) {\n        patch(api, startVnode, oldChildren[oldIndex as number] as VNode)\n        oldChildren[oldIndex as number] = env.UNDEFINED\n      }\n      // 新元素\n      else {\n        createVnode(api, startVnode)\n      }\n\n      insertVnode(api, parentNode, startVnode, oldStartVnode)\n\n      startVnode = children[++startIndex]\n\n    }\n  }\n\n  if (oldStartIndex > oldEndIndex) {\n    addVnodes(\n      api,\n      parentNode,\n      children,\n      startIndex,\n      endIndex,\n      children[endIndex + 1]\n    )\n  }\n  else if (startIndex > endIndex) {\n    removeVnodes(\n      api,\n      parentNode,\n      oldChildren,\n      oldStartIndex,\n      oldEndIndex\n    )\n  }\n}\n\nexport function patch(api: API, vnode: VNode, oldVnode: VNode) {\n\n  if (vnode === oldVnode) {\n    return\n  }\n\n  const { node, data } = oldVnode\n\n  // 如果不能 patch，则删除重建\n  if (!isPatchable(vnode, oldVnode)) {\n    // 同步加载的组件，初始化时不会传入占位节点\n    // 它内部会自动生成一个注释节点，当它的根 vnode 和注释节点对比时，必然无法 patch\n    // 于是走进此分支，为新组件创建一个 DOM 节点，然后继续 createComponent 后面的流程\n    const parentNode = api.parent(node)\n    createVnode(api, vnode)\n    if (parentNode) {\n      insertVnode(api, parentNode, vnode, oldVnode)\n      removeVnode(api, parentNode, oldVnode)\n    }\n    return\n  }\n\n  vnode.node = node\n  vnode.data = data\n\n  // 组件正在异步加载，更新为最新的 vnode\n  // 当异步加载完成时才能用上最新的 vnode\n  if (oldVnode.isComponent && data[field.LOADING]) {\n    data[field.VNODE] = vnode\n    return\n  }\n\n  // 两棵静态子树就别折腾了\n  if (vnode.isStatic && oldVnode.isStatic) {\n    return\n  }\n\n  nativeAttr.update(api, vnode, oldVnode)\n  nativeProp.update(api, vnode, oldVnode)\n  component.update(vnode, oldVnode)\n  directive.update(vnode, oldVnode)\n\n  const { text, html, children, isStyle, isOption } = vnode,\n\n  oldText = oldVnode.text,\n  oldHtml = oldVnode.html,\n  oldChildren = oldVnode.children\n\n  if (is.string(text)) {\n    if (text !== oldText) {\n      api.text(node, text, isStyle, isOption)\n    }\n  }\n  else if (is.string(html)) {\n    if (html !== oldHtml) {\n      api.html(node as Element, html, isStyle, isOption)\n    }\n  }\n  // 两个都有需要 diff\n  else if (children && oldChildren) {\n    if (children !== oldChildren) {\n      updateChildren(api, node, children, oldChildren)\n    }\n  }\n  // 有新的没旧的 - 新增节点\n  else if (children) {\n    if (is.string(oldText) || is.string(oldHtml)) {\n      api.text(node, env.EMPTY_STRING, isStyle)\n    }\n    addVnodes(api, node, children)\n  }\n  // 有旧的没新的 - 删除节点\n  else if (oldChildren) {\n    removeVnodes(api, node, oldChildren)\n  }\n  // 有旧的 text 没有新的 text\n  else if (is.string(oldText) || is.string(oldHtml)) {\n    api.text(node, env.EMPTY_STRING, isStyle)\n  }\n\n}\n\nexport function create(api: API, node: Node, context: Yox, keypath: string): VNode {\n  return {\n    tag: api.tag(node),\n    data: createData(),\n    node,\n    context,\n    keypath,\n  }\n}\n\nexport function destroy(api: API, vnode: VNode, isRemove?: boolean) {\n  if (isRemove) {\n    const parentNode = api.parent(vnode.node)\n    if (parentNode) {\n      removeVnode(api, parentNode, vnode)\n    }\n    else if (process.env.NODE_ENV === 'development') {\n      logger.fatal(`Can't destroy vnode without parent node.`)\n    }\n  }\n  else {\n    destroyVnode(api, vnode)\n  }\n}\n","import * as is from '../util/is'\nimport isDef from './isDef'\n\nexport default function (target: any, defaultValue?: number): number {\n  return is.numeric(target)\n    ? +target\n    : isDef(defaultValue)\n      ? defaultValue as number\n      : 0\n}\n","/**\n * 字面量\n */\nexport const LITERAL = 1\n\n/**\n * 标识符\n */\nexport const IDENTIFIER = 2\n\n/**\n * 对象属性或数组下标\n */\nexport const MEMBER = 3\n\n/**\n * 一元表达式，如 - a\n */\nexport const UNARY = 4\n\n/**\n * 二元表达式，如 a + b\n */\nexport const BINARY = 5\n\n/**\n * 三元表达式，如 a ? b : c\n */\nexport const TERNARY = 6\n\n/**\n * 数组表达式，如 [ 1, 2, 3 ]\n */\nexport const ARRAY = 7\n\n/**\n * 对象表达式，如 { name: 'yox' }\n */\nexport const OBJECT = 8\n\n/**\n * 函数调用表达式，如 a()\n */\nexport const CALL = 9\n","/**\n * 元素 节点\n */\nexport const ELEMENT = 1\n\n/**\n * 属性 节点\n */\nexport const ATTRIBUTE = 2\n\n/**\n * 指令 节点\n */\nexport const DIRECTIVE = 3\n\n/**\n * 属性 节点\n */\nexport const PROPERTY = 4\n\n/**\n * 文本 节点\n */\nexport const TEXT = 5\n\n/**\n * if 节点\n */\nexport const IF = 6\n\n/**\n * else if 节点\n */\nexport const ELSE_IF = 7\n\n/**\n * else 节点\n */\nexport const ELSE = 8\n\n/**\n * each 节点\n */\nexport const EACH = 9\n\n/**\n * partial 节点\n */\nexport const PARTIAL = 10\n\n/**\n * import 节点\n */\nexport const IMPORT = 11\n\n/**\n * 表达式 节点\n */\nexport const EXPRESSION = 12\n\n/**\n * 延展操作 节点\n */\nexport const SPREAD = 13\n","import * as env from '../util/env'\n\nexport default function (target: any): boolean {\n  return target === env.UNDEFINED\n}\n","import * as config from '../../yox-config/src/config'\nimport * as type from '../../yox-type/src/type'\n\nimport isDef from '../../yox-common/src/function/isDef'\nimport isUndef from '../../yox-common/src/function/isUndef'\nimport execute from '../../yox-common/src/function/execute'\nimport toString from '../../yox-common/src/function/toString'\n\nimport * as is from '../../yox-common/src/util/is'\nimport * as env from '../../yox-common/src/util/env'\nimport * as array from '../../yox-common/src/util/array'\nimport * as object from '../../yox-common/src/util/object'\nimport * as logger from '../../yox-common/src/util/logger'\nimport * as keypathUtil from '../../yox-common/src/util/keypath'\n\nimport CustomEvent from '../../yox-common/src/util/CustomEvent'\n\nimport Yox from '../../yox-type/src/interface/Yox'\nimport VNode from '../../yox-type/src/vnode/VNode'\nimport DirectiveHooks from '../../yox-type/src/hooks/Directive'\nimport TransitionHooks from '../../yox-type/src/hooks/Transition'\nimport ValueHolder from '../../yox-type/src/interface/ValueHolder'\n\nfunction setPair(target: any, name: string, key: string, value: any) {\n  const data = target[name] || (target[name] = {})\n  data[key] = value\n}\n\nexport function render(\n  context: Yox,\n  template: Function,\n  filters: Record<string, Function>,\n  partials: Record<string, Function>,\n  directives: Record<string, DirectiveHooks>,\n  transitions: Record<string, TransitionHooks>\n) {\n\n  let $scope: type.data = { $keypath: env.EMPTY_STRING },\n\n  $stack = [ $scope ],\n\n  $vnode: any,\n\n  vnodeStack: VNode[][] = [],\n\n  localPartials: Record<string, Function> = {},\n\n  findValue = function (stack: any[], index: number, key: string, lookup: boolean, depIgnore?: boolean, defaultKeypath?: string): ValueHolder {\n\n    let scope = stack[index], keypath = keypathUtil.join(scope.$keypath, key), value: any = stack, holder = env.VALUE_HOLDER\n\n    // 如果最后还是取不到值，用回最初的 keypath\n    if (isUndef(defaultKeypath)) {\n      defaultKeypath = keypath\n    }\n\n    // 如果取的是 scope 上直接有的数据，如 $keypath\n    if (isDef(scope[key])) {\n      value = scope[key]\n    }\n\n    // 如果取的是数组项，则要更进一步\n    else if (isDef(scope.$item)) {\n      scope = scope.$item\n\n      // 到这里 scope 可能为空\n      // 比如 new Array(10) 然后遍历这个数组，每一项肯定是空\n\n      // 取 this\n      if (key === env.EMPTY_STRING) {\n        value = scope\n      }\n      // 取 this.xx\n      else if (scope != env.NULL && isDef(scope[key])) {\n        value = scope[key]\n      }\n    }\n\n    if (value === stack) {\n      // 正常取数据\n      value = context.get(keypath, stack, depIgnore)\n      if (value === stack) {\n\n        if (lookup && index > 0) {\n          if (process.env.NODE_ENV === 'development') {\n            logger.debug(`Can't find [${keypath}], start looking up.`)\n          }\n          return findValue(stack, index - 1, key, lookup, depIgnore, defaultKeypath)\n        }\n\n        // 到头了，最后尝试过滤器\n        const result = object.get(filters, key)\n        if (result) {\n          holder = result\n          holder.keypath = key\n        }\n        else {\n          holder.value = env.UNDEFINED\n          holder.keypath = defaultKeypath\n        }\n        return holder\n\n      }\n    }\n\n    holder.value = value\n    holder.keypath = keypath\n\n    return holder\n\n  },\n\n  createEventListener = function (type: string): type.listener {\n    return function (event: CustomEvent, data?: type.data) {\n      // 事件名称相同的情况，只可能是监听 DOM 事件，比如写一个 Button 组件\n      // <button on-click=\"click\"> 纯粹的封装了一个原生 click 事件\n      if (type !== event.type) {\n        event = new CustomEvent(type, event)\n      }\n      context.fire(event, data)\n    }\n  },\n\n  createMethodListener = function (\n    name: string,\n    args: Function | void,\n    stack: any[]\n  ): type.listener {\n    return function (event: CustomEvent, data?: type.data) {\n\n      const method = context[name]\n\n      if (event instanceof CustomEvent) {\n\n        let result: any = env.UNDEFINED\n\n        if (args) {\n          const scope = array.last(stack)\n          if (scope) {\n            scope.$event = event\n            scope.$data = data\n            result = execute(method, context, args(stack))\n            scope.$event =\n            scope.$data = env.UNDEFINED\n          }\n        }\n        else {\n          result = execute(method, context, data ? [event, data] : event)\n        }\n\n        return result\n\n      }\n      else {\n        execute(\n          method,\n          context,\n          args ? args(stack) : env.UNDEFINED\n        )\n      }\n\n    }\n  },\n\n  createGetter = function (getter: Function, stack: any[]): type.getter {\n    return function () {\n      return getter(stack)\n    }\n  },\n\n  renderTextVnode = function (text: string) {\n    const vnodeList = array.last(vnodeStack)\n    if (vnodeList) {\n      const lastVnode = array.last(vnodeList)\n      if (lastVnode && lastVnode.isText) {\n        (lastVnode.text as string) += text\n      }\n      else {\n        const textVnode: any = {\n          isText: env.TRUE,\n          text,\n          context,\n          keypath: $scope.$keypath,\n        }\n        array.push(vnodeList, textVnode)\n      }\n    }\n  },\n\n  renderAttributeVnode = function (name: string, value: string | void) {\n    if ($vnode.isComponent) {\n      setPair($vnode, 'props', name, value)\n    }\n    else {\n      setPair($vnode, 'nativeAttrs', name, { name, value })\n    }\n  },\n\n  renderPropertyVnode = function (name: string, hint: type.hint, value: any | void) {\n    setPair($vnode, 'nativeProps', name, { name, value, hint })\n  },\n\n  renderLazyVnode = function (name: string, value: type.lazy) {\n    setPair($vnode, 'lazy', name, value)\n  },\n\n  renderTransitionVnode = function (name: string) {\n    $vnode.transition = transitions[name]\n    if (process.env.NODE_ENV === 'development') {\n      if (!$vnode.transition) {\n        logger.fatal(`transition [${name}] is not found.`)\n      }\n    }\n  },\n\n  renderBindingVnode = function (name: string, holder: ValueHolder, hint?: type.hint): any {\n\n    const key = keypathUtil.join(config.DIRECTIVE_BINDING, name)\n\n    setPair(\n      $vnode,\n      'directives',\n      key,\n      {\n        ns: config.DIRECTIVE_BINDING,\n        name,\n        key,\n        hooks: directives[config.DIRECTIVE_BINDING],\n        binding: holder.keypath,\n        hint,\n      }\n    )\n\n    return holder.value\n\n  },\n\n  renderModelVnode = function (holder: ValueHolder) {\n\n    $vnode.model = holder.value\n\n    setPair(\n      $vnode,\n      'directives',\n      config.DIRECTIVE_MODEL,\n      {\n        ns: config.DIRECTIVE_MODEL,\n        name: env.EMPTY_STRING,\n        key: config.DIRECTIVE_MODEL,\n        binding: holder.keypath,\n        hooks: directives[config.DIRECTIVE_MODEL]\n      }\n    )\n  },\n\n  renderEventMethodVnode = function (\n    name: string, key: string, value: string,\n    method: string, args: Function | void\n  ) {\n    setPair(\n      $vnode,\n      'directives',\n      key,\n      {\n        ns: config.DIRECTIVE_EVENT,\n        name,\n        key,\n        value,\n        hooks: directives[config.DIRECTIVE_EVENT],\n        handler: createMethodListener(method as string, args, $stack)\n      }\n    )\n  },\n\n  renderEventNameVnode = function (\n    name: string, key: string, value: string,\n    event: string\n  ) {\n    setPair(\n      $vnode,\n      'directives',\n      key,\n      {\n        ns: config.DIRECTIVE_EVENT,\n        name,\n        key,\n        value,\n        hooks: directives[config.DIRECTIVE_EVENT],\n        handler: createEventListener(event)\n      }\n    )\n  },\n\n  renderDirectiveVnode = function (\n    name: string, key: string, value: string,\n    method: string | void, args: Function | void, getter: Function | void\n  ) {\n\n    const hooks = directives[name]\n\n    if (process.env.NODE_ENV === 'development') {\n      if (!hooks) {\n        logger.fatal(`directive [${name}] is not found.`)\n      }\n    }\n\n    setPair(\n      $vnode,\n      'directives',\n      key,\n      {\n        ns: config.DIRECTIVE_CUSTOM,\n        name,\n        key,\n        value,\n        hooks,\n        getter: getter ? createGetter(getter, $stack) : env.UNDEFINED,\n        handler: method ? createMethodListener(method, args, $stack) : env.UNDEFINED,\n      }\n    )\n\n  },\n\n  renderSpreadVnode = function (holder: ValueHolder) {\n\n    const { value, keypath } = holder\n\n    // 如果为 null 或 undefined，则不需要 warn\n    if (value != env.NULL) {\n      // 数组也算一种对象，要排除掉\n      if (is.object(value) && !is.array(value)) {\n\n        object.each(\n          value,\n          function (value, key) {\n            setPair($vnode, 'props', key, value)\n          }\n        )\n\n        if (keypath) {\n          const key = keypathUtil.join(config.DIRECTIVE_BINDING, keypath)\n          setPair(\n            $vnode,\n            'directives',\n            key,\n            {\n              ns: config.DIRECTIVE_BINDING,\n              name: env.EMPTY_STRING,\n              key,\n              hooks: directives[config.DIRECTIVE_BINDING],\n              binding: keypathUtil.join(keypath, env.RAW_WILDCARD),\n            }\n          )\n        }\n\n      }\n    }\n\n  },\n\n  renderElementVnode = function (\n    vnode: type.data,\n    tag: string | void,\n    attrs: Function | void,\n    childs: Function | void,\n    slots: Record<string, Function> | void\n  ) {\n\n    if (tag) {\n      const componentName = context.get(tag)\n      if (process.env.NODE_ENV === 'development') {\n        if (!componentName) {\n          logger.warn(`Dynamic component [${tag}] is not found.`)\n        }\n      }\n      vnode.tag = componentName\n    }\n\n    if (attrs) {\n      $vnode = vnode\n      attrs()\n      $vnode = env.UNDEFINED\n    }\n\n    // childs 和 slots 不可能同时存在\n    if (childs) {\n      vnodeStack.push(vnode.children = [])\n      childs()\n      array.pop(vnodeStack)\n    }\n    else if (slots) {\n      const renderSlots = {}\n      object.each(\n        slots,\n        function (slot: Function, name: string) {\n          vnodeStack.push([])\n          slot()\n          const vnodes = array.pop(vnodeStack) as VNode[]\n          renderSlots[name] = vnodes.length ? vnodes : env.UNDEFINED\n        }\n      )\n      vnode.slots = renderSlots\n    }\n\n    vnode.context = context\n    vnode.keypath = $scope.$keypath\n\n    const vnodeList = array.last(vnodeStack)\n    if (vnodeList) {\n      array.push(vnodeList, vnode)\n    }\n\n    return vnode\n\n  },\n\n  renderExpressionIdentifier = function (\n    name: string,\n    lookup: boolean,\n    offset?: number,\n    holder?: boolean,\n    depIgnore?: boolean,\n    stack?: any[]\n  ) {\n    const myStack = stack || $stack,\n    result = findValue(\n      myStack,\n      myStack.length - ((offset || 0) + 1),\n      name,\n      lookup,\n      depIgnore\n    )\n    return holder ? result : result.value\n  },\n\n  renderExpressionMemberKeypath = function (\n    identifier: string,\n    runtimeKeypath: string[]\n  ) {\n    array.unshift(runtimeKeypath, identifier)\n    return array.join(runtimeKeypath, keypathUtil.separator)\n  },\n\n  renderExpressionMemberLiteral = function (\n    value: any,\n    staticKeypath: string | void,\n    runtimeKeypath: string[] | void,\n    holder: boolean | void\n  ) {\n    if (isDef(runtimeKeypath)) {\n      staticKeypath = array.join(runtimeKeypath as string[], keypathUtil.separator)\n    }\n    const result = env.VALUE_HOLDER, match = object.get(value, staticKeypath as string)\n    result.keypath = env.UNDEFINED\n    result.value = match ? match.value : env.UNDEFINED\n    return holder ? result : result.value\n  },\n\n  renderExpressionCall = function (\n    fn: Function | void,\n    args: any[] | void,\n    holder: boolean | void\n  ) {\n    const result = env.VALUE_HOLDER\n    result.keypath = env.UNDEFINED\n    // 当 holder 为 true, args 为空时，args 会传入 false\n    result.value = execute(fn, context, args || env.UNDEFINED)\n    return holder ? result : result.value\n  },\n\n  // <slot name=\"xx\"/>\n  renderSlot = function (name: string, defaultRender?: Function) {\n\n    const vnodeList = array.last(vnodeStack),\n\n    vnodes = context.get(name)\n\n    if (vnodeList) {\n      if (vnodes) {\n        array.each(\n          vnodes,\n          function (vnode: VNode) {\n            array.push(vnodeList, vnode)\n            vnode.slot = name\n            vnode.parent = context\n          }\n        )\n      }\n      else if (defaultRender) {\n        defaultRender()\n      }\n    }\n\n  },\n\n  // {{#partial name}}\n  //   xx\n  // {{/partial}}\n  renderPartial = function (name: string, render: Function) {\n    localPartials[name] = render\n  },\n\n  // {{> name}}\n  renderImport = function (name: string) {\n    if (localPartials[name]) {\n      localPartials[name]()\n    }\n    else {\n      const partial = partials[name]\n      if (partial) {\n        partial(\n          renderExpressionIdentifier,\n          renderExpressionMemberKeypath,\n          renderExpressionMemberLiteral,\n          renderExpressionCall,\n          renderTextVnode,\n          renderAttributeVnode,\n          renderPropertyVnode,\n          renderLazyVnode,\n          renderTransitionVnode,\n          renderBindingVnode,\n          renderModelVnode,\n          renderEventMethodVnode,\n          renderEventNameVnode,\n          renderDirectiveVnode,\n          renderSpreadVnode,\n          renderElementVnode,\n          renderSlot,\n          renderPartial,\n          renderImport,\n          renderEach,\n          toString\n        )\n      }\n      else if (process.env.NODE_ENV === 'development') {\n        logger.fatal(`partial [${name}] is not found.`)\n      }\n    }\n  },\n\n  eachHandler = function (\n    generate: Function,\n    item: any,\n    key: string | number,\n    keypath: string,\n    index: string | void,\n    length: number | void\n  ) {\n\n    const lastScope = $scope, lastStack = $stack\n\n    // each 会改变 keypath\n    $scope = { $keypath: keypath }\n    $stack = lastStack.concat($scope)\n\n    // 避免模板里频繁读取 list.length\n    if (isDef(length)) {\n      $scope.$length = length\n    }\n\n    // 业务层是否写了 expr:index\n    if (index) {\n      $scope[index] = key\n    }\n\n    // 无法通过 context.get($keypath + key) 读取到数据的场景\n    // 必须把 item 写到 scope\n    if (!keypath) {\n      $scope.$item = item\n    }\n\n    generate()\n\n    $scope = lastScope\n    $stack = lastStack\n\n  },\n\n  renderEach = function (\n    generate: Function,\n    from: ValueHolder,\n    to: ValueHolder | void,\n    equal: boolean | void,\n    index: string | void\n  ) {\n\n    const fromValue = from.value,\n\n    fromKeypath = from.keypath\n\n    if (to) {\n      let toValue = to.value, count = 0\n      if (fromValue < toValue) {\n        if (equal) {\n          for (let i = fromValue; i <= toValue; i++) {\n            eachHandler(\n              generate,\n              i,\n              count++,\n              env.EMPTY_STRING,\n              index\n            )\n          }\n        }\n        else {\n          for (let i = fromValue; i < toValue; i++) {\n            eachHandler(\n              generate,\n              i,\n              count++,\n              env.EMPTY_STRING,\n              index\n            )\n          }\n        }\n      }\n      else {\n        if (equal) {\n          for (let i = fromValue; i >= toValue; i--) {\n            eachHandler(\n              generate,\n              i,\n              count++,\n              env.EMPTY_STRING,\n              index\n            )\n          }\n        }\n        else {\n          for (let i = fromValue; i > toValue; i--) {\n            eachHandler(\n              generate,\n              i,\n              count++,\n              env.EMPTY_STRING,\n              index\n            )\n          }\n        }\n      }\n    }\n    else {\n      if (is.array(fromValue)) {\n        for (let i = 0, length = fromValue.length; i < length; i++) {\n          eachHandler(\n            generate,\n            fromValue[i],\n            i,\n            fromKeypath\n              ? keypathUtil.join(fromKeypath, env.EMPTY_STRING + i)\n              : env.EMPTY_STRING,\n            index,\n            length\n          )\n        }\n      }\n      else if (is.object(fromValue)) {\n        for (let key in fromValue) {\n          eachHandler(\n            generate,\n            fromValue[key],\n            key,\n            fromKeypath\n              ? keypathUtil.join(fromKeypath, key)\n              : env.EMPTY_STRING,\n            index\n          )\n        }\n      }\n    }\n\n  }\n\n  return template(\n    renderExpressionIdentifier,\n    renderExpressionMemberKeypath,\n    renderExpressionMemberLiteral,\n    renderExpressionCall,\n    renderTextVnode,\n    renderAttributeVnode,\n    renderPropertyVnode,\n    renderLazyVnode,\n    renderTransitionVnode,\n    renderBindingVnode,\n    renderModelVnode,\n    renderEventMethodVnode,\n    renderEventNameVnode,\n    renderDirectiveVnode,\n    renderSpreadVnode,\n    renderElementVnode,\n    renderSlot,\n    renderPartial,\n    renderImport,\n    renderEach,\n    toString\n  )\n\n}","import execute from '../../yox-common/src/function/execute'\n\nimport * as is from '../../yox-common/src/util/is'\nimport * as env from '../../yox-common/src/util/env'\nimport * as array from '../../yox-common/src/util/array'\nimport * as object from '../../yox-common/src/util/object'\n\nimport * as type from '../../yox-type/src/type'\nimport ComputedInterface from '../../yox-type/src/watcher/Computed'\nimport ObserverInterface from '../../yox-type/src/watcher/Observer'\nimport WatcherOptions from '../../yox-type/src/options/Watcher'\n\n/**\n * 计算属性\n *\n * 可配置 cache、deps、get、set 等\n */\nexport default class Computed implements ComputedInterface {\n\n  static current?: Computed\n\n  /**\n   * 对外的构造器，把用户配置的计算属性对象转换成内部对象\n   *\n   * @param keypath\n   * @param observer\n   * @param options\n   */\n  static build(keypath: string, observer: ObserverInterface, options: any): Computed | void {\n\n    let cache = env.TRUE,\n\n    sync = env.TRUE,\n\n    deps: string[] = [],\n\n    getter: type.getter | void,\n\n    setter: type.setter | void\n\n    if (is.func(options)) {\n      getter = options\n    }\n    else if (is.object(options)) {\n      if (is.boolean(options.cache)) {\n        cache = options.cache\n      }\n      if (is.boolean(options.sync)) {\n        sync = options.sync\n      }\n      // 因为可能会修改 deps，所以这里创建一个新的 deps，避免影响外部传入的 deps\n      if (is.array(options.deps)) {\n        deps = object.copy(options.deps)\n      }\n      if (is.func(options.get)) {\n        getter = options.get\n      }\n      if (is.func(options.set)) {\n        setter = options.set\n      }\n    }\n\n    if (getter) {\n      return new Computed(keypath, sync, cache, deps, observer, getter, setter)\n    }\n\n  }\n\n  keypath: string\n\n  value: any\n\n  deps: string[]\n\n  cache: boolean\n\n  fixed: boolean\n\n  context: any\n\n  observer: ObserverInterface\n\n  getter: type.getter\n\n  setter: type.setter | void\n\n  watcher: type.watcher\n\n  watcherOptions: WatcherOptions\n\n  unique: Record<string, boolean>\n\n  private constructor(\n    keypath: string,\n    sync: boolean,\n    cache: boolean,\n    deps: string[],\n    observer: ObserverInterface,\n    getter: type.getter,\n    setter: type.setter | void\n  ) {\n\n    const instance = this\n\n    instance.keypath = keypath\n    instance.cache = cache\n\n    instance.deps = deps\n\n    instance.context = observer.context\n    instance.observer = observer\n    instance.getter = getter\n    instance.setter = setter\n\n    instance.unique = {}\n\n    instance.watcher = function ($0: any, $1: any, $2: string) {\n\n      // 计算属性的依赖变了会走进这里\n\n      const oldValue = instance.value,\n      newValue = instance.get(env.TRUE)\n\n      if (newValue !== oldValue) {\n        observer.diff(keypath, newValue, oldValue)\n      }\n\n    }\n\n    instance.watcherOptions = {\n      sync,\n      watcher: instance.watcher\n    }\n\n    if (instance.fixed = !array.falsy(deps)) {\n      array.each(\n        deps,\n        function (dep: string) {\n          observer.watch(\n            dep,\n            instance.watcherOptions\n          )\n        }\n      )\n    }\n\n  }\n\n  /**\n   * 读取计算属性的值\n   *\n   * @param force 是否强制刷新缓存\n   */\n  get(force?: boolean): any {\n\n    const instance = this,\n\n    { getter, context } = instance\n\n    // 禁用缓存\n    if (!instance.cache) {\n      instance.value = execute(getter, context)\n    }\n\n    // 减少取值频率，尤其是处理复杂的计算规则\n    else if (force || !object.has(instance, env.RAW_VALUE)) {\n\n      // 如果写死了依赖，则不需要收集依赖\n      if (instance.fixed) {\n        instance.value = execute(getter, context)\n      }\n      else {\n\n        // 清空上次收集的依赖\n        instance.unbind()\n\n        // 开始收集新的依赖\n        const lastComputed = Computed.current\n        Computed.current = instance\n\n        instance.value = execute(getter, context)\n\n        // 绑定新的依赖\n        instance.bind()\n\n        Computed.current = lastComputed\n      }\n\n    }\n\n    return instance.value\n  }\n\n  set(value: any): void {\n    const { setter, context } = this\n    if (setter) {\n      setter.call(context, value)\n    }\n  }\n\n  /**\n   * 添加依赖\n   *\n   * 这里只是为了保证依赖唯一，最后由 bind() 实现绑定\n   *\n   * @param dep\n   */\n  add(dep: string): void {\n    this.unique[dep] = env.TRUE\n  }\n\n  /**\n   * 绑定依赖\n   */\n  bind(): void {\n\n    const { unique, deps, observer, watcherOptions } = this\n\n    object.each(\n      unique,\n      function (_: any, dep: string) {\n        array.push(deps, dep)\n        observer.watch(\n          dep,\n          watcherOptions\n        )\n      }\n    )\n\n    // 用完重置\n    // 方便下次收集依赖\n    this.unique = {}\n\n  }\n\n  /**\n   * 解绑依赖\n   */\n  unbind(): void {\n\n    const { deps, observer, watcher } = this\n\n    array.each(\n      deps,\n      function (dep: string) {\n        observer.unwatch(dep, watcher)\n      },\n      env.TRUE\n    )\n\n    deps.length = 0\n\n  }\n\n}","import * as env from '../../../yox-common/src/util/env'\nimport * as array from '../../../yox-common/src/util/array'\nimport * as string from '../../../yox-common/src/util/string'\nimport * as keypathUtil from '../../../yox-common/src/util/keypath'\n\n/**\n * 从 keypath 数组中选择和 keypath 最匹配的那一个\n *\n * @param sorted 经过排序的 keypath 数组\n * @param keypath\n */\nexport default function (sorted: string[], keypath: string): any {\n\n  let result: any\n\n  array.each(\n    sorted,\n    function (prefix: string) {\n      const length = keypathUtil.match(keypath, prefix)\n      if (length >= 0) {\n        result = {\n          name: prefix,\n          prop: string.slice(keypath, length)\n        }\n        return env.FALSE\n      }\n    }\n  )\n\n  return result\n\n}","import * as env from '../../../yox-common/src/util/env'\nimport * as object from '../../../yox-common/src/util/object'\n\nexport default function (source: any, keypath: string): any {\n\n  if (source == env.NULL || keypath === env.EMPTY_STRING) {\n    return source\n  }\n\n  const result = object.get(source, keypath)\n  if (result) {\n    return result.value\n  }\n\n}","import * as is from '../../../yox-common/src/util/is'\nimport * as env from '../../../yox-common/src/util/env'\n\n/**\n * 对比新旧数组\n *\n * @param newValue\n * @param oldValue\n * @param callback\n */\nexport default function (\n  newValue: any,\n  oldValue: any,\n  callback: (key: string, newValue: any, oldValue: any) => void\n): true | void {\n\n  const newIsString = is.string(newValue),\n\n  oldIsString = is.string(oldValue)\n\n  if (newIsString || oldIsString) {\n    callback(\n      env.RAW_LENGTH,\n      newIsString ? newValue.length : env.UNDEFINED,\n      oldIsString ? oldValue.length : env.UNDEFINED\n    )\n    return env.TRUE\n  }\n\n}","import * as is from '../../../yox-common/src/util/is'\nimport * as env from '../../../yox-common/src/util/env'\n\n/**\n * 对比新旧数组\n *\n * @param newValue\n * @param oldValue\n * @param callback\n */\nexport default function (\n  newValue: any,\n  oldValue: any,\n  callback: (key: string, newValue: any, oldValue: any) => void\n): true | void {\n\n  const newIsArray = is.array(newValue),\n\n  oldIsArray = is.array(oldValue)\n\n  if (newIsArray || oldIsArray) {\n\n    const newLength = newIsArray ? newValue.length : env.UNDEFINED,\n\n    oldLength = oldIsArray ? oldValue.length : env.UNDEFINED\n\n    callback(\n      env.RAW_LENGTH,\n      newLength,\n      oldLength\n    )\n\n    for (let i = 0, length = Math.max(newLength || 0, oldLength || 0); i < length; i++) {\n      callback(\n        '' + i,\n        newValue ? newValue[i] : env.UNDEFINED,\n        oldValue ? oldValue[i] : env.UNDEFINED\n      )\n    }\n\n    return env.TRUE\n\n  }\n\n}","import * as is from '../../../yox-common/src/util/is'\nimport * as env from '../../../yox-common/src/util/env'\nimport * as object from '../../../yox-common/src/util/object'\n\n/**\n * 对比新旧对象\n *\n * @param newValue\n * @param oldValue\n * @param callback\n */\nexport default function (\n  newValue: any,\n  oldValue: any,\n  callback: (key: string, newValue: any, oldValue: any) => void\n) {\n\n  const newIsObject = is.object(newValue),\n\n  oldIsObject = is.object(oldValue)\n\n  if (newIsObject || oldIsObject) {\n\n    newValue = newIsObject ? newValue : env.EMPTY_OBJECT\n    oldValue = oldIsObject ? oldValue : env.EMPTY_OBJECT\n\n    if (newIsObject) {\n      object.each(\n        newValue,\n        function (value: any, key: string) {\n          if (value !== oldValue[key]) {\n            callback(key, value, oldValue[key])\n          }\n        }\n      )\n    }\n\n    if (oldIsObject) {\n      object.each(\n        oldValue,\n        function (value: any, key: string) {\n          if (value !== newValue[key]) {\n            callback(key, newValue[key], value)\n          }\n        }\n      )\n    }\n\n  }\n\n}","import isDef from '../../../yox-common/src/function/isDef'\nimport * as array from '../../../yox-common/src/util/array'\nimport * as keypathUtil from '../../../yox-common/src/util/keypath'\n\nimport diffString from './diffString'\nimport diffArray from './diffArray'\nimport diffObject from './diffObject'\n\nexport default function diffRecursion(\n  keypath: string,\n  newValue: any,\n  oldValue: any,\n  watchFuzzyKeypaths: string[],\n  callback: (watchKeypath: string, keypath: string, newValue: any, oldValue: any) => void\n) {\n\n  const diff = function (subKeypath: string, subNewValue: any, subOldValue: any) {\n\n    if (subNewValue !== subOldValue) {\n\n      const newKeypath = keypathUtil.join(keypath, subKeypath)\n\n      array.each(\n        watchFuzzyKeypaths,\n        function (fuzzyKeypath: string) {\n          if (isDef(keypathUtil.matchFuzzy(newKeypath, fuzzyKeypath))) {\n            callback(\n              fuzzyKeypath, newKeypath, subNewValue, subOldValue\n            )\n          }\n        }\n      )\n\n      diffRecursion(newKeypath, subNewValue, subOldValue, watchFuzzyKeypaths, callback)\n\n    }\n\n  }\n\n  diffString(newValue, oldValue, diff)\n    || diffArray(newValue, oldValue, diff)\n    || diffObject(newValue, oldValue, diff)\n\n}","import isDef from '../../../yox-common/src/function/isDef'\nimport * as array from '../../../yox-common/src/util/array'\nimport * as object from '../../../yox-common/src/util/object'\nimport * as string from '../../../yox-common/src/util/string'\nimport * as keypathUtil from '../../../yox-common/src/util/keypath'\n\nimport readValue from './readValue'\nimport diffRecursion from './diffRecursion'\n\nexport default function (\n  keypath: string,\n  newValue: any,\n  oldValue: any,\n  watcher: Object, isRecursive: boolean,\n  callback: (watchKeypath: string, keypath: string, newValue: any, oldValue: any) => void\n) {\n\n  let fuzzyKeypaths: string[] | undefined\n\n  // 遍历监听的 keypath，如果未被监听，则无需触发任何事件\n  object.each(\n    watcher,\n    function (_, watchKeypath) {\n\n      // 模糊监听，如 users.*.name\n      if (keypathUtil.isFuzzy(watchKeypath)) {\n\n        // 如果当前修改的是 users.0 整个对象\n        // users.0 和 users.*.name 无法匹配\n        // 此时要知道设置 users.0 到底会不会改变 users.*.name 需要靠递归了\n\n        // 如果匹配，则无需递归\n        if (isDef(keypathUtil.matchFuzzy(keypath, watchKeypath))) {\n          callback(\n            watchKeypath, keypath, newValue, oldValue\n          )\n        }\n        else if (isRecursive) {\n          if (fuzzyKeypaths) {\n            array.push(\n              fuzzyKeypaths,\n              watchKeypath\n            )\n          }\n          else {\n            fuzzyKeypaths = [watchKeypath]\n          }\n        }\n\n        return\n      }\n\n      // 不是模糊匹配，直接靠前缀匹配\n      // 比如监听的是 users.0.name，此时修改 users.0，则直接读出子属性值，判断是否相等\n      const length = keypathUtil.match(watchKeypath, keypath)\n      if (length >= 0) {\n\n        const subKeypath = string.slice(watchKeypath, length),\n        subNewValue = readValue(newValue, subKeypath),\n        subOldValue = readValue(oldValue, subKeypath)\n\n        if (subNewValue !== subOldValue) {\n          callback(\n            watchKeypath, watchKeypath, subNewValue, subOldValue\n          )\n        }\n\n      }\n\n    }\n  )\n\n  // 存在模糊匹配的需求\n  // 必须对数据进行递归\n  // 性能确实会慢一些，但是很好用啊，几乎可以监听所有的数据\n  if (fuzzyKeypaths) {\n    diffRecursion(keypath, newValue, oldValue, fuzzyKeypaths, callback)\n  }\n\n}","import EmitterOptions from '../../../yox-type/src/options/Emitter'\n\n/**\n * 触发异步变化时，用此函数过滤下，哪些 listener 应该执行\n *\n * @param item\n * @param data\n */\nexport default function (_: string, args: any[] | void, options: EmitterOptions): boolean | void {\n\n  if (options.count && args) {\n\n    // 采用计数器的原因是，同一个 options 可能执行多次\n    // 比如监听 user.*，如果同批次修改了 user.name 和 user.age\n    // 这个监听器会调用多次，如果第一次执行就把 count 干掉了，第二次就无法执行了\n\n    options.count--\n\n    // 新旧值不相等\n    return args[0] !== args[1]\n\n  }\n\n}","import * as is from '../../../yox-common/src/util/is'\nimport * as env from '../../../yox-common/src/util/env'\nimport * as logger from '../../../yox-common/src/util/logger'\n\nimport * as type from '../../../yox-type/src/type'\nimport WatcherOptions from '../../../yox-type/src/options/Watcher'\n\n// 避免频繁创建对象\nconst optionsHolder: WatcherOptions = {\n  watcher: env.EMPTY_FUNCTION\n}\n\n/**\n * 格式化 watch options\n *\n * @param options\n */\nexport default function (options: type.watcher | WatcherOptions | void, immediate: boolean | void): WatcherOptions | void {\n\n  if (is.func(options)) {\n    optionsHolder.watcher = options as type.watcher\n    optionsHolder.immediate = immediate === env.TRUE\n    return optionsHolder\n  }\n\n  if (options && (options as WatcherOptions).watcher) {\n    return options as WatcherOptions\n  }\n\n  if (process.env.NODE_ENV === 'development') {\n    logger.fatal(`watcher should be a function or object.`)\n  }\n\n}","import * as is from '../../yox-common/src/util/is'\nimport * as env from '../../yox-common/src/util/env'\nimport * as array from '../../yox-common/src/util/array'\nimport * as object from '../../yox-common/src/util/object'\nimport * as string from '../../yox-common/src/util/string'\n\nimport toNumber from '../../yox-common/src/function/toNumber'\nimport execute from '../../yox-common/src/function/execute'\nimport Emitter from '../../yox-common/src/util/Emitter'\nimport NextTask from '../../yox-common/src/util/NextTask'\n\nimport * as type from '../../yox-type/src/type'\nimport ValueHolder from '../../yox-type/src/interface/ValueHolder'\nimport ComputedOptions from '../../yox-type/src/options/Computed'\nimport WatcherOptions from '../../yox-type/src/options/Watcher'\nimport EmitterOptions from '../../yox-type/src/options/Emitter'\nimport ObserverInterface from '../../yox-type/src/watcher/Observer'\n\nimport Computed from './Computed'\nimport matchBest from './function/matchBest'\nimport diffWatcher from './function/diffWatcher'\nimport filterWatcher from './function/filterWatcher'\nimport formatWatcherOptions from './function/formatWatcherOptions'\n\ninterface AsyncChange {\n\n  // 旧值\n  value: any\n\n  // 监听的 keypath\n  keypaths: string[]\n\n}\n\n/**\n * 观察者有两种观察模式：\n *\n * 1. 同步监听\n * 2. 异步监听\n *\n * 对于`计算属性`这种需要实时变化的对象，即它的依赖变了，它需要立即跟着变，否则会出现不一致的问题\n * 这种属于同步监听\n *\n * 对于外部调用 observer.watch('keypath', listener)，属于异步监听，它只关心是否变了，而不关心是否是立即触发的\n */\nexport default class Observer implements ObserverInterface {\n\n  data: type.data\n\n  context: any\n\n  nextTask: NextTask\n\n  computed?: Record<string, Computed>\n\n  reversedComputedKeys?: string[]\n\n  syncEmitter: Emitter\n\n  asyncEmitter: Emitter\n\n  asyncChanges: Record<string, AsyncChange>\n\n  pending?: boolean\n\n  constructor(data?: type.data, context?: any) {\n\n    const instance = this\n\n    instance.data = data || {}\n    instance.context = context || instance\n    instance.nextTask = new NextTask()\n\n    instance.syncEmitter = new Emitter()\n    instance.asyncEmitter = new Emitter()\n    instance.asyncChanges = {}\n\n  }\n\n  /**\n   * 获取数据\n   *\n   * @param keypath\n   * @param defaultValue\n   * @param depIgnore\n   * @return\n   */\n  get(\n    keypath: string,\n    defaultValue?: any,\n    depIgnore?: boolean\n  ): any {\n\n    const instance = this,\n\n    currentComputed = Computed.current,\n\n    { data, computed, reversedComputedKeys } = instance\n\n    // 传入 '' 获取整个 data\n    if (keypath === env.EMPTY_STRING) {\n      return data\n    }\n\n    // 调用 get 时，外面想要获取依赖必须设置是谁在收集依赖\n    // 如果没设置，则跳过依赖收集\n    if (currentComputed && !depIgnore) {\n      currentComputed.add(keypath)\n    }\n\n    let result: ValueHolder | void, target: Computed | void\n\n    if (computed) {\n      target = computed[keypath]\n      if (target) {\n        return target.get()\n      }\n      if (reversedComputedKeys) {\n        const match = matchBest(reversedComputedKeys, keypath)\n        if (match && match.prop) {\n          result = object.get(\n            computed[match.name].get(),\n            match.prop\n          )\n        }\n      }\n    }\n\n    if (!result) {\n      result = object.get(data, keypath)\n    }\n\n    return result ? result.value : defaultValue\n\n  }\n\n  /**\n   * 更新数据\n   *\n   * @param keypath\n   * @param value\n   */\n  set(\n    keypath: string | type.data,\n    value?: any\n  ) {\n\n    const instance = this,\n\n    { data, computed, reversedComputedKeys } = instance,\n\n    setValue = function (newValue: any, keypath: string) {\n\n      const oldValue = instance.get(keypath)\n      if (newValue === oldValue) {\n        return\n      }\n\n      let target: Computed | void\n\n      if (computed) {\n        target = computed[keypath]\n        if (target) {\n          target.set(newValue)\n        }\n        if (reversedComputedKeys) {\n          const match = matchBest(reversedComputedKeys, keypath)\n          if (match && match.prop) {\n            target = computed[match.name]\n            if (target) {\n              const targetValue = target.get()\n              if (is.object(targetValue)) {\n                object.set(targetValue, match.prop, newValue)\n              }\n            }\n          }\n        }\n      }\n\n      if (!target) {\n        object.set(data, keypath, newValue)\n      }\n\n      instance.diff(keypath, newValue, oldValue)\n\n    }\n\n    if (is.string(keypath)) {\n      setValue(value, keypath as string)\n    }\n    else if (is.object(keypath)) {\n      object.each(keypath as type.data, setValue)\n    }\n\n  }\n\n  /**\n   * 同步调用的 diff，用于触发 syncEmitter，以及唤醒 asyncEmitter\n   *\n   * @param keypath\n   * @param newValue\n   * @param oldValue\n   */\n  diff(\n    keypath: string,\n    newValue: any,\n    oldValue: any\n  ): void {\n\n    const instance = this,\n\n    { syncEmitter, asyncEmitter, asyncChanges } = instance,\n\n    /**\n     * 我们认为 $ 开头的变量是不可递归的\n     * 比如浏览器中常见的 $0 表示当前选中元素\n     * DOM 元素是不能递归的\n     */\n    isRecursive = string.codeAt(keypath) !== 36\n\n    diffWatcher(\n      keypath, newValue, oldValue,\n      syncEmitter.listeners, isRecursive,\n      function (watchKeypath: string, keypath: string, newValue: any, oldValue: any) {\n        syncEmitter.fire(watchKeypath, [newValue, oldValue, keypath])\n      }\n    )\n\n    /**\n     * 此处有坑，举个例子\n     *\n     * observer.watch('a', function () {})\n     *\n     * observer.set('a', 1)\n     *\n     * observer.watch('a', function () {})\n     *\n     * 这里，第一个 watcher 应该触发，但第二个不应该，因为它绑定监听时，值已经是最新的了\n     */\n\n    diffWatcher(\n      keypath, newValue, oldValue,\n      asyncEmitter.listeners, isRecursive,\n      function (watchKeypath: string, keypath: string, newValue: any, oldValue: any) {\n\n        array.each(\n          asyncEmitter.listeners[watchKeypath],\n          function (item: EmitterOptions) {\n            (item.count as number)++\n          }\n        )\n\n        const { keypaths } = asyncChanges[keypath] || (asyncChanges[keypath] = { value: oldValue, keypaths: [] })\n        if (!array.has(keypaths, watchKeypath)) {\n          array.push(keypaths, watchKeypath)\n        }\n\n        if (!instance.pending) {\n          instance.pending = env.TRUE\n          instance.nextTask.append(\n            function () {\n              if (instance.pending) {\n                instance.pending = env.UNDEFINED\n                instance.diffAsync()\n              }\n            }\n          )\n        }\n      }\n    )\n\n  }\n\n  /**\n   * 异步触发的 diff\n   */\n  diffAsync(): void {\n\n    const instance = this,\n\n    { asyncEmitter, asyncChanges } = instance\n\n    instance.asyncChanges = {}\n\n    object.each(\n      asyncChanges,\n      function (change: AsyncChange, keypath: string) {\n\n        const args = [instance.get(keypath), change.value, keypath]\n\n        // 不能在这判断新旧值是否相同，相同就不 fire\n        // 因为前面标记了 count，在这中断会导致 count 无法清除\n\n        array.each(\n          change.keypaths,\n          function (watchKeypath: string) {\n            asyncEmitter.fire(watchKeypath, args, filterWatcher)\n          }\n        )\n\n      }\n    )\n\n  }\n\n  /**\n   * 添加计算属性\n   *\n   * @param keypath\n   * @param computed\n   */\n  addComputed(\n    keypath: string,\n    options: type.getter | ComputedOptions\n  ): Computed | void {\n\n    const instance = this,\n\n    computed = Computed.build(keypath, instance, options)\n\n    if (computed) {\n\n      if (!instance.computed) {\n        instance.computed = {}\n      }\n\n      instance.computed[keypath] = computed\n      instance.reversedComputedKeys = object.sort(instance.computed, env.TRUE)\n\n      return computed\n\n    }\n\n  }\n\n  /**\n   * 移除计算属性\n   *\n   * @param keypath\n   */\n  removeComputed(\n    keypath: string\n  ): void {\n\n    const instance = this,\n\n    { computed } = instance\n\n    if (computed && object.has(computed, keypath)) {\n      delete computed[keypath]\n      instance.reversedComputedKeys = object.sort(computed, env.TRUE)\n    }\n\n  }\n\n  /**\n   * 监听数据变化\n   *\n   * @param keypath\n   * @param watcher\n   * @param immediate\n   */\n  watch(\n    keypath: string | Record<string, type.watcher | WatcherOptions>,\n    watcher?: type.watcher | WatcherOptions,\n    immediate?: boolean\n  ) {\n\n    const instance = this,\n\n    { context, syncEmitter, asyncEmitter } = instance,\n\n    bind = function (keypath: string, options: WatcherOptions) {\n\n      const emitter = options.sync ? syncEmitter : asyncEmitter,\n\n      // formatWatcherOptions 保证了 options.watcher 一定存在\n      listener: EmitterOptions = {\n        fn: options.watcher,\n        ctx: context,\n        count: 0,\n      }\n\n      if (options.once) {\n        listener.max = 1\n      }\n\n      emitter.on(keypath, listener)\n\n      if (options.immediate) {\n        execute(\n          options.watcher,\n          context,\n          [\n            instance.get(keypath),\n            env.UNDEFINED,\n            keypath\n          ]\n        )\n      }\n\n    }\n\n    if (is.string(keypath)) {\n      bind(\n        keypath as string,\n        formatWatcherOptions(watcher, immediate) as WatcherOptions\n      )\n      return\n    }\n\n    object.each(\n      keypath as type.data,\n      function (options: type.watcher | WatcherOptions, keypath: string) {\n        bind(keypath, formatWatcherOptions(options) as WatcherOptions)\n      }\n    )\n\n  }\n\n  /**\n   * 取消监听数据变化\n   *\n   * @param keypath\n   * @param watcher\n   */\n  unwatch(\n    keypath?: string,\n    watcher?: type.watcher\n  ) {\n    this.syncEmitter.off(keypath, watcher)\n    this.asyncEmitter.off(keypath, watcher)\n  }\n\n  /**\n   * 取反 keypath 对应的数据\n   *\n   * 不管 keypath 对应的数据是什么类型，操作后都是布尔型\n   *\n   * @param keypath\n   * @return 取反后的布尔值\n   */\n  toggle(keypath: string): boolean {\n    const value = !this.get(keypath)\n    this.set(keypath, value)\n    return value\n  }\n\n  /**\n   * 递增 keypath 对应的数据\n   *\n   * 注意，最好是整型的加法，如果涉及浮点型，不保证计算正确\n   *\n   * @param keypath 值必须能转型成数字，如果不能，则默认从 0 开始递增\n   * @param step 步进值，默认是 1\n   * @param max 可以递增到的最大值，默认不限制\n   */\n  increase(keypath: string, step?: number, max?: number): number | void {\n    const value = toNumber(this.get(keypath), 0) + (step || 1)\n    if (!is.number(max) || value <= (max as number)) {\n      this.set(keypath, value)\n      return value\n    }\n  }\n\n  /**\n   * 递减 keypath 对应的数据\n   *\n   * 注意，最好是整型的减法，如果涉及浮点型，不保证计算正确\n   *\n   * @param keypath 值必须能转型成数字，如果不能，则默认从 0 开始递减\n   * @param step 步进值，默认是 1\n   * @param min 可以递减到的最小值，默认不限制\n   */\n  decrease(keypath: string, step?: number, min?: number): number | void {\n    const value = toNumber(this.get(keypath), 0) - (step || 1)\n    if (!is.number(min) || value >= (min as number)) {\n      this.set(keypath, value)\n      return value\n    }\n  }\n\n  /**\n   * 在数组指定位置插入元素\n   *\n   * @param keypath\n   * @param item\n   * @param index\n   */\n  insert(keypath: string, item: any, index: number | boolean): true | void {\n\n    let list = this.get(keypath)\n    list = !is.array(list) ? [] : object.copy(list)\n\n    const { length } = list\n    if (index === env.TRUE || index === length) {\n      list.push(item)\n    }\n    else if (index === env.FALSE || index === 0) {\n      list.unshift(item)\n    }\n    else if (index > 0 && index < length) {\n      list.splice(index, 0, item)\n    }\n    else {\n      return\n    }\n\n    this.set(keypath, list)\n\n    return env.TRUE\n\n  }\n\n  /**\n   * 在数组尾部添加元素\n   *\n   * @param keypath\n   * @param item\n   */\n  append(keypath: string, item: any): true | void {\n    return this.insert(keypath, item, env.TRUE)\n  }\n\n  /**\n   * 在数组首部添加元素\n   *\n   * @param keypath\n   * @param item\n   */\n  prepend(keypath: string, item: any): true | void {\n    return this.insert(keypath, item, env.FALSE)\n  }\n\n  /**\n   * 通过索引移除数组中的元素\n   *\n   * @param keypath\n   * @param index\n   */\n  removeAt(keypath: string, index: number): true | void {\n    let list = this.get(keypath)\n    if (is.array(list)\n      && index >= 0\n      && index < list.length\n    ) {\n      list = object.copy(list)\n      list.splice(index, 1)\n      this.set(keypath, list)\n      return env.TRUE\n    }\n  }\n\n  /**\n   * 直接移除数组中的元素\n   *\n   * @param keypath\n   * @param item\n   */\n  remove(keypath: string, item: any): true | void {\n    let list = this.get(keypath)\n    if (is.array(list)) {\n      list = object.copy(list)\n      if (array.remove(list, item)) {\n        this.set(keypath, list)\n        return env.TRUE\n      }\n    }\n  }\n\n  /**\n   * 拷贝任意数据，支持深拷贝\n   *\n   * @param data\n   * @param deep\n   */\n  copy<T>(data: T, deep?: boolean): T {\n    return object.copy(data, deep)\n  }\n\n  /**\n   * 销毁\n   */\n  destroy() {\n    const instance = this\n    instance.syncEmitter.off()\n    instance.asyncEmitter.off()\n    instance.nextTask.clear()\n    object.clear(instance)\n  }\n\n}\n","import * as type from '../../yox-type/src/type'\nimport * as config from '../../yox-config/src/config'\n\nimport isDef from '../../yox-common/src/function/isDef'\nimport execute from '../../yox-common/src/function/execute'\n\nimport * as env from '../../yox-common/src/util/env'\nimport * as array from '../../yox-common/src/util/array'\nimport * as string from '../../yox-common/src/util/string'\nimport * as object from '../../yox-common/src/util/object'\nimport * as logger from '../../yox-common/src/util/logger'\n\nimport Emitter from '../../yox-common/src/util/Emitter'\nimport CustomEvent from '../../yox-common/src/util/CustomEvent'\n\nimport API from '../../yox-type/src/interface/API'\nimport SpecialEventHooks from '../../yox-type/src/hooks/SpecialEvent'\n\n// 这里先写 IE9 支持的接口\nlet innerText = 'textContent',\n\ninnerHTML = 'innerHTML',\n\nfindElement = function (selector: string): Element | void {\n  const node = (env.DOCUMENT as Document).querySelector(selector)\n  if (node) {\n    return node\n  }\n},\n\naddEventListener = function (node: HTMLElement | Window | Document, type: string, listener: (event: Event) => void) {\n  node.addEventListener(type, listener, env.FALSE)\n},\n\nremoveEventListener = function (node: HTMLElement | Window | Document, type: string, listener: (event: Event) => void) {\n  node.removeEventListener(type, listener, env.FALSE)\n},\n\n// IE9 不支持 classList\naddClass = function (node: HTMLElement, className: string) {\n  node.classList.add(className)\n},\n\nremoveClass = function (node: HTMLElement, className: string) {\n  node.classList.remove(className)\n},\n\ncreateEvent = function (event: any, node: HTMLElement | Window | Document): any {\n  return event\n}\n\nif (process.env.NODE_ENV !== 'pure') {\n  if (env.DOCUMENT) {\n\n    // 此时 document.body 不一定有值，比如 script 放在 head 里\n    if (!env.DOCUMENT.documentElement.classList) {\n      addClass = function (node: HTMLElement, className: string) {\n        const classes = node.className.split(CHAR_WHITESPACE)\n        if (!array.has(classes, className)) {\n          array.push(classes, className)\n          node.className = array.join(classes, CHAR_WHITESPACE)\n        }\n      }\n      removeClass = function (node: HTMLElement, className: string) {\n        const classes = node.className.split(CHAR_WHITESPACE)\n        if (array.remove(classes, className)) {\n          node.className = array.join(classes, CHAR_WHITESPACE)\n        }\n      }\n    }\n\n    // 为 IE9 以下浏览器打补丁\n    if (process.env.NODE_LEGACY) {\n\n      if (!env.DOCUMENT.addEventListener) {\n\n        const PROPERTY_CHANGE = 'propertychange'\n\n        addEventListener = function (node: any, type: string, listener: (event: Event) => void) {\n          if (type === env.EVENT_INPUT) {\n            addEventListener(\n              node,\n              PROPERTY_CHANGE,\n              // 借用 EMITTER，反正只是内部临时用一下...\n              listener[EMITTER] = function (event: any) {\n                if (event.propertyName === env.RAW_VALUE) {\n                  event = new CustomEvent(event)\n                  event.type = env.EVENT_INPUT\n                  execute(listener, this, event)\n                }\n              }\n            )\n          }\n          else if (type === env.EVENT_CHANGE && isBoxElement(node)) {\n            addEventListener(\n              node,\n              env.EVENT_CLICK,\n              listener[EMITTER] = function (event: any) {\n                event = new CustomEvent(event)\n                event.type = env.EVENT_CHANGE\n                execute(listener, this, event)\n              }\n            )\n          }\n          else {\n            node.attachEvent(`on${type}`, listener)\n          }\n        }\n\n        removeEventListener = function (node: any, type: string, listener: (event: Event) => void) {\n          if (type === env.EVENT_INPUT) {\n            removeEventListener(node, PROPERTY_CHANGE, listener[EMITTER])\n            delete listener[EMITTER]\n          }\n          else if (type === env.EVENT_CHANGE && isBoxElement(node)) {\n            removeEventListener(node, env.EVENT_CLICK, listener[EMITTER])\n            delete listener[EMITTER]\n          }\n          else {\n            node.detachEvent(`on${type}`, listener)\n          }\n        }\n\n        const isBoxElement = function (node: HTMLInputElement) {\n          return node.tagName === 'INPUT'\n            && (node.type === 'radio' || node.type === 'checkbox')\n        }\n\n        class IEEvent {\n\n          currentTarget: HTMLElement | Window | Document\n\n          target: HTMLElement | EventTarget\n\n          originalEvent: Event\n\n          constructor(event: Event, element: HTMLElement | Window | Document) {\n\n            object.extend(this, event)\n\n            this.currentTarget = element\n            this.target = event.srcElement || element\n            this.originalEvent = event\n\n          }\n\n          preventDefault() {\n            this.originalEvent.returnValue = env.FALSE\n          }\n\n          stopPropagation() {\n            this.originalEvent.cancelBubble = env.TRUE\n          }\n\n        }\n\n        // textContent 不兼容 IE 678\n        innerText = 'innerText'\n\n        createEvent = function (event, element) {\n          return new IEEvent(event, element)\n        }\n\n        findElement = function (selector: string): Element | void {\n          // 去掉 #\n          if (string.codeAt(selector, 0) === 35) {\n            selector = string.slice(selector, 1)\n          }\n          else if (process.env.NODE_ENV === 'development') {\n            logger.fatal(`\"#id\" is the only supported selector for legacy version.`)\n          }\n          const node = (env.DOCUMENT as Document).getElementById(selector)\n          if (node) {\n            return node\n          }\n        }\n\n      }\n\n    }\n\n  }\n}\n\nconst CHAR_WHITESPACE = ' ',\n\n/**\n * 绑定在 HTML 元素上的事件发射器\n */\nEMITTER = '$emitter',\n\n/**\n * 低版本 IE 上 style 标签的专有属性\n */\nSTYLE_SHEET = 'styleSheet',\n\n/**\n * 跟输入事件配套使用的事件\n */\nCOMPOSITION_START = 'compositionstart',\n\n/**\n * 跟输入事件配套使用的事件\n */\nCOMPOSITION_END = 'compositionend',\n\ndomain = 'http://www.w3.org/',\n\nnamespaces = {\n  svg: domain + '2000/svg',\n  // xml: domain + 'XML/1998/namespace',\n  // xlink: domain + '1999/xlink',\n},\n\nspecialEvents: Record<string, SpecialEventHooks> = {},\n\ndomApi: API = {\n\n  createElement(tag: string, isSvg?: boolean): Element {\n    return isSvg\n      ? (env.DOCUMENT as Document).createElementNS(namespaces.svg, tag)\n      : (env.DOCUMENT as Document).createElement(tag)\n  },\n\n  createText(text: string): Text {\n    return (env.DOCUMENT as Document).createTextNode(text)\n  },\n\n  createComment(text: string): Comment {\n    return (env.DOCUMENT as Document).createComment(text)\n  },\n\n  prop(node: HTMLElement, name: string, value?: string | number | boolean): string | number | boolean | void {\n    if (isDef(value)) {\n      object.set(node, name, value, env.FALSE)\n    }\n    else {\n      const holder = object.get(node, name)\n      if (holder) {\n        return holder.value\n      }\n    }\n  },\n\n  removeProp(node: HTMLElement, name: string, hint?: number): void {\n    object.set(\n      node,\n      name,\n      hint === config.HINT_BOOLEAN\n        ? env.FALSE\n        : env.EMPTY_STRING,\n      env.FALSE\n    )\n  },\n\n  attr(node: HTMLElement, name: string, value?: string): string | void {\n    if (isDef(value)) {\n      node.setAttribute(name, value as string)\n    }\n    else {\n      // value 还可能是 null\n      const value = node.getAttribute(name)\n      if (value != env.NULL) {\n        return value as string\n      }\n    }\n  },\n\n  removeAttr(node: HTMLElement, name: string): void {\n    node.removeAttribute(name)\n  },\n\n  before(parentNode: Node, node: Node, beforeNode: Node): void {\n    parentNode.insertBefore(node, beforeNode)\n  },\n\n  append(parentNode: Node, node: Node): void {\n    parentNode.appendChild(node)\n  },\n\n  replace(parentNode: Node, node: Node, oldNode: Node): void {\n    parentNode.replaceChild(node, oldNode)\n  },\n\n  remove(parentNode: Node, node: Node): void {\n    parentNode.removeChild(node)\n  },\n\n  parent(node: Node): Node | void {\n    const { parentNode } = node\n    if (parentNode) {\n      return parentNode\n    }\n  },\n\n  next(node: Node): Node | void {\n    const { nextSibling } = node\n    if (nextSibling) {\n      return nextSibling\n    }\n  },\n\n  find: findElement,\n\n  tag(node: Node): string | void {\n    if (node.nodeType === 1) {\n      return string.lower((node as HTMLElement).tagName)\n    }\n  },\n\n  text(node: Node, text?: string, isStyle?: boolean, isOption?: boolean): string | void {\n    if (isDef(text)) {\n      if (process.env.NODE_LEGACY) {\n        if (isStyle && object.has(node, STYLE_SHEET)) {\n          node[STYLE_SHEET].cssText = text\n        }\n        else {\n          if (isOption) {\n            (node as HTMLOptionElement).value = text as string\n          }\n          node[innerText] = text as string\n        }\n      }\n      else {\n        node[innerText] = text as string\n      }\n    }\n    else {\n      return node[innerText]\n    }\n  },\n\n  html(node: Element, html?: string, isStyle?: boolean, isOption?: boolean): string | void {\n    if (isDef(html)) {\n      if (process.env.NODE_LEGACY) {\n        if (isStyle && object.has(node, STYLE_SHEET)) {\n          node[STYLE_SHEET].cssText = html\n        }\n        else {\n          if (isOption) {\n            (node as HTMLOptionElement).value = html as string\n          }\n          node[innerHTML] = html as string\n        }\n      }\n      else {\n        node[innerHTML] = html as string\n      }\n    }\n    else {\n      return node[innerHTML]\n    }\n  },\n\n  addClass,\n\n  removeClass,\n\n  on(node: HTMLElement | Window | Document, type: string, listener: type.listener): void {\n\n    const emitter: Emitter = node[EMITTER] || (node[EMITTER] = new Emitter()),\n\n    nativeListeners = emitter.nativeListeners || (emitter.nativeListeners = {})\n\n    // 一个元素，相同的事件，只注册一个 native listener\n    if (!nativeListeners[type]) {\n\n      // 特殊事件\n      const special = specialEvents[type],\n\n      // 唯一的原生监听器\n      nativeListener = function (event: Event | CustomEvent) {\n\n        const customEvent = event instanceof CustomEvent\n          ? event\n          : new CustomEvent(event.type, createEvent(event, node))\n\n        if (customEvent.type !== type) {\n          customEvent.type = type\n        }\n\n        emitter.fire(type, [customEvent])\n\n      }\n\n      nativeListeners[type] = nativeListener\n\n      if (special) {\n        special.on(node, nativeListener)\n      }\n      else {\n        addEventListener(node, type, nativeListener)\n      }\n\n    }\n\n    emitter.on(type, listener)\n  },\n\n  off(node: HTMLElement | Window | Document, type: string, listener: type.listener): void {\n\n    const emitter: Emitter = node[EMITTER],\n\n    { listeners, nativeListeners } = emitter\n\n    // emitter 会根据 type 和 listener 参数进行适当的删除\n    emitter.off(type, listener)\n\n    // 如果注册的 type 事件都解绑了，则去掉原生监听器\n    if (nativeListeners && !emitter.has(type)) {\n\n      const special = specialEvents[type],\n\n      nativeListener = nativeListeners[type]\n\n      if (special) {\n        special.off(node, nativeListener)\n      }\n      else {\n        removeEventListener(node, type, nativeListener)\n      }\n\n      delete nativeListeners[type]\n\n    }\n\n    if (object.falsy(listeners)) {\n      node[EMITTER] = env.UNDEFINED\n    }\n\n  },\n\n  addSpecialEvent(type: string, hooks: SpecialEventHooks): void {\n    if (process.env.NODE_ENV === 'development') {\n      if (specialEvents[type]) {\n        logger.error(`Special event \"${type}\" is existed.`)\n      }\n      logger.info(`Special event \"${type}\" add success.`)\n    }\n    specialEvents[type] = hooks\n  },\n\n}\n\nspecialEvents[env.EVENT_MODEL] = {\n  on(node: HTMLElement | Window | Document, listener: type.nativeListener) {\n    let locked = env.FALSE\n    domApi.on(node, COMPOSITION_START, listener[COMPOSITION_START] = function () {\n      locked = env.TRUE\n    })\n    domApi.on(node, COMPOSITION_END, listener[COMPOSITION_END] = function (event: Event | CustomEvent) {\n      locked = env.FALSE\n      listener(event)\n    })\n    addEventListener(node, env.EVENT_INPUT, listener[env.EVENT_INPUT] = function (event: Event | CustomEvent) {\n      if (!locked) {\n        listener(event)\n      }\n    })\n  },\n  off(node: HTMLElement | Window | Document, listener: type.nativeListener) {\n    domApi.off(node, COMPOSITION_START, listener[COMPOSITION_START])\n    domApi.off(node, COMPOSITION_END, listener[COMPOSITION_END])\n    removeEventListener(node, env.EVENT_INPUT, listener[env.EVENT_INPUT])\n    listener[COMPOSITION_START] =\n    listener[COMPOSITION_END] =\n    listener[env.EVENT_INPUT] = env.UNDEFINED\n  }\n}\n\nexport default domApi","import execute from './execute'\n\nimport * as env from '../util/env'\nimport * as array from '../util/array'\n\n/**\n * 节流调用\n *\n * @param fn 需要节制调用的函数\n * @param delay 调用的时间间隔，单位毫秒\n * @param immediate 是否立即触发\n * @return 节流函数\n */\nexport default function (fn: Function, delay: number, immediate?: boolean) {\n\n  let timer: any\n\n  return function () {\n\n    if (!timer) {\n\n      const args = array.toArray(arguments)\n      if (immediate) {\n        execute(fn, env.UNDEFINED, args)\n      }\n\n      timer = setTimeout(\n        function () {\n          timer = env.UNDEFINED\n          if (!immediate) {\n            execute(fn, env.UNDEFINED, args)\n          }\n        },\n        delay\n      )\n\n    }\n\n  }\n}\n","import execute from '../../../yox-common/src/function/execute'\nimport debounce from '../../../yox-common/src/function/debounce'\n\nimport * as env from '../../../yox-common/src/util/env'\n\nimport api from '../../../yox-dom/src/dom'\n\nimport * as type from '../../../yox-type/src/type'\n\nimport Yox from '../../../yox-type/src/interface/Yox'\nimport VNode from '../../../yox-type/src/vnode/VNode'\nimport Directive from '../../../yox-type/src/vnode/Directive'\nimport DirectiveHooks from '../../../yox-type/src/hooks/Directive'\n\nconst directive: DirectiveHooks = {\n  bind(node: HTMLElement | Yox, directive: Directive, vnode: VNode) {\n\n    let { name, handler } = directive, { lazy } = vnode\n\n    if (!handler) {\n      return\n    }\n\n    if (lazy) {\n\n      const value = lazy[name] || lazy[env.EMPTY_STRING]\n\n      if (value === env.TRUE) {\n        name = env.EVENT_CHANGE\n      }\n      else if (value > 0) {\n        handler = debounce(\n          handler,\n          value,\n          // 避免连续多次点击，主要用于提交表单场景\n          // 移动端的 tap 事件可自行在业务层打补丁实现\n          name === env.EVENT_CLICK || name === env.EVENT_TAP\n        )\n      }\n\n    }\n\n    if (vnode.isComponent) {\n\n      (node as Yox).on(name, handler)\n      vnode.data[directive.key] = function () {\n        (node as Yox).off(name, handler as type.listener)\n      }\n\n    }\n    else {\n\n      api.on(node as HTMLElement, name, handler)\n      vnode.data[directive.key] = function () {\n        api.off(node as HTMLElement, name, handler as type.listener)\n      }\n\n    }\n\n  },\n\n  unbind(node: HTMLElement | Yox, directive: Directive, vnode: VNode) {\n    execute(vnode.data[directive.key])\n  }\n}\n\nexport default directive\n","import debounce from '../../../yox-common/src/function/debounce'\nimport execute from '../../../yox-common/src/function/execute'\nimport toString from '../../../yox-common/src/function/toString'\n\nimport * as is from '../../../yox-common/src/util/is'\nimport * as env from '../../../yox-common/src/util/env'\nimport * as array from '../../../yox-common/src/util/array'\n\nimport api from '../../../yox-dom/src/dom'\n\nimport * as config from '../../../yox-config/src/config'\nimport * as type from '../../../yox-type/src/type'\n\nimport Yox from '../../../yox-type/src/interface/Yox'\nimport VNode from '../../../yox-type/src/vnode/VNode'\nimport Directive from '../../../yox-type/src/vnode/Directive'\nimport DirectiveHooks from '../../../yox-type/src/hooks/Directive'\n\ninterface NativeControl {\n\n  set(node: HTMLElement, value: any): void\n\n  sync(node: HTMLElement, keypath: string, context: Yox): void\n\n  name: string\n\n}\n\nfunction debounceIfNeeded(fn: Function, lazy: type.lazy | void): any {\n  // 应用 lazy\n  return lazy && lazy !== env.TRUE\n    ? debounce(fn, lazy)\n    : fn\n}\n\nconst inputControl: NativeControl = {\n  set(node: HTMLInputElement, value: any) {\n    node.value = toString(value)\n  },\n  sync(node: HTMLInputElement, keypath: string, context: Yox) {\n    context.set(keypath, node.value)\n  },\n  name: env.RAW_VALUE\n},\n\nradioControl: NativeControl = {\n  set(node: HTMLInputElement, value: any) {\n    node.checked = node.value === toString(value)\n  },\n  sync(node: HTMLInputElement, keypath: string, context: Yox) {\n    if (node.checked) {\n      context.set(keypath, node.value)\n    }\n  },\n  name: 'checked'\n},\n\ncheckboxControl: NativeControl = {\n  set(node: HTMLInputElement, value: any) {\n    node.checked = is.array(value)\n      ? array.has(value, node.value, env.FALSE)\n      : !!value\n  },\n  sync(node: HTMLInputElement, keypath: string, context: Yox) {\n    const value = context.get(keypath)\n    if (is.array(value)) {\n      if (node.checked) {\n        context.append(keypath, node.value)\n      }\n      else {\n        context.removeAt(\n          keypath,\n          array.indexOf(value, node.value, env.FALSE)\n        )\n      }\n    }\n    else {\n      context.set(keypath, node.checked)\n    }\n  },\n  name: 'checked'\n},\n\nselectControl: NativeControl = {\n  set(node: HTMLSelectElement, value: any) {\n    array.each(\n      array.toArray(node.options),\n      node.multiple\n        ? function (option: HTMLOptionElement) {\n          option.selected = array.has(value, option.value, env.FALSE)\n        }\n        : function (option: HTMLOptionElement, index: number) {\n          if (option.value == value) {\n            node.selectedIndex = index\n            return env.FALSE\n          }\n        }\n    )\n  },\n  sync(node: HTMLSelectElement, keypath: string, context: Yox) {\n    const { options } = node\n    if (node.multiple) {\n      const values: string[] = []\n      array.each(\n        array.toArray(options),\n        function (option: HTMLOptionElement) {\n          if (option.selected) {\n            array.push(\n              values,\n              option.value\n            )\n          }\n        }\n      )\n      context.set(keypath, values)\n    }\n    else {\n      context.set(\n        keypath,\n        options[node.selectedIndex].value\n      )\n    }\n  },\n  name: env.RAW_VALUE\n},\n\ninputTypes = {\n  radio: radioControl,\n  checkbox: checkboxControl,\n},\n\ndirective: DirectiveHooks = {\n\n  once: env.TRUE,\n\n  bind(node: HTMLElement | Yox, directive: Directive, vnode: VNode) {\n\n    let { context, lazy, isComponent } = vnode,\n\n    dataBinding = directive.binding as string,\n\n    lazyValue = lazy && (lazy[config.DIRECTIVE_MODEL] || lazy[env.EMPTY_STRING]),\n\n    set: type.watcher | void,\n\n    sync: type.watcher,\n\n    unbind: Function\n\n    if (isComponent) {\n\n      let component = node as Yox,\n\n      viewBinding = component.$model as string\n\n      set = function (newValue: any) {\n        if (set) {\n          component.set(viewBinding, newValue)\n        }\n      }\n\n      sync = debounceIfNeeded(\n        function (newValue: any) {\n          context.set(dataBinding, newValue)\n        },\n        lazyValue\n      )\n\n      unbind = function () {\n        component.unwatch(viewBinding, sync)\n      }\n\n      component.watch(viewBinding, sync)\n\n    }\n    else {\n\n      let element = node as HTMLElement,\n\n      control = vnode.tag === 'select'\n        ? selectControl\n        : inputControl,\n\n      // checkbox,radio,select 监听的是 change 事件\n      eventName = env.EVENT_CHANGE\n\n      if (control === inputControl) {\n        const type = (node as HTMLInputElement).type\n        if (inputTypes[type]) {\n          control = inputTypes[type]\n        }\n        // 如果是输入框，则切换成 model 事件\n        // model 事件是个 yox-dom 实现的特殊事件\n        // 不会在输入法组合文字过程中得到触发事件\n        else if (lazyValue !== env.TRUE) {\n          eventName = env.EVENT_MODEL\n        }\n      }\n\n      set = function (newValue: any) {\n        if (set) {\n          control.set(element, newValue)\n        }\n      }\n\n      sync = debounceIfNeeded(\n        function () {\n          control.sync(element, dataBinding, context)\n        },\n        lazyValue\n      )\n\n      unbind = function () {\n        api.off(element, eventName, sync as type.listener)\n      }\n\n      api.on(element, eventName, sync as type.listener)\n\n      control.set(element, vnode.model)\n\n    }\n\n    // 监听数据，修改界面\n    context.watch(dataBinding, set as type.watcher)\n\n    vnode.data[directive.key] = function () {\n      context.unwatch(dataBinding, set as type.watcher)\n      set = env.UNDEFINED\n      unbind()\n    }\n\n  },\n\n  unbind(node: HTMLElement | Yox, directive: Directive, vnode: VNode) {\n    execute(vnode.data[directive.key])\n  }\n}\n\nexport default directive\n","import isDef from '../../../yox-common/src/function/isDef'\nimport execute from '../../../yox-common/src/function/execute'\n\nimport * as env from '../../../yox-common/src/util/env'\nimport * as keypathUtil from '../../../yox-common/src/util/keypath'\n\nimport * as type from '../../../yox-type/src/type'\nimport Yox from '../../../yox-type/src/interface/Yox'\nimport VNode from '../../../yox-type/src/vnode/VNode'\nimport Directive from '../../../yox-type/src/vnode/Directive'\nimport DirectiveHooks from '../../../yox-type/src/hooks/Directive'\n\nimport api from '../../../yox-dom/src/dom'\n\nconst directive: DirectiveHooks = {\n\n  once: env.TRUE,\n\n  bind(node: HTMLElement | Yox, directive: Directive, vnode: VNode) {\n\n    // binding 可能是模糊匹配\n    // 比如延展属性 {{...obj}}，这里 binding 会是 `obj.*`\n    let binding = directive.binding as string,\n\n    isFuzzy = keypathUtil.isFuzzy(binding),\n\n    watcher: type.watcher | void = function (newValue: any, _: any, keypath: string) {\n\n      if (watcher) {\n        const name = isFuzzy\n          ? keypathUtil.matchFuzzy(keypath, binding) as string\n          : directive.name\n\n        if (vnode.isComponent) {\n          const component = node as Yox\n          component.set(name, component.checkProp(name, newValue))\n        }\n        else if (isDef(directive.hint)) {\n          api.prop(node as HTMLElement, name, newValue)\n        }\n        else {\n          api.attr(node as HTMLElement, name, newValue)\n        }\n      }\n\n    }\n\n    vnode.context.watch(binding, watcher as type.watcher)\n\n    vnode.data[directive.key] = function () {\n      vnode.context.unwatch(binding, watcher as type.watcher)\n      watcher = env.UNDEFINED\n    }\n\n  },\n\n  unbind(node: HTMLElement | Yox, directive: Directive, vnode: VNode) {\n    execute(vnode.data[directive.key])\n  }\n\n}\n\nexport default directive\n","import * as config from '../../../yox-config/src/config'\nimport isDef from '../../../yox-common/src/function/isDef'\n\n// this type https://jkchao.github.io/typescript-book-chinese/typings/thisType.html\n\n/**\n * 组件是否存在某个 slot\n *\n * @param name\n */\nexport default function (name: string): boolean {\n  return isDef(this.get(config.SLOT_DATA_PREFIX + name))\n}\n","import isDef from '../../yox-common/src/function/isDef'\nimport execute from '../../yox-common/src/function/execute'\n\nimport CustomEvent from '../../yox-common/src/util/CustomEvent'\nimport Emitter from '../../yox-common/src/util/Emitter'\nimport NextTask from '../../yox-common/src/util/NextTask'\n\nimport * as is from '../../yox-common/src/util/is'\nimport * as env from '../../yox-common/src/util/env'\nimport * as array from '../../yox-common/src/util/array'\nimport * as string from '../../yox-common/src/util/string'\nimport * as object from '../../yox-common/src/util/object'\nimport * as logger from '../../yox-common/src/util/logger'\n\nimport * as config from '../../yox-config/src/config'\nimport * as snabbdom from '../../yox-snabbdom/src/snabbdom'\n\nimport * as templateCompiler from '../../yox-template-compiler/src/compiler'\nimport * as templateGenerator from '../../yox-template-compiler/src/generator'\nimport * as templateRender from '../../yox-template-compiler/src/renderer'\n\nimport * as type from '../../yox-type/src/type'\n\nimport VNode from '../../yox-type/src/vnode/VNode'\nimport YoxInterface from '../../yox-type/src/interface/Yox'\nimport YoxPluginInterface from '../../yox-type/src/interface/YoxPlugin'\nimport YoxOptions from '../../yox-type/src/options/Yox'\nimport ComputedOptions from '../../yox-type/src/options/Computed'\nimport WatcherOptions from '../../yox-type/src/options/Watcher'\nimport EmitterOptions from '../../yox-type/src/options/Emitter'\nimport DirectiveHooks from '../../yox-type/src/hooks/Directive'\nimport TransitionHooks from '../../yox-type/src/hooks/Transition'\nimport PropRule from '../../yox-type/src/interface/PropRule'\n\nimport Computed from '../../yox-observer/src/Computed'\nimport Observer from '../../yox-observer/src/Observer'\n\nimport domApi from '../../yox-dom/src/dom'\n\nimport event from './directive/event'\nimport model from './directive/model'\nimport binding from './directive/binding'\nimport hasSlot from './filter/hasSlot'\n\n\nconst globalDirectives = {},\n\nglobalTransitions = {},\n\nglobalComponents = {},\n\nglobalPartials = {},\n\nglobalFilters = {},\n\ncompileCache = {},\n\nLOADER_QUEUE = '$queue',\n\nTEMPLATE_COMPUTED = '$' + env.RAW_TEMPLATE,\n\nselectorPattern = /^[#.][-\\w+]+$/\n\nexport default class Yox implements YoxInterface {\n\n  $options: YoxOptions\n\n  $observer: Observer\n\n  $emitter: Emitter\n\n  $el?: HTMLElement\n\n  $template?: Function\n\n  $refs?: Record<string, YoxInterface | HTMLElement>\n\n  $model?: string\n\n  $root?: YoxInterface\n\n  $parent?: YoxInterface\n\n  $children?: YoxInterface[]\n\n  $vnode: VNode | undefined\n\n  $directives?: Record<string, DirectiveHooks>\n\n  $components?: Record<string, YoxOptions>\n\n  $transitions?: Record<string, TransitionHooks>\n\n  $partials?: Record<string, Function>\n\n  $filters?: Record<string, type.filter>\n\n  /**\n   * core 版本\n   */\n  public static version = process.env.NODE_VERSION\n\n  /**\n   * 方便外部共用的通用逻辑，特别是写插件，减少重复代码\n   */\n  public static is = is\n  public static array = array\n  public static object = object\n  public static string = string\n  public static logger = logger\n  public static Event = CustomEvent\n  public static Emitter = Emitter\n\n  /**\n   * 安装插件\n   *\n   * 插件必须暴露 install 方法\n   */\n  public static use(plugin: YoxPluginInterface): void {\n    plugin.install(Yox)\n  }\n\n  /**\n   * 因为组件采用的是异步更新机制，为了在更新之后进行一些操作，可使用 nextTick\n   */\n  public static nextTick(task: Function, context?: any): void {\n    NextTask.shared().append(task, context)\n  }\n\n  /**\n   * 编译模板，暴露出来是为了打包阶段的模板预编译\n   */\n  public static compile(template: string, stringify?: boolean): Function | string {\n    if (process.env.NODE_ENV !== 'pure') {\n      if (process.env.NODE_ENV !== 'runtime') {\n        if (!templateGenerator.hasGenerated(template)) {\n          // 未编译，常出现在开发阶段\n          if (!compileCache[template]) {\n            const nodes = templateCompiler.compile(template)\n            if (process.env.NODE_ENV === 'development') {\n              if (nodes.length !== 1) {\n                logger.fatal(`\"template\" should have just one root element.`)\n              }\n            }\n            compileCache[template] = templateGenerator.generate(nodes[0])\n          }\n          template = compileCache[template]\n          if (stringify) {\n            return template\n          }\n        }\n      }\n      return new Function(`return ${template}`)()\n    }\n    else {\n      return env.EMPTY_STRING\n    }\n  }\n\n  public static checkProp(key: string, value: any, rule: PropRule): any {\n    if (process.env.NODE_ENV !== 'pure') {\n      // 类型\n      const type = rule.type,\n\n      // 默认值\n      defaultValue = rule.value\n\n      // 传了数据\n      if (isDef(value)) {\n\n        if (process.env.NODE_ENV === 'development') {\n\n          // 如果不写 type 或 type 不是 字符串 或 数组\n          // 就当做此规则无效，和没写一样\n          if (type) {\n\n            // 自定义函数判断是否匹配类型\n            // 自己打印警告信息吧\n            if (is.func(type)) {\n              (type as type.propType)(key, value)\n            }\n            else {\n\n              let matched = env.FALSE\n\n              // type: 'string'\n              if (!string.falsy(type)) {\n                matched = matchType(value, type as string)\n              }\n              // type: ['string', 'number']\n              else if (!array.falsy(type)) {\n                array.each(\n                  type as string[],\n                  function (item: string) {\n                    if (matchType(value, item)) {\n                      matched = env.TRUE\n                      return env.FALSE\n                    }\n                  }\n                )\n              }\n\n              if (!matched) {\n                logger.warn(`The type of prop \"${key}\" expected to be \"${type}\", but is \"${value}\".`)\n              }\n\n            }\n\n          }\n          else {\n            logger.warn(`The prop \"${key}\" in propTypes has no type.`)\n          }\n        }\n\n      }\n      else {\n\n        if (process.env.NODE_ENV === 'development') {\n          // 没传值但此项是必传项\n          if (rule.required) {\n            logger.warn(`The prop \"${key}\" is marked as required, but its value is not found.`)\n          }\n        }\n\n        // 没传值但是配置了默认值\n        if (isDef(defaultValue)) {\n          value = type === env.RAW_FUNCTION\n            ? defaultValue\n            : is.func(defaultValue)\n              ? (defaultValue as type.propValue)()\n              : defaultValue\n        }\n\n      }\n    }\n\n    return value\n\n  }\n\n  public static directive(\n    name: string | Record<string, DirectiveHooks>,\n    directive?: DirectiveHooks\n  ): DirectiveHooks | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      if (is.string(name) && !directive) {\n        return getResource(globalDirectives, name as string)\n      }\n      setResource(globalDirectives, name, directive)\n    }\n  }\n\n  public static transition(\n    name: string | Record<string, TransitionHooks>,\n    transition?: TransitionHooks\n  ): TransitionHooks | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      if (is.string(name) && !transition) {\n        return getResource(globalTransitions, name as string)\n      }\n      setResource(globalTransitions, name, transition)\n    }\n  }\n\n  public static component(\n    name: string | Record<string, type.component>,\n    component?: type.component\n  ): type.component | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      if (is.string(name) && !component) {\n        return getResource(globalComponents, name as string)\n      }\n      setResource(globalComponents, name, component)\n    }\n  }\n\n  public static partial(\n    name: string | Record<string, string>,\n    partial?: string\n  ): Function | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      if (is.string(name) && !partial) {\n        return getResource(globalPartials, name as string)\n      }\n      setResource(globalPartials, name, partial, Yox.compile)\n    }\n  }\n\n  public static filter(\n    name: string | Record<string, type.filter>,\n    filter?: type.filter\n  ): type.filter | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      if (is.string(name) && !filter) {\n        return getResource(globalFilters, name as string)\n      }\n      setResource(globalFilters, name, filter)\n    }\n  }\n\n  constructor(options: YoxOptions | void) {\n\n    const instance = this, $options: YoxOptions = options || env.EMPTY_OBJECT\n\n    // 一进来就执行 before create\n    execute($options[config.HOOK_BEFORE_CREATE], instance, $options)\n    execute(Yox[config.HOOK_BEFORE_CREATE], env.UNDEFINED, $options)\n\n    instance.$options = $options\n\n    let {\n      data,\n      props,\n      computed,\n      events,\n      methods,\n      watchers,\n      extensions,\n    } = $options\n\n    // 如果传了 props，则 data 应该是个 function\n    if (process.env.NODE_ENV === 'development') {\n      if (props && is.object(data)) {\n        logger.fatal('\"data\" option should be a function.')\n      }\n    }\n\n    if (extensions) {\n      object.extend(instance, extensions)\n    }\n\n    // 数据源\n    const source = instance.checkProps(props || {})\n\n    // 先放 props\n    // 当 data 是函数时，可以通过 this.get() 获取到外部数据\n    const observer = instance.$observer = new Observer(source, instance)\n\n    if (computed) {\n      object.each(\n        computed,\n        function (options: type.getter | ComputedOptions, keypath: string) {\n          observer.addComputed(keypath, options)\n        }\n      )\n    }\n\n    // 后放 data\n    const extend = is.func(data) ? execute(data, instance, options) : data\n    if (is.object(extend)) {\n      object.each(\n        extend,\n        function (value, key) {\n          if (process.env.NODE_ENV === 'development') {\n            if (object.has(source, key)) {\n              logger.warn(`\"${key}\" is already defined as a prop. Use prop default value instead.`)\n            }\n          }\n          source[key] = value\n        }\n      )\n    }\n\n    if (methods) {\n      object.each(\n        methods,\n        function (method: Function, name: string) {\n          if (process.env.NODE_ENV === 'development') {\n            if (instance[name]) {\n              logger.fatal(`method [${name}] is conflicted with built-in methods.`)\n            }\n          }\n          instance[name] = method\n        }\n      )\n    }\n\n    // 监听各种事件\n    // 支持命名空间\n    instance.$emitter = new Emitter(env.TRUE)\n\n    if (events) {\n      instance.on(events)\n    }\n\n    if (process.env.NODE_ENV !== 'pure') {\n\n      let placeholder: Node | void = env.UNDEFINED,\n\n      {\n        el,\n        vnode,\n        root,\n        model,\n        parent,\n        replace,\n        template,\n        transitions,\n        components,\n        directives,\n        partials,\n        filters,\n        slots,\n      } = $options\n\n      if (model) {\n        instance.$model = model\n      }\n\n      // 把 slots 放进数据里，方便 get\n      if (slots) {\n        object.extend(source, slots)\n      }\n\n      // 检查 template\n      if (is.string(template)) {\n        // 传了选择器，则取对应元素的 html\n        if (selectorPattern.test(template as string)) {\n          placeholder = domApi.find(template as string)\n          if (placeholder) {\n            template = domApi.html(placeholder as Element) as string\n            placeholder = env.UNDEFINED\n          }\n          else if (process.env.NODE_ENV === 'development') {\n            logger.fatal(`\"${template}\" 选择器找不到对应的元素`)\n          }\n        }\n      }\n      else {\n        template = env.UNDEFINED\n      }\n\n      // 检查 el\n      if (el) {\n\n        if (is.string(el)) {\n          const selector = el as string\n          if (selectorPattern.test(selector)) {\n            placeholder = domApi.find(selector)\n            if (process.env.NODE_ENV === 'development') {\n              if (!placeholder) {\n                logger.fatal(`\"${selector}\" 选择器找不到对应的元素`)\n              }\n            }\n          }\n          else if (process.env.NODE_ENV === 'development') {\n            logger.fatal(`\"el\" option should be a selector.`)\n          }\n        }\n        else {\n          placeholder = el as Node\n        }\n\n        if (!replace) {\n          domApi.append(\n            placeholder as Node,\n            placeholder = domApi.createComment(env.EMPTY_STRING)\n          )\n        }\n\n      }\n\n      if (root) {\n        instance.$root = root\n      }\n      if (parent) {\n        instance.$parent = parent\n      }\n\n      setFlexibleOptions(instance, env.RAW_TRANSITION, transitions)\n      setFlexibleOptions(instance, env.RAW_COMPONENT, components)\n      setFlexibleOptions(instance, env.RAW_DIRECTIVE, directives)\n      setFlexibleOptions(instance, env.RAW_PARTIAL, partials)\n      setFlexibleOptions(instance, env.RAW_FILTER, filters)\n\n      // 当存在模板和计算属性时\n      // 因为这里把模板当做一种特殊的计算属性\n      // 因此模板这个计算属性的优先级应该最高\n      if (template) {\n\n        // 拷贝一份，避免影响外部定义的 watchers\n        const newWatchers = watchers\n          ? object.copy(watchers)\n          : {}\n\n        newWatchers[TEMPLATE_COMPUTED] = {\n          // 模板一旦变化，立即刷新\n          sync: env.TRUE,\n          watcher: function (vnode: VNode) {\n            instance.update(vnode, instance.$vnode as VNode)\n          }\n        }\n\n        // 当模板的依赖变了，则重新创建 virtual dom\n        observer.addComputed(\n          TEMPLATE_COMPUTED,\n          {\n            // 当模板依赖变化时，异步通知模板更新\n            sync: env.FALSE,\n            get: function () {\n              return instance.render()\n            }\n          }\n        )\n\n        afterCreateHook(instance, newWatchers)\n\n        // 编译模板\n        // 在开发阶段，template 是原始的 html 模板\n        // 在产品阶段，template 是编译后且经过 stringify 的字符串\n        // 当然，这个需要外部自己控制传入的 template 是什么\n        // Yox.compile 会自动判断 template 是否经过编译\n        instance.$template = Yox.compile(template) as Function\n\n        if (!vnode) {\n\n          if (process.env.NODE_ENV === 'development') {\n            if (!placeholder) {\n              logger.fatal('根组件不传 el 是几个意思？')\n            }\n          }\n\n          vnode = snabbdom.create(\n            domApi,\n            placeholder as Node,\n            instance,\n            env.EMPTY_STRING\n          )\n\n        }\n\n        instance.update(\n          instance.get(TEMPLATE_COMPUTED),\n          vnode\n        )\n\n        return\n\n      }\n      else if (process.env.NODE_ENV === 'development') {\n        if (placeholder || vnode) {\n          logger.fatal('组件不写 template 是几个意思？')\n        }\n      }\n\n    }\n\n    afterCreateHook(instance, watchers)\n\n  }\n\n  /**\n   * 添加计算属性\n   */\n  addComputed(\n    keypath: string,\n    computed: type.getter | ComputedOptions\n  ): Computed | void {\n    return this.$observer.addComputed(keypath, computed)\n  }\n\n  /**\n   * 删除计算属性\n   */\n  removeComputed(\n    keypath: string\n  ): void {\n    this.$observer.removeComputed(keypath)\n  }\n\n  /**\n   * 取值\n   */\n  get(\n    keypath: string,\n    defaultValue?: any,\n    depIgnore?: boolean\n  ): any {\n    return this.$observer.get(keypath, defaultValue, depIgnore)\n  }\n\n  /**\n   * 设值\n   */\n  set(\n    keypath: string | type.data,\n    value?: any\n  ): void {\n    // 组件经常有各种异步改值，为了避免组件销毁后依然调用 set\n    // 这里判断一下，至于其他方法的异步调用就算了，业务自己控制吧\n    const { $observer } = this\n    if ($observer) {\n      $observer.set(keypath, value)\n    }\n  }\n\n  /**\n   * 监听事件\n   */\n  on(\n    type: string | Record<string, type.listener>,\n    listener?: type.listener\n  ): YoxInterface {\n    return addEvents(this, type, listener)\n  }\n\n  /**\n   * 监听一次事件\n   */\n  once(\n    type: string | Record<string, type.listener>,\n    listener?: type.listener\n  ): YoxInterface {\n    return addEvents(this, type, listener, env.TRUE)\n  }\n\n  /**\n   * 取消监听事件\n   */\n  off(\n    type?: string,\n    listener?: type.listener\n  ): YoxInterface {\n    this.$emitter.off(type, listener)\n    return this\n  }\n\n  /**\n   * 发射事件\n   */\n  fire(\n    type: string | CustomEvent,\n    data?: type.data | boolean,\n    downward?: boolean\n  ): boolean {\n\n    // 外部为了使用方便，fire(type) 或 fire(type, data) 就行了\n    // 内部为了保持格式统一\n    // 需要转成 Event，这样还能知道 target 是哪个组件\n\n    let instance = this,\n\n    event = type instanceof CustomEvent ? type : new CustomEvent(type),\n\n    args: any[] = [event],\n\n    isComplete: boolean\n\n    // 告诉外部是谁发出的事件\n    if (!event.target) {\n      event.target = instance\n    }\n\n    // 比如 fire('name', true) 直接向下发事件\n    if (is.object(data)) {\n      array.push(args, data as type.data)\n    }\n    else if (data === env.TRUE) {\n      downward = env.TRUE\n    }\n\n    isComplete = instance.$emitter.fire(event.type, args)\n    if (isComplete) {\n      const { $parent, $children } = instance\n      if (downward) {\n        if ($children) {\n          event.phase = CustomEvent.PHASE_DOWNWARD\n          array.each(\n            $children,\n            function (child) {\n              return isComplete = child.fire(event, data, env.TRUE)\n            }\n          )\n        }\n      }\n      else if ($parent) {\n        event.phase = CustomEvent.PHASE_UPWARD\n        isComplete = $parent.fire(event, data)\n      }\n    }\n\n    return isComplete\n\n  }\n\n  /**\n   * 监听数据变化\n   */\n  watch(\n    keypath: string | Record<string, type.watcher | WatcherOptions>,\n    watcher?: type.watcher | WatcherOptions,\n    immediate?: boolean\n  ): YoxInterface {\n    this.$observer.watch(keypath, watcher, immediate)\n    return this\n  }\n\n  /**\n   * 取消监听数据变化\n   */\n  unwatch(\n    keypath?: string,\n    watcher?: type.watcher\n  ): YoxInterface {\n    this.$observer.unwatch(keypath, watcher)\n    return this\n  }\n\n  /**\n   * 加载组件，组件可以是同步或异步，最后会调用 callback\n   *\n   * @param name 组件名称\n   * @param callback 组件加载成功后的回调\n   */\n  loadComponent(name: string, callback: type.componentCallback): void {\n    if (process.env.NODE_ENV !== 'pure') {\n      if (!loadComponent(this.$components, name, callback)) {\n        const hasComponent = loadComponent(globalComponents, name, callback)\n        if (process.env.NODE_ENV === 'development') {\n          if (!hasComponent) {\n            logger.error(`Component [${name}] is not found.`)\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * 创建子组件\n   *\n   * @param options 组件配置\n   * @param vnode 虚拟节点\n   */\n  createComponent(options: YoxOptions, vnode: VNode): YoxInterface {\n    if (process.env.NODE_ENV !== 'pure') {\n\n      const instance = this\n\n      options = object.copy(options)\n      options.root = instance.$root || instance\n      options.parent = instance\n      options.vnode = vnode\n      options.replace = env.TRUE\n\n      let { props, slots } = vnode,\n\n      modelKey = options.model || env.RAW_VALUE,\n\n      modelValue = vnode.model\n\n      options.model = modelKey\n\n      if (isDef(modelValue)) {\n        if (!props) {\n          props = {}\n        }\n        props[modelKey] = modelValue\n      }\n\n      if (props) {\n        options.props = props\n      }\n\n      if (slots) {\n        options.slots = slots\n      }\n\n      const child = new Yox(options)\n\n      array.push(\n        instance.$children || (instance.$children = []),\n        child\n      )\n\n      const node = child.$el\n      if (node) {\n        vnode.node = node\n      }\n      else if (process.env.NODE_ENV === 'development') {\n        logger.fatal(`The root element of [Component ${vnode.tag}] is not found.`)\n      }\n\n      return child\n    }\n    else {\n      return this\n    }\n  }\n\n  directive(\n    name: string | Record<string, DirectiveHooks>,\n    directive?: DirectiveHooks\n  ): DirectiveHooks | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      const instance = this, { $directives } = instance\n      if (is.string(name) && !directive) {\n        return getResource($directives, name as string, Yox.directive)\n      }\n      setResource(\n        $directives || (instance.$directives = {}),\n        name,\n        directive\n      )\n    }\n  }\n\n  transition(\n    name: string | Record<string, TransitionHooks>,\n    transition?: TransitionHooks\n  ): TransitionHooks | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      const instance = this, { $transitions } = instance\n      if (is.string(name) && !transition) {\n        return getResource($transitions, name as string, Yox.transition)\n      }\n      setResource(\n        $transitions || (instance.$transitions = {}),\n        name,\n        transition\n      )\n    }\n  }\n\n  component(\n    name: string | Record<string, type.component>,\n    component?: type.component\n  ): type.component | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      const instance = this, { $components } = instance\n      if (is.string(name) && !component) {\n        return getResource($components, name as string, Yox.component)\n      }\n      setResource(\n        $components || (instance.$components = {}),\n        name,\n        component\n      )\n    }\n  }\n\n  partial(\n    name: string | Record<string, string>,\n    partial?: string\n  ): Function | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      const instance = this, { $partials } = instance\n      if (is.string(name) && !partial) {\n        return getResource($partials, name as string, Yox.partial)\n      }\n      setResource(\n        $partials || (instance.$partials = {}),\n        name,\n        partial,\n        Yox.compile\n      )\n    }\n  }\n\n  filter(\n    name: string | Record<string, type.filter>,\n    filter?: type.filter\n  ): type.filter | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      const instance = this, { $filters } = instance\n      if (is.string(name) && !filter) {\n        return getResource($filters, name as string, Yox.filter)\n      }\n      setResource(\n        $filters || (instance.$filters = {}),\n        name,\n        filter\n      )\n    }\n  }\n\n  /**\n   * 对于某些特殊场景，修改了数据，但是模板的依赖中并没有这一项\n   * 而你非常确定需要更新模板，强制刷新正是你需要的\n   */\n  forceUpdate(data?: type.data): void {\n    if (process.env.NODE_ENV !== 'pure') {\n\n      const instance = this,\n\n      { $vnode, $observer } = instance,\n\n      { computed } = $observer\n\n      if ($vnode && computed) {\n\n        const template = computed[TEMPLATE_COMPUTED],\n\n        oldValue = template.get()\n\n        if (data) {\n          instance.set(data)\n        }\n\n        // 当前可能正在进行下一轮更新\n        $observer.nextTask.run()\n\n        // 没有更新模板，强制刷新\n        if (!data && oldValue === template.get()) {\n          instance.update(\n            template.get(env.TRUE),\n            $vnode\n          )\n        }\n      }\n    }\n  }\n\n  /**\n   * 把模板抽象语法树渲染成 virtual dom\n   */\n  render() {\n    if (process.env.NODE_ENV !== 'pure') {\n      const instance = this\n      return templateRender.render(\n        instance,\n        instance.$template as Function,\n        object.merge(instance.$filters, globalFilters) as Record<string, Function>,\n        object.merge(instance.$partials, globalPartials) as Record<string, Function>,\n        object.merge(instance.$directives, globalDirectives) as Record<string, DirectiveHooks>,\n        object.merge(instance.$transitions, globalTransitions) as Record<string, TransitionHooks>\n      )\n    }\n  }\n\n  /**\n   * 更新 virtual dom\n   *\n   * @param vnode\n   * @param oldVnode\n   */\n  update(vnode: VNode, oldVnode: VNode) {\n    if (process.env.NODE_ENV !== 'pure') {\n      let instance = this,\n\n      { $vnode, $options } = instance,\n\n      afterHook: string\n\n      // 每次渲染重置 refs\n      // 在渲染过程中收集最新的 ref\n      // 这样可避免更新时，新的 ref，在前面创建，老的 ref 却在后面删除的情况\n      instance.$refs = {}\n\n      if ($vnode) {\n        execute($options[config.HOOK_BEFORE_UPDATE], instance)\n        execute(Yox[config.HOOK_BEFORE_UPDATE], env.UNDEFINED, instance)\n        snabbdom.patch(domApi, vnode, oldVnode)\n        afterHook = config.HOOK_AFTER_UPDATE\n      }\n      else {\n        execute($options[config.HOOK_BEFORE_MOUNT], instance)\n        execute(Yox[config.HOOK_BEFORE_MOUNT], env.UNDEFINED, instance)\n        snabbdom.patch(domApi, vnode, oldVnode)\n        instance.$el = vnode.node as HTMLElement\n        afterHook = config.HOOK_AFTER_MOUNT\n      }\n\n      instance.$vnode = vnode\n\n      // 跟 nextTask 保持一个节奏\n      // 这样可以预留一些优化的余地\n      Yox.nextTick(\n        function () {\n          if (instance.$vnode) {\n            execute($options[afterHook], instance)\n            execute(Yox[afterHook], env.UNDEFINED, instance)\n          }\n        }\n      )\n    }\n  }\n\n  /**\n   * 校验组件参数\n   *\n   * @param props\n   */\n  checkProps(props: type.data): type.data {\n    if (process.env.NODE_ENV !== 'pure') {\n      const { propTypes } = this.$options\n      if (propTypes) {\n        const result = object.copy(props)\n        object.each(\n          propTypes,\n          function (rule: PropRule, key: string) {\n            result[key] = Yox.checkProp(key, props[key], rule)\n          }\n        )\n        return result\n      }\n    }\n    return props\n  }\n\n  checkProp(key: string, value: any): any {\n    if (process.env.NODE_ENV !== 'pure') {\n      const { propTypes } = this.$options\n      if (propTypes) {\n        const rule = propTypes[key]\n        if (rule) {\n          value = Yox.checkProp(key, value, rule)\n        }\n      }\n    }\n    return value\n  }\n\n  /**\n   * 销毁组件\n   */\n  destroy(): void {\n\n    const instance = this,\n\n    { $parent, $options, $emitter, $observer } = instance\n\n    execute($options[config.HOOK_BEFORE_DESTROY], instance)\n    execute(Yox[config.HOOK_BEFORE_DESTROY], env.UNDEFINED, instance)\n\n    if (process.env.NODE_ENV !== 'pure') {\n\n      const { $vnode } = instance\n\n      if ($parent && $parent.$children) {\n        array.remove($parent.$children, instance)\n      }\n\n      if ($vnode) {\n        // virtual dom 通过判断 parent.$vnode 知道宿主组件是否正在销毁\n        instance.$vnode = env.UNDEFINED\n        snabbdom.destroy(domApi, $vnode, !$parent)\n      }\n\n    }\n\n    $emitter.off()\n    $observer.destroy()\n\n    execute($options[config.HOOK_AFTER_DESTROY], instance)\n    execute(Yox[config.HOOK_AFTER_DESTROY], env.UNDEFINED, instance)\n\n    object.clear(instance)\n\n  }\n\n  /**\n   * 因为组件采用的是异步更新机制，为了在更新之后进行一些操作，可使用 nextTick\n   */\n  nextTick(task: Function): void {\n    this.$observer.nextTask.append(task, this)\n  }\n\n  /**\n   * 取反 keypath 对应的数据\n   *\n   * 不管 keypath 对应的数据是什么类型，操作后都是布尔型\n   */\n  toggle(keypath: string): boolean {\n    return this.$observer.toggle(keypath)\n  }\n\n  /**\n   * 递增 keypath 对应的数据\n   *\n   * 注意，最好是整型的加法，如果涉及浮点型，不保证计算正确\n   *\n   * @param keypath 值必须能转型成数字，如果不能，则默认从 0 开始递增\n   * @param step 步进值，默认是 1\n   * @param max 可以递增到的最大值，默认不限制\n   */\n  increase(keypath: string, step?: number, max?: number): number | void {\n    return this.$observer.increase(keypath, step, max)\n  }\n\n  /**\n   * 递减 keypath 对应的数据\n   *\n   * 注意，最好是整型的减法，如果涉及浮点型，不保证计算正确\n   *\n   * @param keypath 值必须能转型成数字，如果不能，则默认从 0 开始递减\n   * @param step 步进值，默认是 1\n   * @param min 可以递减到的最小值，默认不限制\n   */\n  decrease(keypath: string, step?: number, min?: number): number | void {\n    return this.$observer.decrease(keypath, step, min)\n  }\n\n  /**\n   * 在数组指定位置插入元素\n   *\n   * @param keypath\n   * @param item\n   * @param index\n   */\n  insert(keypath: string, item: any, index: number | boolean): true | void {\n    return this.$observer.insert(keypath, item, index)\n  }\n\n  /**\n   * 在数组尾部添加元素\n   *\n   * @param keypath\n   * @param item\n   */\n  append(keypath: string, item: any): true | void {\n    return this.$observer.append(keypath, item)\n  }\n\n  /**\n   * 在数组首部添加元素\n   *\n   * @param keypath\n   * @param item\n   */\n  prepend(keypath: string, item: any): true | void {\n    return this.$observer.prepend(keypath, item)\n  }\n\n  /**\n   * 通过索引移除数组中的元素\n   *\n   * @param keypath\n   * @param index\n   */\n  removeAt(keypath: string, index: number): true | void {\n    return this.$observer.removeAt(keypath, index)\n  }\n\n  /**\n   * 直接移除数组中的元素\n   *\n   * @param keypath\n   * @param item\n   */\n  remove(keypath: string, item: any): true | void {\n    return this.$observer.remove(keypath, item)\n  }\n\n  /**\n   * 拷贝任意数据，支持深拷贝\n   *\n   * @param data\n   * @param deep\n   */\n  copy<T>(data: T, deep?: boolean): T {\n    return this.$observer.copy(data, deep)\n  }\n\n}\n\nconst toString = Object.prototype.toString\n\nfunction matchType(value: any, type: string) {\n  return type === 'numeric'\n    ? is.numeric(value)\n    : string.lower(toString.call(value)) === `[object ${type}]`\n}\n\nfunction afterCreateHook(instance: Yox, watchers: Record<string, type.watcher | WatcherOptions> | void) {\n\n  if (watchers) {\n    instance.watch(watchers)\n  }\n\n  execute(instance.$options[config.HOOK_AFTER_CREATE], instance)\n  execute(Yox[config.HOOK_AFTER_CREATE], env.UNDEFINED, instance)\n\n}\n\nfunction setFlexibleOptions(instance: Yox, key: string, value: Function | type.data | void) {\n  if (is.func(value)) {\n    instance[key](execute(value, instance))\n  }\n  else if (is.object(value)) {\n    instance[key](value)\n  }\n}\n\nfunction addEvent(instance: Yox, type: string, listener: type.listener, once?: true) {\n  const options: EmitterOptions = {\n    fn: listener,\n    ctx: instance\n  }\n  if (once) {\n    options.max = 1\n  }\n  instance.$emitter.on(type, options)\n}\n\nfunction addEvents(\n  instance: Yox,\n  type: string | Record<string, type.listener>,\n  listener?: type.listener,\n  once?: true\n): Yox {\n  if (is.string(type)) {\n    addEvent(instance, type as string, listener as type.listener, once)\n  }\n  else {\n    object.each(\n      type as type.data,\n      function (value: type.listener, key: string) {\n        addEvent(instance, key, value, once)\n      }\n    )\n  }\n  return instance\n}\n\nfunction loadComponent(data: Record<string, type.component> | void, name: string, callback: type.componentCallback): true | void {\n  if (data && data[name]) {\n    const component = data[name]\n    // 注册的是异步加载函数\n    if (is.func(component)) {\n\n      let loader = component as type.componentLoader,\n\n      queue: type.componentCallback[] = loader[LOADER_QUEUE]\n\n      if (queue) {\n        array.push(queue, callback)\n      }\n      else {\n        queue = component[LOADER_QUEUE] = [callback]\n\n        loader(\n          function (options: YoxOptions) {\n\n            loader[LOADER_QUEUE] = env.UNDEFINED\n\n            data[name] = options\n\n            array.each(\n              queue,\n              function (callback) {\n                callback(options)\n              }\n            )\n\n          }\n        )\n      }\n\n    }\n    // 不是异步加载函数，直接同步返回\n    else {\n      callback(component as YoxOptions)\n    }\n    return env.TRUE\n  }\n}\n\nfunction getResource(data: type.data | void, name: string, lookup?: Function) {\n  if (data && data[name]) {\n    return data[name]\n  }\n  else if (lookup) {\n    return lookup(name)\n  }\n}\n\nfunction setResource(data: type.data, name: string | type.data, value?: any, formatValue?: (value: any) => any) {\n  if (is.string(name)) {\n    data[name as string] = formatValue ? formatValue(value) : value\n  }\n  else {\n    object.each(\n      name as type.data,\n      function (value, key) {\n        data[key] = formatValue ? formatValue(value) : value\n      }\n    )\n  }\n}\n\nif (process.env.NODE_ENV !== 'pure') {\n  Yox['dom'] = domApi\n  // 全局注册内置指令\n  Yox.directive({ event, model, binding })\n  // 全局注册内置过滤器\n  Yox.filter({ hasSlot })\n}\n\n"],"names":["env.UNDEFINED","env.RAW_FUNCTION","env.NULL","is.func","is.array","env.TRUE","env.RAW_MINUS_ONE","env.FALSE","array","env.EMPTY_ARRAY","falsy","env.EMPTY_STRING","is.number","indexOf","has","is.string","string.startsWith","each","join","string.has","env.RAW_WILDCARD","object","array.each","is.object","keypathUtil.each","env.VALUE_HOLDER","env.RAW_UNDEFINED","env.EMPTY_FUNCTION","env.WINDOW","object.copy","array.has","array.push","object.each","string.indexOf","string.slice","nextTick","array.unshift","env.EMPTY_OBJECT","update","field.COMPONENT","remove","object.merge","field.LOADING","component.update","directive.update","field.ID","guid","object.has","field.VNODE","env.RAW_COMPONENT","nativeAttr.update","nativeProp.update","directive.remove","field.LEAVING","is.numeric","keypathUtil.join","object.get","array.last","config.DIRECTIVE_BINDING","config.DIRECTIVE_MODEL","config.DIRECTIVE_EVENT","config.DIRECTIVE_CUSTOM","array.pop","array.join","keypathUtil.separator","array.falsy","is.boolean","env.RAW_VALUE","keypathUtil.match","env.RAW_LENGTH","keypathUtil.matchFuzzy","keypathUtil.isFuzzy","object.set","string.codeAt","object.sort","array.remove","object.clear","env.DOCUMENT","config.HINT_BOOLEAN","string.lower","object.falsy","env.EVENT_MODEL","env.EVENT_INPUT","array.toArray","env.EVENT_CHANGE","env.EVENT_CLICK","env.EVENT_TAP","api","array.indexOf","directive","isFuzzy","config.SLOT_DATA_PREFIX","env.RAW_TEMPLATE","config.HOOK_BEFORE_CREATE","object.extend","extend","env.RAW_TRANSITION","env.RAW_DIRECTIVE","env.RAW_PARTIAL","env.RAW_FILTER","snabbdom.create","templateRender.render","config.HOOK_BEFORE_UPDATE","snabbdom.patch","config.HOOK_AFTER_UPDATE","config.HOOK_BEFORE_MOUNT","config.HOOK_AFTER_MOUNT","config.HOOK_BEFORE_DESTROY","snabbdom.destroy","config.HOOK_AFTER_DESTROY","string","config.HOOK_AFTER_CREATE"],"mappings":"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"}