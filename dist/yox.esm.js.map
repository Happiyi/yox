{"version":3,"file":"yox.esm.js","sources":["../node_modules/yox-common/src/util/env.ts","../node_modules/yox-common/src/function/isDef.ts","../node_modules/yox-common/src/util/is.ts","../node_modules/yox-common/src/function/execute.ts","../node_modules/yox-common/src/util/Event.ts","../node_modules/yox-common/src/util/array.ts","../node_modules/yox-common/src/util/string.ts","../node_modules/yox-common/src/function/toString.ts","../node_modules/yox-common/src/util/keypath.ts","../node_modules/yox-common/src/util/object.ts","../node_modules/yox-common/src/util/logger.ts","../node_modules/yox-common/src/util/Emitter.ts","../node_modules/yox-common/src/function/isNative.ts","../node_modules/yox-common/src/function/nextTick.ts","../node_modules/yox-common/src/util/NextTask.ts","../node_modules/yox-config/index.ts","../node_modules/yox-snabbdom/src/field.ts","../node_modules/yox-snabbdom/src/nativeAttr.ts","../node_modules/yox-snabbdom/src/nativeProp.ts","../node_modules/yox-snabbdom/src/directive.ts","../node_modules/yox-snabbdom/src/component.ts","../node_modules/yox-snabbdom/index.ts","../node_modules/yox-common/src/function/toNumber.ts","../node_modules/yox-expression-compiler/src/nodeType.ts","../node_modules/yox-expression-compiler/src/creator.ts","../node_modules/yox-expression-compiler/src/interpreter.ts","../node_modules/yox-expression-compiler/src/compiler.ts","../node_modules/yox-template-compiler/src/nodeType.ts","../node_modules/yox-template-compiler/src/helper.ts","../node_modules/yox-template-compiler/src/creator.ts","../node_modules/yox-template-compiler/src/compiler.ts","../node_modules/yox-common/src/function/isUndef.ts","../node_modules/yox-common/src/function/toJSON.ts","../node_modules/yox-template-compiler/src/stringify.ts","../node_modules/yox-expression-compiler/src/executor.ts","../node_modules/yox-template-compiler/src/renderer.ts","../node_modules/yox-observer/src/Computed.ts","../node_modules/yox-observer/src/function/matchBest.ts","../node_modules/yox-observer/src/function/readValue.ts","../node_modules/yox-observer/src/function/diffString.ts","../node_modules/yox-observer/src/function/diffArray.ts","../node_modules/yox-observer/src/function/diffObject.ts","../node_modules/yox-observer/src/function/diffRecursion.ts","../node_modules/yox-observer/src/function/diffWatcher.ts","../node_modules/yox-observer/src/function/filterWatcher.ts","../node_modules/yox-observer/src/function/formatWatcherOptions.ts","../node_modules/yox-observer/src/Observer.ts","../node_modules/yox-dom/index.ts","../node_modules/yox-common/src/function/debounce.ts","../src/config/event.ts","../src/directive/event.ts","../src/directive/model.ts","../src/directive/binding.ts","../src/filter/hasSlot.ts","../src/Yox.ts"],"sourcesContent":["/**\n * 为了压缩，定义的常量\n */\nexport const TRUE = true\nexport const FALSE = false\nexport const NULL = null\nexport const UNDEFINED = void 0\n\nexport const RAW_TRUE = 'true'\nexport const RAW_FALSE = 'false'\nexport const RAW_NULL = 'null'\nexport const RAW_UNDEFINED = 'undefined'\n\nexport const RAW_KEY = 'key'\nexport const RAW_REF = 'ref'\nexport const RAW_TAG = 'tag'\nexport const RAW_SLOT = 'slot'\nexport const RAW_NAME = 'name'\n\nexport const RAW_FILTER = 'filter'\nexport const RAW_PARTIAL = 'partial'\nexport const RAW_COMPONENT = 'component'\nexport const RAW_DIRECTIVE = 'directive'\nexport const RAW_TRANSITION = 'transition'\n\nexport const RAW_THIS = 'this'\nexport const RAW_FUNCTION = 'function'\nexport const RAW_TEMPLATE = 'template'\n\nexport const RAW_STATIC_KEYPATH = 'staticKeypath'\nexport const RAW_ABSOLUTE_KEYPATH = 'absoluteKeypath'\n\nexport const KEYPATH_PARENT = '..'\nexport const KEYPATH_CURRENT = RAW_THIS\n\n/**\n * Single instance for window in browser\n */\nexport const win = typeof window !== RAW_UNDEFINED ? window : UNDEFINED\n\n/**\n * Single instance for document in browser\n */\nexport const doc = typeof document !== RAW_UNDEFINED ? document : UNDEFINED\n\n/**\n * Single instance for noop function\n */\nexport function EMPTY_FUNCTION() {\n  /** yox */\n}\n\n/**\n * 空对象，很多地方会用到，比如 `a || plain` 确保是个对象\n */\nexport const EMPTY_OBJECT = {}\n\n/**\n * 空数组\n */\nexport const EMPTY_ARRAY = []\n\n/**\n * 空字符串\n */\nexport const EMPTY_STRING = ''","import * as env from '../util/env'\n\nexport default function (target: any): boolean {\n  return target !== env.UNDEFINED\n}\n","import * as env from './env'\n\nconst toString = Object.prototype.toString\n\n// 这个函数比较慢，所以下面都不用它，主要是给外部用\nexport function is(value: any, type: string) {\n  return type === 'numeric'\n    ? numeric(value)\n    : toString.call(value).toLowerCase() === `[object ${type}]`\n}\n\n/**\n * Check if value is a function.\n *\n * @param value\n * @return\n */\nexport function func(value: any): boolean {\n  return typeof value === env.RAW_FUNCTION\n}\n\n/**\n * Check if value is an array.\n *\n * @param value\n * @return\n */\nexport function array(value: any): boolean {\n  return Array.isArray(value)\n}\n\n/**\n * Check if value is an object.\n *\n * @param value\n * @return\n */\nexport function object(value: any): boolean {\n  // 低版本 IE 会把 null 和 undefined 当作 object\n  return value !== env.NULL && typeof value === 'object'\n}\n\n/**\n * Check if value is a string.\n *\n * @param value\n * @return\n */\nexport function string(value: any): boolean {\n  return typeof value === 'string'\n}\n\n/**\n * Check if value is a number.\n *\n * @param value\n * @return\n */\nexport function number(value: any): boolean {\n  return typeof value === 'number'\n}\n\n/**\n * Check if value is boolean.\n *\n * @param value\n * @return\n */\nexport function boolean(value: any): boolean {\n  return typeof value === 'boolean'\n}\n\n/**\n * Check if value is numeric.\n *\n * @param value\n * @return\n */\nexport function numeric(value: any): boolean {\n  return number(value)\n    || (string(value) && !isNaN(parseFloat(value)) && isFinite(value))\n}\n","import isDef from './isDef'\nimport * as is from '../util/is'\n\n/**\n * 任性地执行一个函数，不管它有没有、是不是\n *\n * @param fn 调用的函数\n * @param context 执行函数时的 this 指向\n * @param args 调用函数的参数，多参数时传入数组\n * @return 调用函数的返回值\n */\nexport default function (fn: any, context?: any, args?: any): any {\n  if (is.func(fn)) {\n    return is.array(args)\n      ? fn.apply(context, args)\n      : isDef(context)\n        ? fn.call(context, args)\n        : isDef(args)\n          ? fn(args)\n          : fn()\n  }\n}\n","import CustomEventInterface from 'yox-type/src/Event'\n\nimport * as env from './env'\n\nexport default class CustomEvent implements CustomEventInterface {\n\n  // 事件名称\n  type: string\n\n  // 谁发出的事件\n  target?: any\n\n  // 原始事件，比如 dom 事件\n  originalEvent?: CustomEventInterface | Event\n\n  // 是否已阻止事件的默认行为\n  isPrevented?: boolean\n\n  // 事件是否已停止冒泡\n  isStoped?: boolean\n\n  // 处理当前事件的监听器\n  listener?: Function\n\n  /**\n   * 构造函数\n   *\n   * 可以传事件名称，也可以传原生事件对象\n   */\n  constructor(type: string, originalEvent?: CustomEventInterface | Event) {\n    this.type = type\n    this.originalEvent = originalEvent\n  }\n\n  /**\n   * 阻止事件的默认行为\n   */\n  preventDefault(): CustomEventInterface {\n    const instance = this\n    if (!instance.isPrevented) {\n      const { originalEvent } = instance\n      if (originalEvent) {\n        originalEvent.preventDefault()\n      }\n      instance.isPrevented = env.TRUE\n    }\n    return instance\n  }\n\n  /**\n   * 停止事件广播\n   */\n  stopPropagation(): CustomEventInterface {\n    const instance = this\n    if (!instance.isStoped) {\n      const { originalEvent } = instance\n      if (originalEvent) {\n        originalEvent.stopPropagation()\n      }\n      instance.isStoped = env.TRUE\n    }\n    return instance\n  }\n\n  prevent(): CustomEventInterface {\n    return this.preventDefault()\n  }\n\n  stop(): CustomEventInterface {\n    return this.stopPropagation()\n  }\n\n}\n","import * as is from './is'\nimport * as env from './env'\nimport execute from '../function/execute'\n\n/**\n * 遍历数组\n *\n * @param array\n * @param callback 返回 false 可停止遍历\n * @param reversed 是否逆序遍历\n */\nexport function each(array: any[], callback: (item: any, index: number, array: any[]) => boolean | void, reversed?: boolean) {\n  const { length } = array\n  if (length) {\n    if (reversed) {\n      for (let i = length - 1; i >= 0; i--) {\n        if (callback(array[i], i, array) === env.FALSE) {\n          break\n        }\n      }\n    }\n    else {\n      for (let i = 0; i < length; i++) {\n        if (callback(array[i], i, array) === env.FALSE) {\n          break\n        }\n      }\n    }\n  }\n}\n\n/**\n * 把数组合并成字符串\n *\n * @param array\n * @param separator\n * @return\n */\nexport function join(array: string[], separator: string): string {\n  return array.join(separator)\n}\n\nfunction nativePush(array: any[], item: any) {\n  array[array.length] = item\n}\n\nfunction nativeUnshift(array: any[], item: any) {\n  array.unshift(item)\n}\n\n/**\n * 添加\n *\n * @param array\n * @param value\n * @param action\n */\nfunction addItem(array: any[], value: any, action: Function) {\n  if (is.array(value)) {\n    each(\n      value,\n      function (item: any) {\n        action(array, item)\n      }\n    )\n  }\n  else {\n    action(array, value)\n  }\n}\n\n/**\n * 往后加\n *\n * @param array\n * @param target\n */\nexport function push(array: any[], target: any) {\n  addItem(array, target, nativePush)\n}\n\n/**\n * 往前加\n *\n * @param array\n * @param target\n */\nexport function unshift(array: any[], target: any) {\n  addItem(array, target, nativeUnshift)\n}\n\n/**\n * 把类数组转成数组\n *\n * @param array 类数组\n * @return\n */\nexport function toArray(array: Array<any> | ArrayLike<any>): Array<any> {\n  return is.array(array)\n    ? array\n    : execute([].slice, array)\n}\n\n/**\n * 把数组转成对象\n *\n * @param array 数组\n * @param key 数组项包含的字段名称，如果数组项是基本类型，可不传\n * @param value\n * @return\n */\nexport function toObject(array: any[], key?: string | null, value?: any) {\n  let result = {}\n  each(\n    array,\n    function (item: any) {\n      result[key ? item[key] : item] = value || item\n    }\n  )\n  return result\n}\n\n/**\n * 数组项在数组中的位置\n *\n * @param array 数组\n * @param target 数组项\n * @param strict 是否全等判断，默认是全等\n * @return 如果未找到，返回 -1\n */\nexport function indexOf(array: any[], target: any, strict?: boolean): number {\n  let result = -1\n  each(\n    array,\n    function (item: any, index: number) {\n      if (strict === env.FALSE ? item == target : item === target) {\n        result = index\n        return env.FALSE\n      }\n    }\n  )\n  return result\n}\n\n/**\n * 数组是否包含 item\n *\n * @param array 数组\n * @param target 可能包含的数组项\n * @param strict 是否全等判断，默认是全等\n * @return\n */\nexport function has(array: any[], target: any, strict?: boolean): boolean {\n  return indexOf(array, target, strict) >= 0\n}\n\n/**\n * 获取数组最后一项\n *\n * @param array 数组\n * @return\n */\nexport function last(array: any[]): any {\n  const { length } = array\n  if (length > 0) {\n    return array[length - 1]\n  }\n}\n\n/**\n * 弹出数组最后一项\n *\n * 项目里用的太多，仅用于节省字符...\n *\n * @param array 数组\n * @return 弹出的数组项\n */\nexport function pop(array: any[]): any {\n  return array.pop()\n}\n\n/**\n * 删除数组项\n *\n * @param array 数组\n * @param item 待删除项\n * @param strict 是否全等判断，默认是全等\n * @return 删除的数量\n */\nexport function remove(array: any[], target: any, strict?: boolean): number {\n  let result = 0\n  each(\n    array,\n    function (item: any, index: number) {\n      if (strict === env.FALSE ? item == target : item === target) {\n        array.splice(index, 1)\n        result++\n      }\n    },\n    env.TRUE\n  )\n  return result\n}\n\n/**\n * 用于判断长度大于 0 的数组\n *\n * @param array\n * @return\n */\nexport function falsy(array: any): boolean {\n  return !is.array(array) || !array.length\n}\n","import * as is from './is'\nimport * as env from './env'\n\nimport isDef from '../function/isDef'\n\nconst camelizePattern = /-([a-z])/gi,\n\nhyphenatePattern = /\\B([A-Z])/g,\n\ncamelizeCache: Record<string, string> = {},\n\nhyphenateCache: Record<string, string> = {}\n\n/**\n * 连字符转成驼峰\n *\n * @param str\n * @return 驼峰格式的字符串\n */\nexport function camelize(str: string): string {\n  if (!camelizeCache[str]) {\n    camelizeCache[str] = str.replace(\n      camelizePattern,\n      function ($0, $1) {\n        return $1.toUpperCase()\n      }\n    )\n  }\n  return camelizeCache[str]\n}\n\n/**\n * 驼峰转成连字符\n *\n * @param str\n * @return 连字符格式的字符串\n */\nexport function hyphenate(str: string): string {\n  if (!hyphenateCache[str]) {\n    hyphenateCache[str] = str.replace(\n      hyphenatePattern,\n      function ($0, $1) {\n        return '-' + $1.toLowerCase()\n      }\n    )\n  }\n  return hyphenateCache[str]\n}\n\n/**\n * 清除两侧空白符\n *\n * @param str\n * @return 清除两侧空白符的字符串\n */\nexport function trim(str: any): string {\n  return falsy(str)\n    ? env.EMPTY_STRING\n    : str.trim()\n}\n\n/**\n * 截取字符串\n *\n * @param str\n * @param start\n * @param end\n * @return\n */\nexport function slice(str: string, start: number, end?: number) {\n  return is.number(end)\n    ? start === end\n      ? env.EMPTY_STRING\n      : str.slice(start, end)\n    : str.slice(start)\n}\n\n/**\n * 获取子串的起始位置\n *\n * @param str\n * @param part\n * @param start\n * @return\n */\nexport function indexOf(str: string, part: string, start?: number): number {\n  return str.indexOf(part, isDef(start) ? start : 0)\n}\n\n/**\n * 获取子串的起始位置\n *\n * @param str\n * @param part\n * @param end\n * @return\n */\nexport function lastIndexOf(str: string, part: string, end?: number): number {\n  return str.lastIndexOf(part, isDef(end) ? end : str.length)\n}\n\n/**\n * str 是否包含 part\n *\n * @param str\n * @param part\n * @return 是否包含\n */\nexport function has(str: string, part: string): boolean {\n  return indexOf(str, part) >= 0\n}\n\n/**\n * str 是否以 part 开头\n *\n * @param str\n * @param part\n * @return\n */\nexport function startsWith(str: string, part: string): boolean {\n  return indexOf(str, part) === 0\n}\n\n/**\n * str 是否以 part 结束\n *\n * @param str\n * @param part\n * @return\n */\nexport function endsWith(str: string, part: string): boolean {\n  const offset = str.length - part.length\n  return offset >= 0 && lastIndexOf(str, part) === offset\n}\n\n/**\n * 获取某个位置的字符\n */\nexport function charAt(str: string, index?: number): string {\n  return str.charAt(index || 0)\n}\n\n/**\n * 获取某个位置的字符编码\n */\nexport function codeAt(str: string, index?: number): number {\n  return str.charCodeAt(index || 0)\n}\n\n/**\n * 判断长度大于 0 的字符串\n *\n * @param str\n * @return\n */\nexport function falsy(str: any): boolean {\n  return !is.string(str) || !str.length\n}\n","import * as env from '../util/env'\n\nexport default function (target: any, defaultValue = env.EMPTY_STRING): string {\n  return target != env.NULL && target.toString\n    ? target.toString()\n    : defaultValue\n}\n","import * as is from './is'\nimport * as env from './env'\nimport * as string from './string'\nimport toString from '../function/toString'\n\nconst SEPARATOR = '.', patternCache = {}\n\n/**\n * 判断 keypath 是否以 prefix 开头，如果是，返回匹配上的前缀长度，否则返回 -1\n *\n * @param keypath\n * @param prefix\n * @return\n */\nexport function match(keypath: string, prefix: string): number {\n  if (keypath === prefix) {\n    return prefix.length\n  }\n  prefix += SEPARATOR\n  return string.startsWith(keypath, prefix)\n    ? prefix.length\n    : -1\n}\n\n/**\n * 遍历 keypath 的每个部分\n *\n * @param keypath\n * @param callback 返回 false 可中断遍历\n */\nexport function each(keypath: any, callback: (key: string | number, isLast: boolean) => boolean | void) {\n  if (string.falsy(keypath)) {\n    callback(\n      keypath,\n      env.TRUE\n    )\n  }\n  else {\n    let startIndex = 0, endIndex = 0\n    while (env.TRUE) {\n      endIndex = string.indexOf(keypath, SEPARATOR, startIndex)\n      if (endIndex > 0) {\n        if (\n          callback(\n            string.slice(keypath, startIndex, endIndex),\n            env.FALSE\n          ) === env.FALSE\n        ) {\n          break\n        }\n        startIndex = endIndex + 1\n      }\n      else {\n        callback(\n          string.slice(keypath, startIndex),\n          env.TRUE\n        )\n        break\n      }\n    }\n  }\n}\n\n\nfunction formatKeypath(keypath: any): string {\n  return is.string(keypath)\n    ? keypath\n    : is.number(keypath)\n      ? toString(keypath)\n      : env.EMPTY_STRING\n}\n\n/**\n * 遍历 keypath 的每个部分\n *\n * @param keypath1\n * @param keypath2\n */\nexport function join(keypath1: any, keypath2: any): string {\n\n  keypath1 = formatKeypath(keypath1)\n  keypath2 = formatKeypath(keypath2)\n\n  return keypath1 === env.EMPTY_STRING\n    ? keypath2\n    : keypath2 !== env.EMPTY_STRING\n      ? keypath1 + SEPARATOR + keypath2\n      : keypath1\n\n}\n\n/**\n * 是否模糊匹配\n *\n * @param keypath\n */\nexport function isFuzzy(keypath: string): boolean {\n  return string.has(keypath, '*')\n}\n\n/**\n * 模糊匹配 keypath\n *\n * @param keypath\n * @param pattern\n */\nexport function matchFuzzy(keypath: string, pattern: string): string | void {\n  let cache = patternCache[pattern]\n  if (!cache) {\n    cache = pattern\n      .replace(/\\./g, '\\\\.')\n      .replace(/\\*\\*/g, '([\\.\\\\w]+?)')\n      .replace(/\\*/g, '(\\\\w+)')\n    cache = patternCache[pattern] = new RegExp(`^${cache}$`)\n  }\n  const result = keypath.match(cache)\n  if (result) {\n    return result[1]\n  }\n}","import * as is from './is'\nimport * as env from './env'\nimport * as array from './array'\nimport * as keypathUtil from './keypath'\n\nimport isDef from 'yox-common/src/function/isDef'\n\n/**\n * 获取对象的 key 的数组\n *\n * @param object\n * @return\n */\nexport function keys(object: Object): string[] {\n  return Object.keys(object)\n}\n\n/**\n * 是否是空对象\n *\n * @param object\n * @return\n */\nexport function falsy(object: any): boolean {\n  return !is.object(object)\n    || is.array(object)\n    || !keys(object).length\n}\n\nfunction sortKeyByAsc(a: string, b: string): number {\n  return a.length - b.length\n}\n\nfunction sortKeyByDesc(a: string, b: string): number {\n  return b.length - a.length\n}\n\n/**\n * 排序对象的 key\n *\n * @param object\n * @param desc 是否逆序，默认从小到大排序\n * @return\n */\nexport function sort(object: Object, desc?: boolean): string[] {\n  return keys(object).sort(\n    desc ? sortKeyByDesc : sortKeyByAsc\n  )\n}\n\n/**\n * 遍历对象\n *\n * @param object\n * @param callback 返回 false 可停止遍历\n */\nexport function each(object: Object, callback: (value: any, key: string) => boolean | void) {\n  for (let key in object) {\n    if (callback(object[key], key) === env.FALSE) {\n      break\n    }\n  }\n}\n\n/**\n * 对象是否包含某个 key\n *\n * @param object\n * @param key\n * @return\n */\nexport function has(object: Object, key: string | number): boolean {\n  // 优先不要用 hasOwnProperty，性能差\n  return isDef(object[key])\n    // 没辙，那就用吧\n    || object.hasOwnProperty(key)\n}\n\n/**\n * 清空对象所有的键值对\n *\n * @param object\n */\nexport function clear(object: Object): void {\n  each(\n    object,\n    function (_, key) {\n      delete object[key]\n    }\n  )\n}\n\n/**\n * 扩展对象\n *\n * @return\n */\nexport function extend(original: Object, ...objects: Object[]): Object {\n  array.each(\n    objects,\n    function (object) {\n      each(\n        object,\n        function (value, key) {\n          original[key] = value\n        }\n      )\n    }\n  )\n  return original\n}\n\n/**\n * 拷贝对象\n *\n * @param object\n * @param deep 是否需要深拷贝\n * @return\n */\nexport function copy(object: any, deep?: boolean): any {\n  let result = object\n  if (is.array(object)) {\n    if (deep) {\n      result = []\n      array.each(\n        object,\n        function (item, index) {\n          result[index] = copy(item, deep)\n        }\n      )\n    }\n    else {\n      result = object.slice()\n    }\n  }\n  else if (is.object(object)) {\n    result = {}\n    each(\n      object,\n      function (value, key) {\n        result[key] = deep ? copy(value, deep) : value\n      }\n    )\n  }\n  return result\n}\n\n/**\n * 辅助 get 函数，持有最后找到的值，避免频繁的创建临时对象\n */\nconst valueHolder: Record<string, any> = {}\n\n/**\n * 从对象中查找一个 keypath\n *\n * 返回值是空时，表示没找到值\n *\n * @param object\n * @param keypath\n * @return\n */\nexport function get(object: any, keypath: string | number): any {\n\n  /**\n   * 考虑以下情况:\n   *\n   * {\n   *   'a.b.c.d': 1,\n   *   'a.b.c': {\n   *      d: 2\n   *   }\n   * }\n   *\n   * 此时 keypath 是 `a.b.c.d`，可以获取到 1\n   * 如果没有这个 key，按 keypath 推进是取不到值的，因为没有 a.b.c 对象\n   * 个人觉得没有必要支持字面量，情况实在太多，会把这个函数搞的性能很差\n   */\n\n  keypathUtil.each(\n    keypath,\n    function (key, isLast) {\n\n      if (object != env.NULL) {\n\n        // 这里主要目的是提升性能\n        // 因此不再调用 has 方法了\n\n        // 先直接取值\n        let value = object[key],\n\n        // 紧接着判断值是否存在\n        // 下面会处理计算属性的值，不能在它后面设置 hasValue\n        hasValue = isDef(value) || object.hasOwnProperty(key)\n\n        // 如果是计算属性，取计算属性的值\n        if (value && is.func(value.get)) {\n          value = value.get()\n        }\n\n        if (isLast) {\n          if (hasValue) {\n            valueHolder.value = value\n            object = valueHolder\n          }\n          else {\n            object = env.UNDEFINED\n          }\n        }\n        else {\n          object = value\n        }\n      }\n      else {\n        object = env.UNDEFINED\n        return env.FALSE\n      }\n\n    }\n  )\n\n  return object\n\n}\n\n/**\n * 为对象设置一个键值对\n *\n * @param object\n * @param keypath\n * @param value\n * @param autofill 是否自动填充不存在的对象，默认自动填充\n */\nexport function set(object: Object, keypath: string | number, value: any, autofill?: boolean) {\n  keypathUtil.each(\n    keypath,\n    function (key, isLast) {\n      if (isLast) {\n        object[key] = value\n      }\n      else if (object[key]) {\n        object = object[key]\n      }\n      else if (autofill) {\n        object = object[key] = {}\n      }\n      else {\n        return env.FALSE\n      }\n    }\n  )\n}\n","import * as is from './is'\nimport * as env from './env'\nimport toString from '../function/toString'\n\n/**\n * 是否有原生的日志特性，没有必要单独实现\n */\nconst nativeConsole: Console | null = typeof console !== env.RAW_UNDEFINED ? console : env.NULL,\n\n/**\n * 当前是否是源码调试，如果开启了代码压缩，empty function 里的注释会被干掉\n */\nuseSource = /yox/.test(toString(env.EMPTY_FUNCTION))\n\n/**\n * 全局调试开关\n *\n * 比如开发环境，开了 debug 模式，但是有时候觉得看着一堆日志特烦，想强制关掉\n * 比如线上环境，关了 debug 模式，为了调试，想强制打开\n */\nfunction isDebug() {\n  if (env.win) {\n    let debug = env.win['DEBUG']\n    if (is.boolean(debug)) {\n      return debug\n    }\n  }\n  return useSource\n}\n\n/**\n * 打印普通日志\n *\n * @param msg\n */\nexport function log(msg: string) {\n  if (nativeConsole && isDebug()) {\n    nativeConsole.log(`[Yox log]: ${msg}`)\n  }\n}\n\n/**\n * 打印警告日志\n *\n * @param msg\n */\nexport function warn(msg: string) {\n  if (nativeConsole && isDebug()) {\n    nativeConsole.warn(`[Yox warn]: ${msg}`)\n  }\n}\n\n/**\n * 打印错误日志\n *\n * @param msg\n */\nexport function error(msg: string) {\n  if (nativeConsole) {\n    nativeConsole.error(`[Yox error]: ${msg}`)\n  }\n}\n\n/**\n * 致命错误，中断程序\n *\n * @param msg\n */\nexport function fatal(msg: string): never {\n  throw new Error(`[Yox fatal]: ${msg}`)\n}\n","import execute from '../function/execute'\n\nimport * as is from './is'\nimport * as env from './env'\nimport * as array from './array'\nimport * as object from './object'\nimport * as string from './string'\nimport * as logger from './logger'\n\nimport * as type from 'yox-type/index'\nimport EmitterOptions from 'yox-type/src/options/Emitter'\nimport CustomEvent from './Event'\n\ninterface Namespace {\n  name: string\n  ns: string\n}\n\nexport default class Emitter {\n\n  /**\n   * 是否开启命名空间\n   *\n   * 命名空间格式为  name.namespace\n   *\n   * 典型的场景是在一个组件创建时绑定全局事件，销毁时解绑事件，如下\n   *\n   * create:\n   *\n   *    component.on('a.namespace', listener)\n   *    component.on('b.namespace', listener)\n   *\n   * destroy:\n   *\n   *    component.off('.namespace') // 无需依次解绑，费时费力\n   *\n   * a.namespace 会响应全局 a 事件，原因正如上面这个例子，否则无法实现快捷解绑\n   * a 不会响应 a.namespace 事件，因为命名空间不匹配\n   */\n  ns: boolean\n\n  /**\n   * 已注册的事件监听\n   */\n  listeners: Record<string, Record<string, any>[]>\n\n  /**\n   * 原生事件监听，一个事件对应一个 listener\n   */\n  nativeListeners?: Record<string, (event: Event) => void>\n\n  constructor(ns?: boolean) {\n    this.ns = ns || env.FALSE\n    this.listeners = {}\n  }\n\n  /**\n   * 发射事件\n   *\n   * @param bullet 事件或事件名称\n   * @param data 事件数据\n   */\n  fire(bullet: string | CustomEvent, data: type.eventData | any[] | void, filter?: (options: EmitterOptions, data: type.eventData | any[] | void) => boolean | void) {\n\n    let event: CustomEvent | void, type: string, args: any\n\n    if (bullet instanceof CustomEvent) {\n      event = bullet\n      type = bullet.type\n      args = is.object(data) ? [event, data] : event\n    }\n    else {\n      type = bullet\n      if (data) {\n        args = data\n      }\n    }\n\n    let instance = this,\n\n    { name, ns } = parseNamespace(instance.ns, type),\n\n    list = instance.listeners[name],\n\n    isComplete = env.TRUE\n\n    if (list) {\n\n      array.each(\n        object.copy(list),\n        function (options: EmitterOptions, _: number, list: EmitterOptions[]) {\n\n          // 传了 filter，则用 filter 测试是否继续往下执行\n          if ((filter ? !filter(options, data) : !matchNamespace(ns, options))\n            // 在 fire 过程中被移除了\n            || !array.has(list, options)\n          ) {\n            return\n          }\n\n          // 为 event 对象加上当前正在处理的 listener\n          // 这样方便业务层移除事件绑定\n          // 比如 on('xx', function) 这样定义了匿名 listener\n          // 在这个 listener 里面获取不到当前 listener 的引用\n          // 为了能引用到，有时候会先定义 var listener = function,\n          // 然后再 on('xx', listener) 这样其实是没有必要的\n          if (event) {\n            event.listener = options.fn\n          }\n\n          let result = execute(options.fn, options.ctx, args)\n\n          // 执行次数\n          options.num = options.num ? (options.num + 1) : 1\n\n          // 注册的 listener 可以指定最大执行次数\n          if (options.num === options.max) {\n            instance.off(type, options)\n          }\n\n          // 如果没有返回 false，而是调用了 event.stop 也算是返回 false\n          if (event) {\n            if (result === env.FALSE) {\n              event.prevent().stop()\n            }\n            else if (event.isStoped) {\n              result = env.FALSE\n            }\n          }\n\n          if (result === env.FALSE) {\n            return isComplete = env.FALSE\n          }\n        }\n      )\n\n    }\n\n    return isComplete\n\n  }\n\n  /**\n   * 是否已监听某个事件\n   *\n   * @param type\n   * @param listener\n   */\n  has(type: string, listener?: Function | EmitterOptions): boolean {\n\n    let instance = this,\n\n    listeners = instance.listeners,\n\n    { name, ns } = parseNamespace(instance.ns, type),\n\n    result = env.TRUE,\n\n    matchListener = createMatchListener(listener),\n\n    each = function (list: Object[]) {\n      array.each(\n        list,\n        function (options: EmitterOptions) {\n          if (matchListener(options) && matchNamespace(ns, options)) {\n            return result = env.FALSE\n          }\n        }\n      )\n      return result\n    }\n\n    if (name) {\n      if (listeners[name]) {\n        each(listeners[name])\n      }\n    }\n    else if (ns) {\n      object.each(listeners, each)\n    }\n\n    return !result\n\n  }\n\n  /**\n   * 注册监听\n   *\n   * @param type\n   * @param listener\n   * @param data\n   */\n  on(type: string | Record<string, Function | EmitterOptions>, listener?: Function | EmitterOptions, data?: EmitterOptions) {\n\n    const instance = this,\n\n    listeners = instance.listeners,\n\n    addListener = function (item: Function | EmitterOptions | void, type: string) {\n      if (item) {\n        const options: EmitterOptions = is.func(item) ? { fn: item as Function } : item as EmitterOptions\n        if (is.object(options) && is.func(options.fn)) {\n          if (data) {\n            object.extend(options, data)\n          }\n          const { name, ns } = parseNamespace(instance.ns, type)\n          options.ns = ns\n          array.push(\n            listeners[name] || (listeners[name] = []),\n            options\n          )\n          return\n        }\n      }\n      if (process.env.NODE_ENV === 'dev') {\n        logger.fatal(`注册 ${type} 事件失败`)\n      }\n    }\n\n    if (is.string(type)) {\n      addListener(listener, type as string)\n    }\n    else {\n      object.each(type, addListener)\n    }\n\n  }\n\n  /**\n   * 取消监听\n   *\n   * @param type\n   * @param listener\n   */\n  off(type?: string, listener?: Function | EmitterOptions) {\n\n    const instance = this,\n\n    listeners = instance.listeners\n\n    if (type) {\n\n      const { name, ns } = parseNamespace(instance.ns, type),\n\n      matchListener = createMatchListener(listener),\n\n      each = function (list: Object[], name: string) {\n        array.each(\n          list,\n          function (options: EmitterOptions, index: number, array: any[]) {\n            if (matchListener(options) && matchNamespace(ns, options)) {\n              array.splice(index, 1)\n            }\n          },\n          env.TRUE\n        )\n        if (!list.length) {\n          delete listeners[name]\n        }\n      }\n\n      if (name) {\n        if (listeners[name]) {\n          each(listeners[name], name)\n        }\n      }\n      else if (ns) {\n        object.each(listeners, each)\n      }\n\n    }\n    else {\n      // 清空\n      instance.listeners = {}\n      // 在开发阶段进行警告，比如传了 type 进来，type 是个空值\n      // 但你不知道它是空值\n      if (process.env.NODE_ENV === 'dev') {\n        if (arguments.length > 0) {\n          logger.warn(`绑定的事件已被全部移除`)\n        }\n      }\n    }\n\n  }\n\n}\n\n/**\n * 把事件类型解析成命名空间格式\n *\n * @param ns\n * @param type\n */\nfunction parseNamespace(ns: boolean, type: string): Namespace {\n\n  const result = {\n    name: type,\n    ns: env.EMPTY_STRING,\n  }\n\n  if (ns) {\n    const index = string.indexOf(type, '.')\n    if (index >= 0) {\n      result.name = string.slice(type, 0, index)\n      result.ns = string.slice(type, index + 1)\n    }\n  }\n\n  return result\n\n}\n\n/**\n * 外部会传入 Function 或 EmitterOptions 或 空\n *\n * 这里根据传入值的不同类型，创建不同的判断函数\n *\n * 如果传入的是 EmitterOptions，则全等判断\n *\n * 如果传入的是 Function，则判断函数是否全等\n *\n * 如果传入的是空，则直接返回 true\n *\n * @param listener\n */\nfunction createMatchListener(listener: Function | EmitterOptions | void): (options: EmitterOptions) => boolean {\n  return is.object(listener)\n    ? function (options: EmitterOptions) {\n        return listener === options\n      }\n    : is.func(listener)\n      ? function (options: EmitterOptions) {\n          return listener === options.fn\n        }\n      : function (options: EmitterOptions) {\n          return env.TRUE\n        }\n}\n\n/**\n * 判断 options 是否能匹配命名空间\n *\n * 如果 options 未指定命名空间，或 options.ns 和 namespace 一致，返回 true\n *\n * @param namespace\n * @param options\n */\nfunction matchNamespace(namespace: string, options: EmitterOptions): boolean {\n  return !namespace.length || namespace === options.ns\n}","import * as is from '../util/is'\nimport toString from './toString'\n\nexport default function (target: any): boolean {\n  return is.func(target) && /native code/.test(toString(target))\n}","import * as env from '../util/env'\nimport isNative from './isNative'\n\ndeclare const setImmediate: Function\n\nlet nextTick: Function\n\n// IE (10+) 和 node\nif (typeof setImmediate === env.RAW_FUNCTION && isNative(setImmediate)) {\n  nextTick = setImmediate\n}\n// 用 MessageChannel 去做 setImmediate 的 polyfill\n// 原理是将新的 message 事件加入到原有的 dom events 之后\n// 兼容性 IE10+ 和其他标准浏览器\nif (typeof MessageChannel === env.RAW_FUNCTION && isNative(MessageChannel)) {\n  nextTick = function (fn: any) {\n    let channel = new MessageChannel()\n    channel.port1.onmessage = fn\n    channel.port2.postMessage(1)\n  }\n}\nelse {\n  nextTick = setTimeout\n}\n\nexport default nextTick\n","import * as array from './array'\nimport execute from '../function/execute'\nimport nextTick from '../function/nextTick'\n\nlet shared: NextTask | void\n\nexport default class NextTask {\n\n  /**\n   * 全局单例\n   */\n  public static shared(): NextTask {\n    if (!shared) {\n      shared = new NextTask()\n    }\n    return shared\n  }\n\n  /**\n   * 异步队列\n   */\n  nextTasks: Function[]\n\n  constructor() {\n    this.nextTasks = []\n  }\n\n  /**\n   * 在队尾添加异步任务\n   */\n  append(task: Function) {\n    array.push(this.nextTasks, task)\n    this.start()\n  }\n\n  /**\n   * 在队首添加异步任务\n   */\n  prepend(task: Function) {\n    array.unshift(this.nextTasks, task)\n    this.start()\n  }\n\n  /**\n   * 启动下一轮任务\n   */\n  start() {\n    const instance = this\n    if (instance.nextTasks.length === 1) {\n      nextTick(\n        function () {\n          instance.run()\n        }\n      )\n    }\n  }\n\n  /**\n   * 清空异步队列\n   */\n  clear() {\n    this.nextTasks.length = 0\n  }\n\n  /**\n   * 立即执行异步任务，并清空队列\n   */\n  run() {\n    const { nextTasks } = this\n    if (nextTasks.length) {\n      this.nextTasks = []\n      array.each(\n        nextTasks,\n        execute\n      )\n    }\n  }\n\n}\n","export const SYNTAX_IF = '#if'\nexport const SYNTAX_ELSE = 'else'\nexport const SYNTAX_ELSE_IF = 'else if'\nexport const SYNTAX_EACH = '#each'\nexport const SYNTAX_PARTIAL = '#partial'\nexport const SYNTAX_IMPORT = '>'\nexport const SYNTAX_SPREAD = '...'\nexport const SYNTAX_COMMENT = /^!\\s/\n\nexport const SLOT_DATA_PREFIX = '$slot_'\n\nexport const HINT_STRING = 1\nexport const HINT_NUMBER = 2\nexport const HINT_BOOLEAN = 3\n\nexport const DIRECTIVE_ON = 'on'\nexport const DIRECTIVE_LAZY = 'lazy'\nexport const DIRECTIVE_MODEL = 'model'\nexport const DIRECTIVE_EVENT = 'event'\nexport const DIRECTIVE_BINDING = 'binding'\nexport const DIRECTIVE_CUSTOM = 'o'\n\nexport const HOOK_BEFORE_CREATE = 'beforeCreate'\nexport const HOOK_AFTER_CREATE = 'afterCreate'\nexport const HOOK_BEFORE_MOUNT = 'beforeMount'\nexport const HOOK_AFTER_MOUNT = 'afterMount'\nexport const HOOK_BEFORE_UPDATE = 'beforeUpdate'\nexport const HOOK_AFTER_UPDATE = 'afterUpdate'\nexport const HOOK_BEFORE_DESTROY = 'beforeDestroy'\nexport const HOOK_AFTER_DESTROY = 'afterDestroy'\n","// vnode.data 内部使用的几个字段\n\nexport const ID = '$id'\n\nexport const VNODE = '$vnode'\n\nexport const LOADING = '$loading'\n\nexport const COMPONENT = '$component'\n\nexport const LEAVING = '$leaving'","import * as env from 'yox-common/src/util/env'\nimport * as object from 'yox-common/src/util/object'\n\nimport VNode from 'yox-type/src/vnode/VNode'\nimport Attribute from 'yox-type/src/vnode/Attribute'\n\nexport function update(api: any, vnode: VNode, oldVnode?: VNode) {\n\n  const { node, nativeAttrs } = vnode,\n\n  oldNativeAttrs = oldVnode && oldVnode.nativeAttrs\n\n  if (nativeAttrs || oldNativeAttrs) {\n\n    const newValue = nativeAttrs || env.EMPTY_OBJECT,\n\n    oldValue = oldNativeAttrs || env.EMPTY_OBJECT\n\n    object.each(\n      newValue,\n      function (attr: Attribute, name: string) {\n        if (!oldValue[name]\n          || attr.value !== oldValue[name].value\n        ) {\n          api.attr(node, name, attr.value)\n        }\n      }\n    )\n\n    object.each(\n      oldValue,\n      function (_: Attribute, name: string) {\n        if (!newValue[name]) {\n          api.removeAttr(node, name)\n        }\n      }\n    )\n\n  }\n\n}\n","import * as env from 'yox-common/src/util/env'\nimport * as object from 'yox-common/src/util/object'\n\nimport VNode from 'yox-type/src/vnode/VNode'\nimport Property from 'yox-type/src/vnode/Property'\n\nexport function update(api: any, vnode: VNode, oldVnode?: VNode) {\n\n  const { node, nativeProps } = vnode,\n\n  oldNativeProps = oldVnode && oldVnode.nativeProps\n\n  if (nativeProps || oldNativeProps) {\n\n    const newValue = nativeProps || env.EMPTY_OBJECT,\n\n    oldValue = oldNativeProps || env.EMPTY_OBJECT\n\n    object.each(\n      newValue,\n      function (prop: Property, name: string) {\n        if (!oldValue[name]\n          || prop.value !== oldValue[name].value\n        ) {\n          api.prop(node, name, prop.value)\n        }\n      }\n    )\n\n    object.each(\n      oldValue,\n      function (prop: Property, name: string) {\n        if (!newValue[name]) {\n          api.removeProp(node, name, prop.hint)\n        }\n      }\n    )\n\n  }\n\n}\n\n//\n// 旧 [ child1, child2 ]\n// 新 innerHTML\n//\n// 这种情况，要让外部先把 child1 child2 正常移除掉，再用 innerHTML 覆盖，否则指令无法销毁\n//\n// 旧 innerHTML\n// 新 [ child1, child2 ]\n//\n// 这种情况，先用 innerHTML 覆盖，再处理 child1 child2\n//\n// export default {\n//   create: createProps,\n//   update: removeProps,\n//   postpatch: createProps,\n// }\n","import * as env from 'yox-common/src/util/env'\nimport * as object from 'yox-common/src/util/object'\n\nimport VNode from 'yox-type/src/vnode/VNode'\nimport Directive from 'yox-type/src/vnode/Directive'\n\nimport * as field from './field'\n\nexport function update(vnode: VNode, oldVnode?: VNode) {\n\n  const { data, directives } = vnode,\n\n  oldDirectives = oldVnode && oldVnode.directives\n\n  if (directives || oldDirectives) {\n\n    const node = data[field.COMPONENT] || vnode.node,\n\n    isKeypathChange = oldVnode && vnode.keypath !== oldVnode.keypath,\n\n    newValue = directives || env.EMPTY_OBJECT,\n\n    oldValue = oldDirectives || env.EMPTY_OBJECT\n\n    object.each(\n      newValue,\n      function (directive: Directive, name: string) {\n        const { bind, unbind } = directive.hooks\n        if (!oldValue[name]) {\n          bind(node, directive, vnode)\n        }\n        else if (directive.value !== oldValue[name].value\n          || isKeypathChange\n        ) {\n          if (unbind) {\n            unbind(node, oldValue[name], oldVnode as VNode)\n          }\n          bind(node, directive, vnode)\n        }\n      }\n    )\n\n    object.each(\n      oldValue,\n      function (directive: Directive, name: string) {\n        if (!newValue[name]) {\n          const { unbind } = directive.hooks\n          if (unbind) {\n            unbind(node, directive, oldVnode as VNode)\n          }\n        }\n      }\n    )\n\n  }\n\n}\n\nexport function remove(vnode: VNode) {\n  const { directives } = vnode\n  if (directives) {\n    const node = vnode.data[field.COMPONENT] || vnode.node\n    object.each(\n      directives,\n      function (directive: Directive) {\n        const { unbind } = directive.hooks\n        if (unbind) {\n          unbind(node, directive, vnode)\n        }\n      }\n    )\n  }\n}\n","import VNode from 'yox-type/src/vnode/VNode'\n\nimport * as field from './field'\n\nexport function update(vnode: VNode, oldVnode?: VNode) {\n\n  let { data, ref, props, slots, context } = vnode, node: any\n\n  if (vnode.isComponent) {\n    node = data[field.COMPONENT]\n    // 更新时才要 set\n    // 因为初始化时，所有这些都经过构造函数完成了\n    if (oldVnode) {\n      if (props) {\n        node.set(node.checkPropTypes(props))\n      }\n      if (slots) {\n        node.set(slots)\n      }\n    }\n  }\n  else {\n    node = vnode.node\n  }\n\n  if (ref) {\n    const refs = context.$refs\n    if (refs) {\n      refs[ref] = node\n    }\n  }\n\n}\n","import * as is from 'yox-common/src/util/is'\nimport * as env from 'yox-common/src/util/env'\nimport * as array from 'yox-common/src/util/array'\nimport * as logger from 'yox-common/src/util/logger'\n\nimport isDef from 'yox-common/src/function/isDef'\nimport execute from 'yox-common/src/function/execute'\n\nimport API from 'yox-type/src/API'\nimport Yox from 'yox-type/src/Yox'\nimport VNode from 'yox-type/src/vnode/VNode'\nimport YoxOptions from 'yox-type/src/options/Yox'\n\nimport * as field from './src/field'\n\nimport * as nativeAttr from './src/nativeAttr'\nimport * as nativeProp from './src/nativeProp'\nimport * as directive from './src/directive'\nimport * as component from './src/component'\n\nfunction isPatchable(vnode: VNode, oldVnode: VNode): boolean {\n  return vnode.tag === oldVnode.tag\n    && vnode.key === oldVnode.key\n}\n\nfunction createKeyToIndex(vnodes: (VNode | void)[], startIndex: number, endIndex: number): Record<string, number> {\n\n  let result: Record<string, number> | void,\n\n  vnode: VNode | void,\n\n  key: string | void\n\n  while (startIndex <= endIndex) {\n    vnode = vnodes[startIndex]\n    if (vnode && (key = vnode.key)) {\n      if (!result) {\n        result = {}\n      }\n      result[key] = startIndex\n    }\n    startIndex++\n  }\n\n  return result || env.EMPTY_OBJECT\n\n}\n\nfunction insertBefore(api: API, parentNode: Node, node: Node, referenceNode: Node | void) {\n  if (referenceNode) {\n    api.before(parentNode, node, referenceNode)\n  }\n  else {\n    api.append(parentNode, node)\n  }\n}\n\nfunction createComponent(vnode: VNode, options: YoxOptions | void) {\n\n  if (!options) {\n    if (process.env.NODE_ENV === 'dev') {\n      logger.fatal(`component [${vnode.tag}] is not found.`)\n    }\n    return\n  }\n\n  // 渲染同步加载的组件时，vnode.node 为空\n  // 渲染异步加载的组件时，vnode.node 不为空，因为初始化用了占位节点\n  const child = (vnode.parent || vnode.context).create(options, vnode, vnode.node),\n\n  // 组件初始化创建的元素\n  node = child.$el as Node\n\n  if (node) {\n    vnode.node = node\n  }\n  else {\n    if (process.env.NODE_ENV === 'dev') {\n      logger.fatal(`the root element of component [${vnode.tag}] is not found.`)\n    }\n  }\n\n  vnode.data[field.COMPONENT] = child\n  vnode.data[field.LOADING] = env.FALSE\n\n  component.update(vnode)\n  directive.update(vnode)\n\n  return child\n\n}\n\nlet guid = 0\n\nfunction createData(): Record<string, any> {\n  const data = {}\n  data[field.ID] = ++guid\n  return data\n}\n\nfunction createVnode(api: API, vnode: VNode) {\n\n  let { tag, node, data, isComponent, isComment, isText, children, text, html, context } = vnode\n\n  if (node && data) {\n    return\n  }\n\n  data = createData()\n\n  vnode.data = data\n\n  if (isText) {\n    vnode.node = api.createText(text as string)\n    return\n  }\n\n  if (isComment) {\n    vnode.node = api.createComment(text as string)\n    return\n  }\n\n  if (isComponent) {\n\n    let isAsync = env.TRUE\n\n    context.component(\n      tag as string,\n      function (options: any) {\n        if (isDef(data[field.LOADING])) {\n          // 异步组件\n          if (data[field.LOADING]) {\n            // 尝试使用最新的 vnode\n            if (data[field.VNODE]) {\n              vnode = data[field.VNODE]\n              // 用完就删掉\n              delete data[field.VNODE]\n            }\n            enterVnode(\n              vnode,\n              createComponent(vnode, options)\n            )\n          }\n        }\n        // 同步组件\n        else {\n          createComponent(vnode, options)\n          isAsync = env.FALSE\n        }\n      }\n    )\n\n    if (isAsync) {\n      vnode.node = api.createComment(env.RAW_COMPONENT)\n      data[field.LOADING] = env.TRUE\n    }\n\n  }\n  else {\n\n    node = vnode.node = api.createElement(vnode.tag as string)\n\n    if (children) {\n      addVnodes(api, node, children)\n    }\n    else if (text) {\n      api.append(\n        node,\n        api.createText(text)\n      )\n    }\n    else if (html) {\n      api.html(node as Element, html)\n    }\n\n    nativeAttr.update(api, vnode)\n    nativeProp.update(api, vnode)\n    component.update(vnode)\n    directive.update(vnode)\n\n  }\n}\n\nfunction addVnodes(api: API, parentNode: Node, vnodes: VNode[], startIndex?: number, endIndex?: number, before?: VNode) {\n  let vnode: VNode, start = startIndex || 0, end = isDef(endIndex) ? endIndex : vnodes.length - 1\n  while (start <= (end as number)) {\n    vnode = vnodes[start]\n    createVnode(api, vnode)\n    insertVnode(api, parentNode, vnode, before)\n    start++\n  }\n}\n\nfunction insertVnode(api: API, parentNode: Node, vnode: VNode, before?: VNode) {\n\n  const { node, data, context } = vnode,\n\n  hasParent = api.parent(node)\n\n  // 这里不调用 insertBefore，避免判断两次\n  if (before) {\n    api.before(parentNode, node, before.node)\n  }\n  else {\n    api.append(parentNode, node)\n  }\n\n  // 普通元素和组件的占位节点都会走到这里\n  // 但是占位节点不用 enter，而是等组件加载回来之后再调 enter\n  if (!hasParent) {\n    let enter: Function | void\n    if (vnode.isComponent) {\n      const component = data[field.COMPONENT]\n      if (component) {\n        enter = function () {\n          enterVnode(vnode, component)\n        }\n      }\n    }\n    else if (!vnode.isStatic && !vnode.isText && !vnode.isComment) {\n      enter = function () {\n        enterVnode(vnode)\n      }\n    }\n    if (enter) {\n      // 执行到这时，组件还没有挂载到 DOM 树\n      // 如果此时直接触发 enter，外部还需要做多余的工作，比如 setTimeout\n      // 索性这里直接等挂载到 DOM 数之后再触发\n      context.nextTick(enter, env.TRUE)\n    }\n  }\n\n}\n\nfunction removeVnodes(api: API, parentNode: Node, vnodes: (VNode | void)[], startIndex?: number, endIndex?: number) {\n  let vnode: VNode | void, start = startIndex || 0, end = isDef(endIndex) ? endIndex : vnodes.length - 1\n  while (start <= end) {\n    vnode = vnodes[start]\n    if (vnode) {\n      removeVnode(api, parentNode, vnode)\n    }\n    start++\n  }\n}\n\nfunction removeVnode(api: API, parentNode: Node, vnode: VNode) {\n  const { node } = vnode\n  if (vnode.isStatic || vnode.isText || vnode.isComment) {\n    api.remove(parentNode, node)\n  }\n  else {\n\n    let done = function () {\n      destroyVnode(api, vnode)\n      api.remove(parentNode, node)\n    },\n\n    component: Yox | void\n\n    if (vnode.isComponent) {\n      component = vnode.data[field.COMPONENT]\n      // 异步组件，还没加载成功就被删除了\n      if (!component) {\n        done()\n        return\n      }\n    }\n\n    leaveVnode(vnode, component, done)\n\n  }\n}\n\nfunction destroyVnode(api: API, vnode: VNode) {\n\n  /**\n   * 如果一个子组件的模板是这样写的：\n   *\n   * <div>\n   *   {{#if visible}}\n   *      <slot name=\"children\"/>\n   *   {{/if}}\n   * </div>\n   *\n   * 当 visible 从 true 变为 false 时，不能销毁 slot 导入的任何 vnode\n   * 不论是组件或是元素，都不能销毁，只能简单的 remove，\n   * 否则子组件下一次展现它们时，会出问题\n   */\n\n  const { data, children, parent, context } = vnode\n\n  if (parent\n    // 如果宿主组件正在销毁，$vnode 属性会在调 destroy() 之前被删除\n    // 这里表示的是宿主组件还没被销毁\n    // 如果宿主组件被销毁了，则它的一切都要进行销毁\n    && parent.$vnode\n    // 是从外部传入到组件内的\n    && parent !== vnode.context\n  ) {\n    return\n  }\n\n  if (vnode.isComponent) {\n    const component = data[field.COMPONENT]\n    if (component) {\n      directive.remove(vnode)\n      component.destroy()\n    }\n    else [\n      data[field.LOADING] = env.FALSE\n    ]\n  }\n  else {\n    directive.remove(vnode)\n    if (children) {\n      array.each(\n        children,\n        function (child: VNode) {\n          destroyVnode(api, child)\n        }\n      )\n    }\n  }\n\n}\n\n/**\n * vnode 触发 enter hook 时，外部一般会做一些淡入动画\n */\nfunction enterVnode(vnode: VNode, component: Yox | void) {\n  // 如果组件根元素和组件本身都写了 transition\n  // 优先用外面定义的\n  // 因为这明确是在覆盖配置\n  let { data, transition } = vnode\n  if (component && !transition) {\n    // 再看组件根元素是否有 transition\n    transition = (component.$vnode as VNode).transition\n  }\n  execute(data[field.LEAVING])\n  if (transition) {\n    const { enter } = transition\n    if (enter) {\n      enter(\n        vnode.node as HTMLElement,\n        env.EMPTY_FUNCTION\n      )\n      return\n    }\n  }\n}\n\n/**\n * vnode 触发 leave hook 时，外部一般会做一些淡出动画\n * 动画结束后才能移除节点，否则无法产生动画\n * 这里由外部调用 done 来通知内部动画结束\n */\nfunction leaveVnode(vnode: VNode, component: Yox | void, done: () => void) {\n  // 如果组件根元素和组件本身都写了 transition\n  // 优先用外面定义的\n  // 因为这明确是在覆盖配置\n  let { data, transition } = vnode\n  if (component && !transition) {\n    // 再看组件根元素是否有 transition\n    transition = (component.$vnode as VNode).transition\n  }\n  if (transition) {\n    const { leave } = transition\n    if (leave) {\n      leave(\n        vnode.node as HTMLElement,\n        data[field.LEAVING] = function () {\n          if (data[field.LEAVING]) {\n            done()\n            data[field.LEAVING] = env.UNDEFINED\n          }\n        }\n      )\n      return\n    }\n  }\n  // 如果没有淡出动画，直接结束\n  done()\n}\n\nfunction updateChildren(api: API, parentNode: Node, children: VNode[], oldChildren: (VNode | void)[]) {\n\n  let startIndex = 0,\n  endIndex = children.length - 1,\n  startVnode = children[startIndex],\n  endVnode = children[endIndex],\n\n  oldStartIndex = 0,\n  oldEndIndex = oldChildren.length - 1,\n  oldStartVnode = oldChildren[oldStartIndex],\n  oldEndVnode = oldChildren[oldEndIndex],\n\n  oldKeyToIndex: Record<string, number> | void,\n  oldIndex: number | void\n\n  while (oldStartIndex <= oldEndIndex && startIndex <= endIndex) {\n\n    // 下面有设为 UNDEFINED 的逻辑\n    if (!startVnode) {\n      startVnode = children[++startIndex];\n    }\n    else if (!endVnode) {\n      endVnode = children[--endIndex];\n    }\n    else if (!oldStartVnode) {\n      oldStartVnode = oldChildren[++oldStartIndex]\n    }\n    else if (!oldEndVnode) {\n      oldEndVnode = oldChildren[--oldEndIndex]\n    }\n\n    // 从头到尾比较，位置相同且值得 patch\n    else if (isPatchable(startVnode, oldStartVnode)) {\n      patch(api, startVnode, oldStartVnode)\n      startVnode = children[++startIndex]\n      oldStartVnode = oldChildren[++oldStartIndex]\n    }\n\n    // 从尾到头比较，位置相同且值得 patch\n    else if (isPatchable(endVnode, oldEndVnode)) {\n      patch(api, endVnode, oldEndVnode)\n      endVnode = children[--endIndex]\n      oldEndVnode = oldChildren[--oldEndIndex]\n    }\n\n    // 比较完两侧的节点，剩下就是 位置发生改变的节点 和 全新的节点\n\n    // 当 endVnode 和 oldStartVnode 值得 patch\n    // 说明元素被移到右边了\n    else if (isPatchable(endVnode, oldStartVnode)) {\n      patch(api, endVnode, oldStartVnode)\n      insertBefore(\n        api,\n        parentNode,\n        oldStartVnode.node,\n        api.next(oldEndVnode.node)\n      )\n      endVnode = children[--endIndex]\n      oldStartVnode = oldChildren[++oldStartIndex]\n    }\n\n    // 当 oldEndVnode 和 startVnode 值得 patch\n    // 说明元素被移到左边了\n    else if (isPatchable(startVnode, oldEndVnode)) {\n      patch(api, startVnode, oldEndVnode)\n      insertBefore(\n        api,\n        parentNode,\n        oldEndVnode.node,\n        oldStartVnode.node\n      )\n      startVnode = children[++startIndex]\n      oldEndVnode = oldChildren[--oldEndIndex]\n    }\n\n    // 尝试同级元素的 key\n    else {\n\n      if (!oldKeyToIndex) {\n        oldKeyToIndex = createKeyToIndex(oldChildren, oldStartIndex, oldEndIndex)\n      }\n\n      // 新节点之前的位置\n      oldIndex = startVnode.key\n        ? oldKeyToIndex[startVnode.key]\n        : env.UNDEFINED\n\n      // 移动元素\n      if (isDef(oldIndex)) {\n        patch(api, startVnode, oldChildren[oldIndex as number] as VNode)\n        oldChildren[oldIndex as number] = env.UNDEFINED\n      }\n      // 新元素\n      else {\n        createVnode(api, startVnode)\n      }\n\n      insertVnode(api, parentNode, startVnode, oldStartVnode)\n\n      startVnode = children[++startIndex]\n\n    }\n  }\n\n  if (oldStartIndex > oldEndIndex) {\n    addVnodes(\n      api,\n      parentNode,\n      children,\n      startIndex,\n      endIndex,\n      children[endIndex + 1]\n    )\n  }\n  else if (startIndex > endIndex) {\n    removeVnodes(\n      api,\n      parentNode,\n      oldChildren,\n      oldStartIndex,\n      oldEndIndex\n    )\n  }\n}\n\nexport function patch(api: API, vnode: VNode, oldVnode: VNode) {\n\n  if (vnode === oldVnode) {\n    return\n  }\n\n  const { node, data } = oldVnode\n\n  // 如果不能 patch，则删除重建\n  if (!isPatchable(vnode, oldVnode)) {\n    // 同步加载的组件，初始化时不会传入占位节点\n    // 它内部会自动生成一个注释节点，当它的根 vnode 和注释节点对比时，必然无法 patch\n    // 于是走进此分支，为新组件创建一个 DOM 节点，然后继续 createComponent 后面的流程\n    const parentNode = api.parent(node)\n    createVnode(api, vnode)\n    if (parentNode) {\n      insertVnode(api, parentNode, vnode, oldVnode)\n      removeVnode(api, parentNode, oldVnode)\n    }\n    return\n  }\n\n  vnode.node = node\n  vnode.data = data\n\n  // 组件正在异步加载，更新为最新的 vnode\n  // 当异步加载完成时才能用上最新的 vnode\n  if (oldVnode.isComponent && data[field.LOADING]) {\n    data[field.VNODE] = vnode\n    return\n  }\n\n  // 两棵静态子树就别折腾了\n  if (vnode.isStatic && oldVnode.isStatic) {\n    return\n  }\n\n  nativeAttr.update(api, vnode, oldVnode)\n  nativeProp.update(api, vnode, oldVnode)\n  component.update(vnode, oldVnode)\n  directive.update(vnode, oldVnode)\n\n  const { text, html, children } = vnode,\n\n  oldText = oldVnode.text,\n  oldHtml = oldVnode.html,\n  oldChildren = oldVnode.children\n\n  if (is.string(text)) {\n    if (text !== oldText) {\n      api.text(node, text)\n    }\n  }\n  else if (is.string(html)) {\n    if (html !== oldHtml) {\n      api.html(node as Element, html)\n    }\n  }\n  // 两个都有需要 diff\n  else if (children && oldChildren) {\n    if (children !== oldChildren) {\n      updateChildren(api, node, children, oldChildren)\n    }\n  }\n  // 有新的没旧的 - 新增节点\n  else if (children) {\n    if (is.string(oldText) || is.string(oldHtml)) {\n      api.text(node, env.EMPTY_STRING)\n    }\n    addVnodes(api, node, children)\n  }\n  // 有旧的没新的 - 删除节点\n  else if (oldChildren) {\n    removeVnodes(api, node, oldChildren)\n  }\n  // 有旧的 text 没有新的 text\n  else if (is.string(oldText) || is.string(oldHtml)) {\n    api.text(node, env.EMPTY_STRING)\n  }\n\n}\n\nexport function create(api: API, node: Node, isComment: boolean, context: Yox, keypath: string): VNode {\n  return {\n    tag: api.tag(node),\n    data: createData(),\n    isComment,\n    node,\n    context,\n    keypath,\n  }\n}\n\nexport function destroy(api: API, vnode: VNode, isRemove?: boolean) {\n  if (isRemove) {\n    const parentNode = api.parent(vnode.node)\n    if (parentNode) {\n      removeVnode(api, parentNode, vnode)\n    }\n    else {\n      if (process.env.NODE_ENV === 'dev') {\n        logger.fatal(`destroy vnode is not work without parent node.`)\n      }\n    }\n  }\n  else {\n    destroyVnode(api, vnode)\n  }\n}\n","import * as is from '../util/is'\n\nexport default function (target: any, defaultValue = 0): number {\n  return is.numeric(target)\n    ? +target\n    : defaultValue\n}\n","/**\n * 字面量\n */\nexport const LITERAL = 1\n\n/**\n * 标识符\n */\nexport const IDENTIFIER = 2\n\n/**\n * 对象属性或数组下标\n */\nexport const MEMBER = 3\n\n/**\n * 一元表达式，如 - a\n */\nexport const UNARY = 4\n\n/**\n * 二元表达式，如 a + b\n */\nexport const BINARY = 5\n\n/**\n * 三元表达式，如 a ? b : c\n */\nexport const TERNARY = 6\n\n/**\n * 数组表达式，如 [ 1, 2, 3 ]\n */\nexport const ARRAY = 7\n\n/**\n * 对象表达式\n */\nexport const OBJECT = 8\n\n/**\n * 函数调用表达式，如 a()\n */\nexport const CALL = 9\n","import isDef from 'yox-common/src/function/isDef'\n\nimport * as env from 'yox-common/src/util/env'\nimport * as array from 'yox-common/src/util/array'\nimport * as keypathUtil from 'yox-common/src/util/keypath'\n\nimport * as nodeType from './nodeType'\n\nimport Node from './node/Node'\nimport Identifier from './node/Identifier'\nimport Literal from './node/Literal'\nimport Member from './node/Member'\nimport Ternary from './node/Ternary'\nimport Binary from './node/Binary'\nimport Unary from './node/Unary'\nimport Call from './node/Call'\n\nimport ArrayNode from './node/Array'\nimport ObjectNode from './node/Object'\n\nexport function createArray(elements: Node[], raw: string): ArrayNode {\n  return {\n    type: nodeType.ARRAY,\n    raw,\n    elements,\n  }\n}\n\nexport function createBinary(left: Node, operator: string, right: Node, raw: string): Binary {\n  return {\n    type: nodeType.BINARY,\n    raw,\n    left,\n    operator,\n    right,\n  }\n}\n\nexport function createCall(callee: Node, args: Node[], raw: string): Call {\n  return {\n    type: nodeType.CALL,\n    raw,\n    callee,\n    args,\n  }\n}\n\nfunction createIdentifierInner(raw: string, name: string, lookup: boolean | void, offset: number | void, staticKeypath: string | void): Identifier {\n  return {\n    type: nodeType.IDENTIFIER,\n    raw,\n    name,\n    lookup: lookup === env.FALSE ? lookup : env.UNDEFINED,\n    offset: offset > 0 ? offset : env.UNDEFINED,\n    staticKeypath: isDef(staticKeypath) ? staticKeypath as string : name,\n  }\n}\n\nfunction createMemberInner(raw: string, props: Node[], lookup: boolean | void, offset: number, staticKeypath: string | void) {\n  return {\n    type: nodeType.MEMBER,\n    raw,\n    props,\n    lookup: lookup === env.FALSE ? lookup : env.UNDEFINED,\n    offset: offset > 0 ? offset : env.UNDEFINED,\n    staticKeypath,\n  }\n}\n\nexport function createIdentifier(raw: string, name: string, isProp?: boolean): Identifier | Literal {\n\n  let lookup: boolean | void, offset: number | void\n\n  if (name === env.KEYPATH_CURRENT\n    || name === env.KEYPATH_PARENT\n  ) {\n    lookup = env.FALSE\n    if (name === env.KEYPATH_PARENT) {\n      offset = 1\n    }\n    name = env.EMPTY_STRING\n  }\n\n  // 对象属性需要区分 a.b 和 a[b]\n  // 如果不借用 Literal 无法实现这个判断\n  // 同理，如果用了这种方式，就无法区分 a.b 和 a['b']，但是无所谓，这两种表示法本就一个意思\n\n  return isProp\n    ? createLiteral(name, raw)\n    : createIdentifierInner(raw, name, lookup, offset)\n\n}\n\nexport function createLiteral(value: any, raw: string): Literal {\n  return {\n    type: nodeType.LITERAL,\n    raw,\n    value,\n  }\n}\n\nexport function createObject(keys: string[], values: Node[], raw: string): ObjectNode {\n  return {\n    type: nodeType.OBJECT,\n    raw,\n    keys,\n    values,\n  }\n}\n\nexport function createTernary(test: Node, yes: Node, no: Node, raw: string): Ternary {\n  return {\n    type: nodeType.TERNARY,\n    raw,\n    test,\n    yes,\n    no,\n  }\n}\n\nexport function createUnary(operator: string, arg: Node, raw: string): Unary {\n  return {\n    type: nodeType.UNARY,\n    raw,\n    operator,\n    arg,\n  }\n}\n\nfunction getLiteralNode(nodes: Node[], index: number): Literal | void {\n  if (nodes[index]\n    && nodes[index].type === nodeType.LITERAL\n  ) {\n    return nodes[index] as Literal\n  }\n}\n\n/**\n * 通过判断 nodes 来决定是否需要创建 Member\n *\n * 创建 Member 至少需要 nodes 有两个元素\n *\n * nodes 元素类型没有限制，可以是 Identifier、Literal、Call，或是别的完整表达式\n *\n * @param raw\n * @param nodes\n */\nexport function createMemberIfNeeded(raw: string, nodes: (Node | Identifier | Literal)[]): Node | Identifier | Member {\n\n  let { length } = nodes,\n\n  lookup: boolean | void,\n\n  offset = 0,\n\n  staticKeypath: string | void,\n\n  name = env.EMPTY_STRING,\n\n  list: (Node | Identifier | Literal)[] = [],\n\n  literal: Literal | void,\n\n  identifier: Identifier\n\n  if (length > 1) {\n\n    // lookup 要求第一位元素是 Identifier，且它的 lookup 是 true 才为 true\n    // 其他情况都为 false，如 \"11\".length 第一位元素是 Literal，不存在向上寻找的需求\n    if (nodes[0].type === nodeType.IDENTIFIER) {\n\n      identifier = nodes[0] as Identifier\n\n      name = identifier.name\n      lookup = identifier.lookup\n      staticKeypath = identifier.staticKeypath\n\n      if (identifier.offset > 0) {\n        offset += identifier.offset as number\n      }\n\n      if (name) {\n        array.push(list, identifier)\n      }\n\n      // 优化 1：计算 staticKeypath\n      //\n      // 计算 staticKeypath 的唯一方式是，第一位元素是 Identifier，后面都是 Literal\n      // 否则就表示中间包含动态元素，这会导致无法计算静态路径\n      // 如 a.b.c 可以算出 staticKeypath，而 a[b].c 则不行，因为 b 是动态的\n      // 下面这段属于性能优化，避免在运行时反复计算 Member 的 keypath\n\n      // 优化 2：计算 offset 并智能转成 Identifier\n      //\n      // 比如 ../../xx 这样的表达式，应优化成 offset = 2，并转成 Identifier\n\n      for (let i = 1; i < length; i++) {\n        literal = getLiteralNode(nodes, i)\n        if (literal) {\n          if (literal.raw === env.KEYPATH_PARENT) {\n            offset += 1\n            continue\n          }\n          if (isDef(staticKeypath)\n            && literal.raw !== env.KEYPATH_CURRENT\n          ) {\n            staticKeypath = keypathUtil.join(staticKeypath as string, literal.value)\n          }\n        }\n        else {\n          staticKeypath = env.UNDEFINED\n        }\n        array.push(list, nodes[i])\n      }\n\n      // 表示 nodes 中包含路径，并且路径节点被干掉了\n      if (list.length < length) {\n        nodes = list\n        // 剩下的节点，第一个如果是 Literal，把它转成 Identifier\n        literal = getLiteralNode(nodes, 0)\n        if (literal) {\n          name = literal.value\n          nodes[0] = createIdentifierInner(literal.raw, name, lookup, offset)\n        }\n      }\n\n    }\n\n    // 如果全是路径节点，如 ../../this，nodes 为空数组\n    // 如果剩下一个节点，则可转成标识符\n    return nodes.length < 2\n      ? createIdentifierInner(raw, name, lookup, offset, staticKeypath)\n      : createMemberInner(raw, nodes, lookup, offset, staticKeypath)\n\n  }\n\n  return nodes[0]\n\n}\n","export const unary = {\n  '+': { exec(a: any) { return +a } },\n  '-': { exec(a: any) { return -a } },\n  '~': { exec(a: any) { return ~a } },\n  '!': { exec(a: any) { return !a } },\n  '!!': { exec(a: any) { return !!a } },\n}\n\n// 参考 https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence\nexport const binary = {\n  '*': { prec: 14, exec(a: any, b: any) { return a * b } },\n  '/': { prec: 14, exec(a: any, b: any) { return a / b } },\n  '%': { prec: 14, exec(a: any, b: any) { return a % b } },\n  '+': { prec: 13, exec(a: any, b: any) { return a + b } },\n  '-': { prec: 13, exec(a: any, b: any) { return a - b } },\n  '<<': { prec: 12, exec(a: any, b: any) { return a << b } },\n  '>>': { prec: 12, exec(a: any, b: any) { return a >> b } },\n  '>>>': { prec: 12, exec(a: any, b: any) { return a >>> b } },\n  '<': { prec: 11, exec(a: any, b: any) { return a < b } },\n  '<=': { prec: 11, exec(a: any, b: any) { return a <= b } },\n  '>': { prec: 11, exec(a: any, b: any) { return a > b } },\n  '>=': { prec: 11, exec(a: any, b: any) { return a >= b } },\n  '==': { prec: 10, exec(a: any, b: any) { return a == b } },\n  '!=': { prec: 10, exec(a: any, b: any) { return a != b } },\n  '===': { prec: 10, exec(a: any, b: any) { return a === b } },\n  '!==': { prec: 10, exec(a: any, b: any) { return a !== b } },\n  '&': { prec: 9, exec(a: any, b: any) { return a & b } },\n  '^': { prec: 8, exec(a: any, b: any) { return a ^ b } },\n  '|': { prec: 7, exec(a: any, b: any) { return a | b } },\n  '&&': { prec: 6, exec(a: any, b: any) { return a && b } },\n  '||': { prec: 5, exec(a: any, b: any) { return a || b } },\n\n  '->': {\n    prec: 0,\n    exec(a: number, b: number) {\n      return a > b\n        ? function (callback: (index: number, counter: number) => void) {\n          for (let i = a, index = 0; i > b; i--) {\n            callback(i, index++)\n          }\n        }\n        : function (callback: (index: number, counter: number) => void) {\n          for (let i = a, index = 0; i < b; i++) {\n            callback(i, index++)\n          }\n        }\n    }\n  },\n  '=>': {\n    prec: 0,\n    exec(a: number, b: number) {\n      return a > b\n        ? function (callback: (index: number, counter: number) => void) {\n          for (let i = a, index = 0; i >= b; i--) {\n            callback(i, index++)\n          }\n        }\n        : function (callback: (index: number, counter: number) => void) {\n          for (let i = a, index = 0; i <= b; i++) {\n            callback(i, index++)\n          }\n        }\n    }\n  }\n}\n","import isDef from 'yox-common/src/function/isDef'\n\nimport * as is from 'yox-common/src/util/is'\nimport * as env from 'yox-common/src/util/env'\nimport * as array from 'yox-common/src/util/array'\nimport * as string from 'yox-common/src/util/string'\nimport * as object from 'yox-common/src/util/object'\nimport * as logger from 'yox-common/src/util/logger'\n\nimport * as creator from './creator'\nimport * as nodeType from './nodeType'\nimport * as interpreter from './interpreter'\n\nimport Node from './node/Node'\nimport Identifier from './node/Identifier'\nimport Literal from './node/Literal'\n\nexport function compile(content: string): Node | void {\n  if (!cache[content]) {\n    const parser = new Parser(content)\n    cache[content] = parser.scanTernary(CODE_EOF)\n  }\n  return cache[content]\n}\n\nexport class Parser {\n\n  end: number\n\n  code: number\n\n  index: number\n\n  content: string\n\n  constructor(content: string) {\n    const { length } = content\n    this.index = -1\n    this.end = length\n    this.code = CODE_EOF\n    this.content = content\n    this.go()\n  }\n\n  /**\n   * 移动一个字符\n   */\n  go(step?: number) {\n\n    let instance = this, { index, end } = instance\n\n    index += step || 1\n\n    if (index >= 0 && index < end) {\n      instance.code = string.codeAt(instance.content, index)\n      instance.index = index\n    }\n    else {\n      instance.code = CODE_EOF\n      instance.index = index < 0 ? -1 : end\n    }\n\n  }\n\n  /**\n   * 跳过空白符\n   */\n  skip(step?: number) {\n\n    const instance = this\n\n    // 走一步\n    if (instance.code === CODE_EOF) {\n      instance.go(step)\n    }\n\n    // 如果是正向的，停在第一个非空白符左侧\n    // 如果是逆向的，停在第一个非空白符右侧\n    while (env.TRUE) {\n      if (isWhitespace(instance.code)) {\n        instance.go(step)\n      }\n      else {\n        if (step && step < 0) {\n          instance.go()\n        }\n        break\n      }\n    }\n\n  }\n\n  /**\n   * 判断当前字符\n   */\n  is(code: number): boolean {\n    return this.code === code\n  }\n\n  /**\n   * 截取一段字符串\n   *\n   * @param startIndex\n   */\n  pick(startIndex: number, endIndex?: number): string {\n    return string.slice(this.content, startIndex, isDef(endIndex) ? endIndex : this.index)\n  }\n\n  /**\n   * 尝试解析下一个 token\n   */\n  scanToken(): Node | void {\n\n    const instance = this, { code, index } = instance\n\n    if (isIdentifierStart(code)) {\n      return instance.scanTail(\n        index,\n        [\n          instance.scanIdentifier(index)\n        ]\n      )\n    }\n    if (isDigit(code)) {\n      return instance.scanNumber(index)\n    }\n\n    switch (code) {\n\n      case CODE_EOF:\n        return\n\n      // 'x' \"x\"\n      case CODE_SQUOTE:\n      case CODE_DQUOTE:\n        return instance.scanTail(\n          index,\n          [\n            instance.scanString(index, code)\n          ]\n        )\n\n      // .1  ./  ../\n      case CODE_DOT:\n        instance.go()\n        return isDigit(instance.code)\n          ? instance.scanNumber(index)\n          : instance.scanPath(index)\n\n      // (xx)\n      case CODE_OPAREN:\n        instance.go()\n        return instance.scanTernary(CODE_CPAREN)\n\n      // [xx, xx]\n      case CODE_OBRACK:\n        return instance.scanTail(\n          index,\n          [\n            creator.createArray(\n              instance.scanTuple(index, CODE_CBRACK),\n              instance.pick(index)\n            )\n          ]\n        )\n\n      // { a: 'x', b: 'x' }\n      case CODE_OBRACE:\n        return instance.scanObject(index)\n\n    }\n\n    // 因为 scanOperator 会导致 index 发生变化，只能放在最后尝试\n    const operator = instance.scanOperator(index)\n    if (operator && interpreter.unary[operator]) {\n      const node = instance.scanTernary()\n      if (node) {\n        if (node.type === nodeType.LITERAL) {\n          const value = (node as Literal).value\n          if (is.number(value)) {\n            // 类似 ' -1 ' 这样的右侧有空格，需要撤回来\n            instance.skip(-1)\n            return creator.createLiteral(\n              - value,\n              instance.pick(index)\n            )\n          }\n        }\n        // 类似 ' -a ' 这样的右侧有空格，需要撤回来\n        instance.skip(-1)\n        return creator.createUnary(\n          operator,\n          node,\n          instance.pick(index)\n        )\n      }\n      if (process.env.NODE_ENV === 'dev') {\n        instance.fatal(index, `一元运算只有操作符没有表达式？`)\n      }\n    }\n\n  }\n\n  /**\n   * 扫描数字\n   *\n   * 支持整数和小数\n   *\n   * @param startIndex\n   * @return\n   */\n  scanNumber(startIndex: number): Literal | void {\n\n    const instance = this\n\n    while (isNumber(instance.code)) {\n      instance.go()\n    }\n\n    const raw = instance.pick(startIndex)\n\n    // 尝试转型，如果转型失败，则确定是个错误的数字\n    if (is.numeric(raw)) {\n      return creator.createLiteral(+raw, raw)\n    }\n\n    if (process.env.NODE_ENV === 'dev') {\n      instance.fatal(startIndex, `数字写错了知道吗？`)\n    }\n\n  }\n\n  /**\n   * 扫描字符串\n   *\n   * 支持反斜线转义引号\n   *\n   * @param startIndex\n   * @param endCode\n   */\n  scanString(startIndex: number, endCode: number): Literal {\n\n    const instance = this\n\n    loop: while (env.TRUE) {\n\n      // 这句有两个作用：\n      // 1. 跳过开始的引号\n      // 2. 驱动 index 前进\n      instance.go()\n\n      switch (instance.code) {\n\n        // \\\" \\'\n        case CODE_BACKSLASH:\n          instance.go()\n          break\n\n        case endCode:\n          instance.go()\n          break loop\n\n        case CODE_EOF:\n          if (process.env.NODE_ENV === 'dev') {\n            instance.fatal(startIndex, `到头了，字符串还没解析完呢？`)\n          }\n          break loop\n\n      }\n\n    }\n\n    // new Function 处理字符转义\n    const raw = instance.pick(startIndex)\n    return creator.createLiteral(\n      new Function(`return ${raw}`)(),\n      raw\n    )\n\n  }\n\n  /**\n   * 扫描对象字面量\n   *\n   * @param startIndex\n   */\n  scanObject(startIndex: number): Node {\n\n    let instance = this, keys = [], values = [], isKey = env.TRUE, node: Node | void\n\n    // 跳过 {\n    instance.go()\n\n    loop: while (env.TRUE) {\n\n      switch (instance.code) {\n\n        case CODE_CBRACE:\n          instance.go()\n          if (process.env.NODE_ENV === 'dev') {\n            if (keys.length !== values.length) {\n              instance.fatal(startIndex, `对象的 keys 和 values 的长度不一致`)\n            }\n          }\n          break loop\n\n        case CODE_EOF:\n          if (process.env.NODE_ENV === 'dev') {\n            instance.fatal(startIndex, `到头了，对象还没解析完呢？`)\n          }\n          break loop\n\n        // :\n        case CODE_COLON:\n          instance.go()\n          isKey = env.FALSE\n          break\n\n        // ,\n        case CODE_COMMA:\n          instance.go()\n          isKey = env.TRUE\n          break\n\n        default:\n          // 解析 key 的时候，node 可以为空，如 { } 或 { name: 'xx', }\n          // 解析 value 的时候，node 不能为空\n          node = instance.scanTernary()\n          if (isKey) {\n            if (node) {\n              // 处理 { key : value } key 后面的空格\n              instance.skip()\n              if (node.type === nodeType.IDENTIFIER) {\n                array.push(keys, (node as Identifier).name)\n              }\n              else if (node.type === nodeType.LITERAL) {\n                array.push(keys, (node as Literal).value)\n              }\n              else {\n                if (process.env.NODE_ENV === 'dev') {\n                  instance.fatal(startIndex, `对象的 key 必须是字面量或标识符`)\n                }\n                break loop\n              }\n            }\n          }\n          else if (node) {\n            // 处理 { key : value } value 后面的空格\n            instance.skip()\n            array.push(values, node)\n          }\n          else {\n            if (process.env.NODE_ENV === 'dev') {\n              instance.fatal(startIndex, `对象的值没找到`)\n            }\n            break loop\n          }\n      }\n    }\n\n    return creator.createObject(keys, values, instance.pick(startIndex))\n\n  }\n\n  /**\n   * 扫描元组，即 `a, b, c` 这种格式，可以是参数列表，也可以是数组\n   *\n   * @param startIndex\n   * @param endCode 元组的结束字符编码\n   */\n  scanTuple(startIndex: number, endCode: number): Node[] {\n\n    let instance = this, nodes: Node[] = [], node: Node | void\n\n    // 跳过开始字符，如 [ 和 (\n    instance.go()\n\n    loop: while (env.TRUE) {\n      switch (instance.code) {\n\n        case endCode:\n          instance.go()\n          break loop\n\n        case CODE_EOF:\n          if (process.env.NODE_ENV === 'dev') {\n            instance.fatal(startIndex, `到头了，tuple 还没解析完呢？`)\n          }\n          break loop\n\n        case CODE_COMMA:\n          instance.go()\n          break\n\n        default:\n          // 1. ( )\n          // 2. (1, 2, )\n          // 这三个例子都会出现 scanTernary 为空的情况\n          // 但是不用报错\n          node = instance.scanTernary()\n          if (node) {\n            // 为了解决 1 , 2 , 3 这样的写法\n            // 当解析出值后，先跳过后面的空格\n            instance.skip()\n            array.push(nodes, node)\n          }\n      }\n    }\n\n    return nodes\n\n  }\n\n  /**\n   * 扫描路径，如 `./` 和 `../`\n   *\n   * 路径必须位于开头，如 ./../ 或 ../../，不存在 a/../b/../c 这样的情况，因为路径是用来切换或指定 context 的\n   *\n   * @param startIndex\n   * @param prevNode\n   */\n  scanPath(startIndex: number): Node | void {\n\n    let instance = this, nodes: Node[] = [], name: string | void\n\n    // 进入此函数时，已确定前一个 code 是 CODE_DOT\n    // 此时只需判断接下来是 ./ 还是 / 就行了\n\n    while (env.TRUE) {\n\n      // 要么是 current 要么是 parent\n      name = env.KEYPATH_CURRENT\n\n      // ../\n      if (instance.is(CODE_DOT)) {\n        instance.go()\n        name = env.KEYPATH_PARENT\n      }\n\n      array.push(\n        nodes,\n        creator.createIdentifier(name, name, nodes.length > 0)\n      )\n\n      // 如果以 / 结尾，则命中 ./ 或 ../\n      if (instance.is(CODE_SLASH)) {\n        instance.go()\n\n        // 没写错，这里不必强调 isIdentifierStart，数字开头也可以吧\n        if (isIdentifierPart(instance.code)) {\n          array.push(\n            nodes,\n            instance.scanIdentifier(instance.index, env.TRUE)\n          )\n          return instance.scanTail(startIndex, nodes)\n        }\n        else if (instance.is(CODE_DOT)) {\n          // 先跳过第一个 .\n          instance.go()\n          // 继续循环\n        }\n        else {\n          // 类似 ./ 或 ../ 这样后面不跟标识符是想干嘛？报错可好？\n          if (process.env.NODE_ENV === 'dev') {\n            instance.fatal(startIndex, `path 写法错误`)\n          }\n          break\n        }\n\n      }\n      // 类似 . 或 ..，可能就是想读取层级对象\n      // 此处不用关心后面跟的具体是什么字符，那是其他函数的事情，就算报错也让别的函数去报\n      // 此处也不用关心延展操作符，即 ...object，因为表达式引擎管不了这事，它没法把对象变成 attr1=value1 attr2=value2 的格式\n      // 这应该是模板引擎该做的事\n      else {\n        break\n      }\n    }\n\n  }\n\n  /**\n   * 扫描变量\n   */\n  scanTail(startIndex: number, nodes: Node[]): Node | never {\n\n    let instance = this, node: Node | void\n\n    /**\n     * 标识符后面紧着的字符，可以是 ( . [，此外还存在各种组合，感受一下：\n     *\n     * a.b.c().length\n     * a[b].c()()\n     * a[b][c]()[d](e, f, g).length\n     * [].length\n     */\n\n    loop: while (env.TRUE) {\n\n      switch (instance.code) {\n\n        // a(x)\n        case CODE_OPAREN:\n          nodes = [\n            creator.createCall(\n              creator.createMemberIfNeeded(instance.pick(startIndex), nodes),\n              instance.scanTuple(instance.index, CODE_CPAREN),\n              instance.pick(startIndex)\n            )\n          ]\n          break\n\n        // a.x\n        case CODE_DOT:\n          instance.go()\n\n          // 接下来的字符，可能是数字，也可能是标识符，如果不是就报错\n          if (isIdentifierPart(instance.code)) {\n            // 无需识别关键字\n            array.push(\n              nodes,\n              instance.scanIdentifier(instance.index, env.TRUE)\n            )\n            break\n          }\n          else {\n            if (process.env.NODE_ENV === 'dev') {\n              instance.fatal(startIndex, `. 后面跟的都是啥玩意啊`)\n            }\n            break loop\n          }\n\n        // a[]\n        case CODE_OBRACK:\n\n          // 过掉 [\n          instance.go()\n\n          node = instance.scanTernary(CODE_CBRACK)\n\n          if (node) {\n            array.push(nodes, node)\n            break\n          }\n          else {\n            if (process.env.NODE_ENV === 'dev') {\n              instance.fatal(startIndex, `[] 内部不能为空`)\n            }\n            break loop\n          }\n\n        default:\n          break loop\n\n      }\n\n    }\n\n    return creator.createMemberIfNeeded(instance.pick(startIndex), nodes)\n\n  }\n\n  /**\n   * 扫描标识符\n   *\n   * @param startIndex\n   * @param isProp 是否是对象的属性\n   * @return\n   */\n  scanIdentifier(startIndex: number, isProp?: boolean): Identifier | Literal {\n\n    const instance = this\n\n    while (isIdentifierPart(instance.code)) {\n      instance.go()\n    }\n\n    const raw = instance.pick(startIndex)\n\n    return !isProp && object.has(keywordLiterals, raw)\n      ? creator.createLiteral(keywordLiterals[raw], raw)\n      : creator.createIdentifier(raw, raw, isProp)\n\n  }\n\n  /**\n   * 扫描运算符\n   *\n   * @param startIndex\n   */\n  scanOperator(startIndex: number): string | void {\n\n    const instance = this\n\n    switch (instance.code) {\n\n      // +、/、%、~、^\n      case CODE_PLUS:\n      case CODE_DIVIDE:\n      case CODE_MODULO:\n      case CODE_WAVE:\n      case CODE_XOR:\n        instance.go()\n        break;\n\n      // *\n      case CODE_MULTIPLY:\n        instance.go()\n        break\n\n      // -、->\n      case CODE_MINUS:\n        instance.go()\n        if (instance.is(CODE_GREAT)) {\n          instance.go()\n        }\n        break\n\n      // !、!!、!=、!==\n      case CODE_NOT:\n        instance.go()\n        if (instance.is(CODE_NOT)) {\n          instance.go()\n        }\n        else if (instance.is(CODE_EQUAL)) {\n          instance.go()\n          if (instance.is(CODE_EQUAL)) {\n            instance.go()\n          }\n        }\n        break\n\n      // &、&&\n      case CODE_AND:\n        instance.go()\n        if (instance.is(CODE_AND)) {\n          instance.go()\n        }\n        break\n\n      // |、||\n      case CODE_OR:\n        instance.go()\n        if (instance.is(CODE_OR)) {\n          instance.go()\n        }\n        break\n\n      // ==、===、=>\n      case CODE_EQUAL:\n        instance.go()\n        if (instance.is(CODE_EQUAL)) {\n          instance.go()\n          if (instance.is(CODE_EQUAL)) {\n            instance.go()\n          }\n        }\n        else if (instance.is(CODE_GREAT)) {\n          instance.go()\n        }\n        else {\n          // 一个等号要报错\n          if (process.env.NODE_ENV === 'dev') {\n            instance.fatal(startIndex, `不支持一个等号这种赋值写法`)\n          }\n        }\n        break\n\n      // <、<=、<<\n      case CODE_LESS:\n        instance.go()\n        if (instance.is(CODE_EQUAL)\n          || instance.is(CODE_LESS)\n        ) {\n          instance.go()\n        }\n        break\n\n      // >、>=、>>、>>>\n      case CODE_GREAT:\n        instance.go()\n        if (instance.is(CODE_EQUAL)) {\n          instance.go()\n        }\n        else if (instance.is(CODE_GREAT)) {\n          instance.go()\n          if (instance.is(CODE_GREAT)) {\n            instance.go()\n          }\n        }\n        break\n    }\n\n    if (instance.code > startIndex) {\n      return instance.pick(startIndex)\n    }\n\n  }\n\n  /**\n   * 扫描二元运算\n   */\n  scanBinary(): Node | void {\n\n    // 二元运算，如 a + b * c / d，这里涉及运算符的优先级\n    // 算法参考 https://en.wikipedia.org/wiki/Shunting-yard_algorithm\n    let instance = this,\n\n    // 格式为 [ index1, node1, index2, node2, ... ]\n    output: any[] = [],\n\n    token: Node | void,\n\n    index: number | void,\n\n    operator: string | void,\n\n    operatorInfo: any | void,\n\n    lastOperator: string | void,\n\n    lastOperatorInfo: any | void\n\n    while (env.TRUE) {\n\n      instance.skip()\n\n      array.push(output, instance.index)\n      token = instance.scanToken()\n\n      if (token) {\n\n        array.push(output, token)\n\n        array.push(output, instance.index)\n\n        instance.skip()\n\n        operator = instance.scanOperator(instance.index)\n\n        // 必须是二元运算符，一元不行\n        if (operator && (operatorInfo = interpreter.binary[operator])) {\n\n          // 比较前一个运算符\n          index = output.length - 4\n\n          // 如果前一个运算符的优先级 >= 现在这个，则新建 Binary\n          // 如 a + b * c / d，当从左到右读取到 / 时，发现和前一个 * 优先级相同，则把 b * c 取出用于创建 Binary\n          if ((lastOperator = output[index])\n            && (lastOperatorInfo = interpreter.binary[lastOperator])\n            && lastOperatorInfo.prec >= operatorInfo.prec\n          ) {\n            output.splice(\n              index - 2,\n              5,\n              creator.createBinary(\n                output[index - 2],\n                lastOperator,\n                output[index + 2],\n                instance.pick(output[index - 3], output[index + 3])\n              )\n            )\n          }\n\n          array.push(output, operator)\n\n          continue\n\n        }\n\n      }\n\n      // 没匹配到 token 或 operator 则跳出循环\n      break\n\n    }\n\n    // 类似 a + b * c 这种走到这会有 11 个\n    // 此时需要从后往前遍历，因为确定后面的优先级肯定大于前面的\n    while (env.TRUE) {\n      // 最少的情况是 a + b，它有 7 个元素\n      if (output.length >= 7) {\n        index = output.length - 4\n        output.splice(\n          index - 2,\n          5,\n          creator.createBinary(\n            output[index - 2],\n            output[index],\n            output[index + 2],\n            instance.pick(output[index - 3], output[index + 3])\n          )\n        )\n      }\n      else {\n        return output[1]\n      }\n    }\n\n  }\n\n  /**\n   * 扫描三元运算\n   *\n   * @param endCode\n   */\n  scanTernary(endCode?: number): Node | void {\n\n    /**\n     * https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Operator_Precedence\n     *\n     * ?: 运算符的优先级几乎是最低的，比它低的只有四种： 赋值、yield、延展、逗号\n     * 我们不支持这四种，因此可认为 ?: 优先级最低\n     */\n\n    const instance = this\n\n    instance.skip()\n\n    let index = instance.index,\n\n    test = instance.scanBinary(),\n\n    yes: Node | void,\n\n    no: Node | void\n\n    if (instance.is(CODE_QUESTION)) {\n      // 跳过 ?\n      instance.go()\n      yes = instance.scanBinary()\n\n      if (instance.is(CODE_COLON)) {\n        // 跳过 :\n        instance.go()\n        no = instance.scanBinary()\n      }\n\n      if (test && yes && no) {\n        // 类似 ' a ? 1 : 0 ' 这样的右侧有空格，需要撤回来\n        instance.skip(-1)\n        test = creator.createTernary(\n          test, yes, no,\n          instance.pick(index)\n        )\n      }\n      else {\n        if (process.env.NODE_ENV === 'dev') {\n          instance.fatal(index, `三元表达式谁教你这样写的？`)\n        }\n      }\n    }\n\n    // 过掉结束字符\n    if (isDef(endCode)) {\n      instance.skip()\n      if (instance.is(endCode as number)) {\n        instance.go()\n      }\n      // 没匹配到结束字符要报错\n      else {\n        if (process.env.NODE_ENV === 'dev') {\n          instance.fatal(index, `大兄弟，我怀疑你表达式写错了吧？`)\n        }\n      }\n    }\n\n    return test\n\n  }\n\n  fatal(start: number, message: string) {\n    if (process.env.NODE_ENV === 'dev') {\n      logger.fatal(`Error compiling expression:\\n${this.content}\\n- ${message}`)\n    }\n  }\n\n}\n\nconst cache = {},\n\nCODE_EOF = 0,        //\nCODE_DOT = 46,       // .\nCODE_COMMA = 44,     // ,\nCODE_SLASH = 47,     // /\nCODE_BACKSLASH = 92, // \\\nCODE_SQUOTE = 39,    // '\nCODE_DQUOTE = 34,    // \"\nCODE_OPAREN = 40,    // (\nCODE_CPAREN = 41,    // )\nCODE_OBRACK = 91,    // [\nCODE_CBRACK = 93,    // ]\nCODE_OBRACE = 123,   // {\nCODE_CBRACE = 125,   // }\nCODE_QUESTION = 63,  // ?\nCODE_COLON = 58,     // :\n\nCODE_PLUS = 43,      // +\nCODE_MINUS = 45,     // -\nCODE_MULTIPLY = 42,  // *\nCODE_DIVIDE = 47,    // /\nCODE_MODULO = 37,    // %\nCODE_WAVE = 126,     // ~\nCODE_AND = 38,       // &\nCODE_OR = 124,       // |\nCODE_XOR = 94,       // ^\nCODE_NOT = 33,       // !\nCODE_LESS = 60,      // <\nCODE_EQUAL = 61,     // =\nCODE_GREAT = 62,     // >\n\n/**\n * 区分关键字和普通变量\n * 举个例子：a === true\n * 从解析器的角度来说，a 和 true 是一样的 token\n */\nkeywordLiterals = {}\n\nkeywordLiterals[env.RAW_TRUE] = env.TRUE\nkeywordLiterals[env.RAW_FALSE] = env.FALSE\nkeywordLiterals[env.RAW_NULL] = env.NULL\nkeywordLiterals[env.RAW_UNDEFINED] = env.UNDEFINED\n\n/**\n * 是否是空白符，用下面的代码在浏览器测试一下\n *\n * ```\n * for (var i = 0; i < 200; i++) {\n *   console.log(i, String.fromCharCode(i))\n * }\n * ```\n *\n * 从 0 到 32 全是空白符，100 往上分布比较散且较少用，唯一需要注意的是 160\n *\n * 160 表示 non-breaking space\n * http://www.adamkoch.com/2009/07/25/white-space-and-character-160/\n */\nfunction isWhitespace(code: number): boolean {\n  return (code > 0 && code < 33) || code === 160\n}\n\n/**\n * 是否是数字\n */\nfunction isDigit(code: number): boolean {\n  return code > 47 && code < 58 // 0...9\n}\n\n/**\n * 是否是数字\n */\nfunction isNumber(code: number): boolean {\n  return isDigit(code) || code === CODE_DOT\n}\n\n/**\n * 变量开始字符必须是 字母、下划线、$\n */\nfunction isIdentifierStart(code: number): boolean {\n  return code === 36 // $\n    || code === 95   // _\n    || (code > 96 && code < 123) // a...z\n    || (code > 64 && code < 91)  // A...Z\n}\n\n/**\n * 变量剩余的字符必须是 字母、下划线、$、数字\n */\nfunction isIdentifierPart(code: number): boolean {\n  return isIdentifierStart(code) || isDigit(code)\n}\n","/**\n * 元素 节点\n */\nexport const ELEMENT = 1\n\n/**\n * 属性 节点\n */\nexport const ATTRIBUTE = 2\n\n/**\n * 指令 节点\n */\nexport const DIRECTIVE = 3\n\n/**\n * 属性 节点\n */\nexport const PROPERTY = 4\n\n/**\n * 文本 节点\n */\nexport const TEXT = 5\n\n/**\n * if 节点\n */\nexport const IF = 6\n\n/**\n * else if 节点\n */\nexport const ELSE_IF = 7\n\n/**\n * else 节点\n */\nexport const ELSE = 8\n\n/**\n * each 节点\n */\nexport const EACH = 9\n\n/**\n * partial 节点\n */\nexport const PARTIAL = 10\n\n/**\n * import 节点\n */\nexport const IMPORT = 11\n\n/**\n * 表达式 节点\n */\nexport const EXPRESSION = 12\n\n/**\n * 延展操作 节点\n */\nexport const SPREAD = 13\n","import * as env from 'yox-common/src/util/env'\n\nimport * as nodeType from './nodeType'\n\n// 特殊标签\nexport const specialTags = {}\n// 特殊属性\nexport const specialAttrs = {}\n// 名称 -> 类型的映射\nexport const name2Type = {}\n\nspecialTags[env.RAW_SLOT] =\nspecialTags[env.RAW_TEMPLATE] =\n\nspecialAttrs[env.RAW_KEY] =\nspecialAttrs[env.RAW_REF] =\nspecialAttrs[env.RAW_SLOT] = env.TRUE\n\nname2Type['if'] = nodeType.IF\nname2Type['each'] = nodeType.EACH\nname2Type['partial'] = nodeType.PARTIAL\n\n","import * as env from 'yox-common/src/util/env'\nimport ExpressionNode from 'yox-expression-compiler/src/node/Node'\n\nimport * as nodeType from './nodeType'\n\nimport Node from './node/Node'\nimport Attribute from './node/Attribute'\nimport Directive from './node/Directive'\nimport Property from './node/Property'\nimport Each from './node/Each'\nimport Element from './node/Element'\nimport Else from './node/Else'\nimport ElseIf from './node/ElseIf'\nimport Expression from './node/Expression'\nimport If from './node/If'\nimport Import from './node/Import'\nimport Partial from './node/Partial'\nimport Spread from './node/Spread'\nimport Text from './node/Text'\n\nexport function createAttribute(name: string): Attribute {\n  return {\n    type: nodeType.ATTRIBUTE,\n    isStatic: env.TRUE,\n    name,\n  }\n}\n\nexport function createDirective(name: string, modifier?: string, value?: string | number, expr?: ExpressionNode, children?: Node[]): Directive {\n  return {\n    type: nodeType.DIRECTIVE,\n    name,\n    modifier,\n    value,\n    expr,\n    children,\n  }\n}\n\nexport function createProperty(name: string, hint: number, value?: string | number | boolean, expr?: ExpressionNode, children?: Node[]): Property {\n  return {\n    type: nodeType.PROPERTY,\n    isStatic: env.TRUE,\n    name,\n    hint,\n    value,\n    expr,\n    children,\n  }\n}\n\nexport function createEach(expr: ExpressionNode, index: string): Each {\n  return {\n    type: nodeType.EACH,\n    expr,\n    index,\n    isComplex: env.TRUE,\n  }\n}\n\nexport function createElement(tag: string, isSvg: boolean, isComponent: boolean): Element {\n  // 是 svg 就不可能是组件\n  // 加这个判断的原因是，svg 某些标签含有 连字符 和 大写字母，比较蛋疼\n  if (isSvg) {\n    isComponent = env.FALSE\n  }\n  return {\n    type: nodeType.ELEMENT,\n    tag,\n    isSvg,\n    isComponent,\n    isStatic: !isComponent && tag !== env.RAW_SLOT,\n  }\n}\n\nexport function createElse(): Else {\n  return {\n    type: nodeType.ELSE,\n  }\n}\n\nexport function createElseIf(expr: ExpressionNode): ElseIf {\n  return {\n    type: nodeType.ELSE_IF,\n    expr,\n  }\n}\n\nexport function createExpression(expr: ExpressionNode, safe: boolean): Expression {\n  return {\n    type: nodeType.EXPRESSION,\n    expr,\n    safe,\n    isLeaf: env.TRUE,\n  }\n}\n\nexport function createIf(expr: ExpressionNode): If {\n  return {\n    type: nodeType.IF,\n    expr,\n  }\n}\n\nexport function createImport(name: string): Import {\n  return {\n    type: nodeType.IMPORT,\n    name,\n    isComplex: env.TRUE,\n    isLeaf: env.TRUE,\n  }\n}\n\nexport function createPartial(name: string): Partial {\n  return {\n    type: nodeType.PARTIAL,\n    name,\n    isComplex: env.TRUE,\n  }\n}\n\nexport function createSpread(expr: ExpressionNode, binding: boolean): Spread {\n  return {\n    type: nodeType.SPREAD,\n    expr,\n    binding,\n    isLeaf: env.TRUE,\n  }\n}\n\nexport function createText(text: string): Text {\n  return {\n    type: nodeType.TEXT,\n    text,\n    isStatic: env.TRUE,\n    isLeaf: env.TRUE,\n  }\n}","import * as config from 'yox-config/index'\n\nimport toNumber from 'yox-common/src/function/toNumber'\n\nimport * as is from 'yox-common/src/util/is'\nimport * as env from 'yox-common/src/util/env'\nimport * as array from 'yox-common/src/util/array'\nimport * as string from 'yox-common/src/util/string'\nimport * as logger from 'yox-common/src/util/logger'\n\nimport * as exprNodeType from 'yox-expression-compiler/src/nodeType'\nimport * as exprCompiler from 'yox-expression-compiler/src/compiler'\nimport ExpressionCall from 'yox-expression-compiler/src/node/Call'\n\nimport * as helper from './helper'\nimport * as creator from './creator'\nimport * as nodeType from './nodeType'\n\nimport If from './node/If'\nimport ElseIf from './node/ElseIf'\nimport Else from './node/Else'\nimport Node from './node/Node'\nimport Branch from './node/Branch'\nimport Text from './node/Text'\nimport Each from './node/Each'\nimport Partial from './node/Partial'\nimport Element from './node/Element'\nimport Attribute from './node/Attribute'\nimport Directive from './node/Directive'\nimport Property from './node/Property'\nimport Expression from './node/Expression'\n\n// 缓存编译模板\nconst compileCache = {},\n\n// 缓存编译正则\npatternCache = {},\n\n// 指令分隔符，如 on-click 和  lazy-click\ndirectiveSeparator = '-',\n\n// 分割符，即 {{ xx }} 和 {{{ xx }}}\nblockPattern = /(\\{?\\{\\{)\\s*([^\\}]+?)\\s*(\\}\\}\\}?)/,\n\n// 标签\ntagPattern = /<(\\/)?([$a-z][-a-z0-9]*)/i,\n\n// 属性的 name\nattributePattern = /^\\s*([-:\\w]+)(['\"])?(?:=(['\"]))?/,\n\n// 首字母大写，或中间包含 -\ncomponentNamePattern = /^[$A-Z]|-/,\n\n// 自闭合标签\nselfClosingTagPattern = /^\\s*(\\/)?>/,\n\n// 常见的自闭合标签\nselfClosingTagNames = 'area,base,embed,track,source,param,input,col,img,br,hr'.split(','),\n\n// 常见的 svg 标签\nsvgTagNames = 'svg,g,defs,desc,metadata,symbol,use,image,path,rect,circle,line,ellipse,polyline,polygon,text,tspan,tref,textpath,marker,pattern,clippath,mask,filter,cursor,view,animate,font,font-face,glyph,missing-glyph,foreignObject'.split(','),\n\n// 常见的字符串类型的属性\n// 注意：autocomplete,autocapitalize 不是布尔类型\nstringProperyNames = 'id,class,name,value,for,accesskey,title,style,src,type,href,target,alt,placeholder,preload,poster,wrap,accept,pattern,dir,autocomplete,autocapitalize'.split(','),\n\n// 常见的数字类型的属性\nnumberProperyNames = 'min,minlength,max,maxlength,step,width,height,size,rows,cols,tabindex'.split(','),\n\n// 常见的布尔类型的属性\nbooleanProperyNames = 'disabled,checked,required,multiple,readonly,autofocus,autoplay,controls,loop,muted,novalidate,draggable,hidden,spellcheck'.split(','),\n\n// 某些属性 attribute name 和 property name 不同\nattr2Prop = {}\n\n// 列举几个常见的\nattr2Prop['for'] = 'htmlFor'\nattr2Prop['class'] = 'className'\nattr2Prop['accesskey'] = 'accessKey'\nattr2Prop['style'] = 'style.cssText'\nattr2Prop['novalidate'] = 'noValidate'\nattr2Prop['readonly'] = 'readOnly'\nattr2Prop['tabindex'] = 'tabIndex'\nattr2Prop['minlength'] = 'minLength'\nattr2Prop['maxlength'] = 'maxLength'\n\n/**\n * 截取前缀之后的字符串\n */\nfunction slicePrefix(str: string, prefix: string): string {\n  return string.trim(string.slice(str, prefix.length))\n}\n\n/**\n * trim 文本开始和结束位置的换行符\n *\n * 换行符比较神奇，有时候你明明看不到换行符，却真的存在一个，那就是 \\r\n *\n */\nfunction trimBreakline(content: string): string {\n  return content.replace(\n    /^\\s*[\\n\\r]\\s*|\\s*[\\n\\r]\\s*$/g,\n    env.EMPTY_STRING\n  )\n}\n\nexport function compile(content: string): Node[] {\n\n  let nodeList: Node[] = compileCache[content]\n  if (nodeList) {\n    return nodeList\n  }\n\n  nodeList = []\n\n  let nodeStack: Node[] = [],\n\n  // 持有 if/elseif/else 节点\n  ifStack: Node[] = [],\n\n  currentElement: Element | void,\n\n  currentAttribute: Attribute | Property | Directive | void,\n\n  // 干掉 html 注释\n  str = content.replace(\n    /<!--[\\s\\S]*?-->/g,\n    env.EMPTY_STRING\n  ),\n\n  startQuote: string | void,\n\n  length: number | void,\n\n  isSafeBlock = env.FALSE,\n\n  nextIsBlock = env.FALSE,\n\n  match: RegExpMatchArray | null,\n\n  fatal = function (msg: string) {\n    if (process.env.NODE_ENV === 'dev') {\n      logger.fatal(`Error compiling ${env.RAW_TEMPLATE}:\\n${content}\\n- ${msg}`)\n    }\n  },\n\n  /**\n   * 常见的两种情况：\n   *\n   * <div>\n   *    <input>1\n   * </div>\n   *\n   * <div>\n   *    <input>\n   * </div>\n   */\n  popSelfClosingElementIfNeeded = function (popingTagName?: string) {\n    const lastNode = array.last(nodeStack)\n    if (lastNode\n      && lastNode.type === nodeType.ELEMENT\n      && lastNode.tag !== popingTagName\n      && array.has(selfClosingTagNames, lastNode.tag)\n    ) {\n      popStack(lastNode.type, lastNode.tag)\n    }\n  },\n\n  popStack = function (type: number, tagName?: string) {\n\n    const node: Branch = array.pop(nodeStack)\n\n    if (node && node.type === type) {\n\n      const { children } = node,\n\n      // 优化单个子节点\n      child = children && children.length === 1 && children[0],\n\n      isElement = type === nodeType.ELEMENT,\n\n      isAttribute = type === nodeType.ATTRIBUTE,\n\n      isProperty = type === nodeType.PROPERTY,\n\n      isDirective = type === nodeType.DIRECTIVE\n\n      const currentBranch: Branch = array.last(nodeStack)\n      if (currentBranch) {\n        if (currentBranch.isStatic && !node.isStatic) {\n          currentBranch.isStatic = env.FALSE\n        }\n        if (!currentBranch.isComplex\n          && (node.isComplex || isElement)\n        ) {\n          currentBranch.isComplex = env.TRUE\n        }\n      }\n\n      if (process.env.NODE_ENV === 'dev') {\n        if (isElement) {\n          const element = node as Element\n          if (tagName && element.tag !== tagName) {\n            fatal(`结束标签是${tagName}，开始标签却是${element.tag}`)\n          }\n        }\n      }\n\n      // 除了 helper.specialAttrs 里指定的特殊属性，attrs 里的任何节点都不能单独拎出来赋给 element\n      // 因为 attrs 可能存在 if，所以每个 attr 最终都不一定会存在\n      if (child) {\n\n        switch (child.type) {\n\n          case nodeType.TEXT:\n            // 属性的值如果是纯文本，直接获取文本值\n            // 减少渲染时的遍历\n            if (isElement) {\n              processElementSingleText(node as Element, child as Text)\n            }\n            else if (isAttribute) {\n              processAttributeSingleText(node as Attribute, child as Text)\n            }\n            else if (isProperty) {\n              processPropertySingleText(node as Property, child as Text)\n            }\n            else if (isDirective) {\n              processDirectiveSingleText(node as Directive, child as Text)\n            }\n            break\n\n          case nodeType.EXPRESSION:\n            if (isElement) {\n              processElementSingleExpression(node as Element, child as Expression)\n            }\n            else if (isAttribute) {\n              processAttributeSingleExpression(node as Attribute, child as Expression)\n            }\n            else if (isProperty) {\n              processPropertySingleExpression(node as Property, child as Expression)\n            }\n            else if (isDirective) {\n              processDirectiveSingleExpression(node as Directive, child as Expression)\n            }\n            break\n\n        }\n      }\n      // 大于 1 个子节点，即有插值或 if 写法\n      else if (children) {\n        // 不支持 on-click=\"1{{xx}}2\" 或是 on-click=\"1{{#if x}}x{{else}}y{{/if}}2\"\n        // 1. 很难做性能优化\n        // 2. 全局搜索不到事件名，不利于代码维护\n        // 3. 不利于编译成静态函数\n        if (process.env.NODE_ENV === 'dev') {\n          if (isDirective) {\n            fatal(`指令的值不能用插值或 if 语法`)\n          }\n        }\n      }\n      // 0 个子节点\n      else if (currentElement) {\n        if (isAttribute) {\n          processAttributeEmptyChildren(currentElement, node as Attribute)\n        }\n        else if (isProperty) {\n          processPropertyEmptyChildren(currentElement, node as Property)\n        }\n        else if (isDirective) {\n          processDirectiveEmptyChildren(currentElement, node as Directive)\n        }\n      }\n\n      if (type === nodeType.EACH) {\n        checkEach(node as Each)\n      }\n      else if (type === nodeType.PARTIAL) {\n        checkPartial(node as Partial)\n      }\n      else if (isElement) {\n        checkElement(node as Element)\n      }\n      else if (currentElement && isAttribute && isSpecialAttr(currentElement, node as Attribute)) {\n        bindSpecialAttr(currentElement, node as Attribute)\n      }\n\n      return node\n\n    }\n    else {\n      if (process.env.NODE_ENV === 'dev') {\n        fatal(`出栈节点类型不匹配`)\n      }\n    }\n  },\n\n  processElementSingleText = function (element: Element, child: Text) {\n\n    // processElementSingleText 和 processElementSingleExpression\n    // 不把元素子节点智能转换为 textContent property\n    // 因为子节点还有 <div>1{{a}}{{b}}</div> 这样的情况\n    // 还是在序列化的时候统一处理比较好\n\n  },\n\n  processElementSingleExpression = function (element: Element, child: Expression) {\n\n    if (!element.isComponent && !element.slot && !child.safe) {\n      element.html = child.expr\n      element.children = env.UNDEFINED\n    }\n\n  },\n\n  processPropertyEmptyChildren = function (element: Element, prop: Property) {\n\n    if (prop.hint === config.HINT_BOOLEAN) {\n      prop.value = env.TRUE\n    }\n    else {\n      // string 或 number 类型的属性，如果不写值，直接忽略\n      replaceChild(prop)\n    }\n\n  },\n\n  processPropertySingleText = function (prop: Property, child: Text) {\n\n    const { text } = child\n\n    if (prop.hint === config.HINT_NUMBER) {\n      prop.value = toNumber(text)\n    }\n    else if (prop.hint === config.HINT_BOOLEAN) {\n      prop.value = text === env.RAW_TRUE || text === prop.name\n    }\n    else {\n      prop.value = text\n    }\n\n    prop.children = env.UNDEFINED\n\n  },\n\n  processPropertySingleExpression = function (prop: Property, child: Expression) {\n\n    const { expr } = child\n\n    prop.expr = expr\n    prop.children = env.UNDEFINED\n\n    // 对于有静态路径的表达式，可转为单向绑定指令，可实现精确更新视图，如下\n    // <div class=\"{{className}}\">\n\n    if (expr[env.RAW_STATIC_KEYPATH]) {\n      prop.binding = env.TRUE\n    }\n\n  },\n\n  processAttributeEmptyChildren = function (element: Element, attr: Attribute) {\n\n    const { name } = attr\n\n    if (isSpecialAttr(element, attr)) {\n      if (process.env.NODE_ENV === 'dev') {\n        fatal(`${name} 忘了写值吧？`)\n      }\n    }\n    // 比如 <Dog isLive>\n    else if (element.isComponent) {\n      attr.value = env.TRUE\n    }\n    // <div data-name checked>\n    else {\n      attr.value = string.startsWith(name, 'data-')\n        ? env.EMPTY_STRING\n        : name\n    }\n\n  },\n\n  processAttributeSingleText = function (attr: Attribute, child: Text) {\n\n    attr.value = child.text\n    attr.children = env.UNDEFINED\n\n  },\n\n  processAttributeSingleExpression = function (attr: Attribute, child: Expression) {\n\n    const { expr } = child\n\n    attr.expr = expr\n    attr.children = env.UNDEFINED\n\n    // 对于有静态路径的表达式，可转为单向绑定指令，可实现精确更新视图，如下\n    // <div class=\"{{className}}\">\n\n    if (expr[env.RAW_STATIC_KEYPATH]) {\n      attr.binding = env.TRUE\n    }\n\n  },\n\n  processDirectiveEmptyChildren = function (element: Element, directive: Directive) {\n\n    directive.value = env.TRUE\n\n  },\n\n  processDirectiveSingleText = function (directive: Directive, child: Text) {\n\n    const { text } = child\n\n    // lazy 不需要编译表达式\n    // 因为 lazy 的值必须是大于 0 的数字\n    if (directive.name === config.DIRECTIVE_LAZY) {\n      if (is.numeric(text)) {\n        const value = toNumber(text)\n        if (value > 0) {\n          directive.value = value\n        }\n        else {\n          if (process.env.NODE_ENV === 'dev') {\n            fatal(`lazy 指令的值 [${text}] 必须大于 0`)\n          }\n        }\n      }\n      else {\n        if (process.env.NODE_ENV === 'dev') {\n          fatal(`lazy 指令的值 [${text}] 必须是数字`)\n        }\n      }\n    }\n    else {\n\n      // 指令的值是纯文本，可以预编译表达式，提升性能\n      const expr = exprCompiler.compile(text),\n\n      // model=\"xx\" model=\"this.x\" 值只能是标识符或 Member\n      isModel = directive.name === config.DIRECTIVE_MODEL,\n\n      // on-click=\"xx\" on-click=\"method()\" 值只能是标识符或函数调用\n      isEvent = directive.name === config.DIRECTIVE_EVENT\n\n      if (expr) {\n\n        if (process.env.NODE_ENV === 'dev') {\n          // 如果指令表达式是函数调用，则只能调用方法（难道还有别的好调用的吗？）\n          if (expr.type === exprNodeType.CALL) {\n            const { callee } = expr as ExpressionCall\n            if (callee.type !== exprNodeType.IDENTIFIER) {\n              fatal('指令表达式的类型如果是函数调用，则只能调用方法')\n            }\n          }\n          // 上面检测过方法调用，接下来事件指令只需要判断是否是标识符\n          else if (isEvent && expr.type !== exprNodeType.IDENTIFIER) {\n            fatal('事件指令的表达式只能是 标识符 或 函数调用')\n          }\n\n          if (isModel && !expr[env.RAW_STATIC_KEYPATH]) {\n            fatal(`model 指令的值格式错误: [${expr.raw}]`)\n          }\n        }\n\n        directive.expr = expr\n\n      }\n      else {\n        if (process.env.NODE_ENV === 'dev') {\n          if (isModel || isEvent) {\n            fatal(`${directive.name} 指令的表达式错误: [${text}]`)\n          }\n        }\n      }\n\n      directive.value = text\n\n    }\n\n    directive.children = env.UNDEFINED\n\n  },\n\n  processDirectiveSingleExpression = function (directive: Directive, child: Expression) {\n\n    if (process.env.NODE_ENV === 'dev') {\n      fatal(`指令的表达式不能用插值语法`)\n    }\n\n  },\n\n  checkCondition = function (condition: If | ElseIf | Else) {\n\n    let currentNode: any = condition,\n\n    prevNode: any,\n\n    hasChildren: boolean | undefined,\n\n    hasNext: boolean | undefined\n\n    // 变成一维数组，方便遍历\n    while (env.TRUE) {\n      if (currentNode.children) {\n        if (!hasNext) {\n          if (currentNode.next) {\n            delete currentNode.next\n          }\n        }\n        hasChildren = hasNext = env.TRUE\n      }\n      prevNode = currentNode.prev\n      if (prevNode) {\n        // prev 仅仅用在 checkCondition 函数中\n        // 用完就可以删掉了\n        delete currentNode.prev\n        currentNode = prevNode\n      }\n      else {\n        break\n      }\n    }\n\n    // 每个条件都是空内容，则删掉整个 if\n    if (!hasChildren) {\n      replaceChild(currentNode)\n    }\n\n  },\n\n  checkEach = function (each: Each) {\n    // 没内容就干掉\n    if (!each.children) {\n      replaceChild(each)\n    }\n  },\n\n  checkPartial = function (partial: Partial) {\n    // 没内容就干掉\n    if (!partial.children) {\n      replaceChild(partial)\n    }\n  },\n\n  checkElement = function (element: Element) {\n\n    if (process.env.NODE_ENV === 'dev') {\n      const isTemplate = element.tag === env.RAW_TEMPLATE\n\n      if (element.slot) {\n        if (!isTemplate) {\n          fatal(`slot 属性只能用于 <template>`)\n        }\n        else if (element.key) {\n          fatal(`<template> 不支持 key`)\n        }\n        else if (element.ref) {\n          fatal(`<template> 不支持 ref`)\n        }\n        else if (element.attrs) {\n          fatal(`<template> 不支持属性或指令`)\n        }\n      }\n      else if (isTemplate) {\n        fatal(`<template> 不写 slot 属性是几个意思？`)\n      }\n      else if (element.tag === env.RAW_SLOT && !element.name) {\n        fatal(`<slot> 不写 name 属性是几个意思？`)\n      }\n    }\n\n  },\n\n  bindSpecialAttr = function (element: Element, attr: Attribute) {\n\n    const { name, value } = attr,\n\n    // 这三个属性值要求是字符串\n    isStringValueRequired = name === env.RAW_NAME || name === env.RAW_SLOT\n\n    if (process.env.NODE_ENV === 'dev') {\n      // 因为要拎出来给 element，所以不能用 if\n      if (array.last(nodeStack) !== element) {\n        fatal(`${name} 不能写在 if 内`)\n      }\n      // 对于所有特殊属性来说，空字符串是肯定不行的，没有任何意义\n      if (value === env.EMPTY_STRING) {\n        fatal(`${name} 的值不能是空字符串`)\n      }\n      else if (isStringValueRequired && string.falsy(value)) {\n        fatal(`${name} 的值只能是字符串字面量`)\n      }\n    }\n\n    element[name] = isStringValueRequired ? value : attr\n    replaceChild(attr)\n\n  },\n\n  isSpecialAttr = function (element: Element, attr: Attribute): boolean {\n    return helper.specialAttrs[attr.name]\n      || element.tag === env.RAW_SLOT && attr.name === env.RAW_NAME\n  },\n\n  replaceChild = function (oldNode: Node, newNode?: Node) {\n\n    let currentBranch: Branch | void = array.last(nodeStack),\n\n    isAttr: boolean | void,\n\n    list: Node[] | void,\n\n    index: number\n\n    if (currentBranch) {\n      isAttr = currentElement && currentElement === currentBranch\n      list = isAttr\n        ? (currentBranch as Element).attrs\n        : currentBranch.children\n    }\n    else {\n      list = nodeList\n    }\n\n    if (list) {\n      index = array.indexOf(list, oldNode)\n      if (index >= 0) {\n        if (newNode) {\n          list[index] = newNode\n        }\n        else {\n          list.splice(index, 1)\n          if (currentBranch && !list.length) {\n            if (isAttr) {\n              delete (currentBranch as Element).attrs\n            }\n            else {\n              currentBranch.children = env.UNDEFINED\n            }\n          }\n        }\n      }\n    }\n\n  },\n\n  addChild = function (node: Node) {\n\n    /**\n     * <div>\n     *    <input>\n     *    <div></div>\n     * </div>\n     *\n     * <div>\n     *    <input>xxx\n     * </div>\n     */\n    if (!currentElement) {\n      popSelfClosingElementIfNeeded()\n    }\n\n    const type = node.type, currentBranch: Branch = array.last(nodeStack)\n\n    // else 系列只是 if 的递进节点，不需要加入 nodeList\n    if (type === nodeType.ELSE || type === nodeType.ELSE_IF) {\n\n      const lastNode = array.pop(ifStack)\n\n      if (lastNode) {\n\n        // 方便 checkCondition 逆向遍历\n        (node as any).prev = lastNode\n\n        // lastNode 只能是 if 或 else if 节点\n        if (lastNode.type === nodeType.ELSE_IF || lastNode.type === nodeType.IF) {\n          lastNode.next = node\n          popStack(lastNode.type)\n          array.push(ifStack, node)\n        }\n        else if (type === nodeType.ELSE_IF) {\n          if (process.env.NODE_ENV === 'dev') {\n            fatal('大哥，else 后面不能跟 else if 啊')\n          }\n        }\n        else {\n          if (process.env.NODE_ENV === 'dev') {\n            fatal('大哥，只能写一个 else 啊！！')\n          }\n        }\n      }\n      else {\n        if (process.env.NODE_ENV === 'dev') {\n          fatal('不写 if 是几个意思？？')\n        }\n      }\n\n    }\n    else {\n\n      if (currentBranch) {\n        array.push(\n          // 这里不能写 currentElement && !currentAttribute，举个例子\n          //\n          // <div id=\"x\" {{#if}} name=\"xx\" alt=\"xx\" {{/if}}\n          //\n          // 当 name 属性结束后，条件满足，但此时已不是元素属性层级了\n          currentElement && currentBranch.type === nodeType.ELEMENT\n            ? currentElement.attrs || (currentElement.attrs = [])\n            : currentBranch.children || (currentBranch.children = []),\n          node\n        )\n      }\n      else {\n        array.push(nodeList, node)\n      }\n\n      if (type === nodeType.IF) {\n        // 只要是 if 节点，并且和 element 同级，就加上 stub\n        // 方便 virtual dom 进行对比\n        // 这个跟 virtual dom 的实现原理密切相关，不加 stub 会有问题\n        if (!currentElement) {\n          (node as If).stub = env.TRUE\n        }\n        array.push(ifStack, node)\n      }\n\n    }\n\n\n\n    if (node.isLeaf) {\n      // 当前树枝节点如果是静态的，一旦加入了一个非静态子节点，改变当前树枝节点的 isStatic\n      // 这里不处理树枝节点的进栈，因为当树枝节点出栈时，还有一次处理机会，那时它的 isStatic 已确定下来，不会再变\n      if (currentBranch) {\n        if (currentBranch.isStatic && !node.isStatic) {\n          currentBranch.isStatic = env.FALSE\n        }\n        // 当前树枝节点是简单节点，一旦加入了一个复杂子节点，当前树枝节点变为复杂节点\n        if (!currentBranch.isComplex && node.isComplex) {\n          currentBranch.isComplex = env.TRUE\n        }\n      }\n    }\n    else {\n      array.push(nodeStack, node)\n    }\n\n  },\n\n  addTextChild = function (text: string) {\n    // [注意]\n    // 这里不能随便删掉\n    // 因为收集组件的子节点会受影响，举个例子：\n    // <Component>\n    //\n    // </Component>\n    // 按现在的逻辑，这样的组件是没有子节点的，因为在这里过滤掉了，因此该组件没有 slot\n    // 如果这里放开了，组件就会有一个 slot\n    text = trimBreakline(text)\n    if (text) {\n      addChild(\n        creator.createText(text)\n      )\n    }\n  },\n\n  htmlParsers = [\n    function (content: string): string | void {\n      if (!currentElement) {\n        const match = content.match(tagPattern)\n        // 必须以 <tag 开头才能继续\n        // 如果 <tag 前面有别的字符，会走进第四个 parser\n        if (match && match.index === 0) {\n          const tag = match[2]\n          if (match[1] === '/') {\n            /**\n             * 处理可能存在的自闭合元素，如下\n             *\n             * <div>\n             *    <input>\n             * </div>\n             */\n            popSelfClosingElementIfNeeded(tag)\n            popStack(nodeType.ELEMENT, tag)\n          }\n          else {\n\n            /**\n             * template 只能写在组件的第一级，如下：\n             *\n             * <Component>\n             *   <template slot=\"xx\">\n             *     111\n             *   </template>\n             * </Component>\n             */\n            if (process.env.NODE_ENV === 'dev') {\n              if (tag === env.RAW_TEMPLATE) {\n                const lastNode = array.last(nodeStack)\n                if (!lastNode || !lastNode.isComponent) {\n                  fatal('<template> 只能写在组件标签内')\n                }\n              }\n            }\n\n            const node = creator.createElement(\n              tag,\n              array.has(svgTagNames, tag),\n              componentNamePattern.test(tag)\n            )\n\n            addChild(node)\n            currentElement = node\n          }\n          return match[0]\n        }\n      }\n    },\n    // 处理标签的 > 或 />，不论开始还是结束标签\n    function (content: string): string | void {\n      const match = content.match(selfClosingTagPattern)\n      if (match) {\n\n        // 处理开始标签的 > 或 />\n        if (currentElement && !currentAttribute) {\n\n          // 自闭合标签\n          if (match[1] === '/') {\n            popStack(currentElement.type, currentElement.tag)\n          }\n\n          currentElement = env.UNDEFINED\n        }\n        // 处理结束标签的 >\n        return match[0]\n      }\n    },\n    // 处理 attribute directive 的 name 部分\n    function (content: string): string | void {\n      // 当前在 element 层级\n      if (currentElement && !currentAttribute) {\n        const match = content.match(attributePattern)\n        if (match) {\n\n          // <div class=\"11 name=\"xxx\"></div>\n          // 这里会匹配上 xxx\"，match[2] 就是那个引号\n          if (process.env.NODE_ENV === 'dev') {\n            if (match[2]) {\n              fatal(`上一个属性似乎没有正常结束`)\n            }\n          }\n\n          let node: Attribute | Directive | Property, name = match[1]\n\n          if (name === config.DIRECTIVE_MODEL || name === env.RAW_TRANSITION) {\n            node = creator.createDirective(\n              string.camelize(name)\n            )\n          }\n          // 这里要用 on- 判断前缀，否则 on 太容易重名了\n          else if (string.startsWith(name, config.DIRECTIVE_ON + directiveSeparator)) {\n            const event = slicePrefix(name, config.DIRECTIVE_ON + directiveSeparator)\n            if (process.env.NODE_ENV === 'dev') {\n              if (!event) {\n                fatal('缺少事件名称')\n              }\n            }\n            node = creator.createDirective(\n              config.DIRECTIVE_EVENT,\n              string.camelize(event)\n            )\n          }\n          // 当一个元素绑定了多个事件时，可分别指定每个事件的 lazy\n          // 当只有一个事件时，可简写成 lazy\n          // <div on-click=\"xx\" lazy-click\n          else if (string.startsWith(name, config.DIRECTIVE_LAZY)) {\n            let lazy = slicePrefix(name, config.DIRECTIVE_LAZY)\n            if (string.startsWith(lazy, directiveSeparator)) {\n              lazy = slicePrefix(lazy, directiveSeparator)\n            }\n            node = creator.createDirective(\n              config.DIRECTIVE_LAZY,\n              lazy ? string.camelize(lazy) : env.EMPTY_STRING\n            )\n          }\n          // 这里要用 o- 判断前缀，否则 o 太容易重名了\n          else if (string.startsWith(name, config.DIRECTIVE_CUSTOM + directiveSeparator)) {\n            const custom = slicePrefix(name, config.DIRECTIVE_CUSTOM + directiveSeparator)\n            if (process.env.NODE_ENV === 'dev') {\n              if (!custom) {\n                fatal('缺少自定义指令名称')\n              }\n            }\n            node = creator.createDirective(\n              config.DIRECTIVE_CUSTOM,\n              string.camelize(custom)\n            )\n          }\n          else {\n            // 组件用驼峰格式\n            if (currentElement.isComponent) {\n              node = creator.createAttribute(\n                string.camelize(name)\n              )\n            }\n            // 原生 dom 属性\n            else {\n\n              // 把 attr 优化成 prop\n              const lowerName = name.toLowerCase()\n\n              // <slot> 或 <template> 中的属性不用识别为 property\n              if (helper.specialTags[currentElement.tag]) {\n                node = creator.createAttribute(name)\n              }\n              // 尝试识别成 property\n              else if (array.has(stringProperyNames, lowerName)) {\n                node = creator.createProperty(\n                  attr2Prop[lowerName] || lowerName,\n                  config.HINT_STRING\n                )\n              }\n              else if (array.has(numberProperyNames, lowerName)) {\n                node = creator.createProperty(\n                  attr2Prop[lowerName] || lowerName,\n                  config.HINT_NUMBER\n                )\n              }\n              else if (array.has(booleanProperyNames, lowerName)) {\n                node = creator.createProperty(\n                  attr2Prop[lowerName] || lowerName,\n                  config.HINT_BOOLEAN\n                )\n              }\n              // 没辙，还是个 attribute\n              else {\n                node = creator.createAttribute(name)\n              }\n\n            }\n          }\n\n          addChild(node)\n\n          // 这里先记下，下一个 handler 要匹配结束引号\n          startQuote = match[3]\n\n          // 有属性值才需要设置 currentAttribute，便于后续收集属性值\n          if (startQuote) {\n            currentAttribute = node\n          }\n          else {\n            popStack(node.type)\n          }\n\n          return match[0]\n        }\n      }\n    },\n    function (content: string): string | void {\n\n      let text: string | void, match: RegExpMatchArray | null\n\n      // 处理 attribute directive 的 value 部分\n      if (currentAttribute && startQuote) {\n\n        match = content.match(patternCache[startQuote] || (patternCache[startQuote] = new RegExp(startQuote)))\n\n        // 有结束引号\n        if (match) {\n          text = string.slice(content, 0, match.index)\n          addTextChild(text)\n\n          text += startQuote\n\n          // attribute directive 结束了\n          // 此时如果一个值都没收集到，需设置一个空字符串\n          // 否则无法区分 <div a b=\"\"> 中的 a 和 b\n          if (!currentAttribute.children) {\n            addChild(\n              creator.createText(env.EMPTY_STRING)\n            )\n          }\n\n          popStack(currentAttribute.type)\n          currentAttribute = env.UNDEFINED\n\n        }\n        // 没有结束引号，整段匹配\n        // 如 id=\"1{{x}}2\" 中的 1\n        else if (nextIsBlock) {\n          text = content\n          addTextChild(text)\n        }\n        else {\n          if (process.env.NODE_ENV === 'dev') {\n            fatal(`${currentAttribute.name} 没有找到结束引号`)\n          }\n        }\n\n      }\n      // 如果不加判断，类似 <div {{...obj}}> 这样写，会把空格当做一个属性\n      // 收集文本只有两处：属性值、元素内容\n      // 属性值通过上面的 if 处理过了，这里只需要处理元素内容\n      else if (!currentElement) {\n\n        // 获取 <tag 前面的字符\n        match = content.match(tagPattern)\n\n        text = match && match.index as number > 0\n          ? string.slice(content, 0, match.index)\n          : content\n\n        addTextChild(text)\n\n      }\n      else {\n        if (process.env.NODE_ENV === 'dev') {\n          if (string.trim(content)) {\n            fatal(`<${currentElement.tag}> 属性里不要写乱七八糟的字符`)\n          }\n        }\n        text = content\n      }\n      return text\n    },\n  ],\n\n  blockParsers = [\n    // {{#each xx:index}}\n    function (source: string) {\n      if (string.startsWith(source, config.SYNTAX_EACH)) {\n        source = slicePrefix(source, config.SYNTAX_EACH)\n        const terms = source.replace(/\\s+/g, env.EMPTY_STRING).split(':')\n        if (terms[0]) {\n          const expr = exprCompiler.compile(string.trim(terms[0]))\n          if (expr) {\n            if (!currentElement) {\n              return creator.createEach(\n                expr,\n                string.trim(terms[1])\n              )\n            }\n            else {\n              if (process.env.NODE_ENV === 'dev') {\n                fatal(\n                  currentAttribute\n                    ? `each 不能写在属性的值里`\n                    : `each 不能写在属性层级`\n                )\n              }\n            }\n          }\n        }\n        if (process.env.NODE_ENV === 'dev') {\n          fatal(`无效的 each`)\n        }\n      }\n    },\n    // {{#import name}}\n    function (source: string) {\n      if (string.startsWith(source, config.SYNTAX_IMPORT)) {\n        source = slicePrefix(source, config.SYNTAX_IMPORT)\n        if (source) {\n          if (!currentElement) {\n            return creator.createImport(source)\n          }\n          else {\n            if (process.env.NODE_ENV === 'dev') {\n              fatal(\n                currentAttribute\n                  ? `import 不能写在属性的值里`\n                  : `import 不能写在属性层级`\n              )\n            }\n          }\n        }\n        if (process.env.NODE_ENV === 'dev') {\n          fatal(`无效的 import`)\n        }\n      }\n    },\n    // {{#partial name}}\n    function (source: string) {\n      if (string.startsWith(source, config.SYNTAX_PARTIAL)) {\n        source = slicePrefix(source, config.SYNTAX_PARTIAL)\n        if (source) {\n          if (!currentElement) {\n            return creator.createPartial(source)\n          }\n          else {\n            if (process.env.NODE_ENV === 'dev') {\n              fatal(\n                currentAttribute\n                  ? `partial 不能写在属性的值里`\n                  : `partial 不能写在属性层级`\n              )\n            }\n          }\n        }\n        if (process.env.NODE_ENV === 'dev') {\n          fatal(`无效的 partial`)\n        }\n      }\n    },\n    // {{#if expr}}\n    function (source: string) {\n      if (string.startsWith(source, config.SYNTAX_IF)) {\n        source = slicePrefix(source, config.SYNTAX_IF)\n        const expr = exprCompiler.compile(source)\n        if (expr) {\n          return creator.createIf(expr)\n        }\n        if (process.env.NODE_ENV === 'dev') {\n          fatal(`无效的 if`)\n        }\n      }\n    },\n    // {{else if expr}}\n    function (source: string) {\n      if (string.startsWith(source, config.SYNTAX_ELSE_IF)) {\n        source = slicePrefix(source, config.SYNTAX_ELSE_IF)\n        const expr = exprCompiler.compile(source)\n        if (expr) {\n          return creator.createElseIf(expr)\n        }\n        if (process.env.NODE_ENV === 'dev') {\n          fatal(`无效的 else if`)\n        }\n      }\n    },\n    // {{else}}\n    function (source: string) {\n      if (string.startsWith(source, config.SYNTAX_ELSE)) {\n        source = slicePrefix(source, config.SYNTAX_ELSE)\n        if (!string.trim(source)) {\n          return creator.createElse()\n        }\n        if (process.env.NODE_ENV === 'dev') {\n          fatal(`else 后面不要写乱七八糟的东西`)\n        }\n      }\n    },\n    // {{...obj}}\n    function (source: string) {\n      if (string.startsWith(source, config.SYNTAX_SPREAD)) {\n        source = slicePrefix(source, config.SYNTAX_SPREAD)\n        const expr = exprCompiler.compile(source)\n        if (expr) {\n          if (currentElement && currentElement.isComponent) {\n            return creator.createSpread(\n              expr,\n              is.string(expr[env.RAW_STATIC_KEYPATH])\n                ? env.TRUE\n                : env.FALSE\n            )\n          }\n          else {\n            if (process.env.NODE_ENV === 'dev') {\n              fatal(`延展属性只能用于组件属性`)\n            }\n          }\n        }\n        if (process.env.NODE_ENV === 'dev') {\n          fatal(`无效的 spread`)\n        }\n      }\n    },\n    // {{expr}}\n    function (source: string) {\n      if (!config.SYNTAX_COMMENT.test(source)) {\n        source = string.trim(source)\n        const expr = exprCompiler.compile(source)\n        if (expr) {\n          return creator.createExpression(expr, isSafeBlock)\n        }\n        if (process.env.NODE_ENV === 'dev') {\n          fatal(`无效的 expression`)\n        }\n      }\n    },\n  ],\n\n  parseHtml = function (content: string) {\n    let tpl = content\n    while (tpl) {\n      array.each(\n        htmlParsers,\n        function (parse) {\n          const match = parse(tpl)\n          if (match) {\n            tpl = string.slice(tpl, match.length)\n            return env.FALSE\n          }\n        }\n      )\n    }\n    str = string.slice(str, content.length)\n  },\n\n  parseBlock = function (content: string, all: string) {\n    if (content) {\n      // 结束当前 block\n      // 正则会去掉 {{ xx }} 里面两侧的空白符，因此如果有 /，一定是第一个字符\n      if (string.charAt(content) === '/') {\n\n        /**\n         * 处理可能存在的自闭合元素，如下\n         *\n         * {{#if xx}}\n         *    <input>\n         * {{/if}}\n         */\n        popSelfClosingElementIfNeeded()\n\n        const name = string.slice(content, 1)\n\n        let type = helper.name2Type[name], isCondition: boolean | void\n        if (type === nodeType.IF) {\n          const node = array.pop(ifStack)\n          if (node) {\n            type = node.type\n            isCondition = env.TRUE\n          }\n          else {\n            if (process.env.NODE_ENV === 'dev') {\n              fatal(`if 还没开始就结束了？`)\n            }\n          }\n        }\n\n        const node: any = popStack(type)\n        if (node && isCondition) {\n          checkCondition(node)\n        }\n      }\n      else {\n        // 开始下一个 block 或表达式\n        array.each(\n          blockParsers,\n          function (parse) {\n            const node = parse(content)\n            if (node) {\n              addChild(node)\n              return env.FALSE\n            }\n          }\n        )\n      }\n    }\n    str = string.slice(str, all.length)\n  }\n\n  while (str) {\n    // 匹配 {{ }}\n    match = str.match(blockPattern)\n    if (match) {\n\n      nextIsBlock = env.TRUE\n\n      // 裁剪开头到 {{ 之间的模板内容\n      if (match.index as number > 0) {\n        parseHtml(\n          string.slice(str, 0, match.index)\n        )\n      }\n\n      // 获取开始分隔符的长度，用于判断是否是安全输出\n      length = match[1].length\n\n      // 避免手误写成 {{{ name }} 或 {{ name }}}\n      if (length === match[3].length) {\n        isSafeBlock = length === 2\n        parseBlock(match[2], match[0])\n      }\n      else {\n        if (process.env.NODE_ENV === 'dev') {\n          fatal(`${match[1]} and ${match[3]} is not a pair.`)\n        }\n      }\n\n    }\n    else {\n      nextIsBlock = env.FALSE\n      parseHtml(str)\n    }\n  }\n\n  return compileCache[content] = nodeList\n\n}","import * as env from '../util/env'\n\nexport default function (target: any): boolean {\n  return target === env.UNDEFINED\n}\n","export default function (target: any): string {\n  return JSON.stringify(target)\n}\n","import * as config from 'yox-config/index'\n\nimport isDef from 'yox-common/src/function/isDef'\nimport isUndef from 'yox-common/src/function/isUndef'\nimport toJSON from 'yox-common/src/function/toJSON'\n\nimport * as env from 'yox-common/src/util/env'\nimport * as array from 'yox-common/src/util/array'\nimport * as string from 'yox-common/src/util/string'\nimport * as object from 'yox-common/src/util/object'\n\nimport * as exprNodeType from 'yox-expression-compiler/src/nodeType'\nimport * as nodeType from './nodeType'\n\nimport ExpressionNode from 'yox-expression-compiler/src/node/Node'\nimport ExpressionLiteral from 'yox-expression-compiler/src/node/Literal'\nimport ExpressionIdentifier from 'yox-expression-compiler/src/node/Identifier'\nimport ExpressionCall from 'yox-expression-compiler/src/node/Call'\n\nimport Node from './node/Node'\nimport Text from './node/Text'\nimport Each from './node/Each'\nimport If from './node/If'\nimport ElseIf from './node/ElseIf'\nimport Element from './node/Element'\nimport Attribute from './node/Attribute'\nimport Directive from './node/Directive'\nimport Property from './node/Property'\nimport Expression from './node/Expression'\nimport Import from './node/Import'\nimport Partial from './node/Partial'\nimport Spread from './node/Spread'\n\n/**\n * 这里的难点在于处理 Element 的 children，举个例子：\n *\n * ['1', _x(expr), _l(expr, index, generate), _x(expr) ? ['1', _x(expr), _l(expr, index, generate)] : y]\n *\n * children 用数组表示，其中表达式求出的值可能是任意类型，比如数组或对象，我们无法控制表达式的值最终会是什么类型\n *\n * 像 each 或 import 这样的语法，内部其实会产生一个 vnode 数组，这里就出现了两个难点：\n *\n * 1. 如何区分 each 或其他语法产生的数组和表达式求值的数组\n * 2. 如何避免频繁的创建数组\n *\n * 我能想到的解决方案是，根据当前节点类型，如果是元素，则确保 children 的每一项的值序列化后都是函数调用的形式\n *\n * 这样能确保是从左到右依次执行，也就便于在内部创建一个公共数组，执行一个函数就收集一个值，而不管那个值到底是什么类型\n *\n */\n\n// 是否要执行 join 操作\nconst joinStack: boolean[] = [],\n\n// 是否正在收集子节点\ncollectStack: (boolean | void)[] = [],\n\nnodeStringify = {},\n\nRENDER_SLOT = 'a',\n\nRENDER_EACH = 'b',\n\nRENDER_EXPRESSION = 'c',\n\nRENDER_EXPRESSION_ARG = 'd',\n\nRENDER_EXPRESSION_VNODE = 'e',\n\nRENDER_TEXT_VNODE = 'f',\n\nRENDER_ELEMENT_VNODE = 'g',\n\nRENDER_PARTIAL = 'h',\n\nRENDER_IMPORT = 'i',\n\nARG_CONTEXT = 'j',\n\nSEP_COMMA = ',',\n\nSEP_COLON = ':',\n\nSEP_PLUS = '+',\n\nSTRING_TRUE = '!0',\n\nSTRING_FALSE = '!1',\n\nSTRING_EMPTY = toJSON(env.EMPTY_STRING),\n\nCODE_RETURN = 'return ',\n\nCODE_PREFIX = `function(${\n  array.join([\n    RENDER_EXPRESSION,\n    RENDER_EXPRESSION_ARG,\n    RENDER_EXPRESSION_VNODE,\n    RENDER_TEXT_VNODE,\n    RENDER_ELEMENT_VNODE,\n    RENDER_SLOT,\n    RENDER_PARTIAL,\n    RENDER_IMPORT,\n    RENDER_EACH\n  ], SEP_COMMA)\n}){return `,\n\nCODE_SUFFIX = `}`\n\n// 表达式求值是否要求返回字符串类型\nlet isStringRequired: boolean | void\n\nfunction stringifyObject(obj: Object): string {\n  const fields = []\n  object.each(\n    obj,\n    function (value: any, key: string) {\n      if (isDef(value)) {\n        array.push(\n          fields,\n          `${toJSON(key)}${SEP_COLON}${value}`\n        )\n      }\n    }\n  )\n  return `{${array.join(fields, SEP_COMMA)}}`\n}\n\nfunction stringifyArray(arr: any[]): string {\n  return `[${array.join(arr, SEP_COMMA)}]`\n}\n\nfunction stringifyCall(name: string, arg: string): string {\n  return `${name}(${arg})`\n}\n\nfunction stringifyFunction(result: string | void, arg?: string): string {\n  return `function(${arg || env.EMPTY_STRING}){${result || env.EMPTY_STRING}}`\n}\n\nfunction stringifyGroup(code: string): string {\n  return `(${code})`\n}\n\nfunction stringifyExpression(renderName: string, expr: ExpressionNode, extra: string[] | void): string {\n  const args = [toJSON(expr)]\n  if (extra) {\n    array.push(args, extra)\n  }\n  return stringifyCall(\n    renderName,\n    array.join(args, SEP_COMMA)\n  )\n}\n\nfunction stringifyExpressionArg(expr: ExpressionNode): string {\n  return stringifyExpression(\n    RENDER_EXPRESSION_ARG,\n    expr,\n    [ARG_CONTEXT]\n  )\n}\n\nfunction stringifyValue(value: any, expr: ExpressionNode | void, children: Node[] | void): string | void {\n  if (isDef(value)) {\n    return toJSON(value)\n  }\n  // 只有一个表达式时，保持原始类型\n  if (expr) {\n    return stringifyExpression(RENDER_EXPRESSION, expr)\n  }\n  // 多个值拼接时，要求是字符串\n  if (children) {\n    isStringRequired = children.length > 1\n    return stringifyChildren(children)\n  }\n}\n\nfunction stringifyChildren(children: Node[], isComplex: boolean | void): string {\n  // 如果是复杂节点的 children，则每个 child 的序列化都是函数调用的形式\n  // 因此最后可以拼接为 fn1(), fn2(), fn3() 这样依次调用，而不用再多此一举的使用数组，因为在 renderer 里也用不上这个数组\n\n  // children 大于一个时，才有 join 的可能，单个值 jion 啥啊...\n  const isJoin = children.length > 1 && !isComplex\n\n  array.push(joinStack, isJoin)\n  const value = array.join(\n    children.map(\n      function (child: Node) {\n        return nodeStringify[child.type](child)\n      }\n    ),\n    isJoin ? SEP_PLUS : SEP_COMMA\n  )\n  array.pop(joinStack)\n\n  return value\n\n}\n\nfunction stringifyConditionChildren(children: Node[] | void, isComplex: boolean | void): string | void {\n  if (children) {\n    const result = stringifyChildren(children, isComplex)\n    return children.length > 1 && isComplex\n      ? stringifyGroup(result)\n      : result\n  }\n}\n\nfunction stringifyIf(node: If | ElseIf, stub: boolean | void) {\n\n  let { children, isComplex, next } = node,\n\n  test = stringifyExpression(RENDER_EXPRESSION, node.expr),\n\n  yes = stringifyConditionChildren(children, isComplex),\n\n  no: string | void,\n\n  result: string\n\n  if (next) {\n    no = next.type === nodeType.ELSE\n      ? stringifyConditionChildren(next.children, next.isComplex)\n      : stringifyIf(next as ElseIf, stub)\n  }\n  // 到达最后一个条件，发现第一个 if 语句带有 stub，需创建一个注释标签占位\n  else if (stub) {\n    no = renderElement(\n      stringifyObject({\n        isComment: STRING_TRUE,\n        text: STRING_EMPTY,\n      })\n    )\n  }\n\n  if (isDef(yes) || isDef(no)) {\n\n    result = `${test}?${isDef(yes) ? yes : STRING_EMPTY}:${isDef(no) ? no : STRING_EMPTY}`\n\n    // 如果是连接操作，因为 ?: 优先级最低，因此要加 ()\n    return array.last(joinStack)\n      ? stringifyGroup(result)\n      : result\n\n  }\n\n  return STRING_EMPTY\n\n}\n\n/**\n * 目的是 保证调用参数顺序稳定，减少运行时判断\n */\nfunction trimArgs(list: (string | void)[]) {\n\n  let args: string[] = [], removable = env.TRUE\n\n  array.each(\n    list,\n    function (arg: string | void) {\n      if (isDef(arg)) {\n        removable = env.FALSE\n        array.unshift(args, arg)\n      }\n      else if (!removable) {\n        array.unshift(args, STRING_FALSE)\n      }\n    },\n    env.TRUE\n  )\n\n  return args\n\n}\n\nfunction renderElement(data: string, attrs: string | void, childs: string | void, slots: string | void): string {\n  return stringifyCall(\n    RENDER_ELEMENT_VNODE,\n    array.join(\n      trimArgs([data, attrs, childs, slots]),\n      SEP_COMMA\n    )\n  )\n}\n\nfunction getComponentSlots(children: Node[]): string | void {\n\n  const slots = {},\n\n  addSlot = function (name: string, nodes: Node[] | void) {\n\n    if (!array.falsy(nodes)) {\n      name = config.SLOT_DATA_PREFIX + name\n      array.push(\n        slots[name] || (slots[name] = []),\n        nodes\n      )\n    }\n\n  }\n\n  array.each(\n    children,\n    function (child: Node) {\n\n      // 找到具名 slot\n      if (child.type === nodeType.ELEMENT) {\n        const element = child as Element\n        if (element.slot) {\n          addSlot(element.slot, element.children)\n          return\n        }\n      }\n\n      // 匿名 slot，名称统一为 children\n      addSlot('children', [child])\n\n    }\n  )\n\n  object.each(\n    slots,\n    function (children: any, name: string) {\n      // 强制为复杂节点，因为 slot 的子节点不能用字符串拼接的方式来渲染\n      slots[name] = stringifyFunction(\n        stringifyChildren(children, env.TRUE)\n      )\n    }\n  )\n\n  if (!object.falsy(slots)) {\n    return stringifyObject(slots)\n  }\n\n}\n\nnodeStringify[nodeType.ELEMENT] = function (node: Element): string {\n\n  let { tag, isComponent, isSvg, isStatic, isComplex, name, ref, key, html, attrs, children } = node,\n\n  data: Record<string, any> = {},\n\n  elementAttrs: string[] = [],\n\n  elementChilds: string | void,\n\n  elementSlots: string | void,\n\n  args: string[]\n\n  if (tag === env.RAW_SLOT) {\n    args = [toJSON(config.SLOT_DATA_PREFIX + name)]\n    if (children) {\n      array.push(\n        args,\n        stringifyFunction(\n          stringifyChildren(children, env.TRUE)\n        )\n      )\n    }\n    return stringifyCall(\n      RENDER_SLOT,\n      array.join(args, SEP_COMMA)\n    )\n  }\n\n  array.push(collectStack, env.FALSE)\n\n  if (attrs) {\n    array.each(\n      attrs,\n      function (attr: Node) {\n        array.push(\n          elementAttrs,\n          nodeStringify[attr.type](attr)\n        )\n      }\n    )\n  }\n\n  data.tag = toJSON(tag)\n\n  if (isSvg) {\n    data.isSvg = STRING_TRUE\n  }\n\n  if (isStatic) {\n    data.isStatic = STRING_TRUE\n  }\n\n  if (ref) {\n    data.ref = stringifyValue(ref.value, ref.expr, ref.children)\n  }\n\n  if (key) {\n    data.key = stringifyValue(key.value, key.expr, key.children)\n  }\n\n  if (html) {\n    data.html = stringifyExpression(RENDER_EXPRESSION, html, [STRING_TRUE])\n  }\n\n  if (isComponent) {\n    data.isComponent = STRING_TRUE\n    if (children) {\n      collectStack[collectStack.length - 1] = env.TRUE\n      elementSlots = getComponentSlots(children)\n    }\n  }\n  else if (children) {\n    isStringRequired = env.TRUE\n    collectStack[collectStack.length - 1] = isComplex\n    elementChilds = stringifyChildren(children, isComplex)\n    if (isComplex) {\n      elementChilds = stringifyFunction(elementChilds)\n    }\n    else {\n      data.text = elementChilds\n      elementChilds = env.UNDEFINED\n    }\n  }\n\n  array.pop(collectStack)\n\n  return renderElement(\n    stringifyObject(data),\n    array.falsy(elementAttrs)\n      ? env.UNDEFINED\n      : stringifyArray(elementAttrs),\n    elementChilds\n      ? elementChilds\n      : env.UNDEFINED,\n    elementSlots\n  )\n\n}\n\nnodeStringify[nodeType.ATTRIBUTE] = function (node: Attribute): string {\n  const result: Record<string, any> = {\n    type: node.type,\n    name: toJSON(node.name),\n    binding: node.binding,\n  }\n  if (node.binding) {\n    result.expr = toJSON(node.expr)\n  }\n  else {\n    result.value = stringifyValue(node.value, node.expr, node.children)\n  }\n  return stringifyObject(result)\n}\n\nnodeStringify[nodeType.PROPERTY] = function (node: Property): string {\n  const result: Record<string, any> = {\n    type: node.type,\n    name: toJSON(node.name),\n    hint: node.hint,\n    binding: node.binding,\n  }\n  if (node.binding) {\n    result.expr = toJSON(node.expr)\n  }\n  else {\n    result.value = stringifyValue(node.value, node.expr, node.children)\n  }\n  return stringifyObject(result)\n}\n\nnodeStringify[nodeType.DIRECTIVE] = function (node: Directive): string {\n\n  const { type, name, value, expr } = node,\n\n  result: Record<string, any> = {\n    // renderer 遍历 attrs 要用 type\n    type,\n    // 换种说法\n    // name 变成命名空间\n    ns: toJSON(name),\n    // modifier 变成命名空间下的名称\n    name: toJSON(node.modifier),\n  }\n\n  // 尽可能把表达式编译成函数，这样对外界最友好\n  //\n  // 众所周知，事件指令会编译成函数，对于自定义指令来说，也要尽可能编译成函数\n  //\n  // 比如 o-tap=\"method()\" 或 o-log=\"{'id': '11'}\"\n  // 前者会编译成 handler（调用方法），后者会编译成 getter（取值）\n\n  if (expr) {\n\n    // 如果表达式明确是在调用方法，则序列化成 method + args 的形式\n    if (expr.type === exprNodeType.CALL) {\n      const { callee, args } = expr as ExpressionCall\n      // compiler 保证了函数调用的 callee 是标识符\n      result.method = toJSON((callee as ExpressionIdentifier).name)\n      // 为了实现运行时动态收集参数，这里序列化成函数\n      if (!array.falsy(args)) {\n        // args 函数在触发事件时调用，调用时会传入它的作用域，因此这里要加一个参数\n        result.args = stringifyFunction(\n          CODE_RETURN + stringifyArray(args.map(stringifyExpressionArg)),\n          ARG_CONTEXT\n        )\n      }\n    }\n    else if (name === config.DIRECTIVE_EVENT) {\n      // compiler 保证了这里只能是标识符\n      result.event = toJSON((expr as ExpressionIdentifier).name)\n    }\n    // <input model=\"id\">\n    else if (name === config.DIRECTIVE_MODEL) {\n      result.expr = toJSON(expr)\n    }\n    else if (name === config.DIRECTIVE_CUSTOM) {\n\n      // 如果表达式是字面量，直接取值\n      // 比如 o-log=\"1\" 取出来就是数字 1\n      if (expr.type === exprNodeType.LITERAL) {\n        result.value = toJSON(\n          (expr as ExpressionLiteral).value\n        )\n      }\n      // 取值函数\n      // getter 函数在触发事件时调用，调用时会传入它的作用域，因此这里要加一个参数\n      else {\n        result.getter = stringifyFunction(\n          CODE_RETURN + stringifyExpressionArg(expr),\n          ARG_CONTEXT\n        )\n      }\n\n    }\n\n  }\n\n  // 比如写了一个 o-x=\"x\"\n  // 外部可能是想从数据读取 x 的值，也可能只是想直接取字面量 x\n  if (isUndef(result.value) && isDef(value)) {\n    result.value = toJSON(value)\n  }\n\n  return stringifyObject(result)\n\n}\n\nnodeStringify[nodeType.SPREAD] = function (node: Spread): string {\n  return stringifyObject({\n    type: node.type,\n    expr: toJSON(node.expr),\n    binding: node.binding,\n  })\n}\n\nnodeStringify[nodeType.TEXT] = function (node: Text): string {\n\n  const result = toJSON(node.text)\n\n  if (array.last(collectStack) && !array.last(joinStack)) {\n    return stringifyCall(\n      RENDER_TEXT_VNODE,\n      result\n    )\n  }\n\n  return result\n}\n\nnodeStringify[nodeType.EXPRESSION] = function (node: Expression): string {\n\n  // 强制保留 isStringRequired 参数，减少运行时判断参数是否存在\n  // 因为还有 stack 参数呢，各种判断真的很累\n  let renderName = RENDER_EXPRESSION,\n\n  args = [isStringRequired ? STRING_TRUE : env.UNDEFINED]\n\n  if (array.last(collectStack) && !array.last(joinStack)) {\n    renderName = RENDER_EXPRESSION_VNODE\n  }\n\n  return stringifyExpression(\n    renderName,\n    node.expr,\n    trimArgs(args),\n  )\n}\n\nnodeStringify[nodeType.IF] = function (node: If): string {\n  return stringifyIf(node, node.stub)\n}\n\nnodeStringify[nodeType.EACH] = function (node: Each): string {\n\n  const expr = toJSON(node.expr),\n\n  index = node.index ? `, ${toJSON(node.index)}` : env.EMPTY_STRING,\n\n  // compiler 保证了 children 一定有值\n  children = stringifyFunction(\n    stringifyChildren(node.children as Node[], node.isComplex)\n  )\n\n  return stringifyCall(RENDER_EACH, `${expr}${index},${children}`)\n\n}\n\nnodeStringify[nodeType.PARTIAL] = function (node: Partial): string {\n\n  const name = toJSON(node.name),\n\n  // compiler 保证了 children 一定有值\n  children = stringifyFunction(\n    stringifyChildren(node.children as Node[], node.isComplex)\n  )\n\n  return stringifyCall(RENDER_PARTIAL, `${name},${children}`)\n\n}\n\nnodeStringify[nodeType.IMPORT] = function (node: Import): string {\n\n  const name = toJSON(node.name)\n\n  return stringifyCall(RENDER_IMPORT, `${name}`)\n\n}\n\nexport function stringify(node: Node): string {\n  return CODE_PREFIX + nodeStringify[node.type](node) + CODE_SUFFIX\n}\n\nexport function hasStringify(code: string): boolean {\n  return string.startsWith(code, CODE_PREFIX)\n}","import isDef from 'yox-common/src/function/isDef'\nimport isUndef from 'yox-common/src/function/isUndef'\nimport invoke from 'yox-common/src/function/execute'\n\nimport * as env from 'yox-common/src/util/env'\nimport * as array from 'yox-common/src/util/array'\nimport * as object from 'yox-common/src/util/object'\nimport * as keypathUtil from 'yox-common/src/util/keypath'\n\nimport * as nodeType from './nodeType'\nimport * as interpreter from './interpreter'\n\nimport Node from './node/Node'\nimport Keypath from './node/Keypath'\nimport Identifier from './node/Identifier'\nimport Literal from './node/Literal'\nimport Member from './node/Member'\nimport Ternary from './node/Ternary'\nimport Binary from './node/Binary'\nimport Unary from './node/Unary'\nimport Call from './node/Call'\n\nimport ArrayNode from './node/Array'\nimport ObjectNode from './node/Object'\n\nconst nodeExecutor = {}\n\nnodeExecutor[nodeType.LITERAL] = function (node: Literal): any {\n  return node.value\n}\n\nnodeExecutor[nodeType.IDENTIFIER] = function (node: Identifier, getter: (keypath: string, node: Keypath) => any): any {\n  return getter(node.name, node)\n}\n\nnodeExecutor[nodeType.MEMBER] = function (node: Member, getter?: (keypath: string, node: Keypath) => any, context?: any): any {\n\n  /**\n   * 先说第一种奇葩情况：\n   *\n   * 'xx'.length\n   *\n   * 没有变量数据，直接执行字面量，这里用不上 getter\n   *\n   * 第二种：\n   *\n   * a.b.c\n   *\n   * 这是常规操作\n   *\n   * 第三种：\n   *\n   * 'xx'[name]\n   *\n   * 以字面量开头，后面会用到变量\n   *\n   */\n\n  let { props, staticKeypath } = node, first: any, data: any\n\n  if (isUndef(staticKeypath)) {\n\n    // props 至少两个，否则无法创建 Member\n    first = props[0]\n\n    if (first.type === nodeType.IDENTIFIER) {\n      staticKeypath = (first as Identifier).name\n    }\n    else {\n      data = execute(first, getter, context)\n    }\n\n    for (let i = 1, len = props.length; i < len; i++) {\n      staticKeypath = keypathUtil.join(\n        staticKeypath,\n        execute(props[i], getter, context)\n      )\n    }\n\n  }\n\n  if (isDef(data)) {\n    data = object.get(data, staticKeypath as string)\n    return data ? data.value : env.UNDEFINED\n  }\n\n  if (getter) {\n    return getter(staticKeypath as string, node)\n  }\n\n}\n\nnodeExecutor[nodeType.UNARY] = function (node: Unary, getter?: (keypath: string, node: Keypath) => any, context?: any): any {\n  return interpreter.unary[node.operator].exec(\n    execute(node.arg, getter, context)\n  )\n}\n\nnodeExecutor[nodeType.BINARY] = function (node: Binary, getter?: (keypath: string, node: Keypath) => any, context?: any): any {\n  return interpreter.binary[node.operator].exec(\n    execute(node.left, getter, context),\n    execute(node.right, getter, context)\n  )\n}\n\nnodeExecutor[nodeType.TERNARY] = function (node: Ternary, getter?: (keypath: string, node: Keypath) => any, context?: any): any {\n  return execute(node.test, getter, context)\n    ? execute(node.yes, getter, context)\n    : execute(node.no, getter, context)\n}\n\nnodeExecutor[nodeType.ARRAY] = function (node: ArrayNode, getter?: (keypath: string, node: Keypath) => any, context?: any): any {\n  return node.elements.map(\n    function (node) {\n      return execute(node, getter, context)\n    }\n  )\n}\n\nnodeExecutor[nodeType.OBJECT] = function (node: ObjectNode, getter?: (keypath: string, node: Keypath) => any, context?: any): any {\n  let result = {}\n  array.each(\n    node.keys,\n    function (key, index) {\n      result[key] = execute(node.values[index], getter, context)\n    }\n  )\n  return result\n}\n\nnodeExecutor[nodeType.CALL] = function (node: Call, getter?: (keypath: string, node: Keypath) => any, context?: any): any {\n  return invoke(\n    execute(node.callee, getter, context),\n    context,\n    node.args.map(\n      function (node) {\n        return execute(node, getter, context)\n      }\n    )\n  )\n}\n\nexport function execute(node: Node, getter?: (keypath: string, node: Keypath) => any, context?: any): any {\n  return nodeExecutor[node.type](node, getter, context)\n}\n","import * as config from 'yox-config/index'\n\nimport isDef from 'yox-common/src/function/isDef'\nimport isUndef from 'yox-common/src/function/isUndef'\nimport execute from 'yox-common/src/function/execute'\nimport toString from 'yox-common/src/function/toString'\n\nimport * as is from 'yox-common/src/util/is'\nimport * as env from 'yox-common/src/util/env'\nimport * as array from 'yox-common/src/util/array'\nimport * as object from 'yox-common/src/util/object'\nimport * as logger from 'yox-common/src/util/logger'\nimport * as keypathUtil from 'yox-common/src/util/keypath'\n\nimport Event from 'yox-common/src/util/Event'\n\nimport ExpressionNode from 'yox-expression-compiler/src/node/Node'\nimport Keypath from 'yox-expression-compiler/src/node/Keypath'\n\nimport * as exprExecutor from 'yox-expression-compiler/src/executor'\n\nimport * as signature from 'yox-type/index'\n\nimport Yox from 'yox-type/src/Yox'\nimport VNode from 'yox-type/src/vnode/VNode'\nimport DirectiveHooks from 'yox-type/src/hooks/Directive'\nimport TransitionHooks from 'yox-type/src/hooks/Transition'\n\nimport * as nodeType from './nodeType'\n\nfunction setPair(target: any, name: string, key: string, value: any) {\n  const map = target[name] || (target[name] = {})\n  map[key] = value\n}\n\nexport function render(\n  context: Yox,\n  filters: Record<string, Function>,\n  partials: Record<string, Function | void>,\n  directives: Record<string, DirectiveHooks | void>,\n  transitions: Record<string, TransitionHooks | void>,\n  template: Function\n) {\n\n  let $keypath = env.EMPTY_STRING,\n\n  $scope: Record<string, any> = { $keypath },\n\n  $stack = [$keypath, $scope],\n\n  eventScope: Record<string, any> | void,\n\n  vnodeStack: VNode[][] = [],\n\n  localPartials: Record<string, Function> = {},\n\n  lookup = function (stack: any[], index: number, key: string, node: Keypath, depIgnore?: boolean, defaultKeypath?: string) {\n\n    let keypath = keypathUtil.join(stack[index], key),\n\n    scope = stack[index + 1]\n\n    node.absoluteKeypath = keypath\n\n    // 如果最后还是取不到值，用回最初的 keypath\n    if (isUndef(defaultKeypath)) {\n      defaultKeypath = keypath\n    }\n\n    if (eventScope && object.has(eventScope, key)) {\n      return eventScope[key]\n    }\n\n    // 如果取的是 scope 上直接有的数据，如 keypath\n    if (object.has(scope, key)) {\n      return scope[key]\n    }\n\n    // 如果取的是数组项，则要更进一步\n    if (object.has(scope, '$item')) {\n      scope = scope.$item\n\n      // 到这里 scope 可能为空\n      // 比如 new Array(10) 然后遍历这个数组，每一项肯定是空\n\n      // 取 this\n      if (key === env.EMPTY_STRING) {\n        return scope\n      }\n      // 取 this.xx\n      if (scope && object.has(scope, key)) {\n        return scope[key]\n      }\n    }\n\n    // 正常取数据\n    let result = context.get(keypath, lookup, depIgnore)\n    if (result === lookup) {\n      // undefined 或 true 都表示需要向上寻找\n      if (node.lookup !== env.FALSE && index > 1) {\n        index -= 2\n        return lookup(stack, index, key, node, depIgnore, defaultKeypath)\n      }\n      result = object.get(filters, key)\n      if (!result) {\n        node.absoluteKeypath = defaultKeypath\n        logger.warn(`data [${node.raw}] is not found.`)\n        return\n      }\n      result = result.value\n    }\n\n    return result\n\n  },\n\n  getValue = function (expr: ExpressionNode, depIgnore?: boolean, stack?: any[]): any {\n\n    const renderStack = stack || $stack,\n\n    { length } = renderStack\n\n    return exprExecutor.execute(\n      expr,\n      function (keypath: string, node: Keypath): any {\n        return lookup(\n          renderStack,\n          length - 2 * ((node.offset || 0) + 1),\n          keypath,\n          node,\n          depIgnore\n        )\n      },\n      context\n    )\n\n  },\n\n  addBinding = function (vnode: any, attr: Record<string, any>): any {\n\n    const { expr } = attr,\n\n    value = getValue(expr, env.TRUE),\n\n    key = keypathUtil.join(config.DIRECTIVE_BINDING, attr.name),\n\n    hooks = directives[config.DIRECTIVE_BINDING]\n\n    if (hooks) {\n      setPair(\n        vnode,\n        'directives',\n        key,\n        {\n          ns: config.DIRECTIVE_BINDING,\n          name: attr.name,\n          key,\n          hooks,\n          binding: expr.absoluteKeypath,\n          hint: attr.hint,\n        }\n      )\n    }\n\n    return value\n\n  },\n\n  spreadObject = function (vnode: any, attr: Record<string, any>) {\n\n    let { expr } = attr,\n\n    value = getValue(expr, attr.binding)\n\n    // 数组也算一种对象，要排除掉\n    if (is.object(value) && !is.array(value)) {\n\n      object.each(\n        value,\n        function (value: any, key: string) {\n          setPair(vnode, 'props', key, value)\n        }\n      )\n\n      const absoluteKeypath = expr[env.RAW_ABSOLUTE_KEYPATH]\n      if (absoluteKeypath) {\n        const key = keypathUtil.join(config.DIRECTIVE_BINDING, absoluteKeypath),\n        hooks = directives[config.DIRECTIVE_BINDING]\n        if (hooks) {\n          setPair(\n            vnode,\n            'directives',\n            key,\n            {\n              ns: config.DIRECTIVE_BINDING,\n              name: env.EMPTY_STRING,\n              key,\n              hooks,\n              binding: keypathUtil.join(absoluteKeypath, '*'),\n            }\n          )\n        }\n      }\n\n    }\n    else {\n      logger.warn(`[${expr.raw}] 不是对象，延展个毛啊`)\n    }\n  },\n\n  addDirective = function (vnode: any, attr: Record<string, any>) {\n\n    let { ns, name, value } = attr,\n\n    key = keypathUtil.join(ns, name),\n\n    binding: string | void,\n\n    hooks: DirectiveHooks | void,\n\n    getter: signature.directiveGetter | void,\n\n    handler: signature.directiveHandler | signature.eventListener | void,\n\n    transition: TransitionHooks | void\n\n    switch (ns) {\n\n      case config.DIRECTIVE_EVENT:\n        hooks = directives[config.DIRECTIVE_EVENT]\n        handler = attr.event\n          ? createEventListener(attr.event)\n          : createMethodListener(attr.method, attr.args, $stack)\n        break\n\n      case env.RAW_TRANSITION:\n        transition = transitions[value]\n        if (transition) {\n          vnode.transition = transition\n        }\n        else {\n          if (process.env.NODE_ENV === 'dev') {\n            logger.fatal(`transition [${value}] is not found.`)\n          }\n        }\n        return\n\n      case config.DIRECTIVE_MODEL:\n        hooks = directives[config.DIRECTIVE_MODEL]\n        vnode.model = getValue(attr.expr, env.TRUE)\n        binding = attr.expr.absoluteKeypath\n        break\n\n      case config.DIRECTIVE_LAZY:\n        setPair(vnode, 'lazy', name, value)\n        return\n\n      default:\n        hooks = directives[name]\n        if (attr.method) {\n          handler = createMethodListener(attr.method, attr.args, $stack)\n        }\n        else if (attr.getter) {\n          getter = createGetter(attr.getter, $stack)\n        }\n        break\n\n    }\n\n    if (hooks) {\n      setPair(\n        vnode,\n        'directives',\n        key,\n        {\n          ns,\n          name,\n          key,\n          value,\n          binding,\n          hooks,\n          getter,\n          handler\n        }\n      )\n    }\n    else {\n      if (process.env.NODE_ENV === 'dev') {\n        logger.fatal(`directive [${key}] is not found.`)\n      }\n    }\n\n  },\n\n  createEventListener = function (type: string): signature.eventListener {\n    return function (event: Event, data?: Record<string, any>) {\n      if (event.type !== type) {\n        event = new Event(type, event)\n      }\n      context.fire(event, data)\n    }\n  },\n\n  createMethodListener = function (\n    method: string,\n    args: Function | void,\n    stack: any[]\n  ): signature.directiveHandler {\n    return function (event?: Event, data?: Record<string, any>) {\n\n      const callee = context[method]\n\n      if (event instanceof Event) {\n\n        let result: any | void\n\n        if (args) {\n          // 给当前 scope 加上 event 和 data\n          eventScope = {\n            $event: event,\n            $data: data,\n          }\n          result = execute(callee, context, args(stack))\n          // 阅后即焚\n          eventScope = env.UNDEFINED\n        }\n        else {\n          result = execute(callee, context, data ? [event, data] : event)\n        }\n\n        if (result === env.FALSE) {\n          event.prevent().stop()\n        }\n      }\n      else {\n        execute(\n          callee,\n          context,\n          args ? args(stack) : env.UNDEFINED\n        )\n      }\n\n    }\n  },\n\n  createGetter = function (getter: Function, stack: any[]): signature.directiveGetter {\n    return function () {\n      return getter(stack)\n    }\n  },\n\n  renderExpression = function (expr: ExpressionNode, stringRequired: boolean | void): any {\n    const value = getValue(expr)\n    return stringRequired\n      ? toString(value)\n      : value\n  },\n\n  renderExpressionArg = function (expr: ExpressionNode, stack: any[]): any {\n    return getValue(expr, env.UNDEFINED, stack)\n  },\n\n  renderExpressionVnode = function (expr: ExpressionNode, stringRequired: boolean) {\n    renderTextVnode(\n      renderExpression(expr, stringRequired)\n    )\n  },\n\n  renderTextVnode = function (text: string) {\n    const vnodeList = array.last(vnodeStack)\n    if (vnodeList) {\n      const lastVnode = array.last(vnodeList)\n      if (lastVnode && lastVnode.isText) {\n        lastVnode.text += text\n      }\n      else {\n        array.push(\n          vnodeList,\n          {\n            isText: env.TRUE,\n            text,\n            context,\n            keypath: $keypath,\n          }\n        )\n      }\n    }\n  },\n\n  renderElementVnode = function (\n    vnode: Record<string, any>,\n    attrs: any[] | void,\n    childs: Function | void,\n    slots: Record<string, Function> | void\n  ) {\n\n    if (attrs) {\n      array.each(\n        attrs,\n        function (attr: any) {\n\n          let { name, value } = attr\n\n          switch (attr.type) {\n\n            case nodeType.ATTRIBUTE:\n\n              if (attr.binding) {\n                value = addBinding(vnode, attr)\n              }\n\n              if (vnode.isComponent) {\n                setPair(vnode, 'props', name, value)\n              }\n              else {\n                setPair(vnode, 'nativeAttrs', name, { name, value })\n              }\n\n              break\n\n            case nodeType.PROPERTY:\n              setPair(\n                vnode,\n                'nativeProps',\n                name,\n                {\n                  name,\n                  value: attr.binding ? addBinding(vnode, attr) : value,\n                  hint: attr.hint,\n                }\n              )\n              break\n\n            case nodeType.DIRECTIVE:\n              addDirective(vnode, attr)\n              break\n\n            case nodeType.SPREAD:\n              spreadObject(vnode, attr)\n              break\n\n          }\n        }\n      )\n      // 确保有 directives 就必然有 lazy\n      if (vnode.directives && !vnode.lazy) {\n        vnode.lazy = env.EMPTY_OBJECT\n      }\n    }\n\n    // childs 和 slots 不可能同时存在\n    if (childs) {\n      vnodeStack.push(vnode.children = [])\n      childs()\n      array.pop(vnodeStack)\n    }\n    else if (slots) {\n      const renderSlots = {}\n      object.each(\n        slots,\n        function (slot: Function, name: string) {\n          vnodeStack.push([])\n          slot()\n          renderSlots[name] = array.pop(vnodeStack)\n        }\n      )\n      vnode.slots = renderSlots\n    }\n\n    vnode.context = context\n    vnode.keypath = $keypath\n\n    const vnodeList = array.last(vnodeStack)\n    if (vnodeList) {\n      array.push(vnodeList, vnode)\n    }\n\n    return vnode\n\n  },\n\n  // <slot name=\"xx\"/>\n  renderSlot = function (name: string, defaultRender?: Function) {\n\n    const vnodeList = array.last(vnodeStack), vnodes = context.get(name)\n\n    if (vnodes) {\n      array.each(\n        vnodes,\n        function (vnode: any) {\n          array.push(vnodeList, vnode)\n          vnode.parent = context\n        }\n      )\n    }\n    else if (defaultRender) {\n      defaultRender()\n    }\n\n  },\n\n  // {{#partial name}}\n  //   xx\n  // {{/partial}}\n  renderPartial = function (name: string, render: Function) {\n    localPartials[name] = render\n  },\n\n  // {{> name}}\n  renderImport = function (name: string) {\n    if (localPartials[name]) {\n      localPartials[name]()\n      return\n    }\n    else {\n      const partial = partials[name]\n      if (partial) {\n        partial(\n          renderExpression,\n          renderExpressionArg,\n          renderExpressionVnode,\n          renderTextVnode,\n          renderElementVnode,\n          renderSlot,\n          renderPartial,\n          renderImport,\n          renderEach\n        )\n        return\n      }\n    }\n    if (process.env.NODE_ENV === 'dev') {\n      logger.fatal(`partial [${name}] is not found.`)\n    }\n  },\n\n  renderEach = function (expr: ExpressionNode, index: string | Function | void, handler?: Function) {\n\n    let eachIndex: string | void, eachHandler: Function\n\n    if (is.func(index)) {\n      eachHandler = index as Function\n      eachIndex = env.UNDEFINED\n    }\n    else {\n      eachHandler = handler as Function\n      eachIndex = index as string\n    }\n\n    const value = getValue(expr),\n\n    exprKeypath = expr[env.RAW_ABSOLUTE_KEYPATH],\n\n    eachKeypath = exprKeypath || keypathUtil.join($keypath, expr.raw),\n\n    callback = function (item: any, key: string | number) {\n\n      let lastKeypath = $keypath, lastScope = $scope, lastKeypathStack = $stack\n\n      $keypath = keypathUtil.join(eachKeypath, key)\n      $scope = {}\n      $stack = object.copy($stack)\n\n      array.push($stack, $keypath)\n      array.push($stack, $scope)\n\n      // 从下面这几句赋值可以看出\n      // scope 至少会有 '$keypath' '$item' eachIndex 等几个值\n      $scope.$keypath = $keypath\n\n      // 类似 {{#each 1 -> 10}} 这样的临时循环，需要在 scope 上加上当前项\n      // 因为通过 context.get() 无法获取数据\n      if (!exprKeypath) {\n        $scope.$item = item\n      }\n\n      if (eachIndex) {\n        $scope[eachIndex] = key\n      }\n\n      eachHandler(item, key)\n\n      $keypath = lastKeypath\n      $scope = lastScope\n      $stack = lastKeypathStack\n\n    }\n\n    if (is.array(value)) {\n      array.each(value, callback)\n    }\n    else if (is.object(value)) {\n      object.each(value, callback)\n    }\n    else if (is.func(value)) {\n      value(callback)\n    }\n\n  }\n\n  return template(\n    renderExpression,\n    renderExpressionArg,\n    renderExpressionVnode,\n    renderTextVnode,\n    renderElementVnode,\n    renderSlot,\n    renderPartial,\n    renderImport,\n    renderEach\n  )\n\n}","import execute from 'yox-common/src/function/execute'\n\nimport * as is from 'yox-common/src/util/is'\nimport * as env from 'yox-common/src/util/env'\nimport * as array from 'yox-common/src/util/array'\nimport * as object from 'yox-common/src/util/object'\n\nimport * as type from 'yox-type/index'\nimport ComputedInterface from 'yox-type/src/Computed'\nimport ObserverInterface from 'yox-type/src/Observer'\nimport WatcherOptions from 'yox-type/src/options/Watcher'\n\nconst syncWatcherOptions: WatcherOptions = { sync: env.TRUE },\n\nasyncWatcherOptions: WatcherOptions = { sync: env.FALSE }\n\n/**\n * 计算属性\n *\n * 可配置 cache、deps、get、set 等\n */\nexport default class Computed implements ComputedInterface {\n\n  static current?: Computed\n\n  /**\n   * 对外的构造器，把用户配置的计算属性对象转换成内部对象\n   *\n   * @param keypath\n   * @param observer\n   * @param options\n   */\n  static build(keypath: string, observer: ObserverInterface, options: any): Computed | void {\n\n    let cache = env.TRUE,\n\n    sync = env.TRUE,\n\n    deps = env.EMPTY_ARRAY,\n\n    getter: type.computedGetter | void,\n\n    setter: type.computedSetter | void\n\n    if (is.func(options)) {\n      getter = options\n    }\n    else if (is.object(options)) {\n      if (is.boolean(options.cache)) {\n        cache = options.cache\n      }\n      if (is.boolean(options.sync)) {\n        sync = options.sync\n      }\n      if (is.array(options.deps)) {\n        deps = options.deps\n      }\n      if (is.func(options.get)) {\n        getter = options.get\n      }\n      if (is.func(options.set)) {\n        setter = options.set\n      }\n    }\n\n    if (getter) {\n      return new Computed(keypath, sync, cache, deps, observer, getter, setter)\n    }\n\n  }\n\n  keypath: string\n\n  value: any\n\n  deps: string[]\n\n  sync: boolean\n\n  cache: boolean\n\n  fixed: boolean\n\n  context: any\n\n  observer: ObserverInterface\n\n  getter: type.computedGetter\n\n  setter: type.computedSetter | void\n\n  callback: type.watcher\n\n  unique: Record<string, boolean>\n\n  private constructor(\n    keypath: string,\n    sync: boolean,\n    cache: boolean,\n    deps: string[],\n    observer: ObserverInterface,\n    getter: type.computedGetter,\n    setter: type.computedSetter | void\n  ) {\n\n    const instance = this\n\n    instance.keypath = keypath\n    instance.sync = sync\n    instance.cache = cache\n    // 因为可能会修改 deps，所以这里创建一个自己的对象，避免影响外部传入的 deps\n    instance.deps = []\n\n    instance.context = observer.context\n    instance.observer = observer\n    instance.getter = getter\n    instance.setter = setter\n\n    instance.unique = {}\n\n    instance.callback = function ($0: any, $1: any, $2: string) {\n\n      // 计算属性的依赖变了会走进这里\n\n      const oldValue = instance.value,\n      newValue = instance.get(env.TRUE)\n\n      if (newValue !== oldValue) {\n        observer.diff(keypath, newValue, oldValue)\n      }\n\n    }\n\n    if (instance.fixed = !array.falsy(deps)) {\n      array.each(\n        deps,\n        function (dep: string) {\n          instance.add(dep)\n        }\n      )\n      instance.bind()\n    }\n\n  }\n\n  /**\n   * 读取计算属性的值\n   *\n   * @param force 是否强制刷新缓存\n   */\n  get(force?: boolean): any {\n\n    const instance = this,\n\n    { getter, context } = instance\n\n    // 禁用缓存\n    if (!instance.cache) {\n      instance.value = execute(getter, context)\n    }\n\n    // 减少取值频率，尤其是处理复杂的计算规则\n    else if (force || !object.has(instance, 'value')) {\n\n      // 如果写死了依赖，则不需要收集依赖\n      if (instance.fixed) {\n        instance.value = execute(getter, context)\n      }\n      else {\n        // 清空上次收集的依赖\n        instance.unbind()\n\n        // 开始收集新的依赖\n        const lastComputed = Computed.current\n        Computed.current = instance\n\n        instance.value = execute(getter, context)\n\n        // 绑定新的依赖\n        instance.bind()\n\n        Computed.current = lastComputed\n      }\n\n    }\n\n    return instance.value\n  }\n\n  set(value: any): void {\n    const { setter, context } = this\n    if (setter) {\n      setter.call(context, value)\n    }\n  }\n\n  /**\n   * 添加依赖\n   *\n   * 这里只是为了保证依赖唯一，最后由 bind() 实现绑定\n   *\n   * @param dep\n   */\n  add(dep: string): void {\n    this.unique[dep] = env.TRUE\n  }\n\n  /**\n   * 绑定依赖\n   */\n  bind(): void {\n\n    const { unique, deps, observer, callback, sync } = this\n\n    object.each(\n      unique,\n      function (_: any, dep: string) {\n        array.push(deps, dep)\n        observer.watch(\n          dep,\n          callback,\n          sync ? syncWatcherOptions : asyncWatcherOptions\n        )\n      }\n    )\n\n    // 用完重置\n    // 方便下次收集依赖\n    this.unique = {}\n\n  }\n\n  /**\n   * 解绑依赖\n   */\n  unbind(): void {\n\n    const { deps, observer, callback } = this\n\n    array.each(\n      deps,\n      function (dep: string) {\n        observer.unwatch(dep, callback)\n      },\n      env.TRUE\n    )\n\n    deps.length = 0\n\n  }\n\n}","import * as env from 'yox-common/src/util/env'\nimport * as array from 'yox-common/src/util/array'\nimport * as string from 'yox-common/src/util/string'\nimport * as keypathUtil from 'yox-common/src/util/keypath'\n\n/**\n * 从 keypath 数组中选择和 keypath 最匹配的那一个\n *\n * @param sorted 经过排序的 keypath 数组\n * @param keypath\n */\nexport default function (sorted: string[], keypath: string): any {\n\n  let result: any\n\n  array.each(\n    sorted,\n    function (prefix: string) {\n      const length = keypathUtil.match(keypath, prefix)\n      if (length >= 0) {\n        result = {\n          name: prefix,\n          prop: string.slice(keypath, length)\n        }\n        return env.FALSE\n      }\n    }\n  )\n\n  return result\n\n}","import * as env from 'yox-common/src/util/env'\nimport * as object from 'yox-common/src/util/object'\n\nexport default function (source: any, keypath: string): any {\n\n  if (source == env.NULL || keypath === env.EMPTY_STRING) {\n    return source\n  }\n\n  const result = object.get(source, keypath)\n  if (result) {\n    return result.value\n  }\n\n}","import * as is from 'yox-common/src/util/is'\nimport * as env from 'yox-common/src/util/env'\n\n/**\n * 对比新旧数组\n *\n * @param newValue\n * @param oldValue\n * @param callback\n */\nexport default function (\n  newValue: any,\n  oldValue: any,\n  callback: (key: string, newValue: any, oldValue: any) => void\n): boolean | void {\n\n  const newIsString = is.string(newValue),\n\n  oldIsString = is.string(oldValue)\n\n  if (newIsString || oldIsString) {\n    callback(\n      'length',\n      newIsString ? newValue.length : env.UNDEFINED,\n      oldIsString ? oldValue.length : env.UNDEFINED\n    )\n    return env.TRUE\n  }\n\n}","import * as is from 'yox-common/src/util/is'\nimport * as env from 'yox-common/src/util/env'\n\n/**\n * 对比新旧数组\n *\n * @param newValue\n * @param oldValue\n * @param callback\n */\nexport default function (\n  newValue: any,\n  oldValue: any,\n  callback: (key: string | number, newValue: any, oldValue: any) => void\n): boolean | void {\n\n  const newIsArray = is.array(newValue),\n\n  oldIsArray = is.array(oldValue)\n\n  if (newIsArray || oldIsArray) {\n\n    const newLength = newIsArray ? newValue.length : env.UNDEFINED,\n\n    oldLength = oldIsArray ? oldValue.length : env.UNDEFINED\n\n    callback(\n      'length',\n      newLength,\n      oldLength\n    )\n\n    for (let i = 0, length = Math.max(newLength || 0, oldLength || 0); i < length; i++) {\n      callback(\n        i,\n        newValue ? newValue[i] : env.UNDEFINED,\n        oldValue ? oldValue[i] : env.UNDEFINED\n      )\n    }\n\n    return env.TRUE\n\n  }\n\n}","import * as is from 'yox-common/src/util/is'\nimport * as env from 'yox-common/src/util/env'\nimport * as object from 'yox-common/src/util/object'\n\n/**\n * 对比新旧对象\n *\n * @param newValue\n * @param oldValue\n * @param callback\n */\nexport default function (\n  newValue: any,\n  oldValue: any,\n  callback: (key: string, newValue: any, oldValue: any) => void\n) {\n\n  const newIsObject = is.object(newValue),\n\n  oldIsObject = is.object(oldValue)\n\n  if (newIsObject || oldIsObject) {\n\n    newValue = newIsObject ? newValue : env.EMPTY_OBJECT\n    oldValue = oldIsObject ? oldValue : env.EMPTY_OBJECT\n\n    if (newIsObject) {\n      object.each(\n        newValue,\n        function (value: any, key: string) {\n          if (value !== oldValue[key]) {\n            callback(key, value, oldValue[key])\n          }\n        }\n      )\n    }\n\n    if (oldIsObject) {\n      object.each(\n        oldValue,\n        function (value: any, key: string) {\n          if (value !== newValue[key]) {\n            callback(key, newValue[key], value)\n          }\n        }\n      )\n    }\n\n  }\n\n}","import isDef from 'yox-common/src/function/isDef'\nimport * as array from 'yox-common/src/util/array'\nimport * as keypathUtil from 'yox-common/src/util/keypath'\n\nimport diffString from './diffString'\nimport diffArray from './diffArray'\nimport diffObject from './diffObject'\n\nexport default function diffRecursion(\n  keypath: string,\n  newValue: any,\n  oldValue: any,\n  watchFuzzyKeypaths: string[],\n  callback: (watchKeypath: string, keypath: string, newValue: any, oldValue: any) => void\n) {\n\n  const diff = function (subKeypath: string | number, subNewValue: any, subOldValue: any) {\n\n    if (subNewValue !== subOldValue) {\n\n      const newKeypath = keypathUtil.join(keypath, subKeypath)\n\n      array.each(\n        watchFuzzyKeypaths,\n        function (fuzzyKeypath) {\n          if (isDef(keypathUtil.matchFuzzy(newKeypath, fuzzyKeypath))) {\n            callback(\n              fuzzyKeypath, newKeypath, subNewValue, subOldValue\n            )\n          }\n        }\n      )\n\n      diffRecursion(newKeypath, subNewValue, subOldValue, watchFuzzyKeypaths, callback)\n\n    }\n\n  }\n\n  diffString(newValue, oldValue, diff)\n    || diffArray(newValue, oldValue, diff)\n    || diffObject(newValue, oldValue, diff)\n\n}","import isDef from 'yox-common/src/function/isDef'\nimport * as array from 'yox-common/src/util/array'\nimport * as object from 'yox-common/src/util/object'\nimport * as string from 'yox-common/src/util/string'\nimport * as keypathUtil from 'yox-common/src/util/keypath'\n\nimport readValue from './readValue'\nimport diffRecursion from './diffRecursion'\n\nexport default function (\n  keypath: string,\n  newValue: any,\n  oldValue: any,\n  watcher: Object, isRecursive: boolean,\n  callback: (watchKeypath: string, keypath: string, newValue: any, oldValue: any) => void\n) {\n\n  let fuzzyKeypaths: string[] | undefined\n\n  // 遍历监听的 keypath，如果未被监听，则无需触发任何事件\n  object.each(\n    watcher,\n    function (_, watchKeypath) {\n\n      // 模糊监听，如 users.*.name\n      if (keypathUtil.isFuzzy(watchKeypath)) {\n\n        // 如果当前修改的是 users.0 整个对象\n        // users.0 和 users.*.name 无法匹配\n        // 此时要知道设置 users.0 到底会不会改变 users.*.name 需要靠递归了\n\n        // 如果匹配，则无需递归\n        if (isDef(keypathUtil.matchFuzzy(keypath, watchKeypath))) {\n          callback(\n            watchKeypath, keypath, newValue, oldValue\n          )\n        }\n        else if (isRecursive) {\n          if (fuzzyKeypaths) {\n            array.push(\n              fuzzyKeypaths,\n              watchKeypath\n            )\n          }\n          else {\n            fuzzyKeypaths = [watchKeypath]\n          }\n        }\n\n        return\n      }\n\n      // 不是模糊匹配，直接靠前缀匹配\n      // 比如监听的是 users.0.name，此时修改 users.0，则直接读出子属性值，判断是否相等\n      const length = keypathUtil.match(watchKeypath, keypath)\n      if (length >= 0) {\n\n        const subKeypath = string.slice(watchKeypath, length),\n        subNewValue = readValue(newValue, subKeypath),\n        subOldValue = readValue(oldValue, subKeypath)\n\n        if (subNewValue !== subOldValue) {\n          callback(\n            watchKeypath, watchKeypath, subNewValue, subOldValue\n          )\n        }\n\n      }\n\n    }\n  )\n\n  // 存在模糊匹配的需求\n  // 必须对数据进行递归\n  // 性能确实会慢一些，但是很好用啊，几乎可以监听所有的数据\n  if (fuzzyKeypaths) {\n    diffRecursion(keypath, newValue, oldValue, fuzzyKeypaths, callback)\n  }\n\n}","import * as type from 'yox-type/index'\nimport EmitterOptions from 'yox-type/src/options/Emitter'\n\n/**\n * 触发异步变化时，用此函数过滤下，哪些 listener 应该执行\n *\n * @param item\n * @param data\n */\nexport default function (options: EmitterOptions, data: type.eventData | any[] | void): boolean | void {\n\n  if (options.count && data) {\n\n    // 采用计数器的原因是，同一个 options 可能执行多次\n    // 比如监听 user.*，如果同批次修改了 user.name 和 user.age\n    // 这个监听器会调用多次，如果第一次执行就把 count 干掉了，第二次就无法执行了\n\n    options.count--\n\n    // 新旧值不相等\n    return data[0] !== data[1]\n\n  }\n\n}","import * as is from 'yox-common/src/util/is'\nimport * as env from 'yox-common/src/util/env'\nimport * as object from 'yox-common/src/util/object'\n\nimport WatcherOptions from 'yox-type/src/options/Watcher'\n\n/**\n * 格式化 watch options\n *\n * @param options\n */\nexport default function (options: boolean | WatcherOptions | void): WatcherOptions {\n  // 这里要返回全新的对象，避免后续的修改会影响外部传入的配置对象\n  return options === env.TRUE\n    ? { immediate: env.TRUE }\n    : is.object(options)\n      ? object.copy(options)\n      : { }\n}","import * as is from 'yox-common/src/util/is'\nimport * as env from 'yox-common/src/util/env'\nimport * as array from 'yox-common/src/util/array'\nimport * as object from 'yox-common/src/util/object'\nimport * as string from 'yox-common/src/util/string'\nimport * as logger from 'yox-common/src/util/logger'\n\nimport toNumber from 'yox-common/src/function/toNumber'\nimport execute from 'yox-common/src/function/execute'\nimport Emitter from 'yox-common/src/util/Emitter'\nimport NextTask from 'yox-common/src/util/NextTask'\n\nimport * as type from 'yox-type/index'\nimport ComputedOptions from 'yox-type/src/options/Computed'\nimport WatcherOptions from 'yox-type/src/options/Watcher'\nimport EmitterOptions from 'yox-type/src/options/Emitter'\nimport ObserverInterface from 'yox-type/src/Observer'\n\nimport Computed from './Computed'\nimport matchBest from './function/matchBest'\nimport diffWatcher from './function/diffWatcher'\nimport filterWatcher from './function/filterWatcher'\nimport formatWatcherOptions from './function/formatWatcherOptions'\n\n/**\n * 观察者有两种观察模式：\n *\n * 1. 同步监听\n * 2. 异步监听\n *\n * 对于`计算属性`这种需要实时变化的对象，即它的依赖变了，它需要立即跟着变，否则会出现不一致的问题\n * 这种属于同步监听\n *\n * 对于外部调用 observer.watch('keypath', listener)，属于异步监听，它只关心是否变了，而不关心是否是立即触发的\n */\nexport default class Observer implements ObserverInterface {\n\n  data: Record<string, any>\n\n  context: any\n\n  nextTask: NextTask\n\n  computed?: Record<string, Computed>\n\n  reversedComputedKeys?: string[]\n\n  syncEmitter: Emitter\n\n  asyncEmitter: Emitter\n\n  asyncChanges: Record<string, any>\n\n  pending?: boolean\n\n  constructor(data?: Object, context?: any) {\n\n    const instance = this\n\n    instance.data = data || {}\n    instance.context = context || instance\n    instance.nextTask = new NextTask()\n\n    instance.syncEmitter = new Emitter()\n    instance.asyncEmitter = new Emitter()\n    instance.asyncChanges = {}\n\n  }\n\n  /**\n   * 获取数据\n   *\n   * @param keypath\n   * @param defaultValue\n   * @param depIgnore\n   * @return\n   */\n  get(\n    keypath: string,\n    defaultValue?: any,\n    depIgnore?: boolean\n  ): any {\n\n    const instance = this,\n\n    currentComputed = Computed.current,\n\n    { data, computed, reversedComputedKeys } = instance\n\n    // 传入 '' 获取整个 data\n    if (keypath === env.EMPTY_STRING) {\n      return data\n    }\n\n    // 调用 get 时，外面想要获取依赖必须设置是谁在收集依赖\n    // 如果没设置，则跳过依赖收集\n    if (currentComputed && !depIgnore) {\n      currentComputed.add(keypath)\n    }\n\n    let result: any, target: Computed | void\n\n    if (computed) {\n      target = computed[keypath]\n      if (target) {\n        return target.get()\n      }\n      if (reversedComputedKeys) {\n        const match = matchBest(reversedComputedKeys, keypath)\n        if (match && match.prop) {\n          result = object.get(\n            computed[match.name].get(),\n            match.prop\n          )\n        }\n      }\n    }\n\n    if (!result) {\n      result = object.get(data, keypath)\n    }\n\n    return result ? result.value : defaultValue\n\n  }\n\n  /**\n   * 更新数据\n   *\n   * @param keypath\n   * @param value\n   */\n  set(\n    keypath: string | Record<string, any>,\n    value?: any\n  ) {\n\n    const instance = this,\n\n    { data, computed, reversedComputedKeys } = instance,\n\n    setValue = function (newValue: any, keypath: string) {\n\n      const oldValue = instance.get(keypath)\n      if (newValue === oldValue) {\n        return\n      }\n\n      let target: Computed | void\n\n      if (computed) {\n        target = computed[keypath]\n        if (target) {\n          target.set(newValue)\n        }\n        if (reversedComputedKeys) {\n          const match = matchBest(reversedComputedKeys, keypath)\n          if (match && match.prop) {\n            target = computed[match.name]\n            if (target) {\n              const targetValue = target.get()\n              if (is.object(targetValue) || is.array(targetValue)) {\n                object.set(targetValue, match.prop, newValue)\n              }\n            }\n          }\n        }\n      }\n\n      if (!target) {\n        object.set(data, keypath, newValue)\n      }\n\n      instance.diff(keypath, newValue, oldValue)\n\n    }\n\n    if (is.string(keypath)) {\n      setValue(value, keypath as string)\n    }\n    else if (is.object(keypath)) {\n      object.each(keypath, setValue)\n    }\n\n  }\n\n  /**\n   * 同步调用的 diff，用于触发 syncEmitter，以及唤醒 asyncEmitter\n   *\n   * @param keypath\n   * @param newValue\n   * @param oldValue\n   */\n  diff(\n    keypath: string,\n    newValue: any,\n    oldValue: any\n  ): void {\n\n    const instance = this,\n\n    { syncEmitter, asyncEmitter, asyncChanges } = instance,\n\n    /**\n     * 我们认为 $ 开头的变量是不可递归的\n     * 比如浏览器中常见的 $0 表示当前选中元素\n     * DOM 元素是不能递归的\n     */\n    isRecursive = string.codeAt(keypath) !== 36\n\n    diffWatcher(\n      keypath, newValue, oldValue,\n      syncEmitter.listeners, isRecursive,\n      function (watchKeypath: string, keypath: string, newValue: any, oldValue: any) {\n        syncEmitter.fire(watchKeypath, [newValue, oldValue, keypath])\n      }\n    )\n\n    /**\n     * 此处有坑，举个例子\n     *\n     * observer.watch('a', function () {})\n     *\n     * observer.set('a', 1)\n     *\n     * observer.watch('a', function () {})\n     *\n     * 这里，第一个 watcher 应该触发，但第二个不应该，因为它绑定监听时，值已经是最新的了\n     */\n\n    diffWatcher(\n      keypath, newValue, oldValue,\n      asyncEmitter.listeners, isRecursive,\n      function (watchKeypath: string, keypath: string, newValue: any, oldValue: any) {\n\n        array.each(\n          asyncEmitter.listeners[watchKeypath],\n          function (item) {\n            item.count++\n          }\n        )\n\n        const { list } = asyncChanges[keypath] || (asyncChanges[keypath] = { value: oldValue, list: [] })\n        if (!array.has(list, watchKeypath)) {\n          array.push(list, watchKeypath)\n        }\n\n        if (!instance.pending) {\n          instance.pending = env.TRUE\n          instance.nextTask.append(\n            function () {\n              if (instance.pending) {\n                instance.pending = env.UNDEFINED\n                instance.diffAsync()\n              }\n            }\n          )\n        }\n      }\n    )\n\n  }\n\n  /**\n   * 异步触发的 diff\n   */\n  diffAsync(): void {\n\n    const instance = this,\n\n    { asyncEmitter, asyncChanges } = instance\n\n    instance.asyncChanges = {}\n\n    object.each(\n      asyncChanges,\n      function (item, keypath) {\n\n        const args = [instance.get(keypath), item.value, keypath]\n\n        // 不能在这判断新旧值是否相同，相同就不 fire\n        // 因为前面标记了 count，在这中断会导致 count 无法清除\n\n        array.each(\n          item.list,\n          function (watchKeypath: string) {\n            asyncEmitter.fire(watchKeypath, args, filterWatcher)\n          }\n        )\n\n      }\n    )\n\n  }\n\n  /**\n   * 添加计算属性\n   *\n   * @param keypath\n   * @param computed\n   */\n  addComputed(\n    keypath: string,\n    options: type.computedGetter | ComputedOptions\n  ): Computed | void {\n\n    const instance = this,\n    computed = Computed.build(keypath, instance, options)\n\n    if (computed) {\n\n      if (!instance.computed) {\n        instance.computed = {}\n      }\n\n      instance.computed[keypath] = computed\n      instance.reversedComputedKeys = object.sort(instance.computed, env.TRUE)\n\n      return computed\n\n    }\n\n  }\n\n  /**\n   * 移除计算属性\n   *\n   * @param keypath\n   */\n  removeComputed(\n    keypath: string\n  ): void {\n\n    const instance = this,\n    { computed } = instance\n\n    if (computed && object.has(computed, keypath)) {\n      delete computed[keypath]\n      instance.reversedComputedKeys = object.sort(computed, env.TRUE)\n    }\n\n  }\n\n  /**\n   * 监听数据变化\n   *\n   * @param keypath\n   * @param watcher\n   * @param options\n   * @param options.immediate 是否立即触发一次\n   * @param options.sync 是否同步响应，默认是异步\n   * @param options.once 是否监听一次\n   */\n  watch(\n    keypath: string | Record<string, type.watcher | WatcherOptions>,\n    watcher?: type.watcher,\n    options?: WatcherOptions | boolean\n  ) {\n\n    const instance = this,\n\n    { context, syncEmitter, asyncEmitter } = instance,\n\n    bind = function (keypath: string, watcher: any, options: WatcherOptions) {\n\n      if (is.object(watcher)) {\n\n        if (is.boolean(watcher.immediate)) {\n          options.immediate = watcher.immediate\n        }\n        if (is.boolean(watcher.sync)) {\n          options.sync = watcher.sync\n        }\n        if (is.boolean(watcher.once)) {\n          options.once = watcher.once\n        }\n        if (is.func(watcher.watcher)) {\n          watcher = watcher.watcher\n        }\n\n      }\n\n      const emitter = options.sync ? syncEmitter : asyncEmitter\n\n      if (is.func(watcher)) {\n        const listener: EmitterOptions = {\n          fn: watcher,\n          ctx: context,\n          count: 0,\n        }\n        if (options.once) {\n          listener.max = 1\n        }\n        emitter.on(keypath, listener)\n      }\n      else {\n        if (process.env.NODE_ENV === 'dev') {\n          logger.fatal(`watcher for \"${keypath}\" should be a function.`)\n        }\n      }\n\n      if (options.immediate) {\n        execute(\n          watcher,\n          context,\n          [\n            instance.get(keypath),\n            env.UNDEFINED,\n            keypath\n          ]\n        )\n      }\n\n    }\n\n    if (is.string(keypath)) {\n      if (is.func(watcher) || is.object(watcher)) {\n        bind(\n          keypath as string,\n          watcher,\n          formatWatcherOptions(options)\n        )\n      }\n      else {\n        if (process.env.NODE_ENV === 'dev') {\n          logger.fatal(`watcher for \"${keypath}\" should be a function or object.`)\n        }\n      }\n      return\n    }\n\n    object.each(\n      keypath,\n      function (value: any, keypath: string) {\n        bind(keypath, value, {})\n      }\n    )\n\n  }\n\n  /**\n   * 取消监听数据变化\n   *\n   * @param keypath\n   * @param watcher\n   */\n  unwatch(\n    keypath: string,\n    watcher?: type.watcher\n  ) {\n    this.syncEmitter.off(keypath, watcher)\n    this.asyncEmitter.off(keypath, watcher)\n  }\n\n  /**\n   * 取反 keypath 对应的数据\n   *\n   * 不管 keypath 对应的数据是什么类型，操作后都是布尔型\n   *\n   * @param keypath\n   * @return 取反后的布尔值\n   */\n  toggle(keypath: string): boolean {\n    const value = !this.get(keypath)\n    this.set(keypath, value)\n    return value\n  }\n\n  /**\n   * 递增 keypath 对应的数据\n   *\n   * 注意，最好是整型的加法，如果涉及浮点型，不保证计算正确\n   *\n   * @param keypath 值必须能转型成数字，如果不能，则默认从 0 开始递增\n   * @param step 步进值，默认是 1\n   * @param max 可以递增到的最大值，默认不限制\n   */\n  increase(keypath: string, step?: number, max?: number): number | void {\n    const value = toNumber(this.get(keypath), 0) + (step || 1)\n    if (!is.number(max) || value <= (max as number)) {\n      this.set(keypath, value)\n      return value\n    }\n  }\n\n  /**\n   * 递减 keypath 对应的数据\n   *\n   * 注意，最好是整型的减法，如果涉及浮点型，不保证计算正确\n   *\n   * @param keypath 值必须能转型成数字，如果不能，则默认从 0 开始递减\n   * @param step 步进值，默认是 1\n   * @param min 可以递减到的最小值，默认不限制\n   */\n  decrease(keypath: string, step?: number, min?: number): number | void {\n    const value = toNumber(this.get(keypath), 0) - (step || 1)\n    if (!is.number(min) || value >= (min as number)) {\n      this.set(keypath, value)\n      return value\n    }\n  }\n\n  /**\n   * 在数组指定位置插入元素\n   *\n   * @param keypath\n   * @param item\n   * @param index\n   */\n  insert(keypath: string, item: any, index: number | boolean): boolean | void {\n\n    let list = this.get(keypath)\n    list = !is.array(list) ? [] : object.copy(list)\n\n    const { length } = list\n    if (index === env.TRUE || index === length) {\n      list.push(item)\n    }\n    else if (index === env.FALSE || index === 0) {\n      list.unshift(item)\n    }\n    else if (index > 0 && index < length) {\n      list.splice(index, 0, item)\n    }\n    else {\n      return\n    }\n\n    this.set(keypath, list)\n\n    return env.TRUE\n\n  }\n\n  /**\n   * 在数组尾部添加元素\n   *\n   * @param keypath\n   * @param item\n   */\n  append(keypath: string, item: any): boolean | void {\n    return this.insert(keypath, item, env.TRUE)\n  }\n\n  /**\n   * 在数组首部添加元素\n   *\n   * @param keypath\n   * @param item\n   */\n  prepend(keypath: string, item: any): boolean | void {\n    return this.insert(keypath, item, env.FALSE)\n  }\n\n  /**\n   * 通过索引移除数组中的元素\n   *\n   * @param keypath\n   * @param index\n   */\n  removeAt(keypath: string, index: number): boolean | void {\n    let list = this.get(keypath)\n    if (is.array(list)\n      && index >= 0\n      && index < list.length\n    ) {\n      list = object.copy(list)\n      list.splice(index, 1)\n      this.set(keypath, list)\n      return env.TRUE\n    }\n  }\n\n  /**\n   * 直接移除数组中的元素\n   *\n   * @param keypath\n   * @param item\n   */\n  remove(keypath: string, item: any): boolean | void {\n    let list = this.get(keypath)\n    if (is.array(list)) {\n      list = object.copy(list)\n      if (array.remove(list, item)) {\n        this.set(keypath, list)\n        return env.TRUE\n      }\n    }\n  }\n\n  /**\n   * 拷贝任意数据，支持深拷贝\n   *\n   * @param data\n   * @param deep\n   */\n  copy<T>(data: T, deep?: boolean): T {\n    return object.copy(data, deep)\n  }\n\n  /**\n   * 销毁\n   */\n  destroy() {\n    const instance = this\n    instance.syncEmitter.off()\n    instance.asyncEmitter.off()\n    instance.nextTask.clear()\n    object.clear(instance)\n  }\n\n}\n","import * as config from 'yox-config/index'\n\nimport isDef from 'yox-common/src/function/isDef'\nimport isUndef from 'yox-common/src/function/isUndef'\n\nimport * as env from 'yox-common/src/util/env'\nimport * as array from 'yox-common/src/util/array'\nimport * as string from 'yox-common/src/util/string'\nimport * as object from 'yox-common/src/util/object'\n\nimport Emitter from 'yox-common/src/util/Emitter'\nimport CustomEvent from 'yox-common/src/util/Event'\n\nimport API from 'yox-type/src/API'\nimport SpecialEvent from 'yox-type/src/SpecialEvent'\n\nimport * as signature from 'yox-type/index'\n\nlet doc = env.doc,\n\n// textContent 不兼容 IE 678\ninnerText = 'textContent',\n\naddEventListener: (node: HTMLElement, type: string, listener: (event: Event) => void) => void = env.EMPTY_FUNCTION,\n\nremoveEventListener: (node: HTMLElement, type: string, listener: (event: Event) => void) => void = env.EMPTY_FUNCTION,\n\naddClass: (node: HTMLElement, className: string) => void = env.EMPTY_FUNCTION,\n\nremoveClass: (node: HTMLElement, className: string) => void = env.EMPTY_FUNCTION,\n\nfindElement: (selector: string) => Element | void = env.EMPTY_FUNCTION\n\nif (doc) {\n  if (isUndef(doc.body[innerText])) {\n    innerText = 'innerText'\n  }\n  if (doc.addEventListener) {\n    addEventListener = function (node: HTMLElement, type: string, listener: (event: Event) => void) {\n      node.addEventListener(type, listener, env.FALSE)\n    }\n    removeEventListener = function (node: HTMLElement, type: string, listener: (event: Event) => void) {\n      node.removeEventListener(type, listener, env.FALSE)\n    }\n  }\n  else {\n    addEventListener = function (node: any, type: string, listener: (event: Event) => void) {\n      node.attachEvent(`on${type}`, listener)\n    }\n    removeEventListener = function (node: any, type: string, listener: (event: Event) => void) {\n      node.detachEvent(`on${type}`, listener)\n    }\n  }\n  if (doc.body.classList) {\n    addClass = function (node: HTMLElement, className: string) {\n      node.classList.add(className)\n    }\n    removeClass = function (node: HTMLElement, className: string) {\n      node.classList.remove(className)\n    }\n  }\n  else {\n    addClass = function (node: HTMLElement, className: string) {\n      const classes = node.className.split(CHAR_WHITESPACE)\n      if (!array.has(classes, className)) {\n        array.push(classes, className)\n        node.className = array.join(classes, CHAR_WHITESPACE)\n      }\n    }\n    removeClass = function (node: HTMLElement, className: string) {\n      const classes = node.className.split(CHAR_WHITESPACE)\n      if (array.remove(classes, className)) {\n        node.className = array.join(classes, CHAR_WHITESPACE)\n      }\n    }\n  }\n  if (doc.querySelector) {\n    findElement = function (selector: string): Element | void {\n      const node = (doc as Document).querySelector(selector)\n      if (node) {\n        return node\n      }\n    }\n  }\n  else {\n    findElement = function (selector: string): Element | void {\n      // 去掉 #\n      if (string.codeAt(selector, 0) === 35) {\n        selector = string.slice(selector, 1)\n      }\n      const node = (doc as Document).getElementById(selector)\n      if (node) {\n        return node\n      }\n    }\n  }\n}\n\nconst CHAR_WHITESPACE = ' ',\n\n/**\n * 绑定在 HTML 元素上的事件发射器\n */\nEMITTER = '$emitter',\n\n/**\n * 输入事件\n */\nINPUT = 'input',\n\n/**\n * 跟输入事件配套使用的事件\n */\nCOMPOSITION_START = 'compositionstart',\n\n/**\n * 跟输入事件配套使用的事件\n */\nCOMPOSITION_END = 'compositionend',\n\ndomain = 'http://www.w3.org/',\n\nnamespaces = {\n  svg: domain + '2000/svg',\n  // xml: domain + 'XML/1998/namespace',\n  // xlink: domain + '1999/xlink',\n},\n\nspecialEvents: Record<string, SpecialEvent> = {},\n\ndomApi: API = {\n\n  createElement(tag: string, isSvg?: boolean): Element {\n    return isSvg\n      ? (doc as Document).createElementNS(namespaces.svg, tag)\n      : (doc as Document).createElement(tag)\n  },\n\n  createText(text: string): Text {\n    return (doc as Document).createTextNode(text)\n  },\n\n  createComment(text: string): Comment {\n    return (doc as Document).createComment(text)\n  },\n\n  createEvent(event: any, node: HTMLElement): any {\n    return event\n  },\n\n  prop(node: HTMLElement, name: string, value?: string | number | boolean): string | number | boolean | void {\n    if (isDef(value)) {\n      object.set(node, name, value, env.FALSE)\n    }\n    else {\n      return object.get(node, name)\n    }\n  },\n\n  removeProp(node: HTMLElement, name: string, hint?: number): void {\n    object.set(\n      node,\n      name,\n      hint === config.HINT_BOOLEAN\n        ? env.FALSE\n        : env.EMPTY_STRING,\n      env.FALSE\n    )\n  },\n\n  attr(node: HTMLElement, name: string, value?: string): string | void {\n    if (isDef(value)) {\n      node.setAttribute(name, value as string)\n    }\n    else {\n      // value 还可能是 null\n      const value = node.getAttribute(name)\n      if (value != env.NULL) {\n        return value\n      }\n    }\n  },\n\n  removeAttr(node: HTMLElement, name: string): void {\n    node.removeAttribute(name)\n  },\n\n  before(parentNode: Node, node: Node, referenceNode: Node): void {\n    parentNode.insertBefore(node, referenceNode)\n  },\n\n  append(parentNode: Node, node: Node): void {\n    parentNode.appendChild(node)\n  },\n\n  replace(parentNode: Node, node: Node, oldNode: Node): void {\n    parentNode.replaceChild(node, oldNode)\n  },\n\n  remove(parentNode: Node, node: Node): void {\n    parentNode.removeChild(node)\n  },\n\n  parent(node: Node): Node | void {\n    const { parentNode } = node\n    if (parentNode) {\n      return parentNode\n    }\n  },\n\n  next(node: Node): Node | void {\n    const { nextSibling } = node\n    if (nextSibling) {\n      return nextSibling\n    }\n  },\n\n  find: findElement,\n\n  tag(node: Node): string | void {\n    if (node.nodeType === 1) {\n      return (node as HTMLElement).tagName.toLowerCase()\n    }\n  },\n\n  text(node: Node, text?: string): string | void {\n    if (isDef(text)) {\n      node[innerText] = text as string\n    }\n    else {\n      return node[innerText]\n    }\n  },\n\n  html(node: Element, html?: string): string | void {\n    if (isDef(html)) {\n      node.innerHTML = html as string\n    }\n    else {\n      return node.innerHTML\n    }\n  },\n\n  addClass,\n\n  removeClass,\n\n  on(node: HTMLElement, type: string, listener: signature.nativeEventListener, context?: any): void {\n\n    const emitter: Emitter = node[EMITTER] || (node[EMITTER] = new Emitter()),\n\n    nativeListeners = emitter.nativeListeners || (emitter.nativeListeners = {})\n\n    // 一个元素，相同的事件，只注册一个 native listener\n    if (!nativeListeners[type]) {\n\n      // 特殊事件\n      const special = specialEvents[type],\n\n      // 唯一的原生监听器\n      nativeListener = function (event: Event | CustomEvent) {\n\n        emitter.fire(\n          event instanceof CustomEvent\n            ? event\n            : new CustomEvent(event.type, domApi.createEvent(event, node))\n        )\n\n      }\n\n      nativeListeners[type] = nativeListener\n\n      if (special) {\n        special.on(node, nativeListener)\n      }\n      else {\n        addEventListener(node, type, nativeListener)\n      }\n\n    }\n    emitter.on(\n      type,\n      {\n        fn: listener,\n        ctx: context,\n      }\n    )\n  },\n\n  off(node: HTMLElement, type: string, listener: signature.nativeEventListener): void {\n\n    const emitter: Emitter = node[EMITTER],\n\n    { listeners, nativeListeners } = emitter\n\n    // emitter 会根据 type 和 listener 参数进行适当的删除\n    emitter.off(type, listener)\n\n    // 如果注册的 type 事件都解绑了，则去掉原生监听器\n    if (nativeListeners && !emitter.has(type)) {\n\n      const special = specialEvents[type],\n\n      nativeListener = nativeListeners[type]\n\n      if (special) {\n        special.off(node, nativeListener as signature.specialEventListener)\n      }\n      else {\n        removeEventListener(node, type, nativeListener)\n      }\n\n      delete nativeListeners[type]\n\n    }\n\n    if (object.falsy(listeners)) {\n      node[EMITTER] = env.UNDEFINED\n    }\n\n  },\n\n  specialEvents\n\n}\n\nspecialEvents[INPUT] = {\n  on(node: HTMLElement, listener: signature.specialEventListener) {\n    let locked = env.FALSE\n    domApi.on(node, COMPOSITION_START, listener[COMPOSITION_START] = function () {\n      locked = env.TRUE\n    })\n    domApi.on(node, COMPOSITION_END, listener[COMPOSITION_END] = function (event: CustomEvent) {\n      locked = env.FALSE\n      event.type = INPUT\n      listener(event)\n    })\n    addEventListener(node, INPUT, listener[INPUT] = function (event: Event) {\n      if (!locked) {\n        listener(event)\n      }\n    })\n  },\n  off(node: HTMLElement, listener: signature.specialEventListener) {\n    domApi.off(node, COMPOSITION_START, listener[COMPOSITION_START])\n    domApi.off(node, COMPOSITION_END, listener[COMPOSITION_END])\n    removeEventListener(node, INPUT, listener[INPUT])\n    listener[COMPOSITION_START] =\n    listener[COMPOSITION_END] =\n    listener[INPUT] = env.UNDEFINED\n  }\n}\n\nexport default domApi","import execute from './execute'\n\nimport * as env from '../util/env'\nimport * as array from '../util/array'\n\n/**\n * 节流调用\n *\n * @param fn 需要节制调用的函数\n * @param delay 调用的时间间隔，单位毫秒\n * @param immediate 是否立即触发\n * @return 节流函数\n */\nexport default function (fn: Function, delay: number, immediate?: boolean) {\n\n  let timer: number\n\n  return function () {\n\n    if (!timer) {\n\n      const args = array.toArray(arguments)\n      if (immediate) {\n        execute(fn, env.UNDEFINED, args)\n      }\n\n      timer = setTimeout(\n        function () {\n          timer = 0\n          if (!immediate) {\n            execute(fn, env.UNDEFINED, args)\n          }\n        },\n        delay\n      )\n\n    }\n\n  }\n}\n","\n/**\n * tap 事件\n *\n * 非常有用的抽象事件，比如 pc 端是 click 事件，移动端是 touchend 事件\n *\n * 这样只需 on-tap=\"handler\" 就可以完美兼容各端\n *\n * 框架未实现此事件，通过 Yox.dom.specialEvents 提供给外部扩展\n *\n */\nexport const TAP = 'tap'\n\n/**\n * 点击事件\n */\nexport const CLICK = 'click'\n\n/**\n * 输入事件\n */\nexport const INPUT = 'input'\n\n/**\n * 表单控件的修改事件\n */\nexport const CHANGE = 'change'\n\n/**\n * IE 模拟输入事件的特殊事件\n */\nexport const PROPERTY_CHANGE = 'propertychange'\n","import execute from 'yox-common/src/function/execute'\nimport debounce from 'yox-common/src/function/debounce'\n\nimport * as env from 'yox-common/src/util/env'\nimport * as array from 'yox-common/src/util/array'\n\nimport api from 'yox-dom/index'\nimport * as event from '../config/event'\n\nimport VNode from 'yox-type/src/vnode/VNode'\nimport Directive from 'yox-type/src/vnode/Directive'\nimport DirectiveHooks from 'yox-type/src/hooks/Directive'\nimport Yox from 'yox-type/src/Yox'\nimport * as type from 'yox-type/index'\n\n// 避免连续多次点击，主要用于提交表单场景\n// 移动端的 tap 事件可自行在业务层打补丁实现\nconst immediateTypes = array.toObject([event.CLICK, event.TAP]),\n\ndirective: DirectiveHooks = {\n  bind(node: HTMLElement | Yox, directive: Directive, vnode: VNode) {\n\n    let { name, handler } = directive,\n\n    lazy = vnode.lazy[name] || vnode.lazy[env.EMPTY_STRING]\n\n    if (!handler) {\n      return\n    }\n\n    if (lazy) {\n      // 编译模板时能保证不是 true 就是大于 0 数字\n      if (lazy === env.TRUE) {\n        name = event.CHANGE\n      }\n      else {\n        handler = debounce(\n          handler,\n          lazy,\n          immediateTypes[name]\n        )\n      }\n    }\n\n    if (vnode.isComponent) {\n\n      const component = node as Yox\n\n      component.on(name, handler)\n      vnode.data[directive.key] = function () {\n        component.off(name, handler as type.eventListener)\n      }\n\n    }\n    else {\n\n      const el = node as HTMLElement\n\n      api.on(el, name, handler)\n      vnode.data[directive.key] = function () {\n        api.off(el, name, handler as type.eventListener)\n      }\n\n    }\n\n  },\n\n  unbind(node: HTMLElement | Yox, directive: Directive, vnode: VNode) {\n    execute(vnode.data[directive.key])\n  }\n}\n\nexport default directive\n","import isDef from 'yox-common/src/function/isDef'\nimport debounce from 'yox-common/src/function/debounce'\nimport execute from 'yox-common/src/function/execute'\nimport toString from 'yox-common/src/function/toString'\n\nimport * as is from 'yox-common/src/util/is'\nimport * as env from 'yox-common/src/util/env'\nimport * as array from 'yox-common/src/util/array'\nimport * as object from 'yox-common/src/util/object'\n\nimport * as config from 'yox-config/index'\nimport api from 'yox-dom/index'\n\nimport * as event from '../config/event'\n\nimport Yox from 'yox-type/src/Yox'\nimport VNode from 'yox-type/src/vnode/VNode'\nimport Directive from 'yox-type/src/vnode/Directive'\nimport DirectiveHooks from 'yox-type/src/hooks/Directive'\n\nfunction getOptionValue(option: HTMLOptionElement) {\n  return isDef(option.value)\n    ? option.value\n    : option.text\n}\n\ninterface Control {\n\n  set(node: HTMLElement | Yox, keypath: string, context: Yox): void\n\n  sync(node: HTMLElement | Yox, keypath: string, context: Yox): void\n\n  name: string\n\n}\n\nconst syncWatcherOptions = { sync: env.TRUE },\n\ninputControl: Control = {\n  set(input: HTMLInputElement, keypath: string, context: Yox) {\n    input.value = toString(context.get(keypath))\n  },\n  sync(input: HTMLInputElement, keypath: string, context: Yox) {\n    context.set(keypath, input.value)\n  },\n  name: 'value'\n},\n\nselectControl: Control = {\n  set(select: HTMLSelectElement, keypath: string, context: Yox) {\n    const value = context.get(keypath)\n    array.each(\n      array.toArray(select.options),\n      select.multiple\n        ? function (option: HTMLOptionElement) {\n          option.selected = array.has(value, getOptionValue(option), env.FALSE)\n        }\n        : function (option: HTMLOptionElement, index: number) {\n          if (getOptionValue(option) == value) {\n            select.selectedIndex = index\n            return env.FALSE\n          }\n        }\n    )\n  },\n  sync(select: HTMLSelectElement, keypath: string, context: Yox) {\n    const options = array.toArray(select.options)\n    if (select.multiple) {\n      const values = []\n      array.each(\n        options,\n        function (option: HTMLOptionElement) {\n          if (option.selected) {\n            array.push(\n              values,\n              getOptionValue(option)\n            )\n          }\n        }\n      )\n      // 如果新旧值都是 []，set 没有意义\n      if (!array.falsy(values) || !array.falsy(context.get(keypath))) {\n        context.set(keypath, values)\n      }\n    }\n    else {\n      context.set(\n        keypath,\n        getOptionValue(\n          options[select.selectedIndex]\n        )\n      )\n    }\n  },\n  name: 'value'\n},\n\nradioControl: Control = {\n  set(radio: HTMLInputElement, keypath: string, context: Yox) {\n    radio.checked = radio.value === toString(context.get(keypath))\n  },\n  sync(radio: HTMLInputElement, keypath: string, context: Yox) {\n    if (radio.checked) {\n      context.set(keypath, radio.value)\n    }\n  },\n  name: 'checked'\n},\n\ncheckboxControl: Control = {\n  set(checkbox: HTMLInputElement, keypath: string, context: Yox) {\n    const value = context.get(keypath)\n    checkbox.checked = is.array(value)\n      ? array.has(value, checkbox.value, env.FALSE)\n      : (is.boolean(value) ? value : !!value)\n  },\n  sync(checkbox: HTMLInputElement, keypath: string, context: Yox) {\n    const value = context.get(keypath)\n    if (is.array(value)) {\n      if (checkbox.checked) {\n        context.append(keypath, checkbox.value)\n      }\n      else {\n        context.removeAt(\n          keypath,\n          array.indexOf(value, checkbox.value, env.FALSE)\n        )\n      }\n    }\n    else {\n      context.set(keypath, checkbox.checked)\n    }\n  },\n  name: 'checked'\n},\n\ncomponentControl: Control = {\n  set(component: Yox, keypath: string, context: Yox) {\n    component.set(\n      component.$model,\n      context.get(keypath)\n    )\n  },\n  sync(component: Yox, keypath: string, context: Yox) {\n    context.set(\n      keypath,\n      component.get(component.$model)\n    )\n  },\n  name: 'value'\n},\n\nspecialControls = {\n  radio: radioControl,\n  checkbox: checkboxControl,\n  select: selectControl,\n},\n\ndirective: DirectiveHooks = {\n  bind(node: HTMLElement | Yox, directive: Directive, vnode: VNode) {\n\n    let { binding } = directive,\n\n    { context, nativeProps } = vnode,\n\n    lazy = vnode.lazy[config.DIRECTIVE_MODEL] || vnode.lazy[env.EMPTY_STRING],\n\n    set = function () {\n      if (!isSyncing) {\n        control.set(component || element, binding as string, context)\n      }\n    },\n\n    sync = function () {\n      isSyncing = env.TRUE\n      control.sync(component || element, binding as string, context)\n      isSyncing = env.FALSE\n    },\n\n    isSyncing = env.FALSE,\n\n    component: Yox,\n\n    element: HTMLElement,\n\n    control: Control,\n\n    type: string\n\n    if (lazy && lazy !== env.TRUE) {\n      sync = debounce(sync, lazy)\n    }\n\n    if (vnode.isComponent) {\n\n      component = node as Yox\n      control = componentControl\n\n      // 监听交互，修改数据\n      component.watch(component.$model, sync)\n\n    }\n    else {\n\n      element = node as HTMLElement\n      control = specialControls[element['type']] || specialControls[api.tag(element) as string]\n\n      // checkbox,radio,select 监听的是 change 事件\n      type = event.CHANGE\n\n      // 如果是输入框，则切换成 input 事件\n      if (!control) {\n        control = inputControl\n        if (lazy !== env.TRUE) {\n          type = event.INPUT\n        }\n      }\n\n      // 如果模板里没写对应的属性，则这里先设值\n      if (!nativeProps || !object.has(nativeProps, control.name)) {\n        set()\n      }\n\n      // 监听交互，修改数据\n      api.on(element, type, sync)\n\n    }\n\n    // 监听数据，修改界面\n    // 这里使用同步监听，这样才能使 isSyncing 生效\n    context.watch(binding as string, set, syncWatcherOptions)\n\n    vnode.data[directive.key] = function () {\n      if (vnode.isComponent) {\n        component.unwatch(component.$model, sync)\n      }\n      else {\n        api.off(element, type, sync)\n      }\n      context.unwatch(binding as string, set)\n    }\n\n  },\n\n  unbind(node: HTMLElement | Yox, directive: Directive, vnode: VNode) {\n    execute(vnode.data[directive.key])\n  }\n}\n\nexport default directive\n","import isDef from 'yox-common/src/function/isDef'\nimport execute from 'yox-common/src/function/execute'\n\nimport * as keypathUtil from 'yox-common/src/util/keypath'\n\nimport VNode from 'yox-type/src/vnode/VNode'\nimport Directive from 'yox-type/src/vnode/Directive'\nimport DirectiveHooks from 'yox-type/src/hooks/Directive'\nimport Yox from 'yox-type/src/Yox'\n\nimport api from 'yox-dom/index'\n\nconst directive: DirectiveHooks = {\n\n  bind(node: HTMLElement | Yox, directive: Directive, vnode: VNode) {\n\n    // binding 可能是模糊匹配\n    // 比如延展属性 {{...obj}}，这里 binding 会是 `obj.*`\n    const { binding } = directive\n\n    if (binding) {\n\n      const isFuzzy = keypathUtil.isFuzzy(binding),\n\n      watcher = function (newValue: any, oldValue: any, keypath: string) {\n\n        const name = isFuzzy\n          ? keypathUtil.matchFuzzy(keypath, binding) as string\n          : directive.name\n\n        if (vnode.isComponent) {\n          (node as Yox).set(name, newValue)\n        }\n        else if (isDef(directive.hint)) {\n          api.prop(node as HTMLElement, name, newValue)\n        }\n        else {\n          api.attr(node as HTMLElement, name, newValue)\n        }\n\n      }\n\n      vnode.context.watch(binding, watcher)\n\n      vnode.data[directive.key] = function () {\n        vnode.context.unwatch(binding, watcher)\n      }\n\n    }\n\n  },\n\n  unbind(node: HTMLElement | Yox, directive: Directive, vnode: VNode) {\n    execute(vnode.data[directive.key])\n  }\n\n}\n\nexport default directive\n","import * as config from 'yox-config/index'\nimport * as logger from 'yox-common/src/util/logger'\n\nimport isDef from 'yox-common/src/function/isDef'\n\n/**\n * 组件是否存在某个 slot\n *\n * @param name\n */\nexport default function (name: string): boolean {\n  if (process.env.NODE_ENV === 'dev') {\n    logger.warn('hasSlot 过滤器已不建议使用')\n  }\n  return isDef(this.get(config.SLOT_DATA_PREFIX + name))\n}\n","import isDef from 'yox-common/src/function/isDef'\nimport execute from 'yox-common/src/function/execute'\n\nimport Event from 'yox-common/src/util/Event'\nimport Emitter from 'yox-common/src/util/Emitter'\nimport NextTask from 'yox-common/src/util/NextTask'\n\nimport * as is from 'yox-common/src/util/is'\nimport * as env from 'yox-common/src/util/env'\nimport * as array from 'yox-common/src/util/array'\nimport * as string from 'yox-common/src/util/string'\nimport * as object from 'yox-common/src/util/object'\nimport * as logger from 'yox-common/src/util/logger'\n\nimport * as config from 'yox-config/index'\nimport * as snabbdom from 'yox-snabbdom/index'\n\nimport * as templateCompiler from 'yox-template-compiler/src/compiler'\nimport * as templateStringify from 'yox-template-compiler/src/stringify'\nimport * as templateRender from 'yox-template-compiler/src/renderer'\nimport VNode from 'yox-type/src/vnode/VNode'\nimport YoxInterface from 'yox-type/src/Yox'\nimport YoxOptions from 'yox-type/src/options/Yox'\nimport YoxPlugin from 'yox-type/src/YoxPlugin'\nimport ComputedOptions from 'yox-type/src/options/Computed'\nimport WatcherOptions from 'yox-type/src/options/Watcher'\nimport DirectiveHooks from 'yox-type/src/hooks/Directive'\nimport TransitionHooks from 'yox-type/src/hooks/Transition'\nimport PropRule from 'yox-type/src/PropRule'\nimport * as signature from 'yox-type/index'\n\nimport Computed from 'yox-observer/src/Computed'\nimport Observer from 'yox-observer/src/Observer'\nimport formatWatcherOptions from 'yox-observer/src/function/formatWatcherOptions'\n\nimport domApi from 'yox-dom/index'\n\nimport event from './directive/event'\nimport model from './directive/model'\nimport binding from './directive/binding'\nimport hasSlot from './filter/hasSlot'\n\nconst globalDirectives = {},\n\nglobalTransitions = {},\n\nglobalComponents = {},\n\nglobalPartials = {},\n\nglobalFilters = {},\n\nTEMPLATE_COMPUTED = '$' + env.RAW_TEMPLATE,\n\nselectorPattern = /^[#.][-\\w+]+$/\n\nexport default class Yox implements YoxInterface {\n\n  $options: YoxOptions\n\n  $observer: Observer\n\n  $emitter: Emitter\n\n  $template?: Function\n\n  $refs: Record<string, YoxInterface | HTMLElement>\n\n  $parent?: YoxInterface\n\n  $children?: YoxInterface[]\n\n  $vnode: VNode | undefined\n\n  $el?: HTMLElement\n\n  $model?: string\n\n  $directives?: Record<string, DirectiveHooks>\n\n  $components?: Record<string, YoxOptions>\n\n  $transitions?: Record<string, TransitionHooks>\n\n  $partials?: Record<string, Function>\n\n  $filters?: Record<string, Function | Record<string, Function>>\n\n  /**\n   * core 版本\n   */\n  public static version = '1.0.0-alpha'\n\n  /**\n   * 方便外部共用的通用逻辑，特别是写插件，减少重复代码\n   */\n  public static is = is\n  public static array = array\n  public static object = object\n  public static string = string\n  public static logger = logger\n  public static Event = Event\n  public static Emitter = Emitter\n\n  /**\n   * 安装插件\n   *\n   * 插件必须暴露 install 方法\n   */\n  public static use(plugin: YoxPlugin) {\n    plugin.install(Yox)\n  }\n\n  /**\n   * 因为组件采用的是异步更新机制，为了在更新之后进行一些操作，可使用 nextTick\n   */\n  public static nextTick(task: Function) {\n    NextTask.shared().append(task)\n  }\n\n  /**\n   * 编译模板，暴露出来是为了打包阶段的模板预编译\n   */\n  public static compile(template: string, stringify?: boolean): Function | string {\n    if (process.env.NODE_ENV !== 'pure') {\n      if (process.env.NODE_ENV !== 'runtime') {\n        if (!templateStringify.hasStringify(template)) {\n          // 未编译，常出现在开发阶段\n          const nodes = templateCompiler.compile(template)\n          if (process.env.NODE_ENV === 'dev') {\n            if (nodes.length !== 1) {\n              logger.fatal(`\"template\" should have just one root element.`)\n            }\n          }\n          template = templateStringify.stringify(nodes[0])\n          if (stringify) {\n            return template\n          }\n        }\n      }\n      return new Function(`return ${template}`)()\n    }\n  }\n\n  public static directive(\n    name: string | Record<string, DirectiveHooks>,\n    directive?: DirectiveHooks\n  ): DirectiveHooks | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      if (is.string(name) && !directive) {\n        return getResource(globalDirectives, name as string)\n      }\n      setResource(globalDirectives, name, directive)\n    }\n  }\n\n  public static transition(\n    name: string | Record<string, TransitionHooks>,\n    transition?: TransitionHooks\n  ): TransitionHooks | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      if (is.string(name) && !transition) {\n        return getResource(globalTransitions, name as string)\n      }\n      setResource(globalTransitions, name, transition)\n    }\n  }\n\n  public static component(\n    name: string | Record<string, YoxOptions>,\n    component?: YoxOptions | signature.asyncComponent\n  ): YoxOptions | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      if (is.string(name)) {\n        // 同步取值\n        if (!component) {\n          return getResource(globalComponents, name as string)\n        }\n        else if (is.func(component)) {\n          getComponentAsync(globalComponents, name as string, component as signature.asyncComponent)\n          return\n        }\n      }\n      setResource(globalComponents, name, component)\n    }\n  }\n\n  public static partial(\n    name: string | Record<string, string>,\n    partial?: string\n  ): Function | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      if (is.string(name) && !partial) {\n        return getResource(globalPartials, name as string)\n      }\n      setResource(globalPartials, name, partial, Yox.compile)\n    }\n  }\n\n  public static filter(\n    name: string | Record<string, Function | Record<string, Function>>,\n    filter?: Function | Record<string, Function | Record<string, Function>>\n  ): Function | Record<string, Function> | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      if (is.string(name) && !filter) {\n        return getResource(globalFilters, name as string)\n      }\n      setResource(globalFilters, name, filter)\n    }\n  }\n\n  /**\n   * 验证 props，无爱请重写\n   */\n  public static checkPropTypes(props: Record<string, any>, propTypes: Record<string, PropRule>) {\n    let result = object.copy(props)\n    object.each(\n      propTypes,\n      function (rule: PropRule, key: string) {\n\n        // 类型\n        let type = rule.type,\n\n        // 默认值\n        value = rule.value,\n\n        // 是否必传\n        required = rule.required,\n\n        // 实际的值\n        actual = props[key]\n\n        // 动态化获取是否必填\n        if (is.func(required)) {\n          required = (required as Function)(props)\n        }\n\n        // 传了数据\n        if (isDef(actual)) {\n\n          // 如果不写 type 或 type 不是 字符串 或 数组\n          // 就当做此规则无效，和没写一样\n          if (type) {\n            let matched: boolean | void\n            // 比较类型\n            if (!string.falsy(type)) {\n              matched = is.is(actual, type as string)\n            }\n            else if (!array.falsy(type)) {\n              array.each(\n                type as string[],\n                function (t) {\n                  if (is.is(actual, t)) {\n                    matched = env.TRUE\n                    return env.FALSE\n                  }\n                }\n              )\n            }\n            if (matched !== env.TRUE) {\n              logger.warn(`The prop \"${key}\" type is not matched.`)\n            }\n          }\n          else {\n            logger.warn(`The prop \"${key}\" in propTypes has no type.`)\n          }\n\n        }\n        // 没传值但此项是必传项\n        else if (required) {\n          logger.warn(`The prop \"${key}\" is marked as required, but its value is not found.`)\n        }\n        // 没传值但是配置了默认值\n        else if (isDef(value)) {\n          result[key] = type === env.RAW_FUNCTION\n            ? value\n            : (is.func(value) ? value(props) : value)\n        }\n      }\n    )\n    return result\n  }\n\n  constructor(options: YoxOptions) {\n\n    const instance = this\n\n    if (!is.object(options)) {\n      options = env.EMPTY_OBJECT\n    }\n\n    // 如果不绑着，其他方法调不到钩子\n    instance.$options = options\n\n    execute(options[ config.HOOK_BEFORE_CREATE ], instance, options)\n\n    let {\n      el,\n      data,\n      props,\n      model,\n      parent,\n      replace,\n      computed,\n      template,\n      transitions,\n      components,\n      directives,\n      partials,\n      filters,\n      slots,\n      events,\n      methods,\n      watchers,\n      extensions,\n    } = options\n\n    if (extensions) {\n      object.extend(instance, extensions)\n    }\n\n    if (model) {\n      instance.$model = model\n    }\n\n    // 数据源\n    const source = props\n      ? instance.checkPropTypes(props)\n      : {}\n\n    // 把 slots 放进数据里，方便 get\n    if (slots) {\n      object.extend(source, slots)\n    }\n\n    // 如果传了 props，则 data 应该是个 function\n    if (props && is.object(data)) {\n      logger.warn('\"data\" option expected to be a function.')\n    }\n\n    // 先放 props\n    // 当 data 是函数时，可以通过 this.get() 获取到外部数据\n    const observer = instance.$observer = new Observer(source, instance)\n\n    if (computed) {\n      object.each(\n        computed,\n        function (options: signature.computedGetter | ComputedOptions, keypath: string) {\n          observer.addComputed(keypath, options)\n        }\n      )\n    }\n\n    // 后放 data\n    const extend = is.func(data) ? execute(data, instance, options) : data\n    if (is.object(extend)) {\n      object.each(\n        extend,\n        function (value, key) {\n          if (object.has(source, key)) {\n            logger.warn(`\"${key}\" is already defined as a prop. Use prop default value instead.`)\n          }\n          else {\n            source[key] = value\n          }\n        }\n      )\n    }\n\n    // 监听各种事件\n    // 支持命名空间\n    instance.$emitter = new Emitter(env.TRUE)\n\n    let placeholder: Node | void,\n\n    isComment = env.FALSE\n\n    if (process.env.NODE_ENV !== 'pure') {\n\n      // 检查 template\n      if (is.string(template)) {\n        // 传了选择器，则取对应元素的 html\n        if (selectorPattern.test(template)) {\n          placeholder = domApi.find(template)\n          if (placeholder) {\n            template = domApi.html(placeholder as Element) as string\n            placeholder = env.UNDEFINED\n          }\n          else {\n            if (process.env.NODE_ENV === 'dev') {\n              logger.fatal(`\"${template}\" 选择器找不到对应的元素`)\n            }\n          }\n        }\n      }\n      else {\n        template = env.UNDEFINED\n      }\n\n      // 检查 el\n      if (el) {\n        if (is.string(el)) {\n          const selector = el as string\n          if (selectorPattern.test(selector)) {\n            placeholder = domApi.find(selector)\n            if (process.env.NODE_ENV === 'dev') {\n              if (!placeholder) {\n                logger.fatal(`\"${selector}\" 选择器找不到对应的元素`)\n              }\n            }\n          }\n          else {\n            if (process.env.NODE_ENV === 'dev') {\n              logger.fatal(`\"el\" option 格式错误`)\n            }\n          }\n        }\n        else {\n          placeholder = el as Node\n        }\n      }\n\n\n      if (placeholder && !replace) {\n        // 如果不是替换占位元素\n        // 则在该元素下新建一个注释节点，等会用新组件替换掉\n        isComment = env.TRUE\n        domApi.append(\n          placeholder as Node,\n          placeholder = domApi.createComment(env.EMPTY_STRING)\n        )\n      }\n\n      if (parent) {\n        instance.$parent = parent\n      }\n\n      setFlexibleOptions(instance, env.RAW_TRANSITION, transitions)\n      setFlexibleOptions(instance, env.RAW_COMPONENT, components)\n      setFlexibleOptions(instance, env.RAW_DIRECTIVE, directives)\n      setFlexibleOptions(instance, env.RAW_PARTIAL, partials)\n      setFlexibleOptions(instance, env.RAW_FILTER, filters)\n\n    }\n\n    if (methods) {\n      object.each(\n        methods,\n        function (method: Function, name: string) {\n          if (process.env.NODE_ENV === 'dev') {\n            if (instance[name]) {\n              logger.fatal(`\"${name}\" method is conflicted with built-in methods.`)\n            }\n          }\n          instance[name] = method\n        }\n      )\n    }\n\n    execute(options[ config.HOOK_AFTER_CREATE ], instance)\n\n    if (process.env.NODE_ENV !== 'pure') {\n\n      // 当存在模板和计算属性时\n      // 因为这里把模板当做一种特殊的计算属性\n      // 因此模板这个计算属性的优先级应该最高\n      if (template) {\n\n        // 编译模板\n        // 在开发阶段，template 是原始的 html 模板\n        // 在产品阶段，template 是编译后且经过 stringify 的字符串\n        // 当然，这个需要外部自己控制传入的 template 是什么\n        // Yox.compile 会自动判断 template 是否经过编译\n        instance.$template = Yox.compile(template) as Function\n\n        // 当模板的依赖变了，则重新创建 virtual dom\n        observer.addComputed(\n          TEMPLATE_COMPUTED,\n          {\n            // 当模板依赖变化时，异步通知模板更新\n            sync: env.FALSE,\n            get: function () {\n              return instance.render()\n            }\n          }\n        )\n\n        // 拷贝一份，避免影响外部定义的 watchers\n        watchers = watchers\n          ? object.copy(watchers)\n          : {}\n\n        // 当 virtual dom 变了，则更新视图\n        watchers[TEMPLATE_COMPUTED] = function (vnode: VNode) {\n          instance.update(vnode, instance.$vnode)\n        }\n\n        // 第一次渲染视图\n        if (!placeholder) {\n          isComment = env.TRUE\n          placeholder = domApi.createComment(env.EMPTY_STRING)\n        }\n\n        instance.update(\n          instance.get(TEMPLATE_COMPUTED),\n          snabbdom.create(\n            domApi,\n            placeholder,\n            isComment,\n            instance,\n            env.EMPTY_STRING\n          )\n        )\n\n      }\n      else {\n        if (process.env.NODE_ENV === 'dev') {\n          if (placeholder) {\n            logger.fatal('有 el 没 template 是几个意思？')\n          }\n        }\n      }\n    }\n\n    if (events) {\n      instance.on(events)\n    }\n\n    // 确保早于 AFTER_MOUNT 执行\n    if (watchers) {\n      observer.nextTask.prepend(\n        function () {\n          if (instance.$observer) {\n            instance.watch(watchers)\n          }\n        }\n      )\n    }\n\n  }\n\n  /**\n   * 添加计算属性\n   */\n  addComputed(\n    keypath: string,\n    computed: signature.computedGetter | ComputedOptions\n  ): Computed | void {\n    return this.$observer.addComputed(keypath, computed)\n  }\n\n  /**\n   * 删除计算属性\n   */\n  removeComputed(\n    keypath: string\n  ): void {\n    this.$observer.removeComputed(keypath)\n  }\n\n  /**\n   * 取值\n   */\n  get(\n    keypath: string,\n    defaultValue?: any,\n    depIgnore?: boolean\n  ): any {\n    return this.$observer.get(keypath, defaultValue, depIgnore)\n  }\n\n  /**\n   * 设值\n   */\n  set(\n    keypath: string | Record<string, any>,\n    value?: any\n  ): void {\n    // 组件经常有各种异步改值，为了避免组件销毁后依然调用 set\n    // 这里判断一下，至于其他方法的异步调用就算了，业务自己控制吧\n    const { $observer } = this\n    if ($observer) {\n      $observer.set(keypath, value)\n    }\n  }\n\n  /**\n   * 监听事件\n   */\n  on(\n    type: string | Record<string, signature.eventListener>,\n    listener?: signature.eventListener\n  ): YoxInterface {\n    this.$emitter.on(type, listener, { ctx: this })\n    return this\n  }\n\n  /**\n   * 监听一次事件\n   */\n  once(\n    type: string | Record<string, signature.eventListener>,\n    listener?: signature.eventListener\n  ): YoxInterface {\n    this.$emitter.on(type, listener, { ctx: this, max: 1 })\n    return this\n  }\n\n  /**\n   * 取消监听事件\n   */\n  off(\n    type: string,\n    listener?: signature.eventListener\n  ): YoxInterface {\n    this.$emitter.off(type, listener)\n    return this\n  }\n\n  /**\n   * 触发事件\n   */\n  fire(\n    bullet: string | Event,\n    data?: signature.eventData | boolean,\n    downward?: boolean\n  ): boolean {\n\n    // 外部为了使用方便，fire(type) 或 fire(type, data) 就行了\n    // 内部为了保持格式统一\n    // 需要转成 Event，这样还能知道 target 是哪个组件\n\n    let instance = this,\n\n    event = bullet instanceof Event ? bullet : new Event(bullet),\n\n    eventData: signature.eventData | void,\n\n    isComplete: boolean | void\n\n    // 告诉外部是谁发出的事件\n    if (!event.target) {\n      event.target = instance\n    }\n\n    // 比如 fire('name', true) 直接向下发事件\n    if (is.object(data)) {\n      eventData = data as Record<string, any>\n    }\n    else if (data === env.TRUE) {\n      downward = env.TRUE\n    }\n\n    isComplete = instance.$emitter.fire(event, eventData)\n    if (isComplete) {\n      if (downward) {\n        if (instance.$children) {\n          array.each(\n            instance.$children,\n            function (child: Yox) {\n              return isComplete = child.fire(event, data, env.TRUE)\n            }\n          )\n        }\n      }\n      else if (instance.$parent) {\n        isComplete = instance.$parent.fire(event, data)\n      }\n    }\n\n    return isComplete\n\n  }\n\n  /**\n   * 监听数据变化\n   */\n  watch(\n    keypath: string | Record<string, signature.watcher | WatcherOptions>,\n    watcher?: signature.watcher,\n    options?: WatcherOptions | boolean\n  ): YoxInterface {\n    this.$observer.watch(keypath, watcher, options)\n    return this\n  }\n\n  /**\n   * 监听一次数据变化\n   */\n  watchOnce(\n    keypath: string,\n    watcher: signature.watcher,\n    options?: WatcherOptions\n  ): YoxInterface {\n    const watcherOptions = formatWatcherOptions(options)\n    watcherOptions.once = env.TRUE\n    this.$observer.watch(keypath, watcher, watcherOptions)\n    return this\n  }\n\n  /**\n   * 取消监听数据变化\n   */\n  unwatch(\n    keypath: string,\n    watcher?: signature.watcher\n  ): YoxInterface {\n    this.$observer.unwatch(keypath, watcher)\n    return this\n  }\n\n  directive(\n    name: string | Record<string, DirectiveHooks>,\n    directive?: DirectiveHooks\n  ): DirectiveHooks | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      const instance = this, { $directives } = instance\n      if (is.string(name) && !directive) {\n        return getResource($directives, name as string, Yox.directive)\n      }\n      setResource(\n        $directives || (instance.$directives = {}),\n        name,\n        directive\n      )\n    }\n  }\n\n  transition(\n    name: string | Record<string, TransitionHooks>,\n    transition?: TransitionHooks\n  ): TransitionHooks | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      const instance = this, { $transitions } = instance\n      if (is.string(name) && !transition) {\n        return getResource($transitions, name as string, Yox.transition)\n      }\n      setResource(\n        $transitions || (instance.$transitions = {}),\n        name,\n        transition\n      )\n    }\n  }\n\n  component(\n    name: string | Record<string, YoxOptions>,\n    component?: YoxOptions | signature.asyncComponent\n  ): YoxOptions | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      const instance = this, { $components } = instance\n      if (is.string(name)) {\n        // 同步取值\n        if (!component) {\n          return getResource($components, name as string, Yox.component)\n        }\n        else if (is.func(component)) {\n          if (!getComponentAsync($components, name as string, component as signature.asyncComponent)) {\n            getComponentAsync(globalComponents, name as string, component as signature.asyncComponent)\n          }\n          return\n        }\n      }\n      setResource(\n        $components || (instance.$components = {}),\n        name,\n        component\n      )\n    }\n  }\n\n  partial(\n    name: string | Record<string, string>,\n    partial?: string\n  ): Function | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      const instance = this, { $partials } = instance\n      if (is.string(name) && !partial) {\n        return getResource($partials, name as string, Yox.partial)\n      }\n      setResource(\n        $partials || (instance.$partials = {}),\n        name,\n        partial,\n        Yox.compile\n      )\n    }\n  }\n\n  filter(\n    name: string | Record<string, Function | Record<string, Function>>,\n    filter?: Function | Record<string, Function | Record<string, Function>>\n  ): Function | Record<string, Function> | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      const instance = this, { $filters } = instance\n      if (is.string(name) && !filter) {\n        return getResource($filters, name as string, Yox.filter)\n      }\n      setResource(\n        $filters || (instance.$filters = {}),\n        name,\n        filter\n      )\n    }\n  }\n\n  /**\n   * 对于某些特殊场景，修改了数据，但是模板的依赖中并没有这一项\n   * 而你非常确定需要更新模板，强制刷新正是你需要的\n   */\n  forceUpdate(): void {\n    if (process.env.NODE_ENV !== 'pure') {\n\n      const instance = this,\n\n      { $vnode, $observer } = instance\n\n      if ($vnode) {\n\n        const computed: Computed = $observer.computed[TEMPLATE_COMPUTED],\n\n        oldValue = computed.get()\n\n        // 当前可能正在进行下一轮更新\n        $observer.nextTask.run()\n\n        // 没有更新模板，强制刷新\n        if (oldValue === computed.get()) {\n          instance.update(\n            computed.get(env.TRUE),\n            $vnode\n          )\n        }\n      }\n    }\n  }\n\n  /**\n   * 把模板抽象语法树渲染成 virtual dom\n   */\n  render() {\n    if (process.env.NODE_ENV !== 'pure') {\n      const instance = this\n      return templateRender.render(\n        instance,\n        mergeResource(instance.$filters, globalFilters),\n        mergeResource(instance.$partials, globalPartials),\n        mergeResource(instance.$directives, globalDirectives),\n        mergeResource(instance.$transitions, globalTransitions),\n        instance.$template\n      )\n    }\n  }\n\n  /**\n   * 更新 virtual dom\n   *\n   * @param vnode\n   * @param oldVnode\n   */\n  update(vnode: VNode, oldVnode: VNode) {\n    if (process.env.NODE_ENV !== 'pure') {\n      let instance = this,\n\n      { $vnode, $options } = instance,\n\n      hook: Function | void\n\n      // 每次渲染重置 refs\n      // 在渲染过程中收集最新的 ref\n      // 这样可避免更新时，新的 ref，在前面创建，老的 ref 却在后面删除的情况\n      instance.$refs = {}\n\n      if ($vnode) {\n        execute($options[ config.HOOK_BEFORE_UPDATE ], instance)\n        snabbdom.patch(domApi, vnode, oldVnode)\n        hook = $options[config.HOOK_AFTER_UPDATE]\n      }\n      else {\n        execute($options[ config.HOOK_BEFORE_MOUNT ], instance)\n        snabbdom.patch(domApi, vnode, oldVnode)\n        instance.$el = vnode.node as HTMLElement\n        hook = $options[config.HOOK_AFTER_MOUNT]\n      }\n\n      instance.$vnode = vnode\n\n      // 跟 nextTask 保持一个节奏\n      // 这样可以预留一些优化的余地\n      if (hook) {\n        instance.nextTick(\n          function () {\n            if (instance.$vnode) {\n              execute(hook, instance)\n            }\n          }\n        )\n      }\n    }\n  }\n\n  /**\n   * 校验组件参数\n   *\n   * @param props\n   */\n  checkPropTypes(props: Record<string, any>): Record<string, any> {\n    const { propTypes } = this.$options\n    return propTypes\n      ? Yox.checkPropTypes(props, propTypes)\n      : props\n  }\n\n  /**\n   * 创建子组件\n   *\n   * @param options 组件配置\n   * @param vnode 虚拟节点\n   * @param node DOM 元素\n   */\n  create(options: YoxOptions, vnode?: VNode, node?: Node): YoxInterface {\n    if (process.env.NODE_ENV !== 'pure') {\n      options = object.copy(options)\n      options.parent = this\n\n      if (vnode) {\n\n        // 如果传了 node，表示有一个占位元素，新创建的 child 需要把它替换掉\n        if (node) {\n          options.el = node\n          options.replace = env.TRUE\n        }\n\n        let { slots, props, model } = vnode\n\n        if (slots) {\n          options.slots = slots\n        }\n\n        // 把 model 的值设置给 props 的逻辑只能写到这\n        // 不然子组件会报数据找不到的警告\n        if (isDef(model)) {\n          if (!props) {\n            props = {}\n          }\n          const name = options.model || 'value'\n          if (!object.has(props, name)) {\n            props[name] = model\n          }\n          options.model = name\n        }\n\n        options.props = props\n\n      }\n\n      const child = new Yox(options)\n      array.push(\n        this.$children || (this.$children = [ ]),\n        child\n      )\n\n      return child\n    }\n  }\n\n  /**\n   * 销毁组件\n   */\n  destroy(): void {\n\n    const instance = this,\n\n    { $options, $emitter, $observer } = instance\n\n    execute($options[ config.HOOK_BEFORE_DESTROY ], instance)\n\n    if (process.env.NODE_ENV !== 'pure') {\n\n      const { $vnode, $parent } = instance\n\n      if ($parent && $parent.$children) {\n        array.remove($parent.$children, instance)\n      }\n\n      if ($vnode) {\n        // virtual dom 通过判断 parent.$vnode 知道宿主组件是否正在销毁\n        delete instance.$vnode\n        snabbdom.destroy(domApi, $vnode, !$parent)\n      }\n\n    }\n\n    $emitter.off()\n    $observer.destroy()\n\n    object.clear(instance)\n\n    execute($options[ config.HOOK_AFTER_DESTROY ], instance)\n\n  }\n\n  /**\n   * 因为组件采用的是异步更新机制，为了在更新之后进行一些操作，可使用 nextTick\n   */\n  nextTick(task: Function, prepend?: boolean): void {\n    const { nextTask } = this.$observer\n    if (prepend) {\n      nextTask.prepend(task)\n    }\n    else {\n      nextTask.append(task)\n    }\n  }\n\n  /**\n   * 取反 keypath 对应的数据\n   *\n   * 不管 keypath 对应的数据是什么类型，操作后都是布尔型\n   */\n  toggle(keypath: string): boolean {\n    return this.$observer.toggle(keypath)\n  }\n\n  /**\n   * 递增 keypath 对应的数据\n   *\n   * 注意，最好是整型的加法，如果涉及浮点型，不保证计算正确\n   *\n   * @param keypath 值必须能转型成数字，如果不能，则默认从 0 开始递增\n   * @param step 步进值，默认是 1\n   * @param max 可以递增到的最大值，默认不限制\n   */\n  increase(keypath: string, step?: number, max?: number): number | void {\n    return this.$observer.increase(keypath, step, max)\n  }\n\n  /**\n   * 递减 keypath 对应的数据\n   *\n   * 注意，最好是整型的减法，如果涉及浮点型，不保证计算正确\n   *\n   * @param keypath 值必须能转型成数字，如果不能，则默认从 0 开始递减\n   * @param step 步进值，默认是 1\n   * @param min 可以递减到的最小值，默认不限制\n   */\n  decrease(keypath: string, step?: number, min?: number): number | void {\n    return this.$observer.decrease(keypath, step, min)\n  }\n\n  /**\n   * 在数组指定位置插入元素\n   *\n   * @param keypath\n   * @param item\n   * @param index\n   */\n  insert(keypath: string, item: any, index: number | boolean): boolean | void {\n    return this.$observer.insert(keypath, item, index)\n  }\n\n  /**\n   * 在数组尾部添加元素\n   *\n   * @param keypath\n   * @param item\n   */\n  append(keypath: string, item: any): boolean | void {\n    return this.$observer.append(keypath, item)\n  }\n\n  /**\n   * 在数组首部添加元素\n   *\n   * @param keypath\n   * @param item\n   */\n  prepend(keypath: string, item: any): boolean | void {\n    return this.$observer.prepend(keypath, item)\n  }\n\n  /**\n   * 通过索引移除数组中的元素\n   *\n   * @param keypath\n   * @param index\n   */\n  removeAt(keypath: string, index: number): boolean | void {\n    return this.$observer.removeAt(keypath, index)\n  }\n\n  /**\n   * 直接移除数组中的元素\n   *\n   * @param keypath\n   * @param item\n   */\n  remove(keypath: string, item: any): boolean | void {\n    return this.$observer.remove(keypath, item)\n  }\n\n  /**\n   * 拷贝任意数据，支持深拷贝\n   *\n   * @param data\n   * @param deep\n   */\n  copy<T>(data: T, deep?: boolean): T {\n    return this.$observer.copy(data, deep)\n  }\n\n}\n\nfunction setFlexibleOptions(instance: Yox, key: string, value: Function | Record<string, any>) {\n  if (is.func(value)) {\n    instance[key](execute(value, instance))\n  }\n  else if (is.object(value)) {\n    instance[key](value)\n  }\n}\n\nfunction getComponentAsync(data: Record<string, any> | void, name: string, callback: signature.asyncComponent): boolean | void {\n  if (data && object.has(data, name)) {\n    const component = data[name]\n    // 注册的是异步加载函数\n    if (is.func(component)) {\n      let { $queue } = component\n      if (!$queue) {\n        $queue = component.$queue = [callback]\n        component(\n          function (replacement: any) {\n\n            component.$queue = env.UNDEFINED\n\n            data[name] = replacement\n\n            array.each(\n              $queue,\n              function (callback) {\n                callback(replacement)\n              }\n            )\n\n          }\n        )\n      }\n      else {\n        array.push($queue, callback)\n      }\n    }\n    // 不是异步加载函数，直接同步返回\n    else {\n      callback(component)\n    }\n    return env.TRUE\n  }\n}\n\nfunction getResource(data: Record<string, any> | void, name: string, lookup?: Function) {\n  if (data && data[name]) {\n    return data[name]\n  }\n  else if (lookup) {\n    return lookup(name)\n  }\n}\n\nfunction setResource(data: Record<string, any>, name: string | Record<string, any>, value?: any, formatValue?: (value: any) => any) {\n  if (is.string(name)) {\n    data[name as string] = formatValue ? formatValue(value) : value\n  }\n  else {\n    object.each(\n      name,\n      function (value, key) {\n        data[key] = formatValue ? formatValue(value) : value\n      }\n    )\n  }\n}\n\nfunction mergeResource(locals: Record<string, any> | void, globals: Record<string, any>): Record<string, any> {\n  return locals && globals\n    ? object.extend({}, globals, locals)\n    : locals || globals\n}\n\nif (process.env.NODE_ENV !== 'pure') {\n  Yox['dom'] = domApi\n  // 全局注册内置指令\n  Yox.directive({ event, model, binding })\n  // 全局注册内置过滤器\n  Yox.filter({ hasSlot })\n}\n"],"names":["env.UNDEFINED","env.RAW_FUNCTION","env.NULL","is.func","is.array","env.TRUE","env.FALSE","array","falsy","env.EMPTY_STRING","is.number","indexOf","has","is.string","string.startsWith","each","string.falsy","string.indexOf","string.slice","toString","join","string.has","object","is.object","array.each","keypathUtil.each","env.RAW_UNDEFINED","env.EMPTY_FUNCTION","env.win","is.boolean","object.copy","array.has","object.each","object.extend","array.push","logger.fatal","logger.warn","array.unshift","nextTick","env.EMPTY_OBJECT","update","field.COMPONENT","remove","field.LOADING","component.update","directive.update","field.ID","field.VNODE","env.RAW_COMPONENT","nativeAttr.update","nativeProp.update","directive.remove","field.LEAVING","is.numeric","nodeType.ARRAY","nodeType.BINARY","nodeType.CALL","nodeType.IDENTIFIER","nodeType.MEMBER","env.KEYPATH_CURRENT","env.KEYPATH_PARENT","nodeType.LITERAL","nodeType.OBJECT","nodeType.TERNARY","nodeType.UNARY","keypathUtil.join","string.codeAt","creator.createArray","interpreter.unary","creator.createLiteral","creator.createUnary","creator.createObject","creator.createIdentifier","creator.createCall","creator.createMemberIfNeeded","object.has","interpreter.binary","creator.createBinary","creator.createTernary","env.RAW_TRUE","env.RAW_FALSE","env.RAW_NULL","env.RAW_SLOT","env.RAW_TEMPLATE","env.RAW_KEY","env.RAW_REF","nodeType.IF","nodeType.EACH","nodeType.PARTIAL","nodeType.ATTRIBUTE","nodeType.DIRECTIVE","nodeType.PROPERTY","nodeType.ELEMENT","nodeType.ELSE","nodeType.ELSE_IF","nodeType.EXPRESSION","nodeType.IMPORT","nodeType.SPREAD","nodeType.TEXT","patternCache","string.trim","compile","fatal","array.last","array.pop","config.HINT_BOOLEAN","config.HINT_NUMBER","env.RAW_STATIC_KEYPATH","config.DIRECTIVE_LAZY","exprCompiler.compile","config.DIRECTIVE_MODEL","config.DIRECTIVE_EVENT","exprNodeType.CALL","exprNodeType.IDENTIFIER","env.RAW_NAME","helper.specialAttrs","array.indexOf","creator.createText","creator.createElement","env.RAW_TRANSITION","creator.createDirective","string.camelize","config.DIRECTIVE_ON","config.DIRECTIVE_CUSTOM","creator.createAttribute","helper.specialTags","creator.createProperty","config.HINT_STRING","config.SYNTAX_EACH","creator.createEach","config.SYNTAX_IMPORT","creator.createImport","config.SYNTAX_PARTIAL","creator.createPartial","config.SYNTAX_IF","creator.createIf","config.SYNTAX_ELSE_IF","creator.createElseIf","config.SYNTAX_ELSE","creator.createElse","config.SYNTAX_SPREAD","creator.createSpread","config.SYNTAX_COMMENT","creator.createExpression","string.charAt","helper.name2Type","array.join","array.falsy","config.SLOT_DATA_PREFIX","object.falsy","exprNodeType.LITERAL","execute","object.get","invoke","exprExecutor.execute","config.DIRECTIVE_BINDING","env.RAW_ABSOLUTE_KEYPATH","Event","env.EMPTY_ARRAY","keypathUtil.match","keypathUtil.matchFuzzy","keypathUtil.isFuzzy","object.set","object.sort","array.remove","object.clear","doc","env.doc","array.toArray","INPUT","array.toObject","event.CLICK","event.TAP","event.CHANGE","api","syncWatcherOptions","directive","event.INPUT","config.HOOK_BEFORE_CREATE","extend","env.RAW_DIRECTIVE","env.RAW_PARTIAL","env.RAW_FILTER","config.HOOK_AFTER_CREATE","snabbdom.create","stringify","templateStringify.hasStringify","templateCompiler.compile","templateStringify.stringify","is.is","templateRender.render","config.HOOK_BEFORE_UPDATE","snabbdom.patch","config.HOOK_AFTER_UPDATE","config.HOOK_BEFORE_MOUNT","config.HOOK_AFTER_MOUNT","config.HOOK_BEFORE_DESTROY","snabbdom.destroy","config.HOOK_AFTER_DESTROY","is","string"],"mappings":"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"}