{"version":3,"file":"yox.cjs.js","sources":["../../../node_modules/yox-common/src/util/env.ts","../../../node_modules/yox-common/src/function/isDef.ts","../../../node_modules/yox-common/src/util/is.ts","../../../node_modules/yox-common/src/function/execute.ts","../../../node_modules/yox-common/src/util/CustomEvent.ts","../../../node_modules/yox-common/src/util/array.ts","../../../node_modules/yox-common/src/util/string.ts","../../../node_modules/yox-common/src/util/keypath.ts","../../../node_modules/yox-common/src/util/object.ts","../../../node_modules/yox-common/src/function/toString.ts","../../../node_modules/yox-common/src/util/logger.ts","../../../node_modules/yox-common/src/util/Emitter.ts","../../../node_modules/yox-common/src/function/isNative.ts","../../../node_modules/yox-common/src/function/nextTick.ts","../../../node_modules/yox-common/src/util/NextTask.ts","../../../node_modules/yox-config/index.ts","../../../node_modules/yox-snabbdom/src/field.ts","../../../node_modules/yox-snabbdom/src/nativeAttr.ts","../../../node_modules/yox-snabbdom/src/nativeProp.ts","../../../node_modules/yox-snabbdom/src/directive.ts","../../../node_modules/yox-snabbdom/src/component.ts","../../../node_modules/yox-snabbdom/index.ts","../../../node_modules/yox-common/src/function/toNumber.ts","../../../node_modules/yox-expression-compiler/src/nodeType.ts","../../../node_modules/yox-expression-compiler/src/interpreter.ts","../../../node_modules/yox-template-compiler/src/nodeType.ts","../../../node_modules/yox-common/src/function/isUndef.ts","../../../node_modules/yox-common/src/function/toJSON.ts","../../../node_modules/yox-template-compiler/src/stringify.ts","../../../node_modules/yox-expression-compiler/src/executor.ts","../../../node_modules/yox-template-compiler/src/renderer.ts","../../../node_modules/yox-observer/src/Computed.ts","../../../node_modules/yox-observer/src/function/matchBest.ts","../../../node_modules/yox-observer/src/function/readValue.ts","../../../node_modules/yox-observer/src/function/diffString.ts","../../../node_modules/yox-observer/src/function/diffArray.ts","../../../node_modules/yox-observer/src/function/diffObject.ts","../../../node_modules/yox-observer/src/function/diffRecursion.ts","../../../node_modules/yox-observer/src/function/diffWatcher.ts","../../../node_modules/yox-observer/src/function/filterWatcher.ts","../../../node_modules/yox-observer/src/function/formatWatcherOptions.ts","../../../node_modules/yox-observer/src/Observer.ts","../../../node_modules/yox-dom/index.ts","../../../node_modules/yox-common/src/function/debounce.ts","../../../src/directive/event.ts","../../../src/directive/model.ts","../../../src/directive/binding.ts","../../../src/filter/hasSlot.ts","../../../src/Yox.ts"],"sourcesContent":["/**\n * 为了压缩，定义的常量\n */\nexport const TRUE = true\nexport const FALSE = false\nexport const NULL = null\nexport const UNDEFINED = void 0\n\nexport const RAW_TRUE = 'true'\nexport const RAW_FALSE = 'false'\nexport const RAW_NULL = 'null'\nexport const RAW_UNDEFINED = 'undefined'\n\nexport const RAW_KEY = 'key'\nexport const RAW_REF = 'ref'\nexport const RAW_SLOT = 'slot'\nexport const RAW_NAME = 'name'\n\nexport const RAW_FILTER = 'filter'\nexport const RAW_PARTIAL = 'partial'\nexport const RAW_COMPONENT = 'component'\nexport const RAW_DIRECTIVE = 'directive'\nexport const RAW_TRANSITION = 'transition'\n\nexport const RAW_THIS = 'this'\nexport const RAW_TYPE = 'type'\nexport const RAW_VALUE = 'value'\nexport const RAW_LENGTH = 'length'\nexport const RAW_FUNCTION = 'function'\nexport const RAW_TEMPLATE = 'template'\n\nexport const KEYPATH_PARENT = '..'\nexport const KEYPATH_CURRENT = RAW_THIS\n\n/**\n * tap 事件\n *\n * 非常有用的抽象事件，比如 pc 端是 click 事件，移动端是 touchend 事件\n *\n * 这样只需 on-tap=\"handler\" 就可以完美兼容各端\n *\n * 框架未实现此事件，通过 Yox.dom.specialEvents 提供给外部扩展\n *\n */\nexport const EVENT_TAP = 'tap'\n\n/**\n * 点击事件\n */\nexport const EVENT_CLICK = 'click'\n\n/**\n * 输入事件\n */\nexport const EVENT_INPUT = 'input'\n\n/**\n * 变化事件\n */\nexport const EVENT_CHANGE = 'change'\n\n/**\n * 唯一内置的特殊事件：model\n */\nexport const EVENT_MODEL = 'model'\n\n/**\n * Single instance for window in browser\n */\nexport const win = typeof window !== RAW_UNDEFINED ? window : UNDEFINED\n\n/**\n * Single instance for document in browser\n */\nexport const doc = typeof document !== RAW_UNDEFINED ? document : UNDEFINED\n\n/**\n * Single instance for noop function\n */\nexport const EMPTY_FUNCTION = function () {\n  /** yox */\n}\n\n/**\n * 空对象，很多地方会用到，比如 `a || EMPTY_OBJECT` 确保是个对象\n */\nexport const EMPTY_OBJECT = {}\n\n/**\n * 空数组\n */\nexport const EMPTY_ARRAY = []\n\n/**\n * 空字符串\n */\nexport const EMPTY_STRING = ''","import * as env from '../util/env'\n\nexport default function (target: any): boolean {\n  return target !== env.UNDEFINED\n}\n","import * as env from './env'\n\nconst toString = Object.prototype.toString\n\n// 这个函数比较慢，所以下面都不用它，主要是给外部用\nexport function is(value: any, type: string) {\n  return type === 'numeric'\n    ? numeric(value)\n    : toString.call(value).toLowerCase() === `[object ${type}]`\n}\n\n/**\n * Check if value is a function.\n *\n * @param value\n * @return\n */\nexport function func(value: any): boolean {\n  return typeof value === env.RAW_FUNCTION\n}\n\n/**\n * Check if value is an array.\n *\n * @param value\n * @return\n */\nexport function array(value: any): boolean {\n  return Array.isArray(value)\n}\n\n/**\n * Check if value is an object.\n *\n * @param value\n * @return\n */\nexport function object(value: any): boolean {\n  // 低版本 IE 会把 null 和 undefined 当作 object\n  return value !== env.NULL && typeof value === 'object'\n}\n\n/**\n * Check if value is a string.\n *\n * @param value\n * @return\n */\nexport function string(value: any): boolean {\n  return typeof value === 'string'\n}\n\n/**\n * Check if value is a number.\n *\n * @param value\n * @return\n */\nexport function number(value: any): boolean {\n  return typeof value === 'number'\n}\n\n/**\n * Check if value is boolean.\n *\n * @param value\n * @return\n */\nexport function boolean(value: any): boolean {\n  return typeof value === 'boolean'\n}\n\n/**\n * Check if value is numeric.\n *\n * @param value\n * @return\n */\nexport function numeric(value: any): boolean {\n  return number(value)\n    || (string(value) && !isNaN(parseFloat(value)) && isFinite(value))\n}\n","import isDef from './isDef'\nimport * as is from '../util/is'\n\n/**\n * 任性地执行一个函数，不管它有没有、是不是\n *\n * @param fn 调用的函数\n * @param context 执行函数时的 this 指向\n * @param args 调用函数的参数，多参数时传入数组\n * @return 调用函数的返回值\n */\nexport default function (fn: any, context?: any, args?: any): any {\n  if (is.func(fn)) {\n    return is.array(args)\n      ? fn.apply(context, args)\n      : isDef(context)\n        ? fn.call(context, args)\n        : isDef(args)\n          ? fn(args)\n          : fn()\n  }\n}\n","import CustomEventInterface from 'yox-type/src/CustomEvent'\n\nimport * as env from './env'\n\nexport default class CustomEvent implements CustomEventInterface {\n\n  // 事件名称\n  type: string\n\n  // 哪个组件发出的事件\n  target?: any\n\n  // 原始事件，比如 DOM 事件\n  originalEvent?: CustomEventInterface | Event\n\n  // 是否已阻止事件的默认行为\n  isPrevented?: boolean\n\n  // 是否已停止事件冒泡\n  isStoped?: boolean\n\n  // 处理当前事件的监听器，方便外部获取 listener 进行解绑\n  listener?: Function\n\n  /**\n   * 构造函数\n   *\n   * 可以传事件名称，也可以传原生事件对象\n   */\n  constructor(type: string, originalEvent?: CustomEventInterface | Event) {\n    this.type = type\n    this.originalEvent = originalEvent\n  }\n\n  /**\n   * 阻止事件的默认行为\n   */\n  preventDefault(): CustomEventInterface {\n    const instance = this\n    if (!instance.isPrevented) {\n      const { originalEvent } = instance\n      if (originalEvent) {\n        originalEvent.preventDefault()\n      }\n      instance.isPrevented = env.TRUE\n    }\n    return instance\n  }\n\n  /**\n   * 停止事件广播\n   */\n  stopPropagation(): CustomEventInterface {\n    const instance = this\n    if (!instance.isStoped) {\n      const { originalEvent } = instance\n      if (originalEvent) {\n        originalEvent.stopPropagation()\n      }\n      instance.isStoped = env.TRUE\n    }\n    return instance\n  }\n\n  prevent(): CustomEventInterface {\n    return this.preventDefault()\n  }\n\n  stop(): CustomEventInterface {\n    return this.stopPropagation()\n  }\n\n}\n","import * as is from './is'\nimport * as env from './env'\nimport execute from '../function/execute'\n\n/**\n * 遍历数组\n *\n * @param array\n * @param callback 返回 false 可停止遍历\n * @param reversed 是否逆序遍历\n */\nexport function each(array: any[], callback: (item: any, index: number, length: number) => boolean | void, reversed?: boolean) {\n  const { length } = array\n  if (length) {\n    if (reversed) {\n      for (let i = length - 1; i >= 0; i--) {\n        if (callback(array[i], i, length) === env.FALSE) {\n          break\n        }\n      }\n    }\n    else {\n      for (let i = 0; i < length; i++) {\n        if (callback(array[i], i, length) === env.FALSE) {\n          break\n        }\n      }\n    }\n  }\n}\n\n/**\n * 把数组合并成字符串\n *\n * @param array\n * @param separator\n * @return\n */\nexport function join(array: string[], separator: string): string {\n  return array.join(separator)\n}\n\nfunction nativePush(array: any[], item: any) {\n  array[array.length] = item\n}\n\nfunction nativeUnshift(array: any[], item: any) {\n  array.unshift(item)\n}\n\n/**\n * 添加\n *\n * @param array\n * @param value\n * @param action\n */\nfunction addItem(array: any[], value: any, action: Function) {\n  if (is.array(value)) {\n    each(\n      value,\n      function (item: any) {\n        action(array, item)\n      }\n    )\n  }\n  else {\n    action(array, value)\n  }\n}\n\n/**\n * 往后加\n *\n * @param array\n * @param target\n */\nexport function push(array: any[], target: any) {\n  addItem(array, target, nativePush)\n}\n\n/**\n * 往前加\n *\n * @param array\n * @param target\n */\nexport function unshift(array: any[], target: any) {\n  addItem(array, target, nativeUnshift)\n}\n\n/**\n * 把类数组转成数组\n *\n * @param array 类数组\n * @return\n */\nexport function toArray(array: Array<any> | ArrayLike<any>): Array<any> {\n  return is.array(array)\n    ? array\n    : execute([].slice, array)\n}\n\n/**\n * 把数组转成对象\n *\n * @param array 数组\n * @param key 数组项包含的字段名称，如果数组项是基本类型，可不传\n * @param value\n * @return\n */\nexport function toObject(array: any[], key?: string | null, value?: any) {\n  let result = {}\n  each(\n    array,\n    function (item: any) {\n      result[key ? item[key] : item] = value || item\n    }\n  )\n  return result\n}\n\n/**\n * 数组项在数组中的位置\n *\n * @param array 数组\n * @param target 数组项\n * @param strict 是否全等判断，默认是全等\n * @return 如果未找到，返回 -1\n */\nexport function indexOf(array: any[], target: any, strict?: boolean): number {\n  let result = -1\n  each(\n    array,\n    function (item: any, index: number) {\n      if (strict === env.FALSE ? item == target : item === target) {\n        result = index\n        return env.FALSE\n      }\n    }\n  )\n  return result\n}\n\n/**\n * 数组是否包含 item\n *\n * @param array 数组\n * @param target 可能包含的数组项\n * @param strict 是否全等判断，默认是全等\n * @return\n */\nexport function has(array: any[], target: any, strict?: boolean): boolean {\n  return indexOf(array, target, strict) >= 0\n}\n\n/**\n * 获取数组最后一项\n *\n * @param array 数组\n * @return\n */\nexport function last(array: any[]): any {\n  const { length } = array\n  if (length > 0) {\n    return array[length - 1]\n  }\n}\n\n/**\n * 弹出数组最后一项\n *\n * 项目里用的太多，仅用于节省字符...\n *\n * @param array 数组\n * @return 弹出的数组项\n */\nexport function pop(array: any[]): any {\n  return array.pop()\n}\n\n/**\n * 删除数组项\n *\n * @param array 数组\n * @param item 待删除项\n * @param strict 是否全等判断，默认是全等\n * @return 删除的数量\n */\nexport function remove(array: any[], target: any, strict?: boolean): number {\n  let result = 0\n  each(\n    array,\n    function (item: any, index: number) {\n      if (strict === env.FALSE ? item == target : item === target) {\n        array.splice(index, 1)\n        result++\n      }\n    },\n    env.TRUE\n  )\n  return result\n}\n\n/**\n * 用于判断长度大于 0 的数组\n *\n * @param array\n * @return\n */\nexport function falsy(array: any): boolean {\n  return !is.array(array) || !array.length\n}\n","import * as is from './is'\nimport * as env from './env'\n\nimport isDef from '../function/isDef'\n\nconst camelizePattern = /-([a-z])/gi,\n\nhyphenatePattern = /\\B([A-Z])/g,\n\ncamelizeCache: Record<string, string> = {},\n\nhyphenateCache: Record<string, string> = {}\n\n/**\n * 连字符转成驼峰\n *\n * @param str\n * @return 驼峰格式的字符串\n */\nexport function camelize(str: string): string {\n  if (!camelizeCache[str]) {\n    camelizeCache[str] = str.replace(\n      camelizePattern,\n      function ($0, $1) {\n        return $1.toUpperCase()\n      }\n    )\n  }\n  return camelizeCache[str]\n}\n\n/**\n * 驼峰转成连字符\n *\n * @param str\n * @return 连字符格式的字符串\n */\nexport function hyphenate(str: string): string {\n  if (!hyphenateCache[str]) {\n    hyphenateCache[str] = str.replace(\n      hyphenatePattern,\n      function ($0, $1) {\n        return '-' + $1.toLowerCase()\n      }\n    )\n  }\n  return hyphenateCache[str]\n}\n\n/**\n * 清除两侧空白符\n *\n * @param str\n * @return 清除两侧空白符的字符串\n */\nexport function trim(str: any): string {\n  return falsy(str)\n    ? env.EMPTY_STRING\n    : str.trim()\n}\n\n/**\n * 截取字符串\n *\n * @param str\n * @param start\n * @param end\n * @return\n */\nexport function slice(str: string, start: number, end?: number) {\n  return is.number(end)\n    ? start === end\n      ? env.EMPTY_STRING\n      : str.slice(start, end)\n    : str.slice(start)\n}\n\n/**\n * 获取子串的起始位置\n *\n * @param str\n * @param part\n * @param start\n * @return\n */\nexport function indexOf(str: string, part: string, start?: number): number {\n  return str.indexOf(part, isDef(start) ? start : 0)\n}\n\n/**\n * 获取子串的起始位置\n *\n * @param str\n * @param part\n * @param end\n * @return\n */\nexport function lastIndexOf(str: string, part: string, end?: number): number {\n  return str.lastIndexOf(part, isDef(end) ? end : str.length)\n}\n\n/**\n * str 是否包含 part\n *\n * @param str\n * @param part\n * @return 是否包含\n */\nexport function has(str: string, part: string): boolean {\n  return indexOf(str, part) >= 0\n}\n\n/**\n * str 是否以 part 开头\n *\n * @param str\n * @param part\n * @return\n */\nexport function startsWith(str: string, part: string): boolean {\n  return indexOf(str, part) === 0\n}\n\n/**\n * str 是否以 part 结束\n *\n * @param str\n * @param part\n * @return\n */\nexport function endsWith(str: string, part: string): boolean {\n  const offset = str.length - part.length\n  return offset >= 0 && lastIndexOf(str, part) === offset\n}\n\n/**\n * 获取某个位置的字符\n */\nexport function charAt(str: string, index?: number): string {\n  return str.charAt(index || 0)\n}\n\n/**\n * 获取某个位置的字符编码\n */\nexport function codeAt(str: string, index?: number): number {\n  return str.charCodeAt(index || 0)\n}\n\n/**\n * 判断长度大于 0 的字符串\n *\n * @param str\n * @return\n */\nexport function falsy(str: any): boolean {\n  return !is.string(str) || !str.length\n}\n","import * as is from './is'\nimport * as env from './env'\nimport * as string from './string'\n\nconst SEPARATOR = '.', splitCache = {}, patternCache = {}\n\n/**\n * 判断 keypath 是否以 prefix 开头，如果是，返回匹配上的前缀长度，否则返回 -1\n *\n * @param keypath\n * @param prefix\n * @return\n */\nexport function match(keypath: string, prefix: string): number {\n  if (keypath === prefix) {\n    return prefix.length\n  }\n  prefix += SEPARATOR\n  return string.startsWith(keypath, prefix)\n    ? prefix.length\n    : -1\n}\n\n/**\n * 遍历 keypath 的每个部分\n *\n * @param keypath\n * @param callback 返回 false 可中断遍历\n */\nexport function each(keypath: string, callback: (key: string | number, isLast: boolean) => boolean | void) {\n  // 判断字符串是因为 keypath 有可能是 toString\n  // 而 splitCache.toString 是个函数\n  const list = is.string(splitCache[keypath])\n    ? splitCache[keypath]\n    : (splitCache[keypath] = keypath.split(SEPARATOR))\n\n  for (let i = 0, lastIndex = list.length - 1; i <= lastIndex; i++) {\n    if (callback(list[i], i === lastIndex) === env.FALSE) {\n      break\n    }\n  }\n}\n\n/**\n * 遍历 keypath 的每个部分\n *\n * @param keypath1\n * @param keypath2\n */\nexport function join(keypath1: string, keypath2: string): string {\n  return keypath1 && keypath2\n    ? keypath1 + SEPARATOR + keypath2\n    : keypath1 || keypath2\n}\n\n/**\n * 是否模糊匹配\n *\n * @param keypath\n */\nexport function isFuzzy(keypath: string): boolean {\n  return string.has(keypath, '*')\n}\n\n/**\n * 模糊匹配 keypath\n *\n * @param keypath\n * @param pattern\n */\nexport function matchFuzzy(keypath: string, pattern: string): string | void {\n  let cache = patternCache[pattern]\n  if (!cache) {\n    cache = pattern\n      .replace(/\\./g, '\\\\.')\n      .replace(/\\*\\*/g, '([\\.\\\\w]+?)')\n      .replace(/\\*/g, '(\\\\w+)')\n    cache = patternCache[pattern] = new RegExp(`^${cache}$`)\n  }\n  const result = keypath.match(cache)\n  if (result) {\n    return result[1]\n  }\n}","import * as is from './is'\nimport * as env from './env'\nimport * as array from './array'\nimport * as keypathUtil from './keypath'\n\nimport isDef from '../function/isDef'\n\nimport ValueHolder from 'yox-type/src/ValueHolder'\n\n/**\n * 获取对象的 key 的数组\n *\n * @param object\n * @return\n */\nexport function keys(object: Object): string[] {\n  return Object.keys(object)\n}\n\n/**\n * 是否是空对象\n *\n * @param object\n * @return\n */\nexport function falsy(object: any): boolean {\n  return !is.object(object)\n    || is.array(object)\n    || !keys(object).length\n}\n\nfunction sortKeyByAsc(a: string, b: string): number {\n  return a.length - b.length\n}\n\nfunction sortKeyByDesc(a: string, b: string): number {\n  return b.length - a.length\n}\n\n/**\n * 排序对象的 key\n *\n * @param object\n * @param desc 是否逆序，默认从小到大排序\n * @return\n */\nexport function sort(object: Object, desc?: boolean): string[] {\n  return keys(object).sort(\n    desc ? sortKeyByDesc : sortKeyByAsc\n  )\n}\n\n/**\n * 遍历对象\n *\n * @param object\n * @param callback 返回 false 可停止遍历\n */\nexport function each(object: Object, callback: (value: any, key: string) => boolean | void) {\n  for (let key in object) {\n    if (callback(object[key], key) === env.FALSE) {\n      break\n    }\n  }\n}\n\n/**\n * 对象是否包含某个 key\n *\n * @param object\n * @param key\n * @return\n */\nexport function has(object: Object, key: string | number): boolean {\n  // 不用 hasOwnProperty，性能差\n  return isDef(object[key])\n}\n\n/**\n * 清空对象所有的键值对\n *\n * @param object\n */\nexport function clear(object: Object): void {\n  each(\n    object,\n    function (_, key) {\n      delete object[key]\n    }\n  )\n}\n\n/**\n * 扩展对象\n *\n * @return\n */\nexport function extend(original: Object, ...objects: Object[]): Object {\n  array.each(\n    objects,\n    function (object) {\n      each(\n        object,\n        function (value, key) {\n          original[key] = value\n        }\n      )\n    }\n  )\n  return original\n}\n\n/**\n * 拷贝对象\n *\n * @param object\n * @param deep 是否需要深拷贝\n * @return\n */\nexport function copy(object: any, deep?: boolean): any {\n  let result = object\n  if (is.array(object)) {\n    if (deep) {\n      result = []\n      array.each(\n        object,\n        function (item, index) {\n          result[index] = copy(item, deep)\n        }\n      )\n    }\n    else {\n      result = object.slice()\n    }\n  }\n  else if (is.object(object)) {\n    result = {}\n    each(\n      object,\n      function (value, key) {\n        result[key] = deep ? copy(value, deep) : value\n      }\n    )\n  }\n  return result\n}\n\n/**\n * 辅助 get 函数，持有最后找到的值，避免频繁的创建临时对象\n */\nconst valueHolder: ValueHolder = {\n  value: env.UNDEFINED\n}\n\n/**\n * 从对象中查找一个 keypath\n *\n * 返回值是空时，表示没找到值\n *\n * @param object\n * @param keypath\n * @return\n */\nexport function get(object: any, keypath: string): ValueHolder | undefined {\n\n  /**\n   * 考虑以下情况:\n   *\n   * {\n   *   'a.b.c.d': 1,\n   *   'a.b.c': {\n   *      d: 2\n   *   }\n   * }\n   *\n   * 此时 keypath 是 `a.b.c.d`，可以获取到 1\n   * 如果没有这个 key，按 keypath 推进是取不到值的，因为没有 a.b.c 对象\n   * 个人觉得没有必要支持字面量，情况实在太多，会把这个函数搞的性能很差\n   */\n\n  keypathUtil.each(\n    keypath,\n    function (key, isLast) {\n\n      if (object != env.NULL) {\n\n        // 先直接取值\n        let value = object[key],\n\n        // 紧接着判断值是否存在\n        // 下面会处理计算属性的值，不能在它后面设置 hasValue\n        hasValue = isDef(value)\n\n        // 如果是计算属性，取计算属性的值\n        if (value && is.func(value.get)) {\n          value = value.get()\n        }\n\n        if (isLast) {\n          if (hasValue) {\n            valueHolder.value = value\n            object = valueHolder\n          }\n          else {\n            object = env.UNDEFINED\n          }\n        }\n        else {\n          object = value\n        }\n      }\n      else {\n        object = env.UNDEFINED\n        return env.FALSE\n      }\n\n    }\n  )\n\n  return object\n\n}\n\n/**\n * 为对象设置一个键值对\n *\n * @param object\n * @param keypath\n * @param value\n * @param autofill 是否自动填充不存在的对象，默认自动填充\n */\nexport function set(object: Object, keypath: string, value: any, autofill?: boolean) {\n  keypathUtil.each(\n    keypath,\n    function (key, isLast) {\n      if (isLast) {\n        object[key] = value\n      }\n      else if (object[key]) {\n        object = object[key]\n      }\n      else if (autofill) {\n        object = object[key] = {}\n      }\n      else {\n        return env.FALSE\n      }\n    }\n  )\n}\n","import * as env from '../util/env'\nimport isDef from './isDef'\n\nexport default function (target: any, defaultValue?: string): string {\n  return target != env.NULL && target.toString\n    ? target.toString()\n    : isDef(defaultValue)\n      ? defaultValue as string\n      : env.EMPTY_STRING\n}\n","import * as is from './is'\nimport * as env from './env'\nimport toString from '../function/toString'\n\n/**\n * 是否有原生的日志特性，没有必要单独实现\n */\nconst nativeConsole: Console | null = typeof console !== env.RAW_UNDEFINED ? console : env.NULL,\n\n/**\n * 当前是否是源码调试，如果开启了代码压缩，empty function 里的注释会被干掉\n */\nuseSource = /yox/.test(toString(env.EMPTY_FUNCTION))\n\n/**\n * 全局调试开关\n *\n * 比如开发环境，开了 debug 模式，但是有时候觉得看着一堆日志特烦，想强制关掉\n * 比如线上环境，关了 debug 模式，为了调试，想强制打开\n */\nfunction isDebug() {\n  if (env.win) {\n    let debug = env.win['DEBUG']\n    if (is.boolean(debug)) {\n      return debug\n    }\n  }\n  return useSource\n}\n\n/**\n * 打印普通日志\n *\n * @param msg\n */\nexport function log(msg: string) {\n  if (nativeConsole && isDebug()) {\n    nativeConsole.log(`[Yox log]: ${msg}`)\n  }\n}\n\n/**\n * 打印警告日志\n *\n * @param msg\n */\nexport function warn(msg: string) {\n  if (nativeConsole && isDebug()) {\n    nativeConsole.warn(`[Yox warn]: ${msg}`)\n  }\n}\n\n/**\n * 打印错误日志\n *\n * @param msg\n */\nexport function error(msg: string) {\n  if (nativeConsole) {\n    nativeConsole.error(`[Yox error]: ${msg}`)\n  }\n}\n\n/**\n * 致命错误，中断程序\n *\n * @param msg\n */\nexport function fatal(msg: string): never {\n  throw new Error(`[Yox fatal]: ${msg}`)\n}\n","import execute from '../function/execute'\n\nimport * as is from './is'\nimport * as env from './env'\nimport * as array from './array'\nimport * as object from './object'\nimport * as string from './string'\nimport * as logger from './logger'\n\nimport * as type from 'yox-type/index'\nimport EmitterOptions from 'yox-type/src/options/Emitter'\nimport CustomEvent from './CustomEvent'\n\ninterface Namespace {\n  name: string\n  ns: string\n}\n\nexport default class Emitter {\n\n  /**\n   * 是否开启命名空间\n   *\n   * 命名空间格式为  name.namespace\n   *\n   * 典型的场景是在一个组件创建时绑定全局事件，销毁时解绑事件，如下\n   *\n   * create:\n   *\n   *    component.on('a.namespace', listener)\n   *    component.on('b.namespace', listener)\n   *\n   * destroy:\n   *\n   *    component.off('.namespace') // 无需依次解绑，费时费力\n   *\n   * a.namespace 会响应全局 a 事件，原因正如上面这个例子，否则无法实现快捷解绑\n   * a 不会响应 a.namespace 事件，因为命名空间不匹配\n   */\n  ns: boolean\n\n  /**\n   * 已注册的事件监听\n   */\n  listeners: Record<string, EmitterOptions[]>\n\n  /**\n   * 原生事件监听，一个事件对应一个 listener\n   */\n  nativeListeners?: Record<string, type.nativeEventListener>\n\n  constructor(ns?: boolean) {\n    this.ns = ns || env.FALSE\n    this.listeners = {}\n  }\n\n  /**\n   * 发射事件\n   *\n   * @param bullet 事件或事件名称\n   * @param data 事件数据\n   */\n  fire(bullet: string | CustomEvent, data: type.eventData | any[] | void, filter?: (options: EmitterOptions, data: type.eventData | any[] | void) => boolean | void) {\n\n    let event: CustomEvent | void, type: string, args: any\n\n    if (bullet instanceof CustomEvent) {\n      event = bullet\n      type = bullet.type\n      args = is.object(data) ? [event, data] : event\n    }\n    else {\n      type = bullet\n      if (data) {\n        args = data\n      }\n    }\n\n    let instance = this,\n\n    { name, ns } = parseNamespace(instance.ns, type),\n\n    list = instance.listeners[name],\n\n    isComplete = env.TRUE\n\n    if (list) {\n\n      // 避免遍历过程中，数组发生变化，比如增删了\n      list = object.copy(list)\n\n      array.each(\n        list,\n        function (options: EmitterOptions, _: number) {\n\n          // 传了 filter，则用 filter 测试是否继续往下执行\n          if ((filter ? !filter(options, data) : !matchNamespace(ns, options))\n            // 在 fire 过程中被移除了\n            || !array.has(list, options)\n          ) {\n            return\n          }\n\n          // 为 event 对象加上当前正在处理的 listener\n          // 这样方便业务层移除事件绑定\n          // 比如 on('xx', function) 这样定义了匿名 listener\n          // 在这个 listener 里面获取不到当前 listener 的引用\n          // 为了能引用到，有时候会先定义 var listener = function,\n          // 然后再 on('xx', listener) 这样其实是没有必要的\n          if (event) {\n            event.listener = options.fn\n          }\n\n          let result = execute(options.fn, options.ctx, args)\n\n          if (event) {\n            event.listener = env.UNDEFINED\n          }\n\n          // 执行次数\n          options.num = options.num ? (options.num + 1) : 1\n\n          // 注册的 listener 可以指定最大执行次数\n          if (options.num === options.max) {\n            instance.off(type, options)\n          }\n\n          // 如果没有返回 false，而是调用了 event.stop 也算是返回 false\n          if (event) {\n            if (result === env.FALSE) {\n              event.prevent().stop()\n            }\n            else if (event.isStoped) {\n              result = env.FALSE\n            }\n          }\n\n          if (result === env.FALSE) {\n            return isComplete = env.FALSE\n          }\n        }\n      )\n\n    }\n\n    return isComplete\n\n  }\n\n  /**\n   * 是否已监听某个事件\n   *\n   * @param type\n   * @param listener\n   */\n  has(type: string, listener?: Function | EmitterOptions): boolean {\n\n    let instance = this,\n\n    listeners = instance.listeners,\n\n    { name, ns } = parseNamespace(instance.ns, type),\n\n    result = env.TRUE,\n\n    matchListener = createMatchListener(listener),\n\n    each = function (list: Object[]) {\n      array.each(\n        list,\n        function (options: EmitterOptions) {\n          if (matchListener(options) && matchNamespace(ns, options)) {\n            return result = env.FALSE\n          }\n        }\n      )\n      return result\n    }\n\n    if (name) {\n      if (listeners[name]) {\n        each(listeners[name])\n      }\n    }\n    else if (ns) {\n      object.each(listeners, each)\n    }\n\n    return !result\n\n  }\n\n  /**\n   * 注册监听\n   *\n   * @param type\n   * @param listener\n   * @param data\n   */\n  on(type: string | Record<string, Function | EmitterOptions>, listener?: Function | EmitterOptions, data?: EmitterOptions) {\n\n    const instance = this,\n\n    listeners = instance.listeners,\n\n    addListener = function (item: Function | EmitterOptions | void, type: string) {\n      if (item) {\n        const options: EmitterOptions = is.func(item) ? { fn: item as Function } : item as EmitterOptions\n        if (is.object(options) && is.func(options.fn)) {\n          if (data) {\n            object.extend(options, data)\n          }\n          const { name, ns } = parseNamespace(instance.ns, type)\n          options.ns = ns\n          array.push(\n            listeners[name] || (listeners[name] = []),\n            options\n          )\n          return\n        }\n      }\n      if (process.env.NODE_ENV === 'dev') {\n        logger.fatal(`注册 ${type} 事件失败`)\n      }\n    }\n\n    if (is.string(type)) {\n      addListener(listener, type as string)\n    }\n    else {\n      object.each(type, addListener)\n    }\n\n  }\n\n  /**\n   * 取消监听\n   *\n   * @param type\n   * @param listener\n   */\n  off(type?: string, listener?: Function | EmitterOptions) {\n\n    const instance = this,\n\n    listeners = instance.listeners\n\n    if (type) {\n\n      const { name, ns } = parseNamespace(instance.ns, type),\n\n      matchListener = createMatchListener(listener),\n\n      each = function (list: Object[], name: string) {\n        array.each(\n          list,\n          function (options: EmitterOptions, index: number) {\n            if (matchListener(options) && matchNamespace(ns, options)) {\n              list.splice(index, 1)\n            }\n          },\n          env.TRUE\n        )\n        if (!list.length) {\n          delete listeners[name]\n        }\n      }\n\n      if (name) {\n        if (listeners[name]) {\n          each(listeners[name], name)\n        }\n      }\n      else if (ns) {\n        object.each(listeners, each)\n      }\n\n    }\n    else {\n      // 清空\n      instance.listeners = {}\n      // 在开发阶段进行警告，比如传了 type 进来，type 是个空值\n      // 但你不知道它是空值\n      if (process.env.NODE_ENV === 'dev') {\n        if (arguments.length > 0) {\n          logger.warn(`调用 emitter.off(type) 时，type 为空`)\n        }\n      }\n    }\n\n  }\n\n}\n\n/**\n * 把事件类型解析成命名空间格式\n *\n * @param ns\n * @param type\n */\nfunction parseNamespace(ns: boolean, type: string): Namespace {\n\n  const result = {\n    name: type,\n    ns: env.EMPTY_STRING,\n  }\n\n  if (ns) {\n    const index = string.indexOf(type, '.')\n    if (index >= 0) {\n      result.name = string.slice(type, 0, index)\n      result.ns = string.slice(type, index + 1)\n    }\n  }\n\n  return result\n\n}\n\n/**\n * 外部会传入 Function 或 EmitterOptions 或 空\n *\n * 这里根据传入值的不同类型，创建不同的判断函数\n *\n * 如果传入的是 EmitterOptions，则全等判断\n *\n * 如果传入的是 Function，则判断函数是否全等\n *\n * 如果传入的是空，则直接返回 true\n *\n * @param listener\n */\nfunction createMatchListener(listener: Function | EmitterOptions | void): (options: EmitterOptions) => boolean {\n  return is.object(listener)\n    ? function (options: EmitterOptions) {\n        return listener === options\n      }\n    : is.func(listener)\n      ? function (options: EmitterOptions) {\n          return listener === options.fn\n        }\n      : function (options: EmitterOptions) {\n          return env.TRUE\n        }\n}\n\n/**\n * 判断 options 是否能匹配命名空间\n *\n * 如果 options 未指定命名空间，或 options.ns 和 namespace 一致，返回 true\n *\n * @param namespace\n * @param options\n */\nfunction matchNamespace(namespace: string, options: EmitterOptions): boolean {\n  return !namespace.length || namespace === options.ns\n}","import * as is from '../util/is'\nimport toString from './toString'\n\nexport default function (target: any): boolean {\n  return is.func(target) && /native code/.test(toString(target))\n}","import * as env from '../util/env'\nimport isNative from './isNative'\n\ndeclare const setImmediate: Function\n\nlet nextTick: Function\n\n// IE (10+) 和 node\nif (typeof setImmediate === env.RAW_FUNCTION && isNative(setImmediate)) {\n  nextTick = setImmediate\n}\n// 用 MessageChannel 去做 setImmediate 的 polyfill\n// 原理是将新的 message 事件加入到原有的 dom events 之后\n// 兼容性 IE10+ 和其他标准浏览器\nif (typeof MessageChannel === env.RAW_FUNCTION && isNative(MessageChannel)) {\n  nextTick = function (fn: any) {\n    const channel = new MessageChannel()\n    channel.port1.onmessage = fn\n    channel.port2.postMessage(1)\n  }\n}\nelse {\n  nextTick = setTimeout\n}\n\nexport default nextTick\n","import * as array from './array'\nimport execute from '../function/execute'\nimport nextTick from '../function/nextTick'\n\nlet shared: NextTask | void\n\nexport default class NextTask {\n\n  /**\n   * 全局单例\n   */\n  public static shared(): NextTask {\n    if (!shared) {\n      shared = new NextTask()\n    }\n    return shared\n  }\n\n  /**\n   * 异步队列\n   */\n  nextTasks: Function[]\n\n  constructor() {\n    this.nextTasks = []\n  }\n\n  /**\n   * 在队尾添加异步任务\n   */\n  append(task: Function) {\n    array.push(this.nextTasks, task)\n    this.start()\n  }\n\n  /**\n   * 在队首添加异步任务\n   */\n  prepend(task: Function) {\n    array.unshift(this.nextTasks, task)\n    this.start()\n  }\n\n  /**\n   * 启动下一轮任务\n   */\n  start() {\n    const instance = this\n    if (instance.nextTasks.length === 1) {\n      nextTick(\n        function () {\n          instance.run()\n        }\n      )\n    }\n  }\n\n  /**\n   * 清空异步队列\n   */\n  clear() {\n    this.nextTasks.length = 0\n  }\n\n  /**\n   * 立即执行异步任务，并清空队列\n   */\n  run() {\n    const { nextTasks } = this\n    if (nextTasks.length) {\n      this.nextTasks = []\n      array.each(\n        nextTasks,\n        execute\n      )\n    }\n  }\n\n}\n","export const SYNTAX_IF = '#if'\nexport const SYNTAX_ELSE = 'else'\nexport const SYNTAX_ELSE_IF = 'else if'\nexport const SYNTAX_EACH = '#each'\nexport const SYNTAX_PARTIAL = '#partial'\nexport const SYNTAX_IMPORT = '>'\nexport const SYNTAX_SPREAD = '...'\nexport const SYNTAX_COMMENT = /^!\\s/\n\nexport const SLOT_DATA_PREFIX = '$slot_'\n\nexport const HINT_STRING = 1\nexport const HINT_NUMBER = 2\nexport const HINT_BOOLEAN = 3\n\nexport const DIRECTIVE_ON = 'on'\nexport const DIRECTIVE_LAZY = 'lazy'\nexport const DIRECTIVE_MODEL = 'model'\nexport const DIRECTIVE_EVENT = 'event'\nexport const DIRECTIVE_BINDING = 'binding'\nexport const DIRECTIVE_CUSTOM = 'o'\n\nexport const HOOK_BEFORE_CREATE = 'beforeCreate'\nexport const HOOK_AFTER_CREATE = 'afterCreate'\nexport const HOOK_BEFORE_MOUNT = 'beforeMount'\nexport const HOOK_AFTER_MOUNT = 'afterMount'\nexport const HOOK_BEFORE_UPDATE = 'beforeUpdate'\nexport const HOOK_AFTER_UPDATE = 'afterUpdate'\nexport const HOOK_BEFORE_DESTROY = 'beforeDestroy'\nexport const HOOK_AFTER_DESTROY = 'afterDestroy'\n","// vnode.data 内部使用的几个字段\n\nexport const ID = '$id'\n\nexport const VNODE = '$vnode'\n\nexport const LOADING = '$loading'\n\nexport const COMPONENT = '$component'\n\nexport const LEAVING = '$leaving'","import * as env from 'yox-common/src/util/env'\nimport * as object from 'yox-common/src/util/object'\n\nimport VNode from 'yox-type/src/vnode/VNode'\nimport Attribute from 'yox-type/src/vnode/Attribute'\n\nexport function update(api: any, vnode: VNode, oldVnode?: VNode) {\n\n  const { node, nativeAttrs } = vnode,\n\n  oldNativeAttrs = oldVnode && oldVnode.nativeAttrs\n\n  if (nativeAttrs || oldNativeAttrs) {\n\n    const newValue = nativeAttrs || env.EMPTY_OBJECT,\n\n    oldValue = oldNativeAttrs || env.EMPTY_OBJECT\n\n    object.each(\n      newValue,\n      function (attr: Attribute, name: string) {\n        if (!oldValue[name]\n          || attr.value !== oldValue[name].value\n        ) {\n          api.attr(node, name, attr.value)\n        }\n      }\n    )\n\n    object.each(\n      oldValue,\n      function (_: Attribute, name: string) {\n        if (!newValue[name]) {\n          api.removeAttr(node, name)\n        }\n      }\n    )\n\n  }\n\n}\n","import * as env from 'yox-common/src/util/env'\nimport * as object from 'yox-common/src/util/object'\n\nimport VNode from 'yox-type/src/vnode/VNode'\nimport Property from 'yox-type/src/vnode/Property'\n\nexport function update(api: any, vnode: VNode, oldVnode?: VNode) {\n\n  const { node, nativeProps } = vnode,\n\n  oldNativeProps = oldVnode && oldVnode.nativeProps\n\n  if (nativeProps || oldNativeProps) {\n\n    const newValue = nativeProps || env.EMPTY_OBJECT,\n\n    oldValue = oldNativeProps || env.EMPTY_OBJECT\n\n    object.each(\n      newValue,\n      function (prop: Property, name: string) {\n        if (!oldValue[name]\n          || prop.value !== oldValue[name].value\n        ) {\n          api.prop(node, name, prop.value)\n        }\n      }\n    )\n\n    object.each(\n      oldValue,\n      function (prop: Property, name: string) {\n        if (!newValue[name]) {\n          api.removeProp(node, name, prop.hint)\n        }\n      }\n    )\n\n  }\n\n}\n\n//\n// 旧 [ child1, child2 ]\n// 新 innerHTML\n//\n// 这种情况，要让外部先把 child1 child2 正常移除掉，再用 innerHTML 覆盖，否则指令无法销毁\n//\n// 旧 innerHTML\n// 新 [ child1, child2 ]\n//\n// 这种情况，先用 innerHTML 覆盖，再处理 child1 child2\n//\n// export default {\n//   create: createProps,\n//   update: removeProps,\n//   postpatch: createProps,\n// }\n","import * as env from 'yox-common/src/util/env'\nimport * as object from 'yox-common/src/util/object'\n\nimport VNode from 'yox-type/src/vnode/VNode'\nimport Directive from 'yox-type/src/vnode/Directive'\n\nimport * as field from './field'\n\nexport function update(vnode: VNode, oldVnode?: VNode) {\n\n  const { data, directives } = vnode,\n\n  oldDirectives = oldVnode && oldVnode.directives\n\n  if (directives || oldDirectives) {\n\n    const node = data[field.COMPONENT] || vnode.node,\n\n    isKeypathChange = oldVnode && vnode.keypath !== oldVnode.keypath,\n\n    newValue = directives || env.EMPTY_OBJECT,\n\n    oldValue = oldDirectives || env.EMPTY_OBJECT\n\n    object.each(\n      newValue,\n      function (directive: Directive, name: string) {\n        const { bind, unbind } = directive.hooks\n        if (!oldValue[name]) {\n          bind(node, directive, vnode)\n        }\n        else if (directive.value !== oldValue[name].value\n          || isKeypathChange\n        ) {\n          if (unbind) {\n            unbind(node, oldValue[name], oldVnode as VNode)\n          }\n          bind(node, directive, vnode)\n        }\n      }\n    )\n\n    object.each(\n      oldValue,\n      function (directive: Directive, name: string) {\n        if (!newValue[name]) {\n          const { unbind } = directive.hooks\n          if (unbind) {\n            unbind(node, directive, oldVnode as VNode)\n          }\n        }\n      }\n    )\n\n  }\n\n}\n\nexport function remove(vnode: VNode) {\n  const { directives } = vnode\n  if (directives) {\n    const node = vnode.data[field.COMPONENT] || vnode.node\n    object.each(\n      directives,\n      function (directive: Directive) {\n        const { unbind } = directive.hooks\n        if (unbind) {\n          unbind(node, directive, vnode)\n        }\n      }\n    )\n  }\n}\n","import VNode from 'yox-type/src/vnode/VNode'\n\nimport * as field from './field'\n\nexport function update(vnode: VNode, oldVnode?: VNode) {\n\n  let { data, ref, props, slots, context } = vnode, node: any\n\n  if (vnode.isComponent) {\n    node = data[field.COMPONENT]\n    // 更新时才要 set\n    // 因为初始化时，所有这些都经过构造函数完成了\n    if (oldVnode) {\n      if (props) {\n        node.set(node.checkPropTypes(props))\n      }\n      if (slots) {\n        node.set(slots)\n      }\n    }\n  }\n  else {\n    node = vnode.node\n  }\n\n  if (ref) {\n    const refs = context.$refs\n    if (refs) {\n      refs[ref] = node\n    }\n  }\n\n}\n","import * as is from 'yox-common/src/util/is'\nimport * as env from 'yox-common/src/util/env'\nimport * as array from 'yox-common/src/util/array'\nimport * as object from 'yox-common/src/util/object'\nimport * as logger from 'yox-common/src/util/logger'\n\nimport isDef from 'yox-common/src/function/isDef'\nimport execute from 'yox-common/src/function/execute'\n\nimport API from 'yox-type/src/API'\nimport Yox from 'yox-type/src/Yox'\nimport VNode from 'yox-type/src/vnode/VNode'\nimport YoxOptions from 'yox-type/src/options/Yox'\n\nimport * as field from './src/field'\n\nimport * as nativeAttr from './src/nativeAttr'\nimport * as nativeProp from './src/nativeProp'\nimport * as directive from './src/directive'\nimport * as component from './src/component'\n\nfunction isPatchable(vnode: VNode, oldVnode: VNode): boolean {\n  return vnode.tag === oldVnode.tag\n    && vnode.key === oldVnode.key\n}\n\nfunction createKeyToIndex(vnodes: (VNode | void)[], startIndex: number, endIndex: number): Record<string, number> {\n\n  let result: Record<string, number> | void,\n\n  vnode: VNode | void,\n\n  key: string | void\n\n  while (startIndex <= endIndex) {\n    vnode = vnodes[startIndex]\n    if (vnode && (key = vnode.key)) {\n      if (!result) {\n        result = {}\n      }\n      result[key] = startIndex\n    }\n    startIndex++\n  }\n\n  return result || env.EMPTY_OBJECT\n\n}\n\nfunction insertBefore(api: API, parentNode: Node, node: Node, referenceNode: Node | void) {\n  if (referenceNode) {\n    api.before(parentNode, node, referenceNode)\n  }\n  else {\n    api.append(parentNode, node)\n  }\n}\n\nfunction createComponent(vnode: VNode, options: YoxOptions | void) {\n\n  if (!options) {\n    if (process.env.NODE_ENV === 'dev') {\n      logger.fatal(`component [${vnode.tag}] is not found.`)\n    }\n    return\n  }\n\n  // 渲染同步加载的组件时，vnode.node 为空\n  // 渲染异步加载的组件时，vnode.node 不为空，因为初始化用了占位节点\n  const child = (vnode.parent || vnode.context).create(options, vnode, vnode.node),\n\n  // 组件初始化创建的元素\n  node = child.$el as Node\n\n  if (node) {\n    vnode[NODE] = node\n  }\n  else if (process.env.NODE_ENV === 'dev') {\n    logger.fatal(`the root element of component [${vnode.tag}] is not found.`)\n  }\n\n  vnode.data[field.COMPONENT] = child\n  vnode.data[field.LOADING] = env.FALSE\n\n  component.update(vnode)\n  directive.update(vnode)\n\n  return child\n\n}\n\nlet guid = 0,\n\n// vnode.node 设置成了 readonly，是为了避免外部修改\n// 但是这里还是要对 vnode.node 进行赋值，只好用变量属性赋值，跳过 ts 的类型检测\nNODE = 'node'\n\nfunction createData(): Record<string, any> {\n  const data = {}\n  data[field.ID] = ++guid\n  return data\n}\n\nfunction createVnode(api: API, vnode: VNode) {\n\n  let { tag, node, data, isComponent, isComment, isText, isStyle, children, text, html, context } = vnode\n\n  if (node && data) {\n    return\n  }\n\n  data = createData()\n\n  vnode.data = data\n\n  if (isText) {\n    vnode[NODE] = api.createText(text as string)\n    return\n  }\n\n  if (isComment) {\n    vnode[NODE] = api.createComment(text as string)\n    return\n  }\n\n  if (isComponent) {\n\n    let isAsync = env.TRUE\n\n    context.component(\n      tag as string,\n      function (options: any) {\n        if (object.has(data, field.LOADING)) {\n          // 异步组件\n          if (data[field.LOADING]) {\n            // 尝试使用最新的 vnode\n            if (data[field.VNODE]) {\n              vnode = data[field.VNODE]\n              // 用完就删掉\n              delete data[field.VNODE]\n            }\n            enterVnode(\n              vnode,\n              createComponent(vnode, options)\n            )\n          }\n        }\n        // 同步组件\n        else {\n          createComponent(vnode, options)\n          isAsync = env.FALSE\n        }\n      }\n    )\n\n    if (isAsync) {\n      vnode[NODE] = api.createComment(env.RAW_COMPONENT)\n      data[field.LOADING] = env.TRUE\n    }\n\n  }\n  else {\n\n    node = vnode[NODE] = api.createElement(vnode.tag as string, vnode.isSvg)\n\n    if (children) {\n      addVnodes(api, node, children)\n    }\n    else if (text) {\n      api.text(node as Element, text, isStyle)\n    }\n    else if (html) {\n      api.html(node as Element, html, isStyle)\n    }\n\n    nativeAttr.update(api, vnode)\n    nativeProp.update(api, vnode)\n    component.update(vnode)\n    directive.update(vnode)\n\n  }\n}\n\nfunction addVnodes(api: API, parentNode: Node, vnodes: VNode[], startIndex?: number, endIndex?: number, before?: VNode) {\n  let vnode: VNode, start = startIndex || 0, end = isDef(endIndex) ? endIndex as number : vnodes.length - 1\n  while (start <= end) {\n    vnode = vnodes[start]\n    createVnode(api, vnode)\n    insertVnode(api, parentNode, vnode, before)\n    start++\n  }\n}\n\nfunction insertVnode(api: API, parentNode: Node, vnode: VNode, before?: VNode) {\n\n  const { node, data, context } = vnode,\n\n  hasParent = api.parent(node)\n\n  // 这里不调用 insertBefore，避免判断两次\n  if (before) {\n    api.before(parentNode, node, before.node)\n  }\n  else {\n    api.append(parentNode, node)\n  }\n\n  // 普通元素和组件的占位节点都会走到这里\n  // 但是占位节点不用 enter，而是等组件加载回来之后再调 enter\n  if (!hasParent) {\n    let enter: Function | void\n    if (vnode.isComponent) {\n      const component = data[field.COMPONENT]\n      if (component) {\n        enter = function () {\n          enterVnode(vnode, component)\n        }\n      }\n    }\n    else if (!vnode.isStatic && !vnode.isText && !vnode.isComment) {\n      enter = function () {\n        enterVnode(vnode)\n      }\n    }\n    if (enter) {\n      // 执行到这时，组件还没有挂载到 DOM 树\n      // 如果此时直接触发 enter，外部还需要做多余的工作，比如 setTimeout\n      // 索性这里直接等挂载到 DOM 数之后再触发\n      context.nextTick(enter, env.TRUE)\n    }\n  }\n\n}\n\nfunction removeVnodes(api: API, parentNode: Node, vnodes: (VNode | void)[], startIndex?: number, endIndex?: number) {\n  let vnode: VNode | void, start = startIndex || 0, end = isDef(endIndex) ? endIndex as number : vnodes.length - 1\n  while (start <= end) {\n    vnode = vnodes[start]\n    if (vnode) {\n      removeVnode(api, parentNode, vnode)\n    }\n    start++\n  }\n}\n\nfunction removeVnode(api: API, parentNode: Node, vnode: VNode) {\n  const { node } = vnode\n  if (vnode.isStatic || vnode.isText || vnode.isComment) {\n    api.remove(parentNode, node)\n  }\n  else {\n\n    let done = function () {\n      destroyVnode(api, vnode)\n      api.remove(parentNode, node)\n    },\n\n    component: Yox | void\n\n    if (vnode.isComponent) {\n      component = vnode.data[field.COMPONENT]\n      // 异步组件，还没加载成功就被删除了\n      if (!component) {\n        done()\n        return\n      }\n    }\n\n    leaveVnode(vnode, component, done)\n\n  }\n}\n\nfunction destroyVnode(api: API, vnode: VNode) {\n\n  /**\n   * 如果一个子组件的模板是这样写的：\n   *\n   * <div>\n   *   {{#if visible}}\n   *      <slot name=\"children\"/>\n   *   {{/if}}\n   * </div>\n   *\n   * 当 visible 从 true 变为 false 时，不能销毁 slot 导入的任何 vnode\n   * 不论是组件或是元素，都不能销毁，只能简单的 remove，\n   * 否则子组件下一次展现它们时，会出问题\n   */\n\n  const { data, children, parent, context } = vnode\n\n  if (parent\n    // 如果宿主组件正在销毁，$vnode 属性会在调 destroy() 之前被删除\n    // 这里表示的是宿主组件还没被销毁\n    // 如果宿主组件被销毁了，则它的一切都要进行销毁\n    && parent.$vnode\n    // 是从外部传入到组件内的\n    && parent !== vnode.context\n  ) {\n    return\n  }\n\n  if (vnode.isComponent) {\n    const component = data[field.COMPONENT]\n    if (component) {\n      directive.remove(vnode)\n      component.destroy()\n    }\n    else [\n      data[field.LOADING] = env.FALSE\n    ]\n  }\n  else {\n    directive.remove(vnode)\n    if (children) {\n      array.each(\n        children,\n        function (child: VNode) {\n          destroyVnode(api, child)\n        }\n      )\n    }\n  }\n\n}\n\n/**\n * vnode 触发 enter hook 时，外部一般会做一些淡入动画\n */\nfunction enterVnode(vnode: VNode, component: Yox | void) {\n  // 如果组件根元素和组件本身都写了 transition\n  // 优先用外面定义的\n  // 因为这明确是在覆盖配置\n  let { data, transition } = vnode\n  if (component && !transition) {\n    // 再看组件根元素是否有 transition\n    transition = (component.$vnode as VNode).transition\n  }\n  execute(data[field.LEAVING])\n  if (transition) {\n    const { enter } = transition\n    if (enter) {\n      enter(\n        vnode.node as HTMLElement,\n        env.EMPTY_FUNCTION\n      )\n      return\n    }\n  }\n}\n\n/**\n * vnode 触发 leave hook 时，外部一般会做一些淡出动画\n * 动画结束后才能移除节点，否则无法产生动画\n * 这里由外部调用 done 来通知内部动画结束\n */\nfunction leaveVnode(vnode: VNode, component: Yox | void, done: () => void) {\n  // 如果组件根元素和组件本身都写了 transition\n  // 优先用外面定义的\n  // 因为这明确是在覆盖配置\n  let { data, transition } = vnode\n  if (component && !transition) {\n    // 再看组件根元素是否有 transition\n    transition = (component.$vnode as VNode).transition\n  }\n  if (transition) {\n    const { leave } = transition\n    if (leave) {\n      leave(\n        vnode.node as HTMLElement,\n        data[field.LEAVING] = function () {\n          if (data[field.LEAVING]) {\n            done()\n            data[field.LEAVING] = env.UNDEFINED\n          }\n        }\n      )\n      return\n    }\n  }\n  // 如果没有淡出动画，直接结束\n  done()\n}\n\nfunction updateChildren(api: API, parentNode: Node, children: VNode[], oldChildren: (VNode | void)[]) {\n\n  let startIndex = 0,\n  endIndex = children.length - 1,\n  startVnode = children[startIndex],\n  endVnode = children[endIndex],\n\n  oldStartIndex = 0,\n  oldEndIndex = oldChildren.length - 1,\n  oldStartVnode = oldChildren[oldStartIndex],\n  oldEndVnode = oldChildren[oldEndIndex],\n\n  oldKeyToIndex: Record<string, number> | void,\n  oldIndex: number | void\n\n  while (oldStartIndex <= oldEndIndex && startIndex <= endIndex) {\n\n    // 下面有设为 UNDEFINED 的逻辑\n    if (!startVnode) {\n      startVnode = children[++startIndex];\n    }\n    else if (!endVnode) {\n      endVnode = children[--endIndex];\n    }\n    else if (!oldStartVnode) {\n      oldStartVnode = oldChildren[++oldStartIndex]\n    }\n    else if (!oldEndVnode) {\n      oldEndVnode = oldChildren[--oldEndIndex]\n    }\n\n    // 从头到尾比较，位置相同且值得 patch\n    else if (isPatchable(startVnode, oldStartVnode)) {\n      patch(api, startVnode, oldStartVnode)\n      startVnode = children[++startIndex]\n      oldStartVnode = oldChildren[++oldStartIndex]\n    }\n\n    // 从尾到头比较，位置相同且值得 patch\n    else if (isPatchable(endVnode, oldEndVnode)) {\n      patch(api, endVnode, oldEndVnode)\n      endVnode = children[--endIndex]\n      oldEndVnode = oldChildren[--oldEndIndex]\n    }\n\n    // 比较完两侧的节点，剩下就是 位置发生改变的节点 和 全新的节点\n\n    // 当 endVnode 和 oldStartVnode 值得 patch\n    // 说明元素被移到右边了\n    else if (isPatchable(endVnode, oldStartVnode)) {\n      patch(api, endVnode, oldStartVnode)\n      insertBefore(\n        api,\n        parentNode,\n        oldStartVnode.node,\n        api.next(oldEndVnode.node)\n      )\n      endVnode = children[--endIndex]\n      oldStartVnode = oldChildren[++oldStartIndex]\n    }\n\n    // 当 oldEndVnode 和 startVnode 值得 patch\n    // 说明元素被移到左边了\n    else if (isPatchable(startVnode, oldEndVnode)) {\n      patch(api, startVnode, oldEndVnode)\n      insertBefore(\n        api,\n        parentNode,\n        oldEndVnode.node,\n        oldStartVnode.node\n      )\n      startVnode = children[++startIndex]\n      oldEndVnode = oldChildren[--oldEndIndex]\n    }\n\n    // 尝试同级元素的 key\n    else {\n\n      if (!oldKeyToIndex) {\n        oldKeyToIndex = createKeyToIndex(oldChildren, oldStartIndex, oldEndIndex)\n      }\n\n      // 新节点之前的位置\n      oldIndex = startVnode.key\n        ? oldKeyToIndex[startVnode.key]\n        : env.UNDEFINED\n\n      // 移动元素\n      if (isDef(oldIndex)) {\n        patch(api, startVnode, oldChildren[oldIndex as number] as VNode)\n        oldChildren[oldIndex as number] = env.UNDEFINED\n      }\n      // 新元素\n      else {\n        createVnode(api, startVnode)\n      }\n\n      insertVnode(api, parentNode, startVnode, oldStartVnode)\n\n      startVnode = children[++startIndex]\n\n    }\n  }\n\n  if (oldStartIndex > oldEndIndex) {\n    addVnodes(\n      api,\n      parentNode,\n      children,\n      startIndex,\n      endIndex,\n      children[endIndex + 1]\n    )\n  }\n  else if (startIndex > endIndex) {\n    removeVnodes(\n      api,\n      parentNode,\n      oldChildren,\n      oldStartIndex,\n      oldEndIndex\n    )\n  }\n}\n\nexport function patch(api: API, vnode: VNode, oldVnode: VNode) {\n\n  if (vnode === oldVnode) {\n    return\n  }\n\n  const { node, data } = oldVnode\n\n  // 如果不能 patch，则删除重建\n  if (!isPatchable(vnode, oldVnode)) {\n    // 同步加载的组件，初始化时不会传入占位节点\n    // 它内部会自动生成一个注释节点，当它的根 vnode 和注释节点对比时，必然无法 patch\n    // 于是走进此分支，为新组件创建一个 DOM 节点，然后继续 createComponent 后面的流程\n    const parentNode = api.parent(node)\n    createVnode(api, vnode)\n    if (parentNode) {\n      insertVnode(api, parentNode, vnode, oldVnode)\n      removeVnode(api, parentNode, oldVnode)\n    }\n    return\n  }\n\n  vnode[NODE] = node\n  vnode.data = data\n\n  // 组件正在异步加载，更新为最新的 vnode\n  // 当异步加载完成时才能用上最新的 vnode\n  if (oldVnode.isComponent && data[field.LOADING]) {\n    data[field.VNODE] = vnode\n    return\n  }\n\n  // 两棵静态子树就别折腾了\n  if (vnode.isStatic && oldVnode.isStatic) {\n    return\n  }\n\n  nativeAttr.update(api, vnode, oldVnode)\n  nativeProp.update(api, vnode, oldVnode)\n  component.update(vnode, oldVnode)\n  directive.update(vnode, oldVnode)\n\n  const { text, html, children, isStyle } = vnode,\n\n  oldText = oldVnode.text,\n  oldHtml = oldVnode.html,\n  oldChildren = oldVnode.children\n\n  if (is.string(text)) {\n    if (text !== oldText) {\n      api.text(node, text, isStyle)\n    }\n  }\n  else if (is.string(html)) {\n    if (html !== oldHtml) {\n      api.html(node as Element, html, isStyle)\n    }\n  }\n  // 两个都有需要 diff\n  else if (children && oldChildren) {\n    if (children !== oldChildren) {\n      updateChildren(api, node, children, oldChildren)\n    }\n  }\n  // 有新的没旧的 - 新增节点\n  else if (children) {\n    if (is.string(oldText) || is.string(oldHtml)) {\n      api.text(node, env.EMPTY_STRING, isStyle)\n    }\n    addVnodes(api, node, children)\n  }\n  // 有旧的没新的 - 删除节点\n  else if (oldChildren) {\n    removeVnodes(api, node, oldChildren)\n  }\n  // 有旧的 text 没有新的 text\n  else if (is.string(oldText) || is.string(oldHtml)) {\n    api.text(node, env.EMPTY_STRING, isStyle)\n  }\n\n}\n\nexport function create(api: API, node: Node, isComment: boolean, context: Yox, keypath: string): VNode {\n  return {\n    tag: api.tag(node),\n    data: createData(),\n    isComment,\n    node,\n    context,\n    keypath,\n  }\n}\n\nexport function destroy(api: API, vnode: VNode, isRemove?: boolean) {\n  if (isRemove) {\n    const parentNode = api.parent(vnode.node)\n    if (parentNode) {\n      removeVnode(api, parentNode, vnode)\n    }\n    else if (process.env.NODE_ENV === 'dev') {\n      logger.fatal(`destroy vnode can't not work without parent node.`)\n    }\n  }\n  else {\n    destroyVnode(api, vnode)\n  }\n}\n","import * as is from '../util/is'\nimport isDef from './isDef'\n\nexport default function (target: any, defaultValue?: number): number {\n  return is.numeric(target)\n    ? +target\n    : isDef(defaultValue)\n      ? defaultValue as number\n      : 0\n}\n","/**\n * 字面量\n */\nexport const LITERAL = 1\n\n/**\n * 标识符\n */\nexport const IDENTIFIER = 2\n\n/**\n * 对象属性或数组下标\n */\nexport const MEMBER = 3\n\n/**\n * 一元表达式，如 - a\n */\nexport const UNARY = 4\n\n/**\n * 二元表达式，如 a + b\n */\nexport const BINARY = 5\n\n/**\n * 三元表达式，如 a ? b : c\n */\nexport const TERNARY = 6\n\n/**\n * 数组表达式，如 [ 1, 2, 3 ]\n */\nexport const ARRAY = 7\n\n/**\n * 对象表达式\n */\nexport const OBJECT = 8\n\n/**\n * 函数调用表达式，如 a()\n */\nexport const CALL = 9\n","export const unary = {\n  '+': { exec(a: any) { return +a } },\n  '-': { exec(a: any) { return -a } },\n  '~': { exec(a: any) { return ~a } },\n  '!': { exec(a: any) { return !a } },\n  '!!': { exec(a: any) { return !!a } },\n}\n\n// 参考 https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence\nexport const binary = {\n  '*': { prec: 14, exec(a: any, b: any) { return a * b } },\n  '/': { prec: 14, exec(a: any, b: any) { return a / b } },\n  '%': { prec: 14, exec(a: any, b: any) { return a % b } },\n  '+': { prec: 13, exec(a: any, b: any) { return a + b } },\n  '-': { prec: 13, exec(a: any, b: any) { return a - b } },\n  '<<': { prec: 12, exec(a: any, b: any) { return a << b } },\n  '>>': { prec: 12, exec(a: any, b: any) { return a >> b } },\n  '>>>': { prec: 12, exec(a: any, b: any) { return a >>> b } },\n  '<': { prec: 11, exec(a: any, b: any) { return a < b } },\n  '<=': { prec: 11, exec(a: any, b: any) { return a <= b } },\n  '>': { prec: 11, exec(a: any, b: any) { return a > b } },\n  '>=': { prec: 11, exec(a: any, b: any) { return a >= b } },\n  '==': { prec: 10, exec(a: any, b: any) { return a == b } },\n  '!=': { prec: 10, exec(a: any, b: any) { return a != b } },\n  '===': { prec: 10, exec(a: any, b: any) { return a === b } },\n  '!==': { prec: 10, exec(a: any, b: any) { return a !== b } },\n  '&': { prec: 9, exec(a: any, b: any) { return a & b } },\n  '^': { prec: 8, exec(a: any, b: any) { return a ^ b } },\n  '|': { prec: 7, exec(a: any, b: any) { return a | b } },\n  '&&': { prec: 6, exec(a: any, b: any) { return a && b } },\n  '||': { prec: 5, exec(a: any, b: any) { return a || b } },\n\n  '->': {\n    prec: 0,\n    exec(a: number, b: number) {\n      return a > b\n        ? function (callback: (index: number, counter: number) => void) {\n          for (let i = a, index = 0; i > b; i--) {\n            callback(i, index++)\n          }\n        }\n        : function (callback: (index: number, counter: number) => void) {\n          for (let i = a, index = 0; i < b; i++) {\n            callback(i, index++)\n          }\n        }\n    }\n  },\n  '=>': {\n    prec: 0,\n    exec(a: number, b: number) {\n      return a > b\n        ? function (callback: (index: number, counter: number) => void) {\n          for (let i = a, index = 0; i >= b; i--) {\n            callback(i, index++)\n          }\n        }\n        : function (callback: (index: number, counter: number) => void) {\n          for (let i = a, index = 0; i <= b; i++) {\n            callback(i, index++)\n          }\n        }\n    }\n  }\n}\n","/**\n * 元素 节点\n */\nexport const ELEMENT = 1\n\n/**\n * 属性 节点\n */\nexport const ATTRIBUTE = 2\n\n/**\n * 指令 节点\n */\nexport const DIRECTIVE = 3\n\n/**\n * 属性 节点\n */\nexport const PROPERTY = 4\n\n/**\n * 文本 节点\n */\nexport const TEXT = 5\n\n/**\n * if 节点\n */\nexport const IF = 6\n\n/**\n * else if 节点\n */\nexport const ELSE_IF = 7\n\n/**\n * else 节点\n */\nexport const ELSE = 8\n\n/**\n * each 节点\n */\nexport const EACH = 9\n\n/**\n * partial 节点\n */\nexport const PARTIAL = 10\n\n/**\n * import 节点\n */\nexport const IMPORT = 11\n\n/**\n * 表达式 节点\n */\nexport const EXPRESSION = 12\n\n/**\n * 延展操作 节点\n */\nexport const SPREAD = 13\n","import * as env from '../util/env'\n\nexport default function (target: any): boolean {\n  return target === env.UNDEFINED\n}\n","export default function (target: any): string {\n  return JSON.stringify(target)\n}\n","import * as config from 'yox-config/index'\n\nimport isDef from 'yox-common/src/function/isDef'\nimport isUndef from 'yox-common/src/function/isUndef'\nimport toJSON from 'yox-common/src/function/toJSON'\n\nimport * as env from 'yox-common/src/util/env'\nimport * as array from 'yox-common/src/util/array'\nimport * as string from 'yox-common/src/util/string'\nimport * as object from 'yox-common/src/util/object'\n\nimport * as exprNodeType from 'yox-expression-compiler/src/nodeType'\nimport * as nodeType from './nodeType'\n\nimport ExpressionNode from 'yox-expression-compiler/src/node/Node'\nimport ExpressionLiteral from 'yox-expression-compiler/src/node/Literal'\nimport ExpressionIdentifier from 'yox-expression-compiler/src/node/Identifier'\nimport ExpressionCall from 'yox-expression-compiler/src/node/Call'\n\nimport Node from './node/Node'\nimport Text from './node/Text'\nimport Each from './node/Each'\nimport If from './node/If'\nimport ElseIf from './node/ElseIf'\nimport Element from './node/Element'\nimport Attribute from './node/Attribute'\nimport Directive from './node/Directive'\nimport Property from './node/Property'\nimport Expression from './node/Expression'\nimport Import from './node/Import'\nimport Partial from './node/Partial'\nimport Spread from './node/Spread'\n\n/**\n * 这里的难点在于处理 Element 的 children，举个例子：\n *\n * ['1', _x(expr), _l(expr, index, generate), _x(expr) ? ['1', _x(expr), _l(expr, index, generate)] : y]\n *\n * children 用数组表示，其中表达式求出的值可能是任意类型，比如数组或对象，我们无法控制表达式的值最终会是什么类型\n *\n * 像 each 或 import 这样的语法，内部其实会产生一个 vnode 数组，这里就出现了两个难点：\n *\n * 1. 如何区分 each 或其他语法产生的数组和表达式求值的数组\n * 2. 如何避免频繁的创建数组\n *\n * 我能想到的解决方案是，根据当前节点类型，如果是元素，则确保 children 的每一项的值序列化后都是函数调用的形式\n *\n * 这样能确保是从左到右依次执行，也就便于在内部创建一个公共数组，执行一个函数就收集一个值，而不管那个值到底是什么类型\n *\n */\n\n// 是否要执行 join 操作\nconst joinStack: boolean[] = [],\n\n// 是否正在收集子节点\ncollectStack: (boolean | void)[] = [],\n\nnodeStringify = {},\n\nRENDER_SLOT = 'a',\n\nRENDER_EACH = 'b',\n\nRENDER_EXPRESSION = 'c',\n\nRENDER_EXPRESSION_ARG = 'd',\n\nRENDER_EXPRESSION_VNODE = 'e',\n\nRENDER_TEXT_VNODE = 'f',\n\nRENDER_ELEMENT_VNODE = 'g',\n\nRENDER_PARTIAL = 'h',\n\nRENDER_IMPORT = 'i',\n\nARG_CONTEXT = 'j',\n\nSEP_COMMA = ',',\n\nSEP_COLON = ':',\n\nSEP_PLUS = '+',\n\nSTRING_TRUE = '!0',\n\nSTRING_FALSE = '!1',\n\nSTRING_EMPTY = toJSON(env.EMPTY_STRING),\n\nCODE_RETURN = 'return ',\n\nCODE_PREFIX = `function(${\n  array.join([\n    RENDER_EXPRESSION,\n    RENDER_EXPRESSION_ARG,\n    RENDER_EXPRESSION_VNODE,\n    RENDER_TEXT_VNODE,\n    RENDER_ELEMENT_VNODE,\n    RENDER_SLOT,\n    RENDER_PARTIAL,\n    RENDER_IMPORT,\n    RENDER_EACH\n  ], SEP_COMMA)\n}){return `,\n\nCODE_SUFFIX = `}`\n\n// 表达式求值是否要求返回字符串类型\nlet isStringRequired: boolean | void\n\nfunction stringifyObject(obj: Object): string {\n  const fields = []\n  object.each(\n    obj,\n    function (value: any, key: string) {\n      if (isDef(value)) {\n        array.push(\n          fields,\n          `${toJSON(key)}${SEP_COLON}${value}`\n        )\n      }\n    }\n  )\n  return `{${array.join(fields, SEP_COMMA)}}`\n}\n\nfunction stringifyArray(arr: any[]): string {\n  return `[${array.join(arr, SEP_COMMA)}]`\n}\n\nfunction stringifyCall(name: string, arg: string): string {\n  return `${name}(${arg})`\n}\n\nfunction stringifyFunction(result: string | void, arg?: string): string {\n  return `function(${arg || env.EMPTY_STRING}){${result || env.EMPTY_STRING}}`\n}\n\nfunction stringifyGroup(code: string): string {\n  return `(${code})`\n}\n\nfunction stringifyExpression(renderName: string, expr: ExpressionNode, extra: string[] | void): string {\n  const args = [toJSON(expr)]\n  if (extra) {\n    array.push(args, extra)\n  }\n  return stringifyCall(\n    renderName,\n    array.join(args, SEP_COMMA)\n  )\n}\n\nfunction stringifyExpressionArg(expr: ExpressionNode): string {\n  return stringifyExpression(\n    RENDER_EXPRESSION_ARG,\n    expr,\n    [ARG_CONTEXT]\n  )\n}\n\nfunction stringifyValue(value: any, expr: ExpressionNode | void, children: Node[] | void): string | void {\n  if (isDef(value)) {\n    return toJSON(value)\n  }\n  // 只有一个表达式时，保持原始类型\n  if (expr) {\n    return stringifyExpression(RENDER_EXPRESSION, expr)\n  }\n  // 多个值拼接时，要求是字符串\n  if (children) {\n    isStringRequired = children.length > 1\n    return stringifyChildren(children)\n  }\n}\n\nfunction stringifyChildren(children: Node[], isComplex: boolean | void): string {\n  // 如果是复杂节点的 children，则每个 child 的序列化都是函数调用的形式\n  // 因此最后可以拼接为 fn1(), fn2(), fn3() 这样依次调用，而不用再多此一举的使用数组，因为在 renderer 里也用不上这个数组\n\n  // children 大于一个时，才有 join 的可能，单个值 jion 啥啊...\n  const isJoin = children.length > 1 && !isComplex\n\n  array.push(joinStack, isJoin)\n  const value = array.join(\n    children.map(\n      function (child: Node) {\n        return nodeStringify[child.type](child)\n      }\n    ),\n    isJoin ? SEP_PLUS : SEP_COMMA\n  )\n  array.pop(joinStack)\n\n  return value\n\n}\n\nfunction stringifyConditionChildren(children: Node[] | void, isComplex: boolean | void): string | void {\n  if (children) {\n    const result = stringifyChildren(children, isComplex)\n    return children.length > 1 && isComplex\n      ? stringifyGroup(result)\n      : result\n  }\n}\n\nfunction stringifyIf(node: If | ElseIf, stub: boolean | void) {\n\n  let { children, isComplex, next } = node,\n\n  test = stringifyExpression(RENDER_EXPRESSION, node.expr),\n\n  yes = stringifyConditionChildren(children, isComplex),\n\n  no: string | void,\n\n  result: string\n\n  if (next) {\n    no = next.type === nodeType.ELSE\n      ? stringifyConditionChildren(next.children, next.isComplex)\n      : stringifyIf(next as ElseIf, stub)\n  }\n  // 到达最后一个条件，发现第一个 if 语句带有 stub，需创建一个注释标签占位\n  else if (stub) {\n    no = renderElement(\n      stringifyObject({\n        isComment: STRING_TRUE,\n        text: STRING_EMPTY,\n      })\n    )\n  }\n\n  if (isDef(yes) || isDef(no)) {\n\n    result = `${test}?${isDef(yes) ? yes : STRING_EMPTY}:${isDef(no) ? no : STRING_EMPTY}`\n\n    // 如果是连接操作，因为 ?: 优先级最低，因此要加 ()\n    return array.last(joinStack)\n      ? stringifyGroup(result)\n      : result\n\n  }\n\n  return STRING_EMPTY\n\n}\n\n/**\n * 目的是 保证调用参数顺序稳定，减少运行时判断\n */\nfunction trimArgs(list: (string | void)[]) {\n\n  let args: string[] = [], removable = env.TRUE\n\n  array.each(\n    list,\n    function (arg: string | void) {\n      if (isDef(arg)) {\n        removable = env.FALSE\n        array.unshift(args, arg)\n      }\n      else if (!removable) {\n        array.unshift(args, STRING_FALSE)\n      }\n    },\n    env.TRUE\n  )\n\n  return args\n\n}\n\nfunction renderElement(data: string, attrs: string | void, childs: string | void, slots: string | void): string {\n  return stringifyCall(\n    RENDER_ELEMENT_VNODE,\n    array.join(\n      trimArgs([data, attrs, childs, slots]),\n      SEP_COMMA\n    )\n  )\n}\n\nfunction getComponentSlots(children: Node[]): string | void {\n\n  const slots = {},\n\n  addSlot = function (name: string, nodes: Node[] | void) {\n\n    if (!array.falsy(nodes)) {\n      name = config.SLOT_DATA_PREFIX + name\n      array.push(\n        slots[name] || (slots[name] = []),\n        nodes\n      )\n    }\n\n  }\n\n  array.each(\n    children,\n    function (child: Node) {\n\n      // 找到具名 slot\n      if (child.type === nodeType.ELEMENT) {\n        const element = child as Element\n        if (element.slot) {\n          addSlot(element.slot, element.children)\n          return\n        }\n      }\n\n      // 匿名 slot，名称统一为 children\n      addSlot('children', [child])\n\n    }\n  )\n\n  object.each(\n    slots,\n    function (children: any, name: string) {\n      // 强制为复杂节点，因为 slot 的子节点不能用字符串拼接的方式来渲染\n      slots[name] = stringifyFunction(\n        stringifyChildren(children, env.TRUE)\n      )\n    }\n  )\n\n  if (!object.falsy(slots)) {\n    return stringifyObject(slots)\n  }\n\n}\n\nnodeStringify[nodeType.ELEMENT] = function (node: Element): string {\n\n  let { tag, isComponent, isSvg, isStyle, isStatic, isComplex, name, ref, key, html, attrs, children } = node,\n\n  data: Record<string, any> = {},\n\n  elementAttrs: string[] = [],\n\n  elementChilds: string | void,\n\n  elementSlots: string | void,\n\n  args: string[]\n\n  if (tag === env.RAW_SLOT) {\n    args = [toJSON(config.SLOT_DATA_PREFIX + name)]\n    if (children) {\n      array.push(\n        args,\n        stringifyFunction(\n          stringifyChildren(children, env.TRUE)\n        )\n      )\n    }\n    return stringifyCall(\n      RENDER_SLOT,\n      array.join(args, SEP_COMMA)\n    )\n  }\n\n  array.push(collectStack, env.FALSE)\n\n  if (attrs) {\n    array.each(\n      attrs,\n      function (attr: Node) {\n        array.push(\n          elementAttrs,\n          nodeStringify[attr.type](attr)\n        )\n      }\n    )\n  }\n\n  data.tag = toJSON(tag)\n\n  if (isSvg) {\n    data.isSvg = STRING_TRUE\n  }\n\n  if (isStyle) {\n    data.isStyle = STRING_TRUE\n  }\n\n  if (isStatic) {\n    data.isStatic = STRING_TRUE\n  }\n\n  if (ref) {\n    data.ref = stringifyValue(ref.value, ref.expr, ref.children)\n  }\n\n  if (key) {\n    data.key = stringifyValue(key.value, key.expr, key.children)\n  }\n\n  if (html) {\n    data.html = stringifyExpression(RENDER_EXPRESSION, html, [STRING_TRUE])\n  }\n\n  if (isComponent) {\n    data.isComponent = STRING_TRUE\n    if (children) {\n      collectStack[collectStack.length - 1] = env.TRUE\n      elementSlots = getComponentSlots(children)\n    }\n  }\n  else if (children) {\n    isStringRequired = env.TRUE\n    collectStack[collectStack.length - 1] = isComplex\n    elementChilds = stringifyChildren(children, isComplex)\n    if (isComplex) {\n      elementChilds = stringifyFunction(elementChilds)\n    }\n    else {\n      data.text = elementChilds\n      elementChilds = env.UNDEFINED\n    }\n  }\n\n  array.pop(collectStack)\n\n  return renderElement(\n    stringifyObject(data),\n    array.falsy(elementAttrs)\n      ? env.UNDEFINED\n      : stringifyArray(elementAttrs),\n    elementChilds || env.UNDEFINED,\n    elementSlots\n  )\n\n}\n\nnodeStringify[nodeType.ATTRIBUTE] = function (node: Attribute): string {\n  const result: Record<string, any> = {\n    type: node.type,\n    name: toJSON(node.name),\n    binding: node.binding,\n  }\n  if (node.binding) {\n    result.expr = toJSON(node.expr)\n  }\n  else {\n    result.value = stringifyValue(node.value, node.expr, node.children)\n  }\n  return stringifyObject(result)\n}\n\nnodeStringify[nodeType.PROPERTY] = function (node: Property): string {\n  const result: Record<string, any> = {\n    type: node.type,\n    name: toJSON(node.name),\n    hint: node.hint,\n    binding: node.binding,\n  }\n  if (node.binding) {\n    result.expr = toJSON(node.expr)\n  }\n  else {\n    result.value = stringifyValue(node.value, node.expr, node.children)\n  }\n  return stringifyObject(result)\n}\n\nnodeStringify[nodeType.DIRECTIVE] = function (node: Directive): string {\n\n  const { type, ns, value, expr } = node,\n\n  result: Record<string, any> = {\n    // renderer 遍历 attrs 要用 type\n    type,\n    ns: toJSON(ns),\n    name: toJSON(node.name),\n  }\n\n  // 尽可能把表达式编译成函数，这样对外界最友好\n  //\n  // 众所周知，事件指令会编译成函数，对于自定义指令来说，也要尽可能编译成函数\n  //\n  // 比如 o-tap=\"method()\" 或 o-log=\"{'id': '11'}\"\n  // 前者会编译成 handler（调用方法），后者会编译成 getter（取值）\n\n  if (expr) {\n\n    // 如果表达式明确是在调用方法，则序列化成 method + args 的形式\n    if (expr.type === exprNodeType.CALL) {\n      // compiler 保证了函数调用的 name 是标识符\n      result.method = toJSON(((expr as ExpressionCall).name as ExpressionIdentifier).name)\n      // 为了实现运行时动态收集参数，这里序列化成函数\n      if (!array.falsy((expr as ExpressionCall).args)) {\n        // args 函数在触发事件时调用，调用时会传入它的作用域，因此这里要加一个参数\n        result.args = stringifyFunction(\n          CODE_RETURN + stringifyArray((expr as ExpressionCall).args.map(stringifyExpressionArg)),\n          ARG_CONTEXT\n        )\n      }\n    }\n    else if (ns === config.DIRECTIVE_EVENT) {\n      // compiler 保证了这里只能是标识符\n      result.event = toJSON((expr as ExpressionIdentifier).name)\n    }\n    // <input model=\"id\">\n    else if (ns === config.DIRECTIVE_MODEL) {\n      result.expr = toJSON(expr)\n    }\n    else if (ns === config.DIRECTIVE_CUSTOM) {\n\n      // 如果表达式是字面量，直接取值\n      // 比如 o-log=\"1\" 取出来就是数字 1\n      if (expr.type === exprNodeType.LITERAL) {\n        result.value = toJSON(\n          (expr as ExpressionLiteral).value\n        )\n      }\n      // 取值函数\n      // getter 函数在触发事件时调用，调用时会传入它的作用域，因此这里要加一个参数\n      else {\n        result.getter = stringifyFunction(\n          CODE_RETURN + stringifyExpressionArg(expr),\n          ARG_CONTEXT\n        )\n      }\n\n    }\n\n  }\n\n  // 比如写了一个 o-x=\"x\"\n  // 外部可能是想从数据读取 x 的值，也可能只是想直接取字面量 x\n  if (isUndef(result.value) && isDef(value)) {\n    result.value = toJSON(value)\n  }\n\n  return stringifyObject(result)\n\n}\n\nnodeStringify[nodeType.SPREAD] = function (node: Spread): string {\n  return stringifyObject({\n    type: node.type,\n    expr: toJSON(node.expr),\n    binding: node.binding,\n  })\n}\n\nnodeStringify[nodeType.TEXT] = function (node: Text): string {\n\n  const result = toJSON(node.text)\n\n  if (array.last(collectStack) && !array.last(joinStack)) {\n    return stringifyCall(\n      RENDER_TEXT_VNODE,\n      result\n    )\n  }\n\n  return result\n}\n\nnodeStringify[nodeType.EXPRESSION] = function (node: Expression): string {\n\n  // 强制保留 isStringRequired 参数，减少运行时判断参数是否存在\n  // 因为还有 stack 参数呢，各种判断真的很累\n  let renderName = RENDER_EXPRESSION,\n\n  args = [isStringRequired ? STRING_TRUE : env.UNDEFINED]\n\n  if (array.last(collectStack) && !array.last(joinStack)) {\n    renderName = RENDER_EXPRESSION_VNODE\n  }\n\n  return stringifyExpression(\n    renderName,\n    node.expr,\n    trimArgs(args),\n  )\n}\n\nnodeStringify[nodeType.IF] = function (node: If): string {\n  return stringifyIf(node, node.stub)\n}\n\nnodeStringify[nodeType.EACH] = function (node: Each): string {\n\n  const expr = toJSON(node.expr),\n\n  index = node.index ? `, ${toJSON(node.index)}` : env.EMPTY_STRING,\n\n  // compiler 保证了 children 一定有值\n  children = stringifyFunction(\n    stringifyChildren(node.children as Node[], node.isComplex)\n  )\n\n  return stringifyCall(RENDER_EACH, `${expr}${index},${children}`)\n\n}\n\nnodeStringify[nodeType.PARTIAL] = function (node: Partial): string {\n\n  const name = toJSON(node.name),\n\n  // compiler 保证了 children 一定有值\n  children = stringifyFunction(\n    stringifyChildren(node.children as Node[], node.isComplex)\n  )\n\n  return stringifyCall(RENDER_PARTIAL, `${name},${children}`)\n\n}\n\nnodeStringify[nodeType.IMPORT] = function (node: Import): string {\n\n  const name = toJSON(node.name)\n\n  return stringifyCall(RENDER_IMPORT, `${name}`)\n\n}\n\nexport function stringify(node: Node): string {\n  return CODE_PREFIX + nodeStringify[node.type](node) + CODE_SUFFIX\n}\n\nexport function hasStringify(code: string): boolean {\n  return string.startsWith(code, CODE_PREFIX)\n}","import isDef from 'yox-common/src/function/isDef'\nimport isUndef from 'yox-common/src/function/isUndef'\nimport invoke from 'yox-common/src/function/execute'\n\nimport * as env from 'yox-common/src/util/env'\nimport * as array from 'yox-common/src/util/array'\nimport * as object from 'yox-common/src/util/object'\nimport * as keypathUtil from 'yox-common/src/util/keypath'\n\nimport * as nodeType from './nodeType'\nimport * as interpreter from './interpreter'\n\nimport Node from './node/Node'\nimport Keypath from './node/Keypath'\nimport Identifier from './node/Identifier'\nimport Literal from './node/Literal'\nimport Member from './node/Member'\nimport Ternary from './node/Ternary'\nimport Binary from './node/Binary'\nimport Unary from './node/Unary'\nimport Call from './node/Call'\n\nimport ArrayNode from './node/Array'\nimport ObjectNode from './node/Object'\n\nconst nodeExecutor = {}\n\nnodeExecutor[nodeType.LITERAL] = function (node: Literal): any {\n  return node.value\n}\n\nnodeExecutor[nodeType.IDENTIFIER] = function (node: Identifier, getter: (keypath: string, node: Keypath) => any): any {\n  return getter(node.name, node)\n}\n\nnodeExecutor[nodeType.MEMBER] = function (node: Member, getter?: (keypath: string, node: Keypath) => any, context?: any): any {\n\n  /**\n   * 先说第一种奇葩情况：\n   *\n   * 'xx'.length\n   *\n   * 没有变量数据，直接执行字面量，这里用不上 getter\n   *\n   * 第二种：\n   *\n   * a.b.c\n   *\n   * 这是常规操作\n   *\n   * 第三种：\n   *\n   * 'xx'[name]\n   *\n   * 以字面量开头，后面会用到变量\n   *\n   */\n\n  let staticKeypath = node.sk, props = node.props, first: any, data: any\n\n  if (isUndef(staticKeypath)) {\n\n    // props 至少两个，否则无法创建 Member\n    first = props[0]\n\n    if (first.type === nodeType.IDENTIFIER) {\n      staticKeypath = (first as Identifier).name\n    }\n    else {\n      staticKeypath = env.EMPTY_STRING\n      data = execute(first, getter, context)\n    }\n\n    for (let i = 1, len = props.length; i < len; i++) {\n      staticKeypath = keypathUtil.join(\n        staticKeypath,\n        execute(props[i], getter, context)\n      )\n    }\n\n  }\n\n  if (isDef(data)) {\n    data = object.get(data, staticKeypath as string)\n    return data ? data.value : env.UNDEFINED\n  }\n\n  if (getter) {\n    return getter(staticKeypath as string, node)\n  }\n\n}\n\nnodeExecutor[nodeType.UNARY] = function (node: Unary, getter?: (keypath: string, node: Keypath) => any, context?: any): any {\n  return interpreter.unary[node.op].exec(\n    execute(node.a, getter, context)\n  )\n}\n\nnodeExecutor[nodeType.BINARY] = function (node: Binary, getter?: (keypath: string, node: Keypath) => any, context?: any): any {\n  return interpreter.binary[node.op].exec(\n    execute(node.a, getter, context),\n    execute(node.b, getter, context)\n  )\n}\n\nnodeExecutor[nodeType.TERNARY] = function (node: Ternary, getter?: (keypath: string, node: Keypath) => any, context?: any): any {\n  return execute(node.test, getter, context)\n    ? execute(node.yes, getter, context)\n    : execute(node.no, getter, context)\n}\n\nnodeExecutor[nodeType.ARRAY] = function (node: ArrayNode, getter?: (keypath: string, node: Keypath) => any, context?: any): any {\n  return node.nodes.map(\n    function (node) {\n      return execute(node, getter, context)\n    }\n  )\n}\n\nnodeExecutor[nodeType.OBJECT] = function (node: ObjectNode, getter?: (keypath: string, node: Keypath) => any, context?: any): any {\n  let result = {}\n  array.each(\n    node.keys,\n    function (key: string, index: number) {\n      result[key] = execute(node.values[index], getter, context)\n    }\n  )\n  return result\n}\n\nnodeExecutor[nodeType.CALL] = function (node: Call, getter?: (keypath: string, node: Keypath) => any, context?: any): any {\n  return invoke(\n    execute(node.name, getter, context),\n    context,\n    node.args.map(\n      function (node) {\n        return execute(node, getter, context)\n      }\n    )\n  )\n}\n\nexport function execute(node: Node, getter?: (keypath: string, node: Keypath) => any, context?: any): any {\n  return nodeExecutor[node.type](node, getter, context)\n}\n","import * as config from 'yox-config/index'\n\nimport isDef from 'yox-common/src/function/isDef'\nimport isUndef from 'yox-common/src/function/isUndef'\nimport execute from 'yox-common/src/function/execute'\nimport toString from 'yox-common/src/function/toString'\n\nimport * as is from 'yox-common/src/util/is'\nimport * as env from 'yox-common/src/util/env'\nimport * as array from 'yox-common/src/util/array'\nimport * as object from 'yox-common/src/util/object'\nimport * as logger from 'yox-common/src/util/logger'\nimport * as keypathUtil from 'yox-common/src/util/keypath'\n\nimport CustomEvent from 'yox-common/src/util/CustomEvent'\n\nimport ExpressionNode from 'yox-expression-compiler/src/node/Node'\nimport Keypath from 'yox-expression-compiler/src/node/Keypath'\n\nimport * as exprExecutor from 'yox-expression-compiler/src/executor'\n\nimport * as signature from 'yox-type/index'\n\nimport Yox from 'yox-type/src/Yox'\nimport VNode from 'yox-type/src/vnode/VNode'\nimport DirectiveHooks from 'yox-type/src/hooks/Directive'\nimport TransitionHooks from 'yox-type/src/hooks/Transition'\n\nimport * as nodeType from './nodeType'\n\n\nfunction setPair(target: any, name: string, key: string, value: any) {\n  const map = target[name] || (target[name] = {})\n  map[key] = value\n}\n\nexport function render(\n  context: Yox,\n  filters: Record<string, Function>,\n  partials: Record<string, Function | void>,\n  directives: Record<string, DirectiveHooks | void>,\n  transitions: Record<string, TransitionHooks | void>,\n  template: Function\n) {\n\n  let $keypath = env.EMPTY_STRING,\n\n  $scope: Record<string, any> = { $keypath },\n\n  $stack = [$keypath, $scope],\n\n  eventScope: Record<string, any> | void,\n\n  vnodeStack: VNode[][] = [],\n\n  localPartials: Record<string, Function> = {},\n\n  lookup = function (stack: any[], index: number, key: string, node: Keypath, depIgnore?: boolean, defaultKeypath?: string) {\n\n    let keypath = keypathUtil.join(stack[index], key),\n\n    scope = stack[index + 1]\n\n    node.ak = keypath\n\n    // 如果最后还是取不到值，用回最初的 keypath\n    if (isUndef(defaultKeypath)) {\n      defaultKeypath = keypath\n    }\n\n    // eventScore 只有 event 和 data 两种值\n    if (eventScope && eventScope[key]) {\n      return eventScope[key]\n    }\n\n    // 如果取的是 scope 上直接有的数据，如 keypath\n    if (isDef(scope[key])) {\n      return scope[key]\n    }\n\n    // 如果取的是数组项，则要更进一步\n    if (isDef(scope.$item)) {\n      scope = scope.$item\n\n      // 到这里 scope 可能为空\n      // 比如 new Array(10) 然后遍历这个数组，每一项肯定是空\n\n      // 取 this\n      if (key === env.EMPTY_STRING) {\n        return scope\n      }\n      // 取 this.xx\n      if (scope && isDef(scope[key])) {\n        return scope[key]\n      }\n    }\n\n    // 正常取数据\n    let result = context.get(keypath, lookup, depIgnore)\n    if (result === lookup) {\n      // undefined 或 true 都表示需要向上寻找\n      if (node.lookup !== env.FALSE && index > 1) {\n        index -= 2\n        if (process.env.NODE_ENV === 'dev') {\n          logger.warn(`[${keypath}] 找不到数据，开始向上查找.`)\n        }\n        return lookup(stack, index, key, node, depIgnore, defaultKeypath)\n      }\n      result = object.get(filters, key)\n      if (!result) {\n        node.ak = defaultKeypath\n        return\n      }\n      result = result.value\n    }\n\n    return result\n\n  },\n\n  getValue = function (expr: ExpressionNode, depIgnore?: boolean, stack?: any[]): any {\n\n    const renderStack = stack || $stack,\n\n    { length } = renderStack\n\n    return exprExecutor.execute(\n      expr,\n      function (keypath: string, node: Keypath): any {\n        return lookup(\n          renderStack,\n          length - 2 * ((node.offset || 0) + 1),\n          keypath,\n          node,\n          depIgnore\n        )\n      },\n      context\n    )\n\n  },\n\n  addBinding = function (vnode: any, attr: Record<string, any>): any {\n\n    const { expr } = attr,\n\n    value = getValue(expr, env.TRUE),\n\n    key = keypathUtil.join(config.DIRECTIVE_BINDING, attr.name),\n\n    hooks = directives[config.DIRECTIVE_BINDING]\n\n    if (hooks) {\n      setPair(\n        vnode,\n        'directives',\n        key,\n        {\n          ns: config.DIRECTIVE_BINDING,\n          name: attr.name,\n          key,\n          hooks,\n          binding: expr.ak,\n          hint: attr.hint,\n        }\n      )\n    }\n\n    return value\n\n  },\n\n  spreadObject = function (vnode: any, attr: Record<string, any>) {\n\n    let { expr } = attr,\n\n    value = getValue(expr, attr.binding)\n\n    // 数组也算一种对象，要排除掉\n    if (is.object(value) && !is.array(value)) {\n\n      object.each(\n        value,\n        function (value: any, key: string) {\n          setPair(vnode, 'props', key, value)\n        }\n      )\n\n      const absoluteKeypath = expr.ak\n      if (absoluteKeypath) {\n        const key = keypathUtil.join(config.DIRECTIVE_BINDING, absoluteKeypath),\n        hooks = directives[config.DIRECTIVE_BINDING]\n        if (hooks) {\n          setPair(\n            vnode,\n            'directives',\n            key,\n            {\n              ns: config.DIRECTIVE_BINDING,\n              name: env.EMPTY_STRING,\n              key,\n              hooks,\n              binding: keypathUtil.join(absoluteKeypath, '*'),\n            }\n          )\n        }\n      }\n\n    }\n    else {\n      logger.warn(`[${expr.raw}] 不是对象，延展个毛啊`)\n    }\n  },\n\n  addDirective = function (vnode: any, attr: Record<string, any>) {\n\n    let { ns, name, value } = attr,\n\n    key = keypathUtil.join(ns, name),\n\n    binding: string | void,\n\n    hooks: DirectiveHooks | void,\n\n    getter: signature.directiveGetter | void,\n\n    handler: signature.directiveHandler | signature.eventListener | void,\n\n    transition: TransitionHooks | void\n\n    switch (ns) {\n\n      case config.DIRECTIVE_EVENT:\n        hooks = directives[config.DIRECTIVE_EVENT]\n        handler = attr.event\n          ? createEventListener(attr.event)\n          : createMethodListener(attr.method, attr.args, $stack)\n        break\n\n      case env.RAW_TRANSITION:\n        transition = transitions[value]\n        if (transition) {\n          vnode.transition = transition\n        }\n        else if (process.env.NODE_ENV === 'dev') {\n          logger.fatal(`transition [${value}] is not found.`)\n        }\n        return\n\n      case config.DIRECTIVE_MODEL:\n        hooks = directives[config.DIRECTIVE_MODEL]\n        vnode.model = getValue(attr.expr, env.TRUE)\n        binding = attr.expr.ak\n        break\n\n      case config.DIRECTIVE_LAZY:\n        setPair(vnode, 'lazy', name, value)\n        return\n\n      default:\n        hooks = directives[name]\n        if (attr.method) {\n          handler = createMethodListener(attr.method, attr.args, $stack)\n        }\n        else if (attr.getter) {\n          getter = createGetter(attr.getter, $stack)\n        }\n        break\n\n    }\n\n    if (hooks) {\n      setPair(\n        vnode,\n        'directives',\n        key,\n        {\n          ns,\n          name,\n          key,\n          value,\n          binding,\n          hooks,\n          getter,\n          handler\n        }\n      )\n    }\n    else if (process.env.NODE_ENV === 'dev') {\n      logger.fatal(`directive [${key}] is not found.`)\n    }\n\n  },\n\n  createEventListener = function (type: string): signature.eventListener {\n    return function (event: CustomEvent, data?: Record<string, any>) {\n      // 事件名称相同的情况，只可能是监听 DOM 事件，比如写一个 Button 组件\n      // <button on-click=\"click\"> 纯粹的封装了一个原生 click 事件\n      if (type !== event.type) {\n        event = new CustomEvent(type, event)\n      }\n      context.fire(event, data)\n    }\n  },\n\n  createMethodListener = function (\n    method: string,\n    args: Function | void,\n    stack: any[]\n  ): signature.directiveHandler {\n    return function (event?: CustomEvent, data?: Record<string, any>) {\n\n      const callee = context[method]\n\n      if (event instanceof CustomEvent) {\n\n        let result: any | void\n\n        if (args) {\n          // 给当前 scope 加上 event 和 data\n          eventScope = {\n            $event: event,\n            $data: data,\n          }\n          result = execute(callee, context, args(stack))\n          // 阅后即焚\n          eventScope = env.UNDEFINED\n        }\n        else {\n          result = execute(callee, context, data ? [event, data] : event)\n        }\n\n        if (result === env.FALSE) {\n          event.prevent().stop()\n        }\n      }\n      else {\n        execute(\n          callee,\n          context,\n          args ? args(stack) : env.UNDEFINED\n        )\n      }\n\n    }\n  },\n\n  createGetter = function (getter: Function, stack: any[]): signature.directiveGetter {\n    return function () {\n      return getter(stack)\n    }\n  },\n\n  renderExpression = function (expr: ExpressionNode, stringRequired: boolean | void): any {\n    const value = getValue(expr)\n    return stringRequired\n      ? toString(value)\n      : value\n  },\n\n  renderExpressionArg = function (expr: ExpressionNode, stack: any[]): any {\n    return getValue(expr, env.UNDEFINED, stack)\n  },\n\n  renderExpressionVnode = function (expr: ExpressionNode, stringRequired: boolean) {\n    renderTextVnode(\n      renderExpression(expr, stringRequired)\n    )\n  },\n\n  renderTextVnode = function (text: string) {\n    const vnodeList = array.last(vnodeStack)\n    if (vnodeList) {\n      const lastVnode = array.last(vnodeList)\n      if (lastVnode && lastVnode.isText) {\n        lastVnode.text += text\n      }\n      else {\n        array.push(\n          vnodeList,\n          {\n            isText: env.TRUE,\n            text,\n            context,\n            keypath: $keypath,\n          }\n        )\n      }\n    }\n  },\n\n  renderElementVnode = function (\n    vnode: Record<string, any>,\n    attrs: any[] | void,\n    childs: Function | void,\n    slots: Record<string, Function> | void\n  ) {\n\n    if (attrs) {\n      array.each(\n        attrs,\n        function (attr: any) {\n\n          let { name, value } = attr\n\n          switch (attr.type) {\n\n            case nodeType.ATTRIBUTE:\n\n              if (attr.binding) {\n                value = addBinding(vnode, attr)\n              }\n\n              if (vnode.isComponent) {\n                setPair(vnode, 'props', name, value)\n              }\n              else {\n                setPair(vnode, 'nativeAttrs', name, { name, value })\n              }\n\n              break\n\n            case nodeType.PROPERTY:\n              setPair(\n                vnode,\n                'nativeProps',\n                name,\n                {\n                  name,\n                  value: attr.binding ? addBinding(vnode, attr) : value,\n                  hint: attr.hint,\n                }\n              )\n              break\n\n            case nodeType.DIRECTIVE:\n              addDirective(vnode, attr)\n              break\n\n            case nodeType.SPREAD:\n              spreadObject(vnode, attr)\n              break\n\n          }\n        }\n      )\n      // 确保有 directives 就必然有 lazy\n      if (vnode.directives && !vnode.lazy) {\n        vnode.lazy = env.EMPTY_OBJECT\n      }\n    }\n\n    // childs 和 slots 不可能同时存在\n    if (childs) {\n      vnodeStack.push(vnode.children = [])\n      childs()\n      array.pop(vnodeStack)\n    }\n    else if (slots) {\n      const renderSlots = {}\n      object.each(\n        slots,\n        function (slot: Function, name: string) {\n          vnodeStack.push([])\n          slot()\n          renderSlots[name] = array.pop(vnodeStack)\n        }\n      )\n      vnode.slots = renderSlots\n    }\n\n    vnode.context = context\n    vnode.keypath = $keypath\n\n    const vnodeList = array.last(vnodeStack)\n    if (vnodeList) {\n      array.push(vnodeList, vnode)\n    }\n\n    return vnode\n\n  },\n\n  // <slot name=\"xx\"/>\n  renderSlot = function (name: string, defaultRender?: Function) {\n\n    const vnodeList = array.last(vnodeStack), vnodes = context.get(name)\n\n    if (vnodes) {\n      array.each(\n        vnodes,\n        function (vnode: any) {\n          array.push(vnodeList, vnode)\n          vnode.parent = context\n        }\n      )\n    }\n    else if (defaultRender) {\n      defaultRender()\n    }\n\n  },\n\n  // {{#partial name}}\n  //   xx\n  // {{/partial}}\n  renderPartial = function (name: string, render: Function) {\n    localPartials[name] = render\n  },\n\n  // {{> name}}\n  renderImport = function (name: string) {\n    if (localPartials[name]) {\n      localPartials[name]()\n      return\n    }\n    else {\n      const partial = partials[name]\n      if (partial) {\n        partial(\n          renderExpression,\n          renderExpressionArg,\n          renderExpressionVnode,\n          renderTextVnode,\n          renderElementVnode,\n          renderSlot,\n          renderPartial,\n          renderImport,\n          renderEach\n        )\n        return\n      }\n    }\n    if (process.env.NODE_ENV === 'dev') {\n      logger.fatal(`partial [${name}] is not found.`)\n    }\n  },\n\n  renderEach = function (expr: ExpressionNode, index: string | Function | void, handler?: Function) {\n\n    let eachIndex: string | void, eachHandler: Function\n\n    if (is.func(index)) {\n      eachHandler = index as Function\n      eachIndex = env.UNDEFINED\n    }\n    else {\n      eachHandler = handler as Function\n      eachIndex = index as string\n    }\n\n    const value = getValue(expr),\n\n    exprKeypath = expr['ak'],\n\n    eachKeypath = exprKeypath || keypathUtil.join($keypath, expr.raw),\n\n    callback = function (item: any, key: string | number, length?: number) {\n\n      let lastKeypath = $keypath, lastScope = $scope, lastKeypathStack = $stack\n\n      $keypath = keypathUtil.join(eachKeypath, toString(key))\n      $scope = {}\n      $stack = object.copy($stack)\n\n      array.push($stack, $keypath)\n      array.push($stack, $scope)\n\n      // 从下面这几句赋值可以看出\n      // scope 至少会有 '$keypath' '$length' '$item' eachIndex 等几个值\n      $scope.$keypath = $keypath\n\n      // 避免模板里频繁读取 list.length\n      $scope.$length = length\n\n      // 类似 {{#each 1 -> 10}} 这样的临时循环，需要在 scope 上加上当前项\n      // 因为通过 context.get() 无法获取数据\n      if (!exprKeypath) {\n        $scope.$item = item\n      }\n\n      if (eachIndex) {\n        $scope[eachIndex] = key\n      }\n\n      eachHandler(item, key)\n\n      $keypath = lastKeypath\n      $scope = lastScope\n      $stack = lastKeypathStack\n\n    }\n\n    if (is.array(value)) {\n      array.each(value, callback)\n    }\n    else if (is.object(value)) {\n      object.each(value, callback)\n    }\n    else if (is.func(value)) {\n      value(callback)\n    }\n\n  }\n\n  return template(\n    renderExpression,\n    renderExpressionArg,\n    renderExpressionVnode,\n    renderTextVnode,\n    renderElementVnode,\n    renderSlot,\n    renderPartial,\n    renderImport,\n    renderEach\n  )\n\n}","import execute from 'yox-common/src/function/execute'\n\nimport * as is from 'yox-common/src/util/is'\nimport * as env from 'yox-common/src/util/env'\nimport * as array from 'yox-common/src/util/array'\nimport * as object from 'yox-common/src/util/object'\n\nimport * as type from 'yox-type/index'\nimport ComputedInterface from 'yox-type/src/Computed'\nimport ObserverInterface from 'yox-type/src/Observer'\nimport WatcherOptions from 'yox-type/src/options/Watcher'\n\n/**\n * 计算属性\n *\n * 可配置 cache、deps、get、set 等\n */\nexport default class Computed implements ComputedInterface {\n\n  static current?: Computed\n\n  /**\n   * 对外的构造器，把用户配置的计算属性对象转换成内部对象\n   *\n   * @param keypath\n   * @param observer\n   * @param options\n   */\n  static build(keypath: string, observer: ObserverInterface, options: any): Computed | void {\n\n    let cache = env.TRUE,\n\n    sync = env.TRUE,\n\n    deps = env.EMPTY_ARRAY,\n\n    getter: type.computedGetter | void,\n\n    setter: type.computedSetter | void\n\n    if (is.func(options)) {\n      getter = options\n    }\n    else if (is.object(options)) {\n      if (is.boolean(options.cache)) {\n        cache = options.cache\n      }\n      if (is.boolean(options.sync)) {\n        sync = options.sync\n      }\n      if (is.array(options.deps)) {\n        deps = options.deps\n      }\n      if (is.func(options.get)) {\n        getter = options.get\n      }\n      if (is.func(options.set)) {\n        setter = options.set\n      }\n    }\n\n    if (getter) {\n      return new Computed(keypath, sync, cache, deps, observer, getter, setter)\n    }\n\n  }\n\n  keypath: string\n\n  value: any\n\n  deps: string[]\n\n  cache: boolean\n\n  fixed: boolean\n\n  context: any\n\n  observer: ObserverInterface\n\n  getter: type.computedGetter\n\n  setter: type.computedSetter | void\n\n  watcher: type.watcher\n\n  watcherOptions: WatcherOptions\n\n  unique: Record<string, boolean>\n\n  private constructor(\n    keypath: string,\n    sync: boolean,\n    cache: boolean,\n    deps: string[],\n    observer: ObserverInterface,\n    getter: type.computedGetter,\n    setter: type.computedSetter | void\n  ) {\n\n    const instance = this\n\n    instance.keypath = keypath\n    instance.cache = cache\n    // 因为可能会修改 deps，所以这里创建一个自己的对象，避免影响外部传入的 deps\n    instance.deps = []\n\n    instance.context = observer.context\n    instance.observer = observer\n    instance.getter = getter\n    instance.setter = setter\n\n    instance.unique = {}\n\n    instance.watcher = function ($0: any, $1: any, $2: string) {\n\n      // 计算属性的依赖变了会走进这里\n\n      const oldValue = instance.value,\n      newValue = instance.get(env.TRUE)\n\n      if (newValue !== oldValue) {\n        observer.diff(keypath, newValue, oldValue)\n      }\n\n    }\n\n    instance.watcherOptions = {\n      sync,\n      watcher: instance.watcher\n    }\n\n    if (instance.fixed = !array.falsy(deps)) {\n      array.each(\n        deps,\n        function (dep: string) {\n          instance.add(dep)\n        }\n      )\n      instance.bind()\n    }\n\n  }\n\n  /**\n   * 读取计算属性的值\n   *\n   * @param force 是否强制刷新缓存\n   */\n  get(force?: boolean): any {\n\n    const instance = this,\n\n    { getter, context } = instance\n\n    // 禁用缓存\n    if (!instance.cache) {\n      instance.value = execute(getter, context)\n    }\n\n    // 减少取值频率，尤其是处理复杂的计算规则\n    else if (force || !object.has(instance, env.RAW_VALUE)) {\n\n      // 如果写死了依赖，则不需要收集依赖\n      if (instance.fixed) {\n        instance.value = execute(getter, context)\n      }\n      else {\n\n        // 清空上次收集的依赖\n        instance.unbind()\n\n        // 开始收集新的依赖\n        const lastComputed = Computed.current\n        Computed.current = instance\n\n        instance.value = execute(getter, context)\n\n        // 绑定新的依赖\n        instance.bind()\n\n        Computed.current = lastComputed\n      }\n\n    }\n\n    return instance.value\n  }\n\n  set(value: any): void {\n    const { setter, context } = this\n    if (setter) {\n      setter.call(context, value)\n    }\n  }\n\n  /**\n   * 添加依赖\n   *\n   * 这里只是为了保证依赖唯一，最后由 bind() 实现绑定\n   *\n   * @param dep\n   */\n  add(dep: string): void {\n    this.unique[dep] = env.TRUE\n  }\n\n  /**\n   * 绑定依赖\n   */\n  bind(): void {\n\n    const { unique, deps, observer, watcherOptions } = this\n\n    object.each(\n      unique,\n      function (_: any, dep: string) {\n        array.push(deps, dep)\n        observer.watch(\n          dep,\n          watcherOptions\n        )\n      }\n    )\n\n    // 用完重置\n    // 方便下次收集依赖\n    this.unique = {}\n\n  }\n\n  /**\n   * 解绑依赖\n   */\n  unbind(): void {\n\n    const { deps, observer, watcher } = this\n\n    array.each(\n      deps,\n      function (dep: string) {\n        observer.unwatch(dep, watcher)\n      },\n      env.TRUE\n    )\n\n    deps.length = 0\n\n  }\n\n}","import * as env from 'yox-common/src/util/env'\nimport * as array from 'yox-common/src/util/array'\nimport * as string from 'yox-common/src/util/string'\nimport * as keypathUtil from 'yox-common/src/util/keypath'\n\n/**\n * 从 keypath 数组中选择和 keypath 最匹配的那一个\n *\n * @param sorted 经过排序的 keypath 数组\n * @param keypath\n */\nexport default function (sorted: string[], keypath: string): any {\n\n  let result: any\n\n  array.each(\n    sorted,\n    function (prefix: string) {\n      const length = keypathUtil.match(keypath, prefix)\n      if (length >= 0) {\n        result = {\n          name: prefix,\n          prop: string.slice(keypath, length)\n        }\n        return env.FALSE\n      }\n    }\n  )\n\n  return result\n\n}","import * as env from 'yox-common/src/util/env'\nimport * as object from 'yox-common/src/util/object'\n\nexport default function (source: any, keypath: string): any {\n\n  if (source == env.NULL || keypath === env.EMPTY_STRING) {\n    return source\n  }\n\n  const result = object.get(source, keypath)\n  if (result) {\n    return result.value\n  }\n\n}","import * as is from 'yox-common/src/util/is'\nimport * as env from 'yox-common/src/util/env'\n\n/**\n * 对比新旧数组\n *\n * @param newValue\n * @param oldValue\n * @param callback\n */\nexport default function (\n  newValue: any,\n  oldValue: any,\n  callback: (key: string, newValue: any, oldValue: any) => void\n): boolean | void {\n\n  const newIsString = is.string(newValue),\n\n  oldIsString = is.string(oldValue)\n\n  if (newIsString || oldIsString) {\n    callback(\n      env.RAW_LENGTH,\n      newIsString ? newValue.length : env.UNDEFINED,\n      oldIsString ? oldValue.length : env.UNDEFINED\n    )\n    return env.TRUE\n  }\n\n}","import * as is from 'yox-common/src/util/is'\nimport * as env from 'yox-common/src/util/env'\n\n/**\n * 对比新旧数组\n *\n * @param newValue\n * @param oldValue\n * @param callback\n */\nexport default function (\n  newValue: any,\n  oldValue: any,\n  callback: (key: string, newValue: any, oldValue: any) => void\n): boolean | void {\n\n  const newIsArray = is.array(newValue),\n\n  oldIsArray = is.array(oldValue)\n\n  if (newIsArray || oldIsArray) {\n\n    const newLength = newIsArray ? newValue.length : env.UNDEFINED,\n\n    oldLength = oldIsArray ? oldValue.length : env.UNDEFINED\n\n    callback(\n      env.RAW_LENGTH,\n      newLength,\n      oldLength\n    )\n\n    for (let i = 0, length = Math.max(newLength || 0, oldLength || 0); i < length; i++) {\n      callback(\n        `${i}`,\n        newValue ? newValue[i] : env.UNDEFINED,\n        oldValue ? oldValue[i] : env.UNDEFINED\n      )\n    }\n\n    return env.TRUE\n\n  }\n\n}","import * as is from 'yox-common/src/util/is'\nimport * as env from 'yox-common/src/util/env'\nimport * as object from 'yox-common/src/util/object'\n\n/**\n * 对比新旧对象\n *\n * @param newValue\n * @param oldValue\n * @param callback\n */\nexport default function (\n  newValue: any,\n  oldValue: any,\n  callback: (key: string, newValue: any, oldValue: any) => void\n) {\n\n  const newIsObject = is.object(newValue),\n\n  oldIsObject = is.object(oldValue)\n\n  if (newIsObject || oldIsObject) {\n\n    newValue = newIsObject ? newValue : env.EMPTY_OBJECT\n    oldValue = oldIsObject ? oldValue : env.EMPTY_OBJECT\n\n    if (newIsObject) {\n      object.each(\n        newValue,\n        function (value: any, key: string) {\n          if (value !== oldValue[key]) {\n            callback(key, value, oldValue[key])\n          }\n        }\n      )\n    }\n\n    if (oldIsObject) {\n      object.each(\n        oldValue,\n        function (value: any, key: string) {\n          if (value !== newValue[key]) {\n            callback(key, newValue[key], value)\n          }\n        }\n      )\n    }\n\n  }\n\n}","import isDef from 'yox-common/src/function/isDef'\nimport * as array from 'yox-common/src/util/array'\nimport * as keypathUtil from 'yox-common/src/util/keypath'\n\nimport diffString from './diffString'\nimport diffArray from './diffArray'\nimport diffObject from './diffObject'\n\nexport default function diffRecursion(\n  keypath: string,\n  newValue: any,\n  oldValue: any,\n  watchFuzzyKeypaths: string[],\n  callback: (watchKeypath: string, keypath: string, newValue: any, oldValue: any) => void\n) {\n\n  const diff = function (subKeypath: string, subNewValue: any, subOldValue: any) {\n\n    if (subNewValue !== subOldValue) {\n\n      const newKeypath = keypathUtil.join(keypath, subKeypath)\n\n      array.each(\n        watchFuzzyKeypaths,\n        function (fuzzyKeypath: string) {\n          if (isDef(keypathUtil.matchFuzzy(newKeypath, fuzzyKeypath))) {\n            callback(\n              fuzzyKeypath, newKeypath, subNewValue, subOldValue\n            )\n          }\n        }\n      )\n\n      diffRecursion(newKeypath, subNewValue, subOldValue, watchFuzzyKeypaths, callback)\n\n    }\n\n  }\n\n  diffString(newValue, oldValue, diff)\n    || diffArray(newValue, oldValue, diff)\n    || diffObject(newValue, oldValue, diff)\n\n}","import isDef from 'yox-common/src/function/isDef'\nimport * as array from 'yox-common/src/util/array'\nimport * as object from 'yox-common/src/util/object'\nimport * as string from 'yox-common/src/util/string'\nimport * as keypathUtil from 'yox-common/src/util/keypath'\n\nimport readValue from './readValue'\nimport diffRecursion from './diffRecursion'\n\nexport default function (\n  keypath: string,\n  newValue: any,\n  oldValue: any,\n  watcher: Object, isRecursive: boolean,\n  callback: (watchKeypath: string, keypath: string, newValue: any, oldValue: any) => void\n) {\n\n  let fuzzyKeypaths: string[] | undefined\n\n  // 遍历监听的 keypath，如果未被监听，则无需触发任何事件\n  object.each(\n    watcher,\n    function (_, watchKeypath) {\n\n      // 模糊监听，如 users.*.name\n      if (keypathUtil.isFuzzy(watchKeypath)) {\n\n        // 如果当前修改的是 users.0 整个对象\n        // users.0 和 users.*.name 无法匹配\n        // 此时要知道设置 users.0 到底会不会改变 users.*.name 需要靠递归了\n\n        // 如果匹配，则无需递归\n        if (isDef(keypathUtil.matchFuzzy(keypath, watchKeypath))) {\n          callback(\n            watchKeypath, keypath, newValue, oldValue\n          )\n        }\n        else if (isRecursive) {\n          if (fuzzyKeypaths) {\n            array.push(\n              fuzzyKeypaths,\n              watchKeypath\n            )\n          }\n          else {\n            fuzzyKeypaths = [watchKeypath]\n          }\n        }\n\n        return\n      }\n\n      // 不是模糊匹配，直接靠前缀匹配\n      // 比如监听的是 users.0.name，此时修改 users.0，则直接读出子属性值，判断是否相等\n      const length = keypathUtil.match(watchKeypath, keypath)\n      if (length >= 0) {\n\n        const subKeypath = string.slice(watchKeypath, length),\n        subNewValue = readValue(newValue, subKeypath),\n        subOldValue = readValue(oldValue, subKeypath)\n\n        if (subNewValue !== subOldValue) {\n          callback(\n            watchKeypath, watchKeypath, subNewValue, subOldValue\n          )\n        }\n\n      }\n\n    }\n  )\n\n  // 存在模糊匹配的需求\n  // 必须对数据进行递归\n  // 性能确实会慢一些，但是很好用啊，几乎可以监听所有的数据\n  if (fuzzyKeypaths) {\n    diffRecursion(keypath, newValue, oldValue, fuzzyKeypaths, callback)\n  }\n\n}","import * as type from 'yox-type/index'\nimport EmitterOptions from 'yox-type/src/options/Emitter'\n\n/**\n * 触发异步变化时，用此函数过滤下，哪些 listener 应该执行\n *\n * @param item\n * @param data\n */\nexport default function (options: EmitterOptions, data: type.eventData | any[] | void): boolean | void {\n\n  if (options.count && data) {\n\n    // 采用计数器的原因是，同一个 options 可能执行多次\n    // 比如监听 user.*，如果同批次修改了 user.name 和 user.age\n    // 这个监听器会调用多次，如果第一次执行就把 count 干掉了，第二次就无法执行了\n\n    options.count--\n\n    // 新旧值不相等\n    return data[0] !== data[1]\n\n  }\n\n}","import * as is from 'yox-common/src/util/is'\nimport * as env from 'yox-common/src/util/env'\nimport * as logger from 'yox-common/src/util/logger'\n\nimport * as type from 'yox-type/index'\nimport WatcherOptions from 'yox-type/src/options/Watcher'\n\n// 避免频繁创建对象\nconst optionsHolder: WatcherOptions = {\n  watcher: env.EMPTY_FUNCTION\n}\n\n/**\n * 格式化 watch options\n *\n * @param options\n */\nexport default function (options: type.watcher | WatcherOptions | void, immediate: boolean | void): WatcherOptions | void {\n\n  if (is.func(options)) {\n    optionsHolder.watcher = options as type.watcher\n    optionsHolder.immediate = immediate === env.TRUE\n    return optionsHolder\n  }\n\n  if (options && (options as WatcherOptions).watcher) {\n    return options as WatcherOptions\n  }\n\n  if (process.env.NODE_ENV === 'dev') {\n    logger.fatal(`watcher should be a function or object.`)\n  }\n\n}","import * as is from 'yox-common/src/util/is'\nimport * as env from 'yox-common/src/util/env'\nimport * as array from 'yox-common/src/util/array'\nimport * as object from 'yox-common/src/util/object'\nimport * as string from 'yox-common/src/util/string'\n\nimport toNumber from 'yox-common/src/function/toNumber'\nimport execute from 'yox-common/src/function/execute'\nimport Emitter from 'yox-common/src/util/Emitter'\nimport NextTask from 'yox-common/src/util/NextTask'\n\nimport * as type from 'yox-type/index'\nimport ValueHolder from 'yox-type/src/ValueHolder'\nimport ComputedOptions from 'yox-type/src/options/Computed'\nimport WatcherOptions from 'yox-type/src/options/Watcher'\nimport EmitterOptions from 'yox-type/src/options/Emitter'\nimport ObserverInterface from 'yox-type/src/Observer'\n\nimport Computed from './Computed'\nimport matchBest from './function/matchBest'\nimport diffWatcher from './function/diffWatcher'\nimport filterWatcher from './function/filterWatcher'\nimport formatWatcherOptions from './function/formatWatcherOptions'\n\ninterface AsyncChange {\n\n  // 旧值\n  value: any\n\n  // 监听的 keypath\n  keypaths: string[]\n\n}\n\n/**\n * 观察者有两种观察模式：\n *\n * 1. 同步监听\n * 2. 异步监听\n *\n * 对于`计算属性`这种需要实时变化的对象，即它的依赖变了，它需要立即跟着变，否则会出现不一致的问题\n * 这种属于同步监听\n *\n * 对于外部调用 observer.watch('keypath', listener)，属于异步监听，它只关心是否变了，而不关心是否是立即触发的\n */\nexport default class Observer implements ObserverInterface {\n\n  data: Record<string, any>\n\n  context: any\n\n  nextTask: NextTask\n\n  computed?: Record<string, Computed>\n\n  reversedComputedKeys?: string[]\n\n  syncEmitter: Emitter\n\n  asyncEmitter: Emitter\n\n  asyncChanges: Record<string, AsyncChange>\n\n  pending?: boolean\n\n  constructor(data?: Object, context?: any) {\n\n    const instance = this\n\n    instance.data = data || {}\n    instance.context = context || instance\n    instance.nextTask = new NextTask()\n\n    instance.syncEmitter = new Emitter()\n    instance.asyncEmitter = new Emitter()\n    instance.asyncChanges = {}\n\n  }\n\n  /**\n   * 获取数据\n   *\n   * @param keypath\n   * @param defaultValue\n   * @param depIgnore\n   * @return\n   */\n  get(\n    keypath: string,\n    defaultValue?: any,\n    depIgnore?: boolean\n  ): any {\n\n    const instance = this,\n\n    currentComputed = Computed.current,\n\n    { data, computed, reversedComputedKeys } = instance\n\n    // 传入 '' 获取整个 data\n    if (keypath === env.EMPTY_STRING) {\n      return data\n    }\n\n    // 调用 get 时，外面想要获取依赖必须设置是谁在收集依赖\n    // 如果没设置，则跳过依赖收集\n    if (currentComputed && !depIgnore) {\n      currentComputed.add(keypath)\n    }\n\n    let result: ValueHolder | void, target: Computed | void\n\n    if (computed) {\n      target = computed[keypath]\n      if (target) {\n        return target.get()\n      }\n      if (reversedComputedKeys) {\n        const match = matchBest(reversedComputedKeys, keypath)\n        if (match && match.prop) {\n          result = object.get(\n            computed[match.name].get(),\n            match.prop\n          )\n        }\n      }\n    }\n\n    if (!result) {\n      result = object.get(data, keypath)\n    }\n\n    return result ? result.value : defaultValue\n\n  }\n\n  /**\n   * 更新数据\n   *\n   * @param keypath\n   * @param value\n   */\n  set(\n    keypath: string | Record<string, any>,\n    value?: any\n  ) {\n\n    const instance = this,\n\n    { data, computed, reversedComputedKeys } = instance,\n\n    setValue = function (newValue: any, keypath: string) {\n\n      const oldValue = instance.get(keypath)\n      if (newValue === oldValue) {\n        return\n      }\n\n      let target: Computed | void\n\n      if (computed) {\n        target = computed[keypath]\n        if (target) {\n          target.set(newValue)\n        }\n        if (reversedComputedKeys) {\n          const match = matchBest(reversedComputedKeys, keypath)\n          if (match && match.prop) {\n            target = computed[match.name]\n            if (target) {\n              const targetValue = target.get()\n              if (is.object(targetValue) || is.array(targetValue)) {\n                object.set(targetValue, match.prop, newValue)\n              }\n            }\n          }\n        }\n      }\n\n      if (!target) {\n        object.set(data, keypath, newValue)\n      }\n\n      instance.diff(keypath, newValue, oldValue)\n\n    }\n\n    if (is.string(keypath)) {\n      setValue(value, keypath as string)\n    }\n    else if (is.object(keypath)) {\n      object.each(keypath, setValue)\n    }\n\n  }\n\n  /**\n   * 同步调用的 diff，用于触发 syncEmitter，以及唤醒 asyncEmitter\n   *\n   * @param keypath\n   * @param newValue\n   * @param oldValue\n   */\n  diff(\n    keypath: string,\n    newValue: any,\n    oldValue: any\n  ): void {\n\n    const instance = this,\n\n    { syncEmitter, asyncEmitter, asyncChanges } = instance,\n\n    /**\n     * 我们认为 $ 开头的变量是不可递归的\n     * 比如浏览器中常见的 $0 表示当前选中元素\n     * DOM 元素是不能递归的\n     */\n    isRecursive = string.codeAt(keypath) !== 36\n\n    diffWatcher(\n      keypath, newValue, oldValue,\n      syncEmitter.listeners, isRecursive,\n      function (watchKeypath: string, keypath: string, newValue: any, oldValue: any) {\n        syncEmitter.fire(watchKeypath, [newValue, oldValue, keypath])\n      }\n    )\n\n    /**\n     * 此处有坑，举个例子\n     *\n     * observer.watch('a', function () {})\n     *\n     * observer.set('a', 1)\n     *\n     * observer.watch('a', function () {})\n     *\n     * 这里，第一个 watcher 应该触发，但第二个不应该，因为它绑定监听时，值已经是最新的了\n     */\n\n    diffWatcher(\n      keypath, newValue, oldValue,\n      asyncEmitter.listeners, isRecursive,\n      function (watchKeypath: string, keypath: string, newValue: any, oldValue: any) {\n\n        array.each(\n          asyncEmitter.listeners[watchKeypath],\n          function (item: EmitterOptions) {\n            (item.count as number)++\n          }\n        )\n\n        const { keypaths } = asyncChanges[keypath] || (asyncChanges[keypath] = { value: oldValue, keypaths: [] })\n        if (!array.has(keypaths, watchKeypath)) {\n          array.push(keypaths, watchKeypath)\n        }\n\n        if (!instance.pending) {\n          instance.pending = env.TRUE\n          instance.nextTask.append(\n            function () {\n              if (instance.pending) {\n                instance.pending = env.UNDEFINED\n                instance.diffAsync()\n              }\n            }\n          )\n        }\n      }\n    )\n\n  }\n\n  /**\n   * 异步触发的 diff\n   */\n  diffAsync(): void {\n\n    const instance = this,\n\n    { asyncEmitter, asyncChanges } = instance\n\n    instance.asyncChanges = {}\n\n    object.each(\n      asyncChanges,\n      function (change: AsyncChange, keypath: string) {\n\n        const args = [instance.get(keypath), change.value, keypath]\n\n        // 不能在这判断新旧值是否相同，相同就不 fire\n        // 因为前面标记了 count，在这中断会导致 count 无法清除\n\n        array.each(\n          change.keypaths,\n          function (watchKeypath: string) {\n            asyncEmitter.fire(watchKeypath, args, filterWatcher)\n          }\n        )\n\n      }\n    )\n\n  }\n\n  /**\n   * 添加计算属性\n   *\n   * @param keypath\n   * @param computed\n   */\n  addComputed(\n    keypath: string,\n    options: type.computedGetter | ComputedOptions\n  ): Computed | void {\n\n    const instance = this,\n    computed = Computed.build(keypath, instance, options)\n\n    if (computed) {\n\n      if (!instance.computed) {\n        instance.computed = {}\n      }\n\n      instance.computed[keypath] = computed\n      instance.reversedComputedKeys = object.sort(instance.computed, env.TRUE)\n\n      return computed\n\n    }\n\n  }\n\n  /**\n   * 移除计算属性\n   *\n   * @param keypath\n   */\n  removeComputed(\n    keypath: string\n  ): void {\n\n    const instance = this,\n    { computed } = instance\n\n    if (computed && object.has(computed, keypath)) {\n      delete computed[keypath]\n      instance.reversedComputedKeys = object.sort(computed, env.TRUE)\n    }\n\n  }\n\n  /**\n   * 监听数据变化\n   *\n   * @param keypath\n   * @param watcher\n   * @param immediate\n   */\n  watch(\n    keypath: string | Record<string, type.watcher | WatcherOptions>,\n    watcher?: type.watcher | WatcherOptions,\n    immediate?: boolean\n  ) {\n\n    const instance = this,\n\n    { context, syncEmitter, asyncEmitter } = instance,\n\n    bind = function (keypath: string, options: WatcherOptions) {\n\n      const emitter = options.sync ? syncEmitter : asyncEmitter,\n\n      // formatWatcherOptions 保证了 options.watcher 一定存在\n      listener: EmitterOptions = {\n        fn: options.watcher,\n        ctx: context,\n        count: 0,\n      }\n\n      if (options.once) {\n        listener.max = 1\n      }\n      emitter.on(keypath, listener)\n\n      if (options.immediate) {\n        execute(\n          options.watcher,\n          context,\n          [\n            instance.get(keypath),\n            env.UNDEFINED,\n            keypath\n          ]\n        )\n      }\n\n    }\n\n    if (is.string(keypath)) {\n      bind(\n        keypath as string,\n        formatWatcherOptions(watcher, immediate) as WatcherOptions\n      )\n      return\n    }\n\n    object.each(\n      keypath,\n      function (options: type.watcher | WatcherOptions, keypath: string) {\n        bind(keypath, formatWatcherOptions(options) as WatcherOptions)\n      }\n    )\n\n  }\n\n  /**\n   * 取消监听数据变化\n   *\n   * @param keypath\n   * @param watcher\n   */\n  unwatch(\n    keypath: string,\n    watcher?: type.watcher\n  ) {\n    this.syncEmitter.off(keypath, watcher)\n    this.asyncEmitter.off(keypath, watcher)\n  }\n\n  /**\n   * 取反 keypath 对应的数据\n   *\n   * 不管 keypath 对应的数据是什么类型，操作后都是布尔型\n   *\n   * @param keypath\n   * @return 取反后的布尔值\n   */\n  toggle(keypath: string): boolean {\n    const value = !this.get(keypath)\n    this.set(keypath, value)\n    return value\n  }\n\n  /**\n   * 递增 keypath 对应的数据\n   *\n   * 注意，最好是整型的加法，如果涉及浮点型，不保证计算正确\n   *\n   * @param keypath 值必须能转型成数字，如果不能，则默认从 0 开始递增\n   * @param step 步进值，默认是 1\n   * @param max 可以递增到的最大值，默认不限制\n   */\n  increase(keypath: string, step?: number, max?: number): number | void {\n    const value = toNumber(this.get(keypath), 0) + (step || 1)\n    if (!is.number(max) || value <= (max as number)) {\n      this.set(keypath, value)\n      return value\n    }\n  }\n\n  /**\n   * 递减 keypath 对应的数据\n   *\n   * 注意，最好是整型的减法，如果涉及浮点型，不保证计算正确\n   *\n   * @param keypath 值必须能转型成数字，如果不能，则默认从 0 开始递减\n   * @param step 步进值，默认是 1\n   * @param min 可以递减到的最小值，默认不限制\n   */\n  decrease(keypath: string, step?: number, min?: number): number | void {\n    const value = toNumber(this.get(keypath), 0) - (step || 1)\n    if (!is.number(min) || value >= (min as number)) {\n      this.set(keypath, value)\n      return value\n    }\n  }\n\n  /**\n   * 在数组指定位置插入元素\n   *\n   * @param keypath\n   * @param item\n   * @param index\n   */\n  insert(keypath: string, item: any, index: number | boolean): boolean | void {\n\n    let list = this.get(keypath)\n    list = !is.array(list) ? [] : object.copy(list)\n\n    const { length } = list\n    if (index === env.TRUE || index === length) {\n      list.push(item)\n    }\n    else if (index === env.FALSE || index === 0) {\n      list.unshift(item)\n    }\n    else if (index > 0 && index < length) {\n      list.splice(index, 0, item)\n    }\n    else {\n      return\n    }\n\n    this.set(keypath, list)\n\n    return env.TRUE\n\n  }\n\n  /**\n   * 在数组尾部添加元素\n   *\n   * @param keypath\n   * @param item\n   */\n  append(keypath: string, item: any): boolean | void {\n    return this.insert(keypath, item, env.TRUE)\n  }\n\n  /**\n   * 在数组首部添加元素\n   *\n   * @param keypath\n   * @param item\n   */\n  prepend(keypath: string, item: any): boolean | void {\n    return this.insert(keypath, item, env.FALSE)\n  }\n\n  /**\n   * 通过索引移除数组中的元素\n   *\n   * @param keypath\n   * @param index\n   */\n  removeAt(keypath: string, index: number): boolean | void {\n    let list = this.get(keypath)\n    if (is.array(list)\n      && index >= 0\n      && index < list.length\n    ) {\n      list = object.copy(list)\n      list.splice(index, 1)\n      this.set(keypath, list)\n      return env.TRUE\n    }\n  }\n\n  /**\n   * 直接移除数组中的元素\n   *\n   * @param keypath\n   * @param item\n   */\n  remove(keypath: string, item: any): boolean | void {\n    let list = this.get(keypath)\n    if (is.array(list)) {\n      list = object.copy(list)\n      if (array.remove(list, item)) {\n        this.set(keypath, list)\n        return env.TRUE\n      }\n    }\n  }\n\n  /**\n   * 拷贝任意数据，支持深拷贝\n   *\n   * @param data\n   * @param deep\n   */\n  copy<T>(data: T, deep?: boolean): T {\n    return object.copy(data, deep)\n  }\n\n  /**\n   * 销毁\n   */\n  destroy() {\n    const instance = this\n    instance.syncEmitter.off()\n    instance.asyncEmitter.off()\n    instance.nextTask.clear()\n    object.clear(instance)\n  }\n\n}\n","import * as config from 'yox-config/index'\n\nimport isDef from 'yox-common/src/function/isDef'\nimport execute from 'yox-common/src/function/execute'\n\nimport * as env from 'yox-common/src/util/env'\nimport * as array from 'yox-common/src/util/array'\nimport * as string from 'yox-common/src/util/string'\nimport * as object from 'yox-common/src/util/object'\nimport * as logger from 'yox-common/src/util/logger'\n\nimport Emitter from 'yox-common/src/util/Emitter'\nimport CustomEvent from 'yox-common/src/util/CustomEvent'\n\nimport API from 'yox-type/src/API'\nimport SpecialEvent from 'yox-type/src/SpecialEvent'\n\nimport * as signature from 'yox-type/index'\n\nlet doc = env.doc,\n\n// 这里先写 IE9 支持的接口\ninnerText = 'textContent',\n\ninnerHTML = 'innerHTML',\n\nfindElement = function (selector: string): Element | void {\n  const node = (doc as Document).querySelector(selector)\n  if (node) {\n    return node\n  }\n},\n\naddEventListener = function (node: HTMLElement, type: string, listener: (event: Event) => void) {\n  node.addEventListener(type, listener, env.FALSE)\n},\n\nremoveEventListener = function (node: HTMLElement, type: string, listener: (event: Event) => void) {\n  node.removeEventListener(type, listener, env.FALSE)\n},\n\n// IE9 不支持 classList\naddClass = function (node: HTMLElement, className: string) {\n  node.classList.add(className)\n},\n\nremoveClass = function (node: HTMLElement, className: string) {\n  node.classList.remove(className)\n},\n\ncreateEvent = function (event: any, node: HTMLElement): any {\n  return event\n}\n\nif (doc) {\n\n  // 此时 doc.body 不一定有值，比如 script 放在 head 里\n  if (!doc.documentElement.classList) {\n    addClass = function (node: HTMLElement, className: string) {\n      const classes = node.className.split(CHAR_WHITESPACE)\n      if (!array.has(classes, className)) {\n        array.push(classes, className)\n        node.className = array.join(classes, CHAR_WHITESPACE)\n      }\n    }\n    removeClass = function (node: HTMLElement, className: string) {\n      const classes = node.className.split(CHAR_WHITESPACE)\n      if (array.remove(classes, className)) {\n        node.className = array.join(classes, CHAR_WHITESPACE)\n      }\n    }\n  }\n\n  // 为 IE9 以下浏览器打补丁\n  if (process.env.NODE_LEGACY) {\n\n    if (!doc.addEventListener) {\n\n      const PROPERTY_CHANGE = 'propertychange'\n\n      addEventListener = function (node: any, type: string, listener: (event: Event) => void) {\n        if (type === env.EVENT_INPUT) {\n          addEventListener(\n            node,\n            PROPERTY_CHANGE,\n            // 借用 EMITTER，反正只是内部临时用一下...\n            listener[EMITTER] = function (event: any) {\n              if (event.propertyName === env.RAW_VALUE) {\n                event = new CustomEvent(event)\n                event.type = env.EVENT_INPUT\n                execute(listener, this, event)\n              }\n            }\n          )\n        }\n        else if (type === env.EVENT_CHANGE && isBoxElement(node)) {\n          addEventListener(\n            node,\n            env.EVENT_CLICK,\n            listener[EMITTER] = function (event: any) {\n              event = new CustomEvent(event)\n              event.type = env.EVENT_CHANGE\n              execute(listener, this, event)\n            }\n          )\n        }\n        else {\n          node.attachEvent(`on${type}`, listener)\n        }\n      }\n\n      removeEventListener = function (node: any, type: string, listener: (event: Event) => void) {\n        if (type === env.EVENT_INPUT) {\n          removeEventListener(node, PROPERTY_CHANGE, listener[EMITTER])\n          delete listener[EMITTER]\n        }\n        else if (type === env.EVENT_CHANGE && isBoxElement(node)) {\n          removeEventListener(node, env.EVENT_CLICK, listener[EMITTER])\n          delete listener[EMITTER]\n        }\n        else {\n          node.detachEvent(`on${type}`, listener)\n        }\n      }\n\n      function isBoxElement(node: HTMLInputElement) {\n        return node.tagName === 'INPUT'\n          && (node.type === 'radio' || node.type === 'checkbox')\n      }\n\n      class IEEvent {\n\n        currentTarget: HTMLElement\n\n        target: HTMLElement | EventTarget\n\n        originalEvent: Event\n\n        constructor(event: Event, element: HTMLElement) {\n\n          object.extend(this, event)\n\n          this.currentTarget = element\n          this.target = event.srcElement || element\n          this.originalEvent = event\n\n        }\n\n        preventDefault() {\n          this.originalEvent.returnValue = env.FALSE\n        }\n\n        stopPropagation() {\n          this.originalEvent.cancelBubble = env.TRUE\n        }\n\n      }\n\n      // textContent 不兼容 IE 678\n      innerText = 'innerText'\n\n      createEvent = function (event, element) {\n        return new IEEvent(event, element)\n      }\n\n      findElement = function (selector: string): Element | void {\n        // 去掉 #\n        if (string.codeAt(selector, 0) === 35) {\n          selector = string.slice(selector, 1)\n        }\n        else if (process.env.NODE_ENV === 'dev') {\n          logger.fatal(`legacy 版本选择器只支持 #id 格式`)\n        }\n        const node = (doc as Document).getElementById(selector)\n        if (node) {\n          return node\n        }\n      }\n\n    }\n\n  }\n\n}\n\nconst CHAR_WHITESPACE = ' ',\n\n/**\n * 绑定在 HTML 元素上的事件发射器\n */\nEMITTER = '$emitter',\n\n/**\n * 低版本 IE 上 style 标签的专有属性\n */\nSTYLE_SHEET = 'styleSheet',\n\n/**\n * 跟输入事件配套使用的事件\n */\nCOMPOSITION_START = 'compositionstart',\n\n/**\n * 跟输入事件配套使用的事件\n */\nCOMPOSITION_END = 'compositionend',\n\ndomain = 'http://www.w3.org/',\n\nnamespaces = {\n  svg: domain + '2000/svg',\n  // xml: domain + 'XML/1998/namespace',\n  // xlink: domain + '1999/xlink',\n},\n\nspecialEvents: Record<string, SpecialEvent> = {},\n\ndomApi: API = {\n\n  createElement(tag: string, isSvg?: boolean): Element {\n    return isSvg\n      ? (doc as Document).createElementNS(namespaces.svg, tag)\n      : (doc as Document).createElement(tag)\n  },\n\n  createText(text: string): Text {\n    return (doc as Document).createTextNode(text)\n  },\n\n  createComment(text: string): Comment {\n    return (doc as Document).createComment(text)\n  },\n\n  prop(node: HTMLElement, name: string, value?: string | number | boolean): string | number | boolean | void {\n    if (isDef(value)) {\n      object.set(node, name, value, env.FALSE)\n    }\n    else {\n      const holder = object.get(node, name)\n      if (holder) {\n        return holder.value\n      }\n    }\n  },\n\n  removeProp(node: HTMLElement, name: string, hint?: number): void {\n    object.set(\n      node,\n      name,\n      hint === config.HINT_BOOLEAN\n        ? env.FALSE\n        : env.EMPTY_STRING,\n      env.FALSE\n    )\n  },\n\n  attr(node: HTMLElement, name: string, value?: string): string | void {\n    if (isDef(value)) {\n      node.setAttribute(name, value as string)\n    }\n    else {\n      // value 还可能是 null\n      const value = node.getAttribute(name)\n      if (value != env.NULL) {\n        return value\n      }\n    }\n  },\n\n  removeAttr(node: HTMLElement, name: string): void {\n    node.removeAttribute(name)\n  },\n\n  before(parentNode: Node, node: Node, referenceNode: Node): void {\n    parentNode.insertBefore(node, referenceNode)\n  },\n\n  append(parentNode: Node, node: Node): void {\n    parentNode.appendChild(node)\n  },\n\n  replace(parentNode: Node, node: Node, oldNode: Node): void {\n    parentNode.replaceChild(node, oldNode)\n  },\n\n  remove(parentNode: Node, node: Node): void {\n    parentNode.removeChild(node)\n  },\n\n  parent(node: Node): Node | void {\n    const { parentNode } = node\n    if (parentNode) {\n      return parentNode\n    }\n  },\n\n  next(node: Node): Node | void {\n    const { nextSibling } = node\n    if (nextSibling) {\n      return nextSibling\n    }\n  },\n\n  find: findElement,\n\n  tag(node: Node): string | void {\n    if (node.nodeType === 1) {\n      return (node as HTMLElement).tagName.toLowerCase()\n    }\n  },\n\n  text(node: Node, text?: string, isStyle?: boolean): string | void {\n    if (isDef(text)) {\n      if (process.env.NODE_LEGACY) {\n        if (isStyle && object.has(node, STYLE_SHEET)) {\n          node[STYLE_SHEET].cssText = text\n        }\n        else {\n          node[innerText] = text as string\n        }\n      }\n      else {\n        node[innerText] = text as string\n      }\n    }\n    else {\n      return node[innerText]\n    }\n  },\n\n  html(node: Element, html?: string, isStyle?: boolean): string | void {\n    if (isDef(html)) {\n      if (process.env.NODE_LEGACY) {\n        if (isStyle && object.has(node, STYLE_SHEET)) {\n          node[STYLE_SHEET].cssText = html\n        }\n        else {\n          node[innerHTML] = html as string\n        }\n      }\n      else {\n        node[innerHTML] = html as string\n      }\n    }\n    else {\n      return node[innerHTML]\n    }\n  },\n\n  addClass,\n\n  removeClass,\n\n  on(node: HTMLElement, type: string, listener: signature.nativeEventListener, context?: any): void {\n\n    const emitter: Emitter = node[EMITTER] || (node[EMITTER] = new Emitter()),\n\n    nativeListeners = emitter.nativeListeners || (emitter.nativeListeners = {})\n\n    // 一个元素，相同的事件，只注册一个 native listener\n    if (!nativeListeners[type]) {\n\n      // 特殊事件\n      const special = specialEvents[type],\n\n      // 唯一的原生监听器\n      nativeListener = function (event: Event | CustomEvent) {\n        emitter.fire(\n          event instanceof CustomEvent\n            ? event\n            : new CustomEvent(event.type, createEvent(event, node))\n        )\n      }\n\n      nativeListeners[type] = nativeListener\n\n      if (special) {\n        special.on(node, nativeListener)\n      }\n      else {\n        addEventListener(node, type, nativeListener)\n      }\n\n    }\n\n    emitter.on(\n      type,\n      {\n        fn: listener,\n        ctx: context,\n      }\n    )\n  },\n\n  off(node: HTMLElement, type: string, listener: signature.nativeEventListener): void {\n\n    const emitter: Emitter = node[EMITTER],\n\n    { listeners, nativeListeners } = emitter\n\n    // emitter 会根据 type 和 listener 参数进行适当的删除\n    emitter.off(type, listener)\n\n    // 如果注册的 type 事件都解绑了，则去掉原生监听器\n    if (nativeListeners && !emitter.has(type)) {\n\n      const special = specialEvents[type],\n\n      nativeListener = nativeListeners[type]\n\n      if (special) {\n        special.off(node, nativeListener)\n      }\n      else {\n        removeEventListener(node, type, nativeListener)\n      }\n\n      delete nativeListeners[type]\n\n    }\n\n    if (object.falsy(listeners)) {\n      node[EMITTER] = env.UNDEFINED\n    }\n\n  },\n\n  specialEvents\n\n}\n\nspecialEvents[env.EVENT_MODEL] = {\n  on(node: HTMLElement, listener: signature.nativeEventListener) {\n    let locked = env.FALSE\n    domApi.on(node, COMPOSITION_START, listener[COMPOSITION_START] = function () {\n      locked = env.TRUE\n    })\n    domApi.on(node, COMPOSITION_END, listener[COMPOSITION_END] = function (event: Event | CustomEvent) {\n      locked = env.FALSE\n      listener(\n        new CustomEvent(env.EVENT_MODEL, event)\n      )\n    })\n    addEventListener(node, env.EVENT_INPUT, listener[env.EVENT_INPUT] = function (event: Event | CustomEvent) {\n      if (!locked) {\n        listener(\n          new CustomEvent(env.EVENT_MODEL, event)\n        )\n      }\n    })\n  },\n  off(node: HTMLElement, listener: signature.nativeEventListener) {\n    domApi.off(node, COMPOSITION_START, listener[COMPOSITION_START])\n    domApi.off(node, COMPOSITION_END, listener[COMPOSITION_END])\n    removeEventListener(node, env.EVENT_INPUT, listener[env.EVENT_INPUT])\n    listener[COMPOSITION_START] =\n    listener[COMPOSITION_END] =\n    listener[env.EVENT_INPUT] = env.UNDEFINED\n  }\n}\n\nexport default domApi","import execute from './execute'\n\nimport * as env from '../util/env'\nimport * as array from '../util/array'\n\n/**\n * 节流调用\n *\n * @param fn 需要节制调用的函数\n * @param delay 调用的时间间隔，单位毫秒\n * @param immediate 是否立即触发\n * @return 节流函数\n */\nexport default function (fn: Function, delay: number, immediate?: boolean) {\n\n  let timer: any\n\n  return function () {\n\n    if (!timer) {\n\n      const args = array.toArray(arguments)\n      if (immediate) {\n        execute(fn, env.UNDEFINED, args)\n      }\n\n      timer = setTimeout(\n        function () {\n          timer = env.UNDEFINED\n          if (!immediate) {\n            execute(fn, env.UNDEFINED, args)\n          }\n        },\n        delay\n      )\n\n    }\n\n  }\n}\n","import execute from 'yox-common/src/function/execute'\nimport debounce from 'yox-common/src/function/debounce'\n\nimport * as env from 'yox-common/src/util/env'\nimport * as array from 'yox-common/src/util/array'\n\nimport api from 'yox-dom/index'\n\nimport VNode from 'yox-type/src/vnode/VNode'\nimport Directive from 'yox-type/src/vnode/Directive'\nimport DirectiveHooks from 'yox-type/src/hooks/Directive'\nimport Yox from 'yox-type/src/Yox'\nimport * as type from 'yox-type/index'\n\n// 避免连续多次点击，主要用于提交表单场景\n// 移动端的 tap 事件可自行在业务层打补丁实现\nconst immediateTypes = array.toObject([env.EVENT_CLICK, env.EVENT_TAP]),\n\ndirective: DirectiveHooks = {\n  bind(node: HTMLElement | Yox, directive: Directive, vnode: VNode) {\n\n    let { name, handler } = directive,\n\n    lazy = vnode.lazy[name] || vnode.lazy[env.EMPTY_STRING]\n\n    if (!handler) {\n      return\n    }\n\n    if (lazy) {\n      // 编译模板时能保证不是 true 就是大于 0 数字\n      if (lazy === env.TRUE) {\n        name = env.EVENT_CHANGE\n      }\n      else {\n        handler = debounce(\n          handler,\n          lazy,\n          immediateTypes[name]\n        )\n      }\n    }\n\n    if (vnode.isComponent) {\n\n      const component = node as Yox\n\n      component.on(name, handler)\n      vnode.data[directive.key] = function () {\n        component.off(name, handler as type.eventListener)\n      }\n\n    }\n    else {\n\n      const el = node as HTMLElement\n\n      api.on(el, name, handler)\n      vnode.data[directive.key] = function () {\n        api.off(el, name, handler as type.eventListener)\n      }\n\n    }\n\n  },\n\n  unbind(node: HTMLElement | Yox, directive: Directive, vnode: VNode) {\n    execute(vnode.data[directive.key])\n  }\n}\n\nexport default directive\n","import isDef from 'yox-common/src/function/isDef'\nimport debounce from 'yox-common/src/function/debounce'\nimport execute from 'yox-common/src/function/execute'\nimport toString from 'yox-common/src/function/toString'\n\nimport * as is from 'yox-common/src/util/is'\nimport * as env from 'yox-common/src/util/env'\nimport * as array from 'yox-common/src/util/array'\n\nimport * as config from 'yox-config/index'\nimport api from 'yox-dom/index'\n\nimport * as signature from 'yox-type/index'\nimport Yox from 'yox-type/src/Yox'\nimport VNode from 'yox-type/src/vnode/VNode'\nimport Directive from 'yox-type/src/vnode/Directive'\nimport DirectiveHooks from 'yox-type/src/hooks/Directive'\n\ninterface Control {\n\n  set(node: HTMLElement | Yox, keypath: string, context: Yox): void\n\n  sync(node: HTMLElement | Yox, keypath: string, context: Yox): void\n\n  name: string\n\n}\n\nfunction getOptionValue(option: HTMLOptionElement) {\n  return isDef(option.value)\n    ? option.value\n    : option.text\n}\n\nconst inputControl: Control = {\n  set(input: HTMLInputElement, value: any) {\n    input.value = toString(value)\n  },\n  sync(input: HTMLInputElement, keypath: string, context: Yox) {\n    context.set(keypath, input.value)\n  },\n  name: env.RAW_VALUE\n},\n\nselectControl: Control = {\n  set(select: HTMLSelectElement, value: any) {\n    array.each(\n      array.toArray(select.options),\n      select.multiple\n        ? function (option: HTMLOptionElement) {\n          option.selected = array.has(value, getOptionValue(option), env.FALSE)\n        }\n        : function (option: HTMLOptionElement, index: number) {\n          if (getOptionValue(option) == value) {\n            select.selectedIndex = index\n            return env.FALSE\n          }\n        }\n    )\n  },\n  sync(select: HTMLSelectElement, keypath: string, context: Yox) {\n    const options = array.toArray(select.options)\n    if (select.multiple) {\n      const values = []\n      array.each(\n        options,\n        function (option: HTMLOptionElement) {\n          if (option.selected) {\n            array.push(\n              values,\n              getOptionValue(option)\n            )\n          }\n        }\n      )\n      // 如果新旧值都是 []，set 没有意义\n      if (!array.falsy(values) || !array.falsy(context.get(keypath))) {\n        context.set(keypath, values)\n      }\n    }\n    else {\n      context.set(\n        keypath,\n        getOptionValue(\n          options[select.selectedIndex]\n        )\n      )\n    }\n  },\n  name: env.RAW_VALUE\n},\n\nradioControl: Control = {\n  set(radio: HTMLInputElement, value: any) {\n    radio.checked = radio.value === toString(value)\n  },\n  sync(radio: HTMLInputElement, keypath: string, context: Yox) {\n    if (radio.checked) {\n      context.set(keypath, radio.value)\n    }\n  },\n  name: 'checked'\n},\n\ncheckboxControl: Control = {\n  set(checkbox: HTMLInputElement, value: any) {\n    checkbox.checked = is.array(value)\n      ? array.has(value, checkbox.value, env.FALSE)\n      : (is.boolean(value) ? value : !!value)\n  },\n  sync(checkbox: HTMLInputElement, keypath: string, context: Yox) {\n    const value = context.get(keypath)\n    if (is.array(value)) {\n      if (checkbox.checked) {\n        context.append(keypath, checkbox.value)\n      }\n      else {\n        context.removeAt(\n          keypath,\n          array.indexOf(value, checkbox.value, env.FALSE)\n        )\n      }\n    }\n    else {\n      context.set(keypath, checkbox.checked)\n    }\n  },\n  name: 'checked'\n},\n\nspecialControls = {\n  radio: radioControl,\n  checkbox: checkboxControl,\n  select: selectControl,\n},\n\ndirective: DirectiveHooks = {\n  bind(node: HTMLElement | Yox, directive: Directive, vnode: VNode) {\n\n    let { context, model } = vnode,\n\n    dataBinding = directive.binding as string,\n\n    viewBinding: string,\n\n    eventName: string,\n\n    lazy = vnode.lazy[config.DIRECTIVE_MODEL] || vnode.lazy[env.EMPTY_STRING],\n\n    set: signature.watcher,\n\n    sync: signature.watcher,\n\n    component: Yox,\n\n    element: HTMLElement\n\n    if (vnode.isComponent) {\n\n      component = node as Yox\n\n      viewBinding = component.$options.model || env.RAW_VALUE\n\n      set = function (newValue: any) {\n        component.set(viewBinding, newValue)\n      }\n\n      sync = function (newValue: any) {\n        context.set(dataBinding, newValue)\n      }\n\n      // 不管模板是否设值，统一用数据中的值\n      component.set(viewBinding, model)\n\n    }\n    else {\n\n      element = node as HTMLElement\n\n      let control = specialControls[element[env.RAW_TYPE]] || specialControls[api.tag(element) as string]\n\n      // checkbox,radio,select 监听的是 change 事件\n      eventName = env.EVENT_CHANGE\n\n      // 如果是输入框，则切换成 model 事件\n      // model 事件是个 yox-dom 实现的特殊事件\n      // 不会在输入法组合文字过程中得到触发事件\n      if (!control) {\n        control = inputControl\n        if (lazy !== env.TRUE) {\n          eventName = env.EVENT_MODEL\n        }\n      }\n\n      set = function (newValue: any) {\n        control.set(element, newValue)\n      }\n\n      sync = function () {\n        control.sync(element, dataBinding, context)\n      }\n\n      // 不管模板是否设值，统一用数据中的值\n      control.set(element, model)\n\n    }\n\n    // 应用 lazy\n    if (lazy && lazy !== env.TRUE) {\n      sync = debounce(sync, lazy)\n    }\n\n    // 监听交互，修改数据\n    if (component) {\n      component.watch(viewBinding, sync)\n    }\n    else {\n      api.on(element, eventName, sync as signature.nativeEventListener)\n    }\n\n    // 监听数据，修改界面\n    context.watch(dataBinding, set)\n\n    vnode.data[directive.key] = function () {\n      if (component) {\n        component.unwatch(viewBinding, sync)\n      }\n      else {\n        api.off(element, eventName, sync as signature.nativeEventListener)\n      }\n      context.unwatch(dataBinding, set)\n    }\n\n  },\n\n  unbind(node: HTMLElement | Yox, directive: Directive, vnode: VNode) {\n    execute(vnode.data[directive.key])\n  }\n}\n\nexport default directive\n","import isDef from 'yox-common/src/function/isDef'\nimport execute from 'yox-common/src/function/execute'\n\nimport * as keypathUtil from 'yox-common/src/util/keypath'\n\nimport VNode from 'yox-type/src/vnode/VNode'\nimport Directive from 'yox-type/src/vnode/Directive'\nimport DirectiveHooks from 'yox-type/src/hooks/Directive'\nimport Yox from 'yox-type/src/Yox'\n\nimport api from 'yox-dom/index'\n\nconst directive: DirectiveHooks = {\n\n  bind(node: HTMLElement | Yox, directive: Directive, vnode: VNode) {\n\n    // binding 可能是模糊匹配\n    // 比如延展属性 {{...obj}}，这里 binding 会是 `obj.*`\n    const { binding } = directive\n\n    if (binding) {\n\n      const isFuzzy = keypathUtil.isFuzzy(binding),\n\n      watcher = function (newValue: any, oldValue: any, keypath: string) {\n\n        const name = isFuzzy\n          ? keypathUtil.matchFuzzy(keypath, binding) as string\n          : directive.name\n\n        if (vnode.isComponent) {\n          (node as Yox).set(name, newValue)\n        }\n        else if (isDef(directive.hint)) {\n          api.prop(node as HTMLElement, name, newValue)\n        }\n        else {\n          api.attr(node as HTMLElement, name, newValue)\n        }\n\n      }\n\n      vnode.context.watch(binding, watcher)\n\n      vnode.data[directive.key] = function () {\n        vnode.context.unwatch(binding, watcher)\n      }\n\n    }\n\n  },\n\n  unbind(node: HTMLElement | Yox, directive: Directive, vnode: VNode) {\n    execute(vnode.data[directive.key])\n  }\n\n}\n\nexport default directive\n","import * as config from 'yox-config/index'\n\nimport isDef from 'yox-common/src/function/isDef'\n\n/**\n * 组件是否存在某个 slot\n *\n * @param name\n */\nexport default function (name: string): boolean {\n  return isDef(this.get(config.SLOT_DATA_PREFIX + name))\n}\n","import isDef from 'yox-common/src/function/isDef'\nimport execute from 'yox-common/src/function/execute'\n\nimport CustomEvent from 'yox-common/src/util/CustomEvent'\nimport Emitter from 'yox-common/src/util/Emitter'\nimport NextTask from 'yox-common/src/util/NextTask'\n\nimport * as is from 'yox-common/src/util/is'\nimport * as env from 'yox-common/src/util/env'\nimport * as array from 'yox-common/src/util/array'\nimport * as string from 'yox-common/src/util/string'\nimport * as object from 'yox-common/src/util/object'\nimport * as logger from 'yox-common/src/util/logger'\n\nimport * as config from 'yox-config/index'\nimport * as snabbdom from 'yox-snabbdom/index'\n\nimport * as templateCompiler from 'yox-template-compiler/src/compiler'\nimport * as templateStringify from 'yox-template-compiler/src/stringify'\nimport * as templateRender from 'yox-template-compiler/src/renderer'\nimport VNode from 'yox-type/src/vnode/VNode'\nimport YoxInterface from 'yox-type/src/Yox'\nimport YoxOptions from 'yox-type/src/options/Yox'\nimport YoxPlugin from 'yox-type/src/YoxPlugin'\nimport ComputedOptions from 'yox-type/src/options/Computed'\nimport WatcherOptions from 'yox-type/src/options/Watcher'\nimport DirectiveHooks from 'yox-type/src/hooks/Directive'\nimport TransitionHooks from 'yox-type/src/hooks/Transition'\nimport PropRule from 'yox-type/src/PropRule'\nimport * as signature from 'yox-type/index'\n\nimport Computed from 'yox-observer/src/Computed'\nimport Observer from 'yox-observer/src/Observer'\n\nimport domApi from 'yox-dom/index'\n\nimport event from './directive/event'\nimport model from './directive/model'\nimport binding from './directive/binding'\nimport hasSlot from './filter/hasSlot'\n\nconst globalDirectives = {},\n\nglobalTransitions = {},\n\nglobalComponents = {},\n\nglobalPartials = {},\n\nglobalFilters = {},\n\nTEMPLATE_COMPUTED = '$' + env.RAW_TEMPLATE,\n\nselectorPattern = /^[#.][-\\w+]+$/\n\nexport default class Yox implements YoxInterface {\n\n  $options: YoxOptions\n\n  $observer: Observer\n\n  $emitter: Emitter\n\n  $template?: Function\n\n  $refs: Record<string, YoxInterface | HTMLElement>\n\n  $parent?: YoxInterface\n\n  $children?: YoxInterface[]\n\n  $vnode: VNode | undefined\n\n  $el?: HTMLElement\n\n  $directives?: Record<string, DirectiveHooks>\n\n  $components?: Record<string, YoxOptions>\n\n  $transitions?: Record<string, TransitionHooks>\n\n  $partials?: Record<string, Function>\n\n  $filters?: Record<string, Function | Record<string, Function>>\n\n  /**\n   * core 版本\n   */\n  public static version = process.env.NODE_VERSION\n\n  /**\n   * 方便外部共用的通用逻辑，特别是写插件，减少重复代码\n   */\n  public static is = is\n  public static array = array\n  public static object = object\n  public static string = string\n  public static logger = logger\n  public static Event = CustomEvent\n  public static Emitter = Emitter\n\n  /**\n   * 安装插件\n   *\n   * 插件必须暴露 install 方法\n   */\n  public static use(plugin: YoxPlugin) {\n    plugin.install(Yox)\n  }\n\n  /**\n   * 因为组件采用的是异步更新机制，为了在更新之后进行一些操作，可使用 nextTick\n   */\n  public static nextTick(task: Function) {\n    NextTask.shared().append(task)\n  }\n\n  /**\n   * 编译模板，暴露出来是为了打包阶段的模板预编译\n   */\n  public static compile(template: string, stringify?: boolean): Function | string {\n    if (process.env.NODE_ENV !== 'pure') {\n      if (process.env.NODE_ENV !== 'runtime') {\n        if (!templateStringify.hasStringify(template)) {\n          // 未编译，常出现在开发阶段\n          const nodes = templateCompiler.compile(template)\n          if (process.env.NODE_ENV === 'dev') {\n            if (nodes.length !== 1) {\n              logger.fatal(`\"template\" should have just one root element.`)\n            }\n          }\n          template = templateStringify.stringify(nodes[0])\n          if (stringify) {\n            return template\n          }\n        }\n      }\n      return new Function(`return ${template}`)()\n    }\n  }\n\n  public static directive(\n    name: string | Record<string, DirectiveHooks>,\n    directive?: DirectiveHooks\n  ): DirectiveHooks | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      if (is.string(name) && !directive) {\n        return getResource(globalDirectives, name as string)\n      }\n      setResource(globalDirectives, name, directive)\n    }\n  }\n\n  public static transition(\n    name: string | Record<string, TransitionHooks>,\n    transition?: TransitionHooks\n  ): TransitionHooks | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      if (is.string(name) && !transition) {\n        return getResource(globalTransitions, name as string)\n      }\n      setResource(globalTransitions, name, transition)\n    }\n  }\n\n  public static component(\n    name: string | Record<string, YoxOptions>,\n    component?: YoxOptions | signature.asyncComponent\n  ): YoxOptions | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      if (is.string(name)) {\n        // 同步取值\n        if (!component) {\n          return getResource(globalComponents, name as string)\n        }\n        else if (is.func(component)) {\n          getComponentAsync(globalComponents, name as string, component as signature.asyncComponent)\n          return\n        }\n      }\n      setResource(globalComponents, name, component)\n    }\n  }\n\n  public static partial(\n    name: string | Record<string, string>,\n    partial?: string\n  ): Function | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      if (is.string(name) && !partial) {\n        return getResource(globalPartials, name as string)\n      }\n      setResource(globalPartials, name, partial, Yox.compile)\n    }\n  }\n\n  public static filter(\n    name: string | Record<string, Function | Record<string, Function>>,\n    filter?: Function | Record<string, Function | Record<string, Function>>\n  ): Function | Record<string, Function> | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      if (is.string(name) && !filter) {\n        return getResource(globalFilters, name as string)\n      }\n      setResource(globalFilters, name, filter)\n    }\n  }\n\n  /**\n   * 验证 props，无爱请重写\n   */\n  public static checkPropTypes(props: Record<string, any>, propTypes: Record<string, PropRule>): Record<string, any> {\n    if (process.env.NODE_ENV === 'dev') {\n      const result = object.copy(props)\n      object.each(\n        propTypes,\n        function (rule: PropRule, key: string) {\n\n          // 类型\n          let type = rule.type,\n\n          // 默认值\n          value = rule.value,\n\n          // 是否必传\n          required = rule.required,\n\n          // 实际的值\n          actual = props[key]\n\n          // 动态化获取是否必填\n          if (is.func(required)) {\n            required = (required as Function)(props)\n          }\n\n          // 传了数据\n          if (isDef(actual)) {\n\n            // 如果不写 type 或 type 不是 字符串 或 数组\n            // 就当做此规则无效，和没写一样\n            if (type) {\n              let matched: boolean | void\n              // type: 'string'\n              if (!string.falsy(type)) {\n                matched = is.is(actual, type as string)\n              }\n              // type: ['string', 'number']\n              else if (!array.falsy(type)) {\n                array.each(\n                  type as string[],\n                  function (item: string) {\n                    if (is.is(actual, item)) {\n                      matched = env.TRUE\n                      return env.FALSE\n                    }\n                  }\n                )\n              }\n              // 动态判断是否匹配类型\n              else if (is.func(type)) {\n                matched = (type as Function)(props)\n              }\n              if (!matched) {\n                logger.warn(`The type of prop \"${key}\" is not matched.`)\n              }\n            }\n            else {\n              logger.warn(`The prop \"${key}\" in propTypes has no type.`)\n            }\n\n          }\n          // 没传值但此项是必传项\n          else if (required) {\n            logger.warn(`The prop \"${key}\" is marked as required, but its value is not found.`)\n          }\n          // 没传值但是配置了默认值\n          else if (isDef(value)) {\n            result[key] = type === env.RAW_FUNCTION\n              ? value\n              : is.func(value)\n                ? value(props)\n                : value\n          }\n        }\n      )\n      return result\n    }\n    else {\n      return props\n    }\n  }\n\n  constructor(options: YoxOptions | void) {\n\n    const instance = this, $options: YoxOptions = options || env.EMPTY_OBJECT\n\n    // 一进来就执行 before create\n    execute($options[config.HOOK_BEFORE_CREATE], instance, $options)\n\n    // 如果不绑着，其他方法调不到钩子\n    instance.$options = $options\n\n    let {\n      data,\n      props,\n      computed,\n      events,\n      methods,\n      watchers,\n      extensions,\n    } = $options\n\n    // 如果传了 props，则 data 应该是个 function\n    if (process.env.NODE_ENV === 'dev') {\n      if (props && is.object(data)) {\n        logger.fatal('\"data\" option should be a function.')\n      }\n    }\n\n    if (extensions) {\n      object.extend(instance, extensions)\n    }\n\n    // 数据源\n    const source = instance.checkPropTypes(props || {})\n\n    // 先放 props\n    // 当 data 是函数时，可以通过 this.get() 获取到外部数据\n    const observer = instance.$observer = new Observer(source, instance)\n\n    if (computed) {\n      object.each(\n        computed,\n        function (options: signature.computedGetter | ComputedOptions, keypath: string) {\n          observer.addComputed(keypath, options)\n        }\n      )\n    }\n\n    // 后放 data\n    const extend = is.func(data) ? execute(data, instance, options) : data\n    if (is.object(extend)) {\n      object.each(\n        extend,\n        function (value, key) {\n          if (process.env.NODE_ENV === 'dev') {\n            if (object.has(source, key)) {\n              logger.warn(`\"${key}\" is already defined as a prop. Use prop default value instead.`)\n            }\n          }\n          source[key] = value\n        }\n      )\n    }\n\n    if (methods) {\n      object.each(\n        methods,\n        function (method: Function, name: string) {\n          if (process.env.NODE_ENV === 'dev') {\n            if (instance[name]) {\n              logger.fatal(`method [${name}] is conflicted with built-in methods.`)\n            }\n          }\n          instance[name] = method\n        }\n      )\n    }\n\n    // 监听各种事件\n    // 支持命名空间\n    instance.$emitter = new Emitter(env.TRUE)\n\n    if (events) {\n      instance.on(events)\n    }\n\n    if (process.env.NODE_ENV !== 'pure') {\n\n      let isComment = env.FALSE,\n\n      placeholder: Node | void,\n\n      {\n        el,\n        parent,\n        replace,\n        template,\n        transitions,\n        components,\n        directives,\n        partials,\n        filters,\n        slots,\n      } = $options\n\n      // 把 slots 放进数据里，方便 get\n      if (slots) {\n        object.extend(source, slots)\n      }\n\n      // 检查 template\n      if (is.string(template)) {\n        // 传了选择器，则取对应元素的 html\n        if (selectorPattern.test(template)) {\n          placeholder = domApi.find(template)\n          if (placeholder) {\n            template = domApi.html(placeholder as Element) as string\n            placeholder = env.UNDEFINED\n          }\n          else if (process.env.NODE_ENV === 'dev') {\n            logger.fatal(`\"${template}\" 选择器找不到对应的元素`)\n          }\n        }\n      }\n      else {\n        template = env.UNDEFINED\n      }\n\n      // 检查 el\n      if (el) {\n        if (is.string(el)) {\n          const selector = el as string\n          if (selectorPattern.test(selector)) {\n            placeholder = domApi.find(selector)\n            if (process.env.NODE_ENV === 'dev') {\n              if (!placeholder) {\n                logger.fatal(`\"${selector}\" 选择器找不到对应的元素`)\n              }\n            }\n          }\n          else if (process.env.NODE_ENV === 'dev') {\n            logger.fatal(`\"el\" option 格式错误`)\n          }\n        }\n        else {\n          placeholder = el as Node\n        }\n      }\n\n\n      if (placeholder && !replace) {\n        // 如果不是替换占位元素\n        // 则在该元素下新建一个注释节点，等会用新组件替换掉\n        isComment = env.TRUE\n        domApi.append(\n          placeholder as Node,\n          placeholder = domApi.createComment(env.EMPTY_STRING)\n        )\n      }\n\n      if (parent) {\n        instance.$parent = parent\n      }\n\n      setFlexibleOptions(instance, env.RAW_TRANSITION, transitions)\n      setFlexibleOptions(instance, env.RAW_COMPONENT, components)\n      setFlexibleOptions(instance, env.RAW_DIRECTIVE, directives)\n      setFlexibleOptions(instance, env.RAW_PARTIAL, partials)\n      setFlexibleOptions(instance, env.RAW_FILTER, filters)\n\n      // 当存在模板和计算属性时\n      // 因为这里把模板当做一种特殊的计算属性\n      // 因此模板这个计算属性的优先级应该最高\n      if (template) {\n\n        // 拷贝一份，避免影响外部定义的 watchers\n        watchers = watchers\n          ? object.copy(watchers)\n          : {}\n\n        // 当 virtual dom 变了，则更新视图\n        watchers[TEMPLATE_COMPUTED] = function (vnode: VNode) {\n          instance.update(vnode, instance.$vnode)\n        }\n\n        // 当模板的依赖变了，则重新创建 virtual dom\n        observer.addComputed(\n          TEMPLATE_COMPUTED,\n          {\n            // 当模板依赖变化时，异步通知模板更新\n            sync: env.FALSE,\n            get: function () {\n              return instance.render()\n            }\n          }\n        )\n\n        afterCreateHook(instance, watchers)\n\n        // 编译模板\n        // 在开发阶段，template 是原始的 html 模板\n        // 在产品阶段，template 是编译后且经过 stringify 的字符串\n        // 当然，这个需要外部自己控制传入的 template 是什么\n        // Yox.compile 会自动判断 template 是否经过编译\n        instance.$template = Yox.compile(template) as Function\n\n        // 第一次渲染视图\n        if (!placeholder) {\n          isComment = env.TRUE\n          placeholder = domApi.createComment(env.EMPTY_STRING)\n        }\n\n        instance.update(\n          instance.get(TEMPLATE_COMPUTED),\n          snabbdom.create(\n            domApi,\n            placeholder,\n            isComment,\n            instance,\n            env.EMPTY_STRING\n          )\n        )\n\n      }\n      else {\n        if (process.env.NODE_ENV === 'dev') {\n          if (placeholder) {\n            logger.fatal('有 el 没 template 是几个意思？')\n          }\n        }\n        afterCreateHook(instance, watchers)\n      }\n\n    }\n    else {\n      afterCreateHook(instance, watchers)\n    }\n\n  }\n\n  /**\n   * 添加计算属性\n   */\n  addComputed(\n    keypath: string,\n    computed: signature.computedGetter | ComputedOptions\n  ): Computed | void {\n    return this.$observer.addComputed(keypath, computed)\n  }\n\n  /**\n   * 删除计算属性\n   */\n  removeComputed(\n    keypath: string\n  ): void {\n    this.$observer.removeComputed(keypath)\n  }\n\n  /**\n   * 取值\n   */\n  get(\n    keypath: string,\n    defaultValue?: any,\n    depIgnore?: boolean\n  ): any {\n    return this.$observer.get(keypath, defaultValue, depIgnore)\n  }\n\n  /**\n   * 设值\n   */\n  set(\n    keypath: string | Record<string, any>,\n    value?: any\n  ): void {\n    // 组件经常有各种异步改值，为了避免组件销毁后依然调用 set\n    // 这里判断一下，至于其他方法的异步调用就算了，业务自己控制吧\n    const { $observer } = this\n    if ($observer) {\n      $observer.set(keypath, value)\n    }\n  }\n\n  /**\n   * 监听事件\n   */\n  on(\n    type: string | Record<string, signature.eventListener>,\n    listener?: signature.eventListener\n  ): YoxInterface {\n    this.$emitter.on(type, listener, { ctx: this })\n    return this\n  }\n\n  /**\n   * 监听一次事件\n   */\n  once(\n    type: string | Record<string, signature.eventListener>,\n    listener?: signature.eventListener\n  ): YoxInterface {\n    this.$emitter.on(type, listener, { ctx: this, max: 1 })\n    return this\n  }\n\n  /**\n   * 取消监听事件\n   */\n  off(\n    type: string,\n    listener?: signature.eventListener\n  ): YoxInterface {\n    this.$emitter.off(type, listener)\n    return this\n  }\n\n  /**\n   * 触发事件\n   */\n  fire(\n    bullet: string | CustomEvent,\n    data?: signature.eventData | boolean,\n    downward?: boolean\n  ): boolean {\n\n    // 外部为了使用方便，fire(type) 或 fire(type, data) 就行了\n    // 内部为了保持格式统一\n    // 需要转成 Event，这样还能知道 target 是哪个组件\n\n    let instance = this,\n\n    event = bullet instanceof CustomEvent ? bullet : new CustomEvent(bullet),\n\n    eventData: signature.eventData | void,\n\n    isComplete: boolean | void\n\n    // 告诉外部是谁发出的事件\n    if (!event.target) {\n      event.target = instance\n    }\n\n    // 比如 fire('name', true) 直接向下发事件\n    if (is.object(data)) {\n      eventData = data as Record<string, any>\n    }\n    else if (data === env.TRUE) {\n      downward = env.TRUE\n    }\n\n    isComplete = instance.$emitter.fire(event, eventData)\n    if (isComplete) {\n      if (downward) {\n        if (instance.$children) {\n          array.each(\n            instance.$children,\n            function (child: Yox) {\n              return isComplete = child.fire(event, data, env.TRUE)\n            }\n          )\n        }\n      }\n      else if (instance.$parent) {\n        isComplete = instance.$parent.fire(event, data)\n      }\n    }\n\n    return isComplete\n\n  }\n\n  /**\n   * 监听数据变化\n   */\n  watch(\n    keypath: string | Record<string, signature.watcher | WatcherOptions>,\n    watcher?: signature.watcher | WatcherOptions,\n    immediate?: boolean\n  ): YoxInterface {\n    this.$observer.watch(keypath, watcher, immediate)\n    return this\n  }\n\n  /**\n   * 取消监听数据变化\n   */\n  unwatch(\n    keypath: string,\n    watcher?: signature.watcher\n  ): YoxInterface {\n    this.$observer.unwatch(keypath, watcher)\n    return this\n  }\n\n  directive(\n    name: string | Record<string, DirectiveHooks>,\n    directive?: DirectiveHooks\n  ): DirectiveHooks | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      const instance = this, { $directives } = instance\n      if (is.string(name) && !directive) {\n        return getResource($directives, name as string, Yox.directive)\n      }\n      setResource(\n        $directives || (instance.$directives = {}),\n        name,\n        directive\n      )\n    }\n  }\n\n  transition(\n    name: string | Record<string, TransitionHooks>,\n    transition?: TransitionHooks\n  ): TransitionHooks | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      const instance = this, { $transitions } = instance\n      if (is.string(name) && !transition) {\n        return getResource($transitions, name as string, Yox.transition)\n      }\n      setResource(\n        $transitions || (instance.$transitions = {}),\n        name,\n        transition\n      )\n    }\n  }\n\n  component(\n    name: string | Record<string, YoxOptions>,\n    component?: YoxOptions | signature.asyncComponent\n  ): YoxOptions | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      const instance = this, { $components } = instance\n      if (is.string(name)) {\n        // 同步取值\n        if (!component) {\n          return getResource($components, name as string, Yox.component)\n        }\n        else if (is.func(component)) {\n          if (!getComponentAsync($components, name as string, component as signature.asyncComponent)) {\n            getComponentAsync(globalComponents, name as string, component as signature.asyncComponent)\n          }\n          return\n        }\n      }\n      setResource(\n        $components || (instance.$components = {}),\n        name,\n        component\n      )\n    }\n  }\n\n  partial(\n    name: string | Record<string, string>,\n    partial?: string\n  ): Function | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      const instance = this, { $partials } = instance\n      if (is.string(name) && !partial) {\n        return getResource($partials, name as string, Yox.partial)\n      }\n      setResource(\n        $partials || (instance.$partials = {}),\n        name,\n        partial,\n        Yox.compile\n      )\n    }\n  }\n\n  filter(\n    name: string | Record<string, Function | Record<string, Function>>,\n    filter?: Function | Record<string, Function | Record<string, Function>>\n  ): Function | Record<string, Function> | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      const instance = this, { $filters } = instance\n      if (is.string(name) && !filter) {\n        return getResource($filters, name as string, Yox.filter)\n      }\n      setResource(\n        $filters || (instance.$filters = {}),\n        name,\n        filter\n      )\n    }\n  }\n\n  /**\n   * 对于某些特殊场景，修改了数据，但是模板的依赖中并没有这一项\n   * 而你非常确定需要更新模板，强制刷新正是你需要的\n   */\n  forceUpdate(): void {\n    if (process.env.NODE_ENV !== 'pure') {\n\n      const instance = this,\n\n      { $vnode, $observer } = instance\n\n      if ($vnode) {\n\n        const computed: Computed = $observer.computed[TEMPLATE_COMPUTED],\n\n        oldValue = computed.get()\n\n        // 当前可能正在进行下一轮更新\n        $observer.nextTask.run()\n\n        // 没有更新模板，强制刷新\n        if (oldValue === computed.get()) {\n          instance.update(\n            computed.get(env.TRUE),\n            $vnode\n          )\n        }\n      }\n    }\n  }\n\n  /**\n   * 把模板抽象语法树渲染成 virtual dom\n   */\n  render() {\n    if (process.env.NODE_ENV !== 'pure') {\n      const instance = this\n      return templateRender.render(\n        instance,\n        mergeResource(instance.$filters, globalFilters),\n        mergeResource(instance.$partials, globalPartials),\n        mergeResource(instance.$directives, globalDirectives),\n        mergeResource(instance.$transitions, globalTransitions),\n        instance.$template\n      )\n    }\n  }\n\n  /**\n   * 更新 virtual dom\n   *\n   * @param vnode\n   * @param oldVnode\n   */\n  update(vnode: VNode, oldVnode: VNode) {\n    if (process.env.NODE_ENV !== 'pure') {\n      let instance = this,\n\n      { $vnode, $options } = instance,\n\n      hook: Function | void\n\n      // 每次渲染重置 refs\n      // 在渲染过程中收集最新的 ref\n      // 这样可避免更新时，新的 ref，在前面创建，老的 ref 却在后面删除的情况\n      instance.$refs = {}\n\n      if ($vnode) {\n        execute($options[config.HOOK_BEFORE_UPDATE], instance)\n        snabbdom.patch(domApi, vnode, oldVnode)\n        hook = $options[config.HOOK_AFTER_UPDATE]\n      }\n      else {\n        execute($options[config.HOOK_BEFORE_MOUNT], instance)\n        snabbdom.patch(domApi, vnode, oldVnode)\n        instance.$el = vnode.node as HTMLElement\n        hook = $options[config.HOOK_AFTER_MOUNT]\n      }\n\n      instance.$vnode = vnode\n\n      // 跟 nextTask 保持一个节奏\n      // 这样可以预留一些优化的余地\n      if (hook) {\n        instance.nextTick(\n          function () {\n            if (instance.$vnode) {\n              execute(hook, instance)\n            }\n          }\n        )\n      }\n    }\n  }\n\n  /**\n   * 校验组件参数\n   *\n   * @param props\n   */\n  checkPropTypes(props: Record<string, any>): Record<string, any> {\n    const { propTypes } = this.$options\n    return propTypes\n      ? Yox.checkPropTypes(props, propTypes)\n      : props\n  }\n\n  /**\n   * 创建子组件\n   *\n   * @param options 组件配置\n   * @param vnode 虚拟节点\n   * @param node DOM 元素\n   */\n  create(options: YoxOptions, vnode?: VNode, node?: Node): YoxInterface {\n    if (process.env.NODE_ENV !== 'pure') {\n      options = object.copy(options)\n      options.parent = this\n\n      if (vnode) {\n\n        // 如果传了 node，表示有一个占位元素，新创建的 child 需要把它替换掉\n        if (node) {\n          options.el = node\n          options.replace = env.TRUE\n        }\n\n        const { props, slots } = vnode\n        if (props) {\n          options.props = props\n        }\n        if (slots) {\n          options.slots = slots\n        }\n\n      }\n\n      const child = new Yox(options)\n      array.push(\n        this.$children || (this.$children = [ ]),\n        child\n      )\n\n      return child\n    }\n  }\n\n  /**\n   * 销毁组件\n   */\n  destroy(): void {\n\n    const instance = this,\n\n    { $options, $emitter, $observer } = instance\n\n    execute($options[config.HOOK_BEFORE_DESTROY], instance)\n\n    if (process.env.NODE_ENV !== 'pure') {\n\n      const { $vnode, $parent } = instance\n\n      if ($parent && $parent.$children) {\n        array.remove($parent.$children, instance)\n      }\n\n      if ($vnode) {\n        // virtual dom 通过判断 parent.$vnode 知道宿主组件是否正在销毁\n        delete instance.$vnode\n        snabbdom.destroy(domApi, $vnode, !$parent)\n      }\n\n    }\n\n    $emitter.off()\n    $observer.destroy()\n\n    object.clear(instance)\n\n    execute($options[config.HOOK_AFTER_DESTROY], instance)\n\n  }\n\n  /**\n   * 因为组件采用的是异步更新机制，为了在更新之后进行一些操作，可使用 nextTick\n   */\n  nextTick(task: Function, prepend?: boolean): void {\n    const { nextTask } = this.$observer\n    if (prepend) {\n      nextTask.prepend(task)\n    }\n    else {\n      nextTask.append(task)\n    }\n  }\n\n  /**\n   * 取反 keypath 对应的数据\n   *\n   * 不管 keypath 对应的数据是什么类型，操作后都是布尔型\n   */\n  toggle(keypath: string): boolean {\n    return this.$observer.toggle(keypath)\n  }\n\n  /**\n   * 递增 keypath 对应的数据\n   *\n   * 注意，最好是整型的加法，如果涉及浮点型，不保证计算正确\n   *\n   * @param keypath 值必须能转型成数字，如果不能，则默认从 0 开始递增\n   * @param step 步进值，默认是 1\n   * @param max 可以递增到的最大值，默认不限制\n   */\n  increase(keypath: string, step?: number, max?: number): number | void {\n    return this.$observer.increase(keypath, step, max)\n  }\n\n  /**\n   * 递减 keypath 对应的数据\n   *\n   * 注意，最好是整型的减法，如果涉及浮点型，不保证计算正确\n   *\n   * @param keypath 值必须能转型成数字，如果不能，则默认从 0 开始递减\n   * @param step 步进值，默认是 1\n   * @param min 可以递减到的最小值，默认不限制\n   */\n  decrease(keypath: string, step?: number, min?: number): number | void {\n    return this.$observer.decrease(keypath, step, min)\n  }\n\n  /**\n   * 在数组指定位置插入元素\n   *\n   * @param keypath\n   * @param item\n   * @param index\n   */\n  insert(keypath: string, item: any, index: number | boolean): boolean | void {\n    return this.$observer.insert(keypath, item, index)\n  }\n\n  /**\n   * 在数组尾部添加元素\n   *\n   * @param keypath\n   * @param item\n   */\n  append(keypath: string, item: any): boolean | void {\n    return this.$observer.append(keypath, item)\n  }\n\n  /**\n   * 在数组首部添加元素\n   *\n   * @param keypath\n   * @param item\n   */\n  prepend(keypath: string, item: any): boolean | void {\n    return this.$observer.prepend(keypath, item)\n  }\n\n  /**\n   * 通过索引移除数组中的元素\n   *\n   * @param keypath\n   * @param index\n   */\n  removeAt(keypath: string, index: number): boolean | void {\n    return this.$observer.removeAt(keypath, index)\n  }\n\n  /**\n   * 直接移除数组中的元素\n   *\n   * @param keypath\n   * @param item\n   */\n  remove(keypath: string, item: any): boolean | void {\n    return this.$observer.remove(keypath, item)\n  }\n\n  /**\n   * 拷贝任意数据，支持深拷贝\n   *\n   * @param data\n   * @param deep\n   */\n  copy<T>(data: T, deep?: boolean): T {\n    return this.$observer.copy(data, deep)\n  }\n\n}\n\n\nfunction afterCreateHook(instance: Yox, watchers: Record<string, signature.watcher | WatcherOptions> | void) {\n\n  if (watchers) {\n    instance.watch(watchers)\n  }\n\n  execute(instance.$options[config.HOOK_AFTER_CREATE], instance)\n\n}\n\nfunction setFlexibleOptions(instance: Yox, key: string, value: Function | Record<string, any>) {\n  if (is.func(value)) {\n    instance[key](execute(value, instance))\n  }\n  else if (is.object(value)) {\n    instance[key](value)\n  }\n}\n\nfunction getComponentAsync(data: Record<string, any> | void, name: string, callback: signature.asyncComponent): boolean | void {\n  if (data && object.has(data, name)) {\n    const component = data[name]\n    // 注册的是异步加载函数\n    if (is.func(component)) {\n      let { $queue } = component\n      if (!$queue) {\n        $queue = component.$queue = [callback]\n        component(\n          function (replacement: any) {\n\n            component.$queue = env.UNDEFINED\n\n            data[name] = replacement\n\n            array.each(\n              $queue,\n              function (callback) {\n                callback(replacement)\n              }\n            )\n\n          }\n        )\n      }\n      else {\n        array.push($queue, callback)\n      }\n    }\n    // 不是异步加载函数，直接同步返回\n    else {\n      callback(component)\n    }\n    return env.TRUE\n  }\n}\n\nfunction getResource(data: Record<string, any> | void, name: string, lookup?: Function) {\n  if (data && data[name]) {\n    return data[name]\n  }\n  else if (lookup) {\n    return lookup(name)\n  }\n}\n\nfunction setResource(data: Record<string, any>, name: string | Record<string, any>, value?: any, formatValue?: (value: any) => any) {\n  if (is.string(name)) {\n    data[name as string] = formatValue ? formatValue(value) : value\n  }\n  else {\n    object.each(\n      name,\n      function (value, key) {\n        data[key] = formatValue ? formatValue(value) : value\n      }\n    )\n  }\n}\n\nfunction mergeResource(locals: Record<string, any> | void, globals: Record<string, any>): Record<string, any> {\n  return locals && globals\n    ? object.extend({}, globals, locals)\n    : locals || globals\n}\n\nif (process.env.NODE_ENV !== 'pure') {\n  Yox['dom'] = domApi\n  // 全局注册内置指令\n  Yox.directive({ event, model, binding })\n  // 全局注册内置过滤器\n  Yox.filter({ hasSlot })\n}\n"],"names":["const","env.UNDEFINED","env.RAW_FUNCTION","env.NULL","is.func","is.array","env.TRUE","let","env.FALSE","i","array","falsy","env.EMPTY_STRING","is.number","indexOf","has","is.string","string.startsWith","each","join","string.has","object","is.object","array.each","keypathUtil.each","env.RAW_UNDEFINED","toString","env.EMPTY_FUNCTION","env.win","is.boolean","object.copy","array.has","string.indexOf","string.slice","env.EMPTY_OBJECT","object.each","update","field.COMPONENT","remove","field.LOADING","component.update","directive.update","field.ID","object.has","field.VNODE","env.RAW_COMPONENT","nativeAttr.update","nativeProp.update","directive.remove","field.LEAVING","is.numeric","array.join","nodeType.LITERAL","nodeType.IDENTIFIER","nodeType.MEMBER","execute","keypathUtil.join","object.get","nodeType.UNARY","interpreter.unary","nodeType.BINARY","interpreter.binary","nodeType.TERNARY","nodeType.ARRAY","nodeType.OBJECT","nodeType.CALL","invoke","exprExecutor.execute","config.DIRECTIVE_BINDING","logger.warn","config.DIRECTIVE_EVENT","env.RAW_TRANSITION","config.DIRECTIVE_MODEL","config.DIRECTIVE_LAZY","array.last","array.push","nodeType.ATTRIBUTE","nodeType.PROPERTY","nodeType.DIRECTIVE","nodeType.SPREAD","array.pop","array.falsy","env.EMPTY_ARRAY","env.RAW_VALUE","keypathUtil.match","env.RAW_LENGTH","keypathUtil.matchFuzzy","keypathUtil.isFuzzy","object.set","string.codeAt","object.sort","array.remove","object.clear","doc","env.doc","env.EVENT_INPUT","env.EVENT_CHANGE","env.EVENT_CLICK","config.HINT_BOOLEAN","value","text","html","object.falsy","env.EVENT_MODEL","array.toArray","array.toObject","env.EVENT_TAP","api","array.indexOf","directive","env.RAW_TYPE","isFuzzy","config.SLOT_DATA_PREFIX","env.RAW_TEMPLATE","config.HOOK_BEFORE_CREATE","extend","env.RAW_DIRECTIVE","env.RAW_PARTIAL","env.RAW_FILTER","snabbdom.create","transition","component","partial","filter","templateRender.render","config.HOOK_BEFORE_UPDATE","config.HOOK_AFTER_UPDATE","config.HOOK_BEFORE_MOUNT","config.HOOK_AFTER_MOUNT","config.HOOK_BEFORE_DESTROY","config.HOOK_AFTER_DESTROY","is","string","config.HOOK_AFTER_CREATE","object.extend","event","model","binding"],"mappings":"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"}