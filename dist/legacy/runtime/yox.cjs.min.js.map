{"version":3,"file":"yox.cjs.min.js","sources":["../../../../yox-common/src/util/env.ts","../../../../yox-common/src/function/isDef.ts","../../../../yox-common/src/util/is.ts","../../../../yox-common/src/function/execute.ts","../../../../yox-common/src/util/CustomEvent.ts","../../../../yox-common/src/util/array.ts","../../../../yox-common/src/util/string.ts","../../../../yox-common/src/util/keypath.ts","../../../../yox-common/src/util/object.ts","../../../../yox-common/src/function/toString.ts","../../../../yox-common/src/util/logger.ts","../../../../yox-common/src/function/nextTick.ts","../../../../yox-common/src/util/Emitter.ts","../../../../yox-common/src/function/isNative.ts","../../../../yox-common/src/util/NextTask.ts","../../../../yox-config/src/config.ts","../../../../yox-common/src/function/guid.ts","../../../../yox-snabbdom/src/field.ts","../../../../yox-snabbdom/src/nativeAttr.ts","../../../../yox-snabbdom/src/nativeProp.ts","../../../../yox-snabbdom/src/directive.ts","../../../../yox-snabbdom/src/component.ts","../../../../yox-snabbdom/src/snabbdom.ts","../../../../yox-common/src/function/toNumber.ts","../../../../yox-common/src/function/isUndef.ts","../../../../yox-template-compiler/src/renderer.ts","../../../../yox-observer/src/Computed.ts","../../../../yox-observer/src/function/matchBest.ts","../../../../yox-observer/src/function/readValue.ts","../../../../yox-observer/src/function/diffString.ts","../../../../yox-observer/src/function/diffArray.ts","../../../../yox-observer/src/function/diffObject.ts","../../../../yox-observer/src/function/diffRecursion.ts","../../../../yox-observer/src/function/diffWatcher.ts","../../../../yox-observer/src/function/filterWatcher.ts","../../../../yox-observer/src/function/formatWatcherOptions.ts","../../../../yox-observer/src/Observer.ts","../../../../yox-dom/src/dom.ts","../../../../yox-common/src/function/debounce.ts","../../../src/directive/event.ts","../../../src/directive/model.ts","../../../src/directive/binding.ts","../../../src/filter/hasSlot.ts","../../../src/Yox.ts"],"sourcesContent":["import ValueHolder from '../../../yox-type/src/interface/ValueHolder'\n\n/**\n * 为了压缩，定义的常量\n */\nexport const TRUE = true\nexport const FALSE = false\nexport const NULL = null\nexport const UNDEFINED = void 0\n\nexport const RAW_TRUE = 'true'\nexport const RAW_FALSE = 'false'\nexport const RAW_NULL = 'null'\nexport const RAW_UNDEFINED = 'undefined'\n\nexport const RAW_KEY = 'key'\nexport const RAW_REF = 'ref'\nexport const RAW_SLOT = 'slot'\nexport const RAW_NAME = 'name'\n\nexport const RAW_FILTER = 'filter'\nexport const RAW_PARTIAL = 'partial'\nexport const RAW_COMPONENT = 'component'\nexport const RAW_DIRECTIVE = 'directive'\nexport const RAW_TRANSITION = 'transition'\n\nexport const RAW_THIS = 'this'\nexport const RAW_VALUE = 'value'\nexport const RAW_LENGTH = 'length'\nexport const RAW_FUNCTION = 'function'\nexport const RAW_TEMPLATE = 'template'\nexport const RAW_WILDCARD = '*'\n\nexport const KEYPATH_PARENT = '..'\nexport const KEYPATH_CURRENT = RAW_THIS\n\nexport const RAW_MINUS_ONE = -1\n\n/**\n * Single instance for window in browser\n */\nexport const WINDOW = typeof window !== RAW_UNDEFINED ? window : UNDEFINED\n\n/**\n * Single instance for document in browser\n */\nexport const DOCUMENT = typeof document !== RAW_UNDEFINED ? document : UNDEFINED\n\n/**\n * tap 事件\n *\n * 非常有用的抽象事件，比如 pc 端是 click 事件，移动端是 touchend 事件\n *\n * 这样只需 on-tap=\"handler\" 就可以完美兼容各端\n *\n * 框架未实现此事件，通过 Yox.dom.specialEvents 提供给外部扩展\n *\n */\nexport const EVENT_TAP = 'tap'\n\n/**\n * 点击事件\n */\nexport const EVENT_CLICK = 'click'\n\n/**\n * 输入事件\n */\nexport const EVENT_INPUT = 'input'\n\n/**\n * 变化事件\n */\nexport const EVENT_CHANGE = 'change'\n\n/**\n * 唯一内置的特殊事件：model\n */\nexport const EVENT_MODEL = 'model'\n\n/**\n * Single instance for noop function\n */\nexport const EMPTY_FUNCTION = function () {\n  /** yox */\n}\n\n/**\n * 空对象，很多地方会用到，比如 `a || EMPTY_OBJECT` 确保是个对象\n */\nexport const EMPTY_OBJECT = Object.freeze({})\n\n/**\n * 空数组\n */\nexport const EMPTY_ARRAY = Object.freeze([])\n\n/**\n * 空字符串\n */\nexport const EMPTY_STRING = ''\n\n/**\n * 全局 value holder，避免频繁的创建临时对象\n */\nexport const VALUE_HOLDER: ValueHolder = {\n  value: UNDEFINED\n}","import * as env from '../util/env'\n\nexport default function (target: any): boolean {\n  return target !== env.UNDEFINED\n}\n","import * as env from './env'\n\n/**\n * Check if value is a function.\n *\n * @param value\n * @return\n */\nexport function func(value: any): boolean {\n  return typeof value === env.RAW_FUNCTION\n}\n\n/**\n * Check if value is an array.\n *\n * @param value\n * @return\n */\nexport function array(value: any): boolean {\n  return Array.isArray(value)\n}\n\n/**\n * Check if value is an object.\n *\n * @param value\n * @return\n */\nexport function object(value: any): boolean {\n  // 低版本 IE 会把 null 和 undefined 当作 object\n  return value !== env.NULL && typeof value === 'object'\n}\n\n/**\n * Check if value is a string.\n *\n * @param value\n * @return\n */\nexport function string(value: any): boolean {\n  return typeof value === 'string'\n}\n\n/**\n * Check if value is a number.\n *\n * @param value\n * @return\n */\nexport function number(value: any): boolean {\n  return typeof value === 'number'\n}\n\n/**\n * Check if value is boolean.\n *\n * @param value\n * @return\n */\nexport function boolean(value: any): boolean {\n  return typeof value === 'boolean'\n}\n\n/**\n * Check if value is numeric.\n *\n * @param value\n * @return\n */\nexport function numeric(value: any): boolean {\n  return number(value)\n    || (string(value) && !isNaN(parseFloat(value)) && isFinite(value))\n}\n","import isDef from './isDef'\nimport * as is from '../util/is'\n\n/**\n * 任性地执行一个函数，不管它有没有、是不是\n *\n * @param fn 调用的函数\n * @param context 执行函数时的 this 指向\n * @param args 调用函数的参数，多参数时传入数组\n * @return 调用函数的返回值\n */\nexport default function (fn: any, context?: any, args?: any): any {\n  if (is.func(fn)) {\n    return is.array(args)\n      ? fn.apply(context, args)\n      : isDef(context)\n        ? fn.call(context, args)\n        : isDef(args)\n          ? fn(args)\n          : fn()\n  }\n}\n","import CustomEventInterface from '../../../yox-type/src/event/CustomEvent'\nimport Yox from '../../../yox-type/src/interface/Yox'\n\nimport * as env from './env'\n\nexport default class CustomEvent implements CustomEventInterface {\n\n  public static PHASE_CURRENT = 0\n\n  public static PHASE_UPWARD = 1\n\n  public static PHASE_DOWNWARD = env.RAW_MINUS_ONE\n\n  // 事件名称\n  type: string\n\n  // 事件当前阶段\n  phase: number\n\n  // 哪个组件发出的事件\n  target?: Yox\n\n  // 原始事件，比如 DOM 事件\n  originalEvent?: CustomEventInterface | Event\n\n  // 是否已阻止事件的默认行为\n  isPrevented?: true\n\n  // 是否已停止事件冒泡\n  isStoped?: true\n\n  // 处理当前事件的监听器，方便外部获取 listener 进行解绑\n  listener?: Function\n\n  /**\n   * 构造函数\n   *\n   * 可以传事件名称，也可以传原生事件对象\n   */\n  constructor(type: string, originalEvent?: CustomEventInterface | Event) {\n    this.type = type\n    this.phase = CustomEvent.PHASE_CURRENT\n    if (originalEvent) {\n      this.originalEvent = originalEvent\n    }\n  }\n\n  /**\n   * 阻止事件的默认行为\n   */\n  preventDefault(): CustomEventInterface {\n    const instance = this\n    if (!instance.isPrevented) {\n      const { originalEvent } = instance\n      if (originalEvent) {\n        originalEvent.preventDefault()\n      }\n      instance.isPrevented = env.TRUE\n    }\n    return instance\n  }\n\n  /**\n   * 停止事件广播\n   */\n  stopPropagation(): CustomEventInterface {\n    const instance = this\n    if (!instance.isStoped) {\n      const { originalEvent } = instance\n      if (originalEvent) {\n        originalEvent.stopPropagation()\n      }\n      instance.isStoped = env.TRUE\n    }\n    return instance\n  }\n\n  prevent(): CustomEventInterface {\n    return this.preventDefault()\n  }\n\n  stop(): CustomEventInterface {\n    return this.stopPropagation()\n  }\n\n}\n","import * as is from './is'\nimport * as env from './env'\nimport execute from '../function/execute'\n\n/**\n * 遍历数组\n *\n * @param array\n * @param callback 返回 false 可停止遍历\n * @param reversed 是否逆序遍历\n */\nexport function each<T>(\n  array: T[],\n  callback: (item: T, index: number, length: number) => boolean | void,\n  reversed?: boolean\n): void {\n  const { length } = array\n  if (length) {\n    if (reversed) {\n      for (let i = length - 1; i >= 0; i--) {\n        if (callback(array[i], i, length) === env.FALSE) {\n          break\n        }\n      }\n    }\n    else {\n      for (let i = 0; i < length; i++) {\n        if (callback(array[i], i, length) === env.FALSE) {\n          break\n        }\n      }\n    }\n  }\n}\n\nfunction nativePush<T>(array: T[], item: T) {\n  array[array.length] = item\n}\n\nfunction nativeUnshift<T>(array: T[], item: T) {\n  array.unshift(item)\n}\n\n/**\n * 添加\n *\n * @param array\n * @param value\n * @param action\n */\nfunction addItem<T>(array: T[], value: T | T[], action: Function) {\n  if (is.array(value)) {\n    each(\n      value as T[],\n      function (item: T) {\n        action(array, item)\n      }\n    )\n  }\n  else {\n    action(array, value)\n  }\n}\n\n/**\n * 往后加\n *\n * @param array\n * @param target\n */\nexport function push<T>(array: T[], target: T | T[]): void {\n  addItem(array, target, nativePush)\n}\n\n/**\n * 往前加\n *\n * @param array\n * @param target\n */\nexport function unshift<T>(array: T[], target: T | T[]): void {\n  addItem(array, target, nativeUnshift)\n}\n\n/**\n * 数组项在数组中的位置\n *\n * @param array 数组\n * @param target 数组项\n * @param strict 是否全等判断，默认是全等\n * @return 如果未找到，返回 -1\n */\nexport function indexOf<T>(array: T[], target: T, strict?: boolean): number {\n  let result = env.RAW_MINUS_ONE\n  each(\n    array,\n    function (item: any, index: number) {\n      if (strict === env.FALSE ? item == target : item === target) {\n        result = index\n        return env.FALSE\n      }\n    }\n  )\n  return result\n}\n\n/**\n * 获取数组最后一项\n *\n * @param array 数组\n * @return\n */\nexport function last<T>(array: T[]): T | void {\n  const { length } = array\n  if (length > 0) {\n    return array[length - 1]\n  }\n}\n\n/**\n * 弹出数组最后一项\n *\n * 项目里用的太多，仅用于节省字符...\n *\n * @param array 数组\n * @return 弹出的数组项\n */\nexport function pop<T>(array: T[]): T | void {\n  const { length } = array\n  if (length > 0) {\n    return array.pop()\n  }\n}\n\n/**\n * 删除数组项\n *\n * @param array 数组\n * @param item 待删除项\n * @param strict 是否全等判断，默认是全等\n * @return 删除的数量\n */\nexport function remove<T>(array: T[], target: T, strict?: boolean): number {\n  let result = 0\n  each(\n    array,\n    function (item: T, index: number) {\n      if (strict === env.FALSE ? item == target : item === target) {\n        array.splice(index, 1)\n        result++\n      }\n    },\n    env.TRUE\n  )\n  return result\n}\n\n/**\n * 数组是否包含 item\n *\n * @param array 数组\n * @param target 可能包含的数组项\n * @param strict 是否全等判断，默认是全等\n * @return\n */\nexport function has<T>(array: T[], target: T, strict?: boolean): boolean {\n  return indexOf(array, target, strict) >= 0\n}\n\n/**\n * 把类数组转成数组\n *\n * @param array 类数组\n * @return\n */\nexport function toArray<T>(array: T[] | ArrayLike<T>): T[] {\n  return is.array(array)\n    ? array\n    : execute(env.EMPTY_ARRAY.slice, array)\n}\n\n/**\n * 把数组转成对象\n *\n * @param array 数组\n * @param key 数组项包含的字段名称，如果数组项是基本类型，可不传\n * @param value\n * @return\n */\nexport function toObject(array: any[], key?: string | null, value?: any): Object {\n  let result = {}\n  each(\n    array,\n    function (item: any) {\n      result[key ? item[key] : item] = value || item\n    }\n  )\n  return result\n}\n\n/**\n * 把数组合并成字符串\n *\n * @param array\n * @param separator\n * @return\n */\nexport function join(array: string[], separator: string): string {\n  return array.join(separator)\n}\n\n/**\n * 用于判断长度大于 0 的数组\n *\n * @param array\n * @return\n */\nexport function falsy(array: any): boolean {\n  return !is.array(array) || !array.length\n}\n","import * as is from './is'\nimport * as env from './env'\n\nimport isDef from '../function/isDef'\n\nconst camelizePattern = /-([a-z])/gi,\n\nhyphenatePattern = /\\B([A-Z])/g,\n\ncapitalizePattern = /^[a-z]/,\n\ncamelizeCache: Record<string, string> = {},\n\nhyphenateCache: Record<string, string> = {},\n\ncapitalizeCache: Record<string, string> = {}\n\n/**\n * 连字符转成驼峰\n *\n * @param str\n * @return 驼峰格式的字符串\n */\nexport function camelize(str: string): string {\n  if (!camelizeCache[str]) {\n    camelizeCache[str] = str.replace(\n      camelizePattern,\n      function ($0, $1) {\n        return upper($1)\n      }\n    )\n  }\n  return camelizeCache[str]\n}\n\n/**\n * 驼峰转成连字符\n *\n * @param str\n * @return 连字符格式的字符串\n */\nexport function hyphenate(str: string): string {\n  if (!hyphenateCache[str]) {\n    hyphenateCache[str] = str.replace(\n      hyphenatePattern,\n      function ($0, $1) {\n        return '-' + lower($1)\n      }\n    )\n  }\n  return hyphenateCache[str]\n}\n\n/**\n * 首字母大写\n *\n * @param str\n * @return\n */\nexport function capitalize(str: string): string {\n  if (!capitalizeCache[str]) {\n    capitalizeCache[str] = str.replace(\n      capitalizePattern,\n      upper\n    )\n  }\n  return capitalizeCache[str]\n}\n\n/**\n * 清除两侧空白符\n *\n * @param str\n * @return 清除两侧空白符的字符串\n */\nexport function trim(str: any): string {\n  return falsy(str)\n    ? env.EMPTY_STRING\n    : str.trim()\n}\n\n/**\n * 截取字符串\n *\n * @param str\n * @param start\n * @param end\n * @return\n */\nexport function slice(str: string, start: number, end?: number): string {\n  return is.number(end)\n    ? start === end\n      ? env.EMPTY_STRING\n      : str.slice(start, end)\n    : str.slice(start)\n}\n\n/**\n * 获取子串的起始位置\n *\n * @param str\n * @param part\n * @param start\n * @return\n */\nexport function indexOf(str: string, part: string, start?: number): number {\n  return str.indexOf(part, isDef(start) ? start : 0)\n}\n\n/**\n * 获取子串的起始位置\n *\n * @param str\n * @param part\n * @param end\n * @return\n */\nexport function lastIndexOf(str: string, part: string, end?: number): number {\n  return str.lastIndexOf(part, isDef(end) ? end : str.length)\n}\n\n/**\n * str 是否以 part 开头\n *\n * @param str\n * @param part\n * @return\n */\nexport function startsWith(str: string, part: string): boolean {\n  return indexOf(str, part) === 0\n}\n\n/**\n * str 是否以 part 结束\n *\n * @param str\n * @param part\n * @return\n */\nexport function endsWith(str: string, part: string): boolean {\n  const offset = str.length - part.length\n  return offset >= 0 && lastIndexOf(str, part) === offset\n}\n\n/**\n * 获取某个位置的字符\n */\nexport function charAt(str: string, index?: number): string {\n  return str.charAt(index || 0)\n}\n\n/**\n * 获取某个位置的字符编码\n */\nexport function codeAt(str: string, index?: number): number {\n  return str.charCodeAt(index || 0)\n}\n\n/**\n * 大写格式\n */\nexport function upper(str: string): string {\n  return str.toUpperCase()\n}\n\n/**\n * 小写格式\n */\nexport function lower(str: string): string {\n  return str.toLowerCase()\n}\n\n/**\n * str 是否包含 part\n *\n * @param str\n * @param part\n * @return 是否包含\n */\nexport function has(str: string, part: string): boolean {\n  return indexOf(str, part) >= 0\n}\n\n/**\n * 判断长度大于 0 的字符串\n *\n * @param str\n * @return\n */\nexport function falsy(str: any): boolean {\n  return !is.string(str) || !str.length\n}\n","import * as env from './env'\nimport * as string from './string'\n\nimport isDef from '../function/isDef'\n\nconst dotPattern = /\\./g,\n\nasteriskPattern = /\\*/g,\n\ndoubleAsteriskPattern = /\\*\\*/g,\n\nsplitCache: Record<string, string[]> = {},\n\npatternCache: Record<string, RegExp> = {}\n\nexport const separator = '.'\n\n/**\n * 判断 keypath 是否以 prefix 开头，如果是，返回匹配上的前缀长度，否则返回 -1\n *\n * @param keypath\n * @param prefix\n * @return\n */\nexport function match(keypath: string, prefix: string): number {\n  if (keypath === prefix) {\n    return prefix.length\n  }\n  prefix += separator\n  return string.startsWith(keypath, prefix)\n    ? prefix.length\n    : env.RAW_MINUS_ONE\n}\n\n/**\n * 遍历 keypath 的每个部分\n *\n * @param keypath\n * @param callback 返回 false 可中断遍历\n */\nexport function each(keypath: string, callback: (key: string, isLast: boolean) => boolean | void) {\n  // 判断字符串是因为 keypath 有可能是 toString\n  // 而 splitCache.toString 是个函数\n  const list = isDef(splitCache[keypath])\n    ? splitCache[keypath]\n    : (splitCache[keypath] = keypath.split(separator))\n\n  for (let i = 0, lastIndex = list.length - 1; i <= lastIndex; i++) {\n    if (callback(list[i], i === lastIndex) === env.FALSE) {\n      break\n    }\n  }\n}\n\n/**\n * 遍历 keypath 的每个部分\n *\n * @param keypath1\n * @param keypath2\n */\nexport function join(keypath1: string, keypath2: string): string {\n  return keypath1 && keypath2\n    ? keypath1 + separator + keypath2\n    : keypath1 || keypath2\n}\n\n/**\n * 是否模糊匹配\n *\n * @param keypath\n */\nexport function isFuzzy(keypath: string): boolean {\n  return string.has(keypath, env.RAW_WILDCARD)\n}\n\n/**\n * 模糊匹配 keypath\n *\n * @param keypath\n * @param pattern\n */\nexport function matchFuzzy(keypath: string, pattern: string): string | void {\n  let cache = patternCache[pattern]\n  if (!cache) {\n    const str = pattern\n      .replace(dotPattern, '\\\\.')\n      .replace(asteriskPattern, '(\\\\w+)')\n      .replace(doubleAsteriskPattern, '([\\.\\\\w]+?)')\n    cache = patternCache[pattern] = new RegExp(`^${str}$`)\n  }\n  const result = keypath.match(cache)\n  if (result) {\n    return result[1]\n  }\n}","import * as is from './is'\nimport * as env from './env'\nimport * as array from './array'\nimport * as keypathUtil from './keypath'\n\nimport isDef from '../function/isDef'\n\nimport * as type from '../../../yox-type/src/type'\nimport ValueHolder from '../../../yox-type/src/interface/ValueHolder'\n\n/**\n * 获取对象的 key 的数组\n *\n * @param object\n * @return\n */\nexport function keys(object: type.data): string[] {\n  return Object.keys(object)\n}\n\nfunction sortKeyByAsc(a: string, b: string): number {\n  return a.length - b.length\n}\n\nfunction sortKeyByDesc(a: string, b: string): number {\n  return b.length - a.length\n}\n\n/**\n * 排序对象的 key\n *\n * @param object\n * @param desc 是否逆序，默认从小到大排序\n * @return\n */\nexport function sort(object: type.data, desc?: boolean): string[] {\n  return keys(object).sort(\n    desc ? sortKeyByDesc : sortKeyByAsc\n  )\n}\n\n/**\n * 遍历对象\n *\n * @param object\n * @param callback 返回 false 可停止遍历\n */\nexport function each(object: type.data, callback: (value: any, key: string) => boolean | void): void {\n  for (let key in object) {\n    if (callback(object[key], key) === env.FALSE) {\n      break\n    }\n  }\n}\n\n/**\n * 清空对象所有的键值对\n *\n * @param object\n */\nexport function clear(object: type.data): void {\n  each(\n    object,\n    function (_, key) {\n      delete object[key]\n    }\n  )\n}\n\n/**\n * 扩展对象\n *\n * @return\n */\nexport function extend(original: type.data, object: type.data): type.data {\n  each(\n    object,\n    function (value, key) {\n      original[key] = value\n    }\n  )\n  return original\n}\n\n/**\n * 合并对象\n *\n * @return\n */\nexport function merge(object1: type.data | void, object2: type.data | void): type.data | void {\n  return object1 && object2\n    ? extend(extend({}, object1), object2)\n    : object1 || object2\n}\n\n/**\n * 拷贝对象\n *\n * @param object\n * @param deep 是否需要深拷贝\n * @return\n */\nexport function copy(object: any, deep?: boolean): any {\n  let result = object\n  if (is.array(object)) {\n    if (deep) {\n      result = []\n      array.each(\n        object,\n        function (item, index) {\n          result[index] = copy(item, deep)\n        }\n      )\n    }\n    else {\n      result = object.slice()\n    }\n  }\n  else if (is.object(object)) {\n    result = {}\n    each(\n      object,\n      function (value, key) {\n        result[key] = deep ? copy(value, deep) : value\n      }\n    )\n  }\n  return result\n}\n\n/**\n * 从对象中查找一个 keypath\n *\n * 返回值是空时，表示没找到值\n *\n * @param object\n * @param keypath\n * @return\n */\nexport function get(object: any, keypath: string): ValueHolder | undefined {\n\n  /**\n   * 考虑以下情况:\n   *\n   * {\n   *   'a.b.c.d': 1,\n   *   'a.b.c': {\n   *      d: 2\n   *   }\n   * }\n   *\n   * 此时 keypath 是 `a.b.c.d`，可以获取到 1\n   * 如果没有这个 key，按 keypath 推进是取不到值的，因为没有 a.b.c 对象\n   * 个人觉得没有必要支持字面量，情况实在太多，会把这个函数搞的性能很差\n   */\n\n  keypathUtil.each(\n    keypath,\n    function (key, isLast) {\n\n      if (object != env.NULL) {\n\n        // 先直接取值\n        let value = object[key],\n\n        // 紧接着判断值是否存在\n        // 下面会处理计算属性的值，不能在它后面设置 hasValue\n        hasValue = isDef(value)\n\n        // 如果是计算属性，取计算属性的值\n        if (value && is.func(value.get)) {\n          value = value.get()\n        }\n\n        if (isLast) {\n          if (hasValue) {\n            env.VALUE_HOLDER.value = value\n            object = env.VALUE_HOLDER\n          }\n          else {\n            object = env.UNDEFINED\n          }\n        }\n        else {\n          object = value\n        }\n      }\n      else {\n        object = env.UNDEFINED\n        return env.FALSE\n      }\n\n    }\n  )\n\n  return object\n\n}\n\n/**\n * 为对象设置一个键值对\n *\n * @param object\n * @param keypath\n * @param value\n * @param autofill 是否自动填充不存在的对象，默认自动填充\n */\nexport function set(object: type.data, keypath: string, value: any, autofill?: boolean): void {\n  keypathUtil.each(\n    keypath,\n    function (key, isLast) {\n      if (isLast) {\n        object[key] = value\n      }\n      else if (object[key]) {\n        object = object[key]\n      }\n      else if (autofill) {\n        object = object[key] = {}\n      }\n      else {\n        return env.FALSE\n      }\n    }\n  )\n}\n\n/**\n * 对象是否包含某个 key\n *\n * @param object\n * @param key\n * @return\n */\nexport function has(object: type.data, key: string | number): boolean {\n  // 不用 hasOwnProperty，性能差\n  return isDef(object[key])\n}\n\n/**\n * 是否是空对象\n *\n * @param object\n * @return\n */\nexport function falsy(object: any): boolean {\n  return !is.object(object)\n    || is.array(object)\n    || !keys(object).length\n}","import * as env from '../util/env'\nimport isDef from './isDef'\n\nexport default function (target: any, defaultValue?: string): string {\n  return target != env.NULL && target.toString\n    ? target.toString()\n    : isDef(defaultValue)\n      ? defaultValue as string\n      : env.EMPTY_STRING\n}\n","import * as env from './env'\nimport toString from '../function/toString'\n\nexport const DEBUG = 1\nexport const INFO = 2\nexport const WARN = 3\nexport const ERROR = 4\nexport const FATAL = 5\n\n/**\n * 是否有原生的日志特性，没有必要单独实现\n */\nconst nativeConsole: Console | null = typeof console !== env.RAW_UNDEFINED ? console : env.NULL,\n\n/**\n * 当前是否是源码调试，如果开启了代码压缩，empty function 里的注释会被干掉\n */\nlevel = /yox/.test(toString(env.EMPTY_FUNCTION)) ? DEBUG : WARN,\n\n/**\n * console 样式前缀\n */\nstylePrefix = '%c'\n\n/**\n * 全局调试开关\n */\nfunction getLevel() {\n  if (env.WINDOW) {\n    const logLevel = env.WINDOW['YOX_LOG_LEVEL']\n    if (logLevel >= DEBUG && logLevel <= FATAL) {\n      return logLevel as number\n    }\n  }\n  return level\n}\n\nfunction getStyle(backgroundColor: string) {\n  return `background-color:${backgroundColor};border-radius:12px;color:#fff;font-size:10px;padding:3px 6px;`\n}\n\n/**\n * 打印 debug 日志\n *\n * @param msg\n */\nexport function debug(msg: string, tag?: string): void {\n  if (nativeConsole && getLevel() <= DEBUG) {\n    nativeConsole.log(stylePrefix + (tag || 'Yox debug'), getStyle('#999'), msg)\n  }\n}\n\n/**\n * 打印 info 日志\n *\n * @param msg\n */\nexport function info(msg: string, tag?: string): void {\n  if (nativeConsole && getLevel() <= INFO) {\n    nativeConsole.log(stylePrefix + (tag || 'Yox info'), getStyle('#2db7f5'), msg)\n  }\n}\n\n/**\n * 打印 warn 日志\n *\n * @param msg\n */\nexport function warn(msg: string, tag?: string): void {\n  if (nativeConsole && getLevel() <= WARN) {\n    nativeConsole.warn(stylePrefix + (tag || 'Yox warn'), getStyle('#f90'), msg)\n  }\n}\n\n/**\n * 打印 error 日志\n *\n * @param msg\n */\nexport function error(msg: string, tag?: string): void {\n  if (nativeConsole && getLevel() <= ERROR) {\n    nativeConsole.error(stylePrefix + (tag || 'Yox error'), getStyle('#ed4014'), msg)\n  }\n}\n\n/**\n * 致命错误，中断程序\n *\n * @param msg\n */\nexport function fatal(msg: string, tag?: string): void {\n  if (getLevel() <= FATAL) {\n    throw new Error(`[${tag || 'Yox fatal'}]: ${msg}`)\n  }\n}\n","import * as env from '../util/env'\nimport isNative from './isNative'\n\ndeclare const setImmediate: Function\n\nlet nextTick: Function\n\n// IE (10+) 和 node\nif (typeof setImmediate === env.RAW_FUNCTION && isNative(setImmediate)) {\n  nextTick = setImmediate\n}\n// 用 MessageChannel 去做 setImmediate 的 polyfill\n// 原理是将新的 message 事件加入到原有的 dom events 之后\n// 兼容性 IE10+ 和其他标准浏览器\nif (typeof MessageChannel === env.RAW_FUNCTION && isNative(MessageChannel)) {\n  nextTick = function (fn: any) {\n    const channel = new MessageChannel()\n    channel.port1.onmessage = fn\n    channel.port2.postMessage(1)\n  }\n}\nelse {\n  nextTick = setTimeout\n}\n\nexport default nextTick\n","import execute from '../function/execute'\n\nimport * as is from './is'\nimport * as env from './env'\nimport * as array from './array'\nimport * as object from './object'\nimport * as string from './string'\nimport * as logger from './logger'\n\nimport CustomEvent from './CustomEvent'\n\nimport * as type from '../../../yox-type/src/type'\nimport EmitterOptions from '../../../yox-type/src/options/Emitter'\nimport EmitterInterface from '../../../yox-type/src/event/Emitter'\n\ninterface Namespace {\n  name: string\n  ns: string\n}\n\nexport default class Emitter implements EmitterInterface {\n\n  /**\n   * 是否开启命名空间\n   */\n  ns: boolean\n\n  /**\n   * 已注册的事件监听\n   */\n  listeners: Record<string, EmitterOptions[]>\n\n  /**\n   * 原生事件监听，一个事件对应一个 listener\n   */\n  nativeListeners?: Record<string, type.nativeListener>\n\n  constructor(ns?: boolean) {\n    this.ns = ns || env.FALSE\n    this.listeners = {}\n  }\n\n  /**\n   * 发射事件\n   *\n   * @param bullet 事件或事件名称\n   * @param data 事件数据\n   */\n  fire(\n    type: string,\n    args: any[] | void,\n    filter?: (type: string, args: any[] | void, options: EmitterOptions) => boolean | void\n  ): boolean {\n\n    let instance = this,\n\n    { name, ns } = parseNamespace(instance.ns, type),\n\n    list = instance.listeners[name],\n\n    isComplete = env.TRUE\n\n    if (list) {\n\n      // 避免遍历过程中，数组发生变化，比如增删了\n      list = object.copy(list)\n\n      // 判断是否是发射事件\n      // 如果 args 的第一个参数是 CustomEvent 类型，表示发射事件\n      // 因为事件处理函数的参数列表是 (event, data)\n      const event = args && args[0] instanceof CustomEvent\n        ? args[0] as CustomEvent\n        : env.UNDEFINED\n\n      array.each(\n        list,\n        function (options: EmitterOptions, _: number) {\n\n          // 命名空间不匹配\n          if (!matchNamespace(ns, options)\n            // 在 fire 过程中被移除了\n            || !array.has(list, options)\n            // 传了 filter，则用 filter 判断是否过滤此 options\n            || (filter && !filter(type, args, options))\n          ) {\n            return\n          }\n\n          // 为 event 对象加上当前正在处理的 listener\n          // 这样方便业务层移除事件绑定\n          // 比如 on('xx', function) 这样定义了匿名 listener\n          // 在这个 listener 里面获取不到当前 listener 的引用\n          // 为了能引用到，有时候会先定义 var listener = function,\n          // 然后再 on('xx', listener) 这样其实是没有必要的\n          if (event) {\n            event.listener = options.fn\n          }\n\n          let result = execute(options.fn, options.ctx, args)\n\n          if (event) {\n            event.listener = env.UNDEFINED\n          }\n\n          // 执行次数\n          options.num = options.num ? (options.num + 1) : 1\n\n          // 注册的 listener 可以指定最大执行次数\n          if (options.num === options.max) {\n            instance.off(type, options.fn)\n          }\n\n          // 如果没有返回 false，而是调用了 event.stop 也算是返回 false\n          if (event) {\n            if (result === env.FALSE) {\n              event.prevent().stop()\n            }\n            else if (event.isStoped) {\n              result = env.FALSE\n            }\n          }\n\n          if (result === env.FALSE) {\n            return isComplete = env.FALSE\n          }\n        }\n      )\n\n    }\n\n    return isComplete\n\n  }\n\n  /**\n   * 注册监听\n   *\n   * @param type\n   * @param listener\n   */\n  on(\n    type: string,\n    listener?: Function | EmitterOptions\n  ): void {\n\n    const instance = this,\n\n    { listeners } = instance,\n\n    options: EmitterOptions = is.func(listener)\n      ? { fn: listener as Function }\n      : listener as EmitterOptions\n\n    if (is.object(options) && is.func(options.fn)) {\n      const { name, ns } = parseNamespace(instance.ns, type)\n      options.ns = ns\n      array.push(\n        listeners[name] || (listeners[name] = []),\n        options\n      )\n    }\n    else if (process.env.NODE_ENV === 'development') {\n      logger.fatal(`Invoke emitter.on(type, listener) failed.`)\n    }\n\n  }\n\n  /**\n   * 取消监听\n   *\n   * @param type\n   * @param listener\n   */\n  off(\n    type?: string,\n    listener?: Function\n  ): void {\n\n    const instance = this,\n\n    { listeners } = instance\n\n    if (type) {\n\n      const { name, ns } = parseNamespace(instance.ns, type),\n\n      matchListener = createMatchListener(listener),\n\n      each = function (list: EmitterOptions[], name: string) {\n        array.each(\n          list,\n          function (options: EmitterOptions, index: number) {\n            if (matchListener(options) && matchNamespace(ns, options)) {\n              list.splice(index, 1)\n            }\n          },\n          env.TRUE\n        )\n        if (!list.length) {\n          delete listeners[name]\n        }\n      }\n\n      if (name) {\n        if (listeners[name]) {\n          each(listeners[name], name)\n        }\n      }\n      else if (ns) {\n        object.each(listeners, each)\n      }\n\n    }\n    else {\n      // 清空\n      instance.listeners = {}\n      // 在开发阶段进行警告，比如传了 type 进来，type 是个空值\n      // 但你不知道它是空值\n      if (process.env.NODE_ENV === 'development') {\n        if (arguments.length > 0) {\n          logger.warn(`emitter.off(type) is invoked, but the \"type\" argument is undefined or null.`)\n        }\n      }\n    }\n\n  }\n\n  /**\n   * 是否已监听某个事件\n   *\n   * @param type\n   * @param listener\n   */\n  has(\n    type: string,\n    listener?: Function\n  ): boolean {\n\n    let instance = this,\n\n    { listeners } = instance,\n\n    { name, ns } = parseNamespace(instance.ns, type),\n\n    result = env.TRUE,\n\n    matchListener = createMatchListener(listener),\n\n    each = function (list: EmitterOptions[]) {\n      array.each(\n        list,\n        function (options: EmitterOptions) {\n          if (matchListener(options) && matchNamespace(ns, options)) {\n            return result = env.FALSE\n          }\n        }\n      )\n      return result\n    }\n\n    if (name) {\n      if (listeners[name]) {\n        each(listeners[name])\n      }\n    }\n    else if (ns) {\n      object.each(listeners, each)\n    }\n\n    return !result\n\n  }\n\n}\n\n/**\n * 把事件类型解析成命名空间格式\n *\n * @param ns\n * @param type\n */\nfunction parseNamespace(ns: boolean, type: string): Namespace {\n\n  const result = {\n    name: type,\n    ns: env.EMPTY_STRING,\n  }\n\n  if (ns) {\n    const index = string.indexOf(type, '.')\n    if (index >= 0) {\n      result.name = string.slice(type, 0, index)\n      result.ns = string.slice(type, index + 1)\n    }\n  }\n\n  return result\n\n}\n\n\nfunction matchTrue(options: EmitterOptions) {\n  return env.TRUE\n}\n\n/**\n * 外部会传入 Function 或 EmitterOptions 或 空\n *\n * 这里根据传入值的不同类型，创建不同的判断函数\n *\n * 如果传入的是 EmitterOptions，则全等判断\n *\n * 如果传入的是 Function，则判断函数是否全等\n *\n * 如果传入的是空，则直接返回 true\n *\n * @param listener\n */\nfunction createMatchListener(listener: Function | void): (options: EmitterOptions) => boolean {\n  return is.func(listener)\n      ? function (options: EmitterOptions) {\n          return listener === options.fn\n        }\n      : matchTrue\n}\n\n/**\n * 判断 options 是否能匹配命名空间\n *\n * 如果 namespace 和 options.ns 都不为空，则需完全匹配\n *\n * 如果他们两个其中任何一个为空，则不判断命名空间\n *\n * @param namespace\n * @param options\n */\nfunction matchNamespace(namespace: string, options: EmitterOptions): boolean {\n  const { ns } = options\n  return ns && namespace\n    ? ns === namespace\n    : env.TRUE\n}","import * as is from '../util/is'\nimport toString from './toString'\n\nexport default function (target: any): boolean {\n  return is.func(target) && /native code/.test(toString(target))\n}","import NextTaskInterface from '../../../yox-type/src/interface/NextTask'\nimport TaskInterface from '../../../yox-type/src/interface/Task'\n\nimport * as array from './array'\nimport execute from '../function/execute'\nimport nextTick from '../function/nextTick'\n\nlet shared: NextTask | void\n\nexport default class NextTask implements NextTaskInterface {\n\n  /**\n   * 全局单例\n   */\n  public static shared(): NextTask {\n    return shared || (shared = new NextTask())\n  }\n\n  /**\n   * 异步队列\n   */\n  tasks: TaskInterface[]\n\n  constructor() {\n    this.tasks = []\n  }\n\n  /**\n   * 在队尾添加异步任务\n   */\n  append(func: Function, context?: any): void {\n    const instance = this, { tasks } = instance\n    array.push(\n      tasks,\n      {\n        fn: func,\n        ctx: context\n      }\n    )\n    if (tasks.length === 1) {\n      nextTick(\n        function () {\n          instance.run()\n        }\n      )\n    }\n  }\n\n  /**\n   * 在队首添加异步任务\n   */\n  prepend(func: Function, context?: any): void {\n    const instance = this, { tasks } = instance\n    array.unshift(\n      tasks,\n      {\n        fn: func,\n        ctx: context\n      }\n    )\n    if (tasks.length === 1) {\n      nextTick(\n        function () {\n          instance.run()\n        }\n      )\n    }\n  }\n\n  /**\n   * 清空异步队列\n   */\n  clear(): void {\n    this.tasks.length = 0\n  }\n\n  /**\n   * 立即执行异步任务，并清空队列\n   */\n  run(): void {\n    const { tasks } = this\n    if (tasks.length) {\n      this.tasks = []\n      array.each(\n        tasks,\n        function (task) {\n          execute(task.fn, task.ctx)\n        }\n      )\n    }\n  }\n\n}\n","export const SYNTAX_IF = '#if'\nexport const SYNTAX_ELSE = 'else'\nexport const SYNTAX_ELSE_IF = 'else if'\nexport const SYNTAX_EACH = '#each'\nexport const SYNTAX_PARTIAL = '#partial'\nexport const SYNTAX_IMPORT = '>'\nexport const SYNTAX_SPREAD = '...'\nexport const SYNTAX_COMMENT = /^!\\s/\n\nexport const SLOT_DATA_PREFIX = '$slot_'\nexport const SLOT_NAME_DEFAULT = 'children'\n\nexport const HINT_STRING = 1\nexport const HINT_NUMBER = 2\nexport const HINT_BOOLEAN = 3\n\nexport const DIRECTIVE_ON = 'on'\nexport const DIRECTIVE_LAZY = 'lazy'\nexport const DIRECTIVE_MODEL = 'model'\nexport const DIRECTIVE_EVENT = 'event'\nexport const DIRECTIVE_BINDING = 'binding'\nexport const DIRECTIVE_CUSTOM = 'o'\n\nexport const HOOK_BEFORE_CREATE = 'beforeCreate'\nexport const HOOK_AFTER_CREATE = 'afterCreate'\nexport const HOOK_BEFORE_MOUNT = 'beforeMount'\nexport const HOOK_AFTER_MOUNT = 'afterMount'\nexport const HOOK_BEFORE_UPDATE = 'beforeUpdate'\nexport const HOOK_AFTER_UPDATE = 'afterUpdate'\nexport const HOOK_BEFORE_DESTROY = 'beforeDestroy'\nexport const HOOK_AFTER_DESTROY = 'afterDestroy'\n\n// 路由钩子\nexport const HOOK_BEFORE_ROUTE_ENTER = 'beforeRouteEnter'\nexport const HOOK_AFTER_ROUTE_ENTER = 'afterRouteEnter'\nexport const HOOK_BEFORE_ROUTE_UPDATE = 'beforeRouteUpdate'\nexport const HOOK_AFTER_ROUTE_UPDATE = 'afterRouteUpdate'\nexport const HOOK_BEFORE_ROUTE_LEAVE = 'beforeRouteLeave'\nexport const HOOK_AFTER_ROUTE_LEAVE = 'afterRouteLeave'\n","let guid = 0\n\nexport default function (): number {\n  return ++guid\n}\n","// vnode.data 内部使用的几个字段\n\nexport const ID = '$id'\n\nexport const VNODE = '$vnode'\n\nexport const LOADING = '$loading'\n\nexport const COMPONENT = '$component'\n\nexport const LEAVING = '$leaving'","import * as env from '../../yox-common/src/util/env'\nimport * as object from '../../yox-common/src/util/object'\n\nimport VNode from '../../yox-type/src/vnode/VNode'\nimport Attribute from '../../yox-type/src/vnode/Attribute'\n\nexport function update(api: any, vnode: VNode, oldVnode?: VNode) {\n\n  const { node, nativeAttrs } = vnode,\n\n  oldNativeAttrs = oldVnode && oldVnode.nativeAttrs\n\n  if (nativeAttrs || oldNativeAttrs) {\n\n    const newValue = nativeAttrs || env.EMPTY_OBJECT,\n\n    oldValue = oldNativeAttrs || env.EMPTY_OBJECT\n\n    object.each(\n      newValue,\n      function (attr: Attribute, name: string) {\n        if (!oldValue[name]\n          || attr.value !== oldValue[name].value\n        ) {\n          api.attr(node, name, attr.value)\n        }\n      }\n    )\n\n    object.each(\n      oldValue,\n      function (_: Attribute, name: string) {\n        if (!newValue[name]) {\n          api.removeAttr(node, name)\n        }\n      }\n    )\n\n  }\n\n}\n","import * as env from '../../yox-common/src/util/env'\nimport * as object from '../../yox-common/src/util/object'\n\nimport VNode from '../../yox-type/src/vnode/VNode'\nimport Property from '../../yox-type/src/vnode/Property'\n\nexport function update(api: any, vnode: VNode, oldVnode?: VNode) {\n\n  const { node, nativeProps } = vnode,\n\n  oldNativeProps = oldVnode && oldVnode.nativeProps\n\n  if (nativeProps || oldNativeProps) {\n\n    const newValue = nativeProps || env.EMPTY_OBJECT,\n\n    oldValue = oldNativeProps || env.EMPTY_OBJECT\n\n    object.each(\n      newValue,\n      function (prop: Property, name: string) {\n        if (!oldValue[name]\n          || prop.value !== oldValue[name].value\n        ) {\n          api.prop(node, name, prop.value)\n        }\n      }\n    )\n\n    object.each(\n      oldValue,\n      function (prop: Property, name: string) {\n        if (!newValue[name]) {\n          api.removeProp(node, name, prop.hint)\n        }\n      }\n    )\n\n  }\n\n}","import * as env from '../../yox-common/src/util/env'\nimport * as object from '../../yox-common/src/util/object'\n\nimport VNode from '../../yox-type/src/vnode/VNode'\nimport Directive from '../../yox-type/src/vnode/Directive'\n\nimport * as field from './field'\n\nexport function update(vnode: VNode, oldVnode?: VNode) {\n\n  const { data, directives } = vnode,\n\n  oldDirectives = oldVnode && oldVnode.directives\n\n  if (directives || oldDirectives) {\n\n    const node = data[field.COMPONENT] || vnode.node,\n\n    isKeypathChange = oldVnode && vnode.keypath !== oldVnode.keypath,\n\n    newValue = directives || env.EMPTY_OBJECT,\n\n    oldValue = oldDirectives || env.EMPTY_OBJECT\n\n    object.each(\n      newValue,\n      function (directive: Directive, name: string) {\n        const { once, bind, unbind } = directive.hooks\n        if (!oldValue[name]) {\n          bind(node, directive, vnode)\n        }\n        else if (once\n          || directive.value !== oldValue[name].value\n          || isKeypathChange\n        ) {\n          if (unbind) {\n            unbind(node, oldValue[name], oldVnode as VNode)\n          }\n          bind(node, directive, vnode)\n        }\n      }\n    )\n\n    object.each(\n      oldValue,\n      function (directive: Directive, name: string) {\n        if (!newValue[name]) {\n          const { unbind } = directive.hooks\n          if (unbind) {\n            unbind(node, directive, oldVnode as VNode)\n          }\n        }\n      }\n    )\n\n  }\n\n}\n\nexport function remove(vnode: VNode) {\n  const { directives } = vnode\n  if (directives) {\n    const node = vnode.data[field.COMPONENT] || vnode.node\n    object.each(\n      directives,\n      function (directive: Directive) {\n        const { unbind } = directive.hooks\n        if (unbind) {\n          unbind(node, directive, vnode)\n        }\n      }\n    )\n  }\n}\n","import VNode from '../../yox-type/src/vnode/VNode'\n\nimport isDef from '../../yox-common/src/function/isDef'\nimport * as env from '../../yox-common/src/util/env'\nimport * as object from '../../yox-common/src/util/object'\n\nimport * as field from './field'\n\nexport function update(vnode: VNode, oldVnode?: VNode) {\n\n  let { data, ref, props, slots, model, context } = vnode, node: any\n\n  if (vnode.isComponent) {\n    node = data[field.COMPONENT]\n    // 更新时才要 set\n    // 因为初始化时，所有这些都经过构造函数完成了\n    if (oldVnode) {\n\n      // 更新组件时，如果写了 <Component model=\"xx\"/>\n      // 必须把双向绑定的值写到 props 里，否则一旦 propTypes 加了默认值\n      // 传下去的数据就错了\n      if (isDef(model)) {\n        if (!props) {\n          props = {}\n        }\n        props[node.$model] = model\n      }\n\n      const result = object.merge(props ? node.checkProps(props) : env.UNDEFINED, slots)\n      if (result) {\n        node.forceUpdate(result)\n      }\n    }\n  }\n  else {\n    node = vnode.node\n  }\n\n  if (ref) {\n    const refs = context.$refs\n    if (refs) {\n      refs[ref] = node\n    }\n  }\n\n}\n","import * as is from '../../yox-common/src/util/is'\nimport * as env from '../../yox-common/src/util/env'\nimport * as array from '../../yox-common/src/util/array'\nimport * as object from '../../yox-common/src/util/object'\nimport * as logger from '../../yox-common/src/util/logger'\n\nimport guid from '../../yox-common/src/function/guid'\nimport isDef from '../../yox-common/src/function/isDef'\nimport execute from '../../yox-common/src/function/execute'\n\nimport * as type from '../../yox-type/src/type'\nimport API from '../../yox-type/src/interface/API'\nimport Yox from '../../yox-type/src/interface/Yox'\nimport VNode from '../../yox-type/src/vnode/VNode'\nimport YoxOptions from '../../yox-type/src/options/Yox'\n\nimport * as field from './field'\n\nimport * as nativeAttr from './nativeAttr'\nimport * as nativeProp from './nativeProp'\nimport * as directive from './directive'\nimport * as component from './component'\n\nfunction isPatchable(vnode: VNode, oldVnode: VNode): boolean {\n  return vnode.tag === oldVnode.tag\n    && vnode.key === oldVnode.key\n}\n\nfunction createKeyToIndex(vnodes: (VNode | void)[], startIndex: number, endIndex: number): Record<string, number> {\n\n  let result: Record<string, number> | void,\n\n  vnode: VNode | void,\n\n  key: string | void\n\n  while (startIndex <= endIndex) {\n    vnode = vnodes[startIndex]\n    if (vnode && (key = vnode.key)) {\n      if (!result) {\n        result = {}\n      }\n      result[key] = startIndex\n    }\n    startIndex++\n  }\n\n  return result || env.EMPTY_OBJECT\n\n}\n\nfunction insertBefore(api: API, parentNode: Node, node: Node, referenceNode: Node | void) {\n  if (referenceNode) {\n    api.before(parentNode, node, referenceNode)\n  }\n  else {\n    api.append(parentNode, node)\n  }\n}\n\nfunction createComponent(vnode: VNode, options: YoxOptions) {\n\n  const child = (vnode.parent || vnode.context).createComponent(options, vnode)\n\n  vnode.data[field.COMPONENT] = child\n  vnode.data[field.LOADING] = env.FALSE\n\n  component.update(vnode)\n  directive.update(vnode)\n\n  return child\n\n}\n\nfunction createData(): type.data {\n  const data = {}\n  data[field.ID] = guid()\n  return data\n}\n\nfunction createVnode(api: API, vnode: VNode) {\n\n  let { tag, node, data, isComponent, isComment, isText, isStyle, isOption, children, text, html, context } = vnode\n\n  if (node && data) {\n    return\n  }\n\n  data = createData()\n\n  vnode.data = data\n\n  if (isText) {\n    vnode.node = api.createText(text as string)\n    return\n  }\n\n  if (isComment) {\n    vnode.node = api.createComment(text as string)\n    return\n  }\n\n  if (isComponent) {\n\n    let componentOptions: YoxOptions | undefined = env.UNDEFINED\n\n    // 动态组件，tag 可能为空\n    if (tag) {\n      context.loadComponent(\n        tag,\n        function (options: YoxOptions) {\n          if (object.has(data, field.LOADING)) {\n            // 异步组件\n            if (data[field.LOADING]) {\n              // 尝试使用最新的 vnode\n              if (data[field.VNODE]) {\n                vnode = data[field.VNODE]\n                // 用完就删掉\n                delete data[field.VNODE]\n              }\n              enterVnode(\n                vnode,\n                createComponent(vnode, options)\n              )\n            }\n          }\n          // 同步组件\n          else {\n            componentOptions = options\n          }\n        }\n      )\n    }\n\n    // 不论是同步还是异步组件，都需要一个占位元素\n    vnode.node = api.createComment(env.RAW_COMPONENT)\n\n    if (componentOptions) {\n      createComponent(vnode, componentOptions as YoxOptions)\n    }\n    else {\n      data[field.LOADING] = env.TRUE\n    }\n\n  }\n  else {\n\n    node = vnode.node = api.createElement(vnode.tag as string, vnode.isSvg)\n\n    if (children) {\n      addVnodes(api, node, children)\n    }\n    else if (text) {\n      api.text(node as Element, text, isStyle, isOption)\n    }\n    else if (html) {\n      api.html(node as Element, html, isStyle, isOption)\n    }\n\n    nativeAttr.update(api, vnode)\n    nativeProp.update(api, vnode)\n    component.update(vnode)\n    directive.update(vnode)\n\n  }\n}\n\nfunction addVnodes(api: API, parentNode: Node, vnodes: VNode[], startIndex?: number, endIndex?: number, before?: VNode) {\n  let vnode: VNode, start = startIndex || 0, end = isDef(endIndex) ? endIndex as number : vnodes.length - 1\n  while (start <= end) {\n    vnode = vnodes[start]\n    createVnode(api, vnode)\n    insertVnode(api, parentNode, vnode, before)\n    start++\n  }\n}\n\nfunction insertVnode(api: API, parentNode: Node, vnode: VNode, before?: VNode) {\n\n  const { node, data, context } = vnode,\n\n  hasParent = api.parent(node)\n\n  // 这里不调用 insertBefore，避免判断两次\n  if (before) {\n    api.before(parentNode, node, before.node)\n  }\n  else {\n    api.append(parentNode, node)\n  }\n\n  // 普通元素和组件的占位节点都会走到这里\n  // 但是占位节点不用 enter，而是等组件加载回来之后再调 enter\n  if (!hasParent) {\n    let enter: Function | void = env.UNDEFINED\n    if (vnode.isComponent) {\n      const component = data[field.COMPONENT]\n      if (component) {\n        enter = function () {\n          enterVnode(vnode, component)\n        }\n      }\n    }\n    else if (!vnode.isStatic && !vnode.isText && !vnode.isComment) {\n      enter = function () {\n        enterVnode(vnode)\n      }\n    }\n    if (enter) {\n      // 执行到这时，组件还没有挂载到 DOM 树\n      // 如果此时直接触发 enter，外部还需要做多余的工作，比如 setTimeout\n      // 索性这里直接等挂载到 DOM 数之后再触发\n      context.$observer.nextTask.prepend(enter)\n    }\n  }\n\n}\n\nfunction removeVnodes(api: API, parentNode: Node, vnodes: (VNode | void)[], startIndex?: number, endIndex?: number) {\n  let vnode: VNode | void, start = startIndex || 0, end = isDef(endIndex) ? endIndex as number : vnodes.length - 1\n  while (start <= end) {\n    vnode = vnodes[start]\n    if (vnode) {\n      removeVnode(api, parentNode, vnode)\n    }\n    start++\n  }\n}\n\nfunction removeVnode(api: API, parentNode: Node, vnode: VNode) {\n  const { node } = vnode\n  if (vnode.isStatic || vnode.isText || vnode.isComment) {\n    api.remove(parentNode, node)\n  }\n  else {\n\n    let done = function () {\n      destroyVnode(api, vnode)\n      api.remove(parentNode, node)\n    },\n\n    component: Yox | void\n\n    if (vnode.isComponent) {\n      component = vnode.data[field.COMPONENT]\n      // 异步组件，还没加载成功就被删除了\n      if (!component) {\n        done()\n        return\n      }\n    }\n\n    leaveVnode(vnode, component, done)\n\n  }\n}\n\nfunction destroyVnode(api: API, vnode: VNode) {\n\n  /**\n   * 如果一个子组件的模板是这样写的：\n   *\n   * <div>\n   *   {{#if visible}}\n   *      <slot name=\"children\"/>\n   *   {{/if}}\n   * </div>\n   *\n   * 当 visible 从 true 变为 false 时，不能销毁 slot 导入的任何 vnode\n   * 不论是组件或是元素，都不能销毁，只能简单的 remove，\n   * 否则子组件下一次展现它们时，会出问题\n   */\n\n  const { data, children, parent, slot } = vnode\n\n  // 销毁插槽组件\n\n  // 如果宿主组件正在销毁，$vnode 属性会在调 destroy() 之前被删除\n  // 这里表示的是宿主组件还没被销毁\n  // 如果宿主组件被销毁了，则它的一切都要进行销毁\n  if (slot && parent && parent.$vnode) {\n    // 如果更新时，父组件没有传入该 slot，则子组件需要销毁该 slot\n    const slots = parent.get(slot)\n    // slots 要么没有，要么是数组，不可能是别的\n    if (slots && array.has(slots, vnode)) {\n      return\n    }\n  }\n\n  if (vnode.isComponent) {\n    const component = data[field.COMPONENT]\n    if (component) {\n      directive.remove(vnode)\n      component.destroy()\n    }\n    else [\n      data[field.LOADING] = env.FALSE\n    ]\n  }\n  else {\n    directive.remove(vnode)\n    if (children) {\n      array.each(\n        children,\n        function (child: VNode) {\n          destroyVnode(api, child)\n        }\n      )\n    }\n  }\n\n}\n\n/**\n * vnode 触发 enter hook 时，外部一般会做一些淡入动画\n */\nfunction enterVnode(vnode: VNode, component: Yox | void) {\n  // 如果组件根元素和组件本身都写了 transition\n  // 优先用外面定义的\n  // 因为这明确是在覆盖配置\n  let { data, transition } = vnode\n  if (component && !transition) {\n    // 再看组件根元素是否有 transition\n    transition = (component.$vnode as VNode).transition\n  }\n  execute(data[field.LEAVING])\n  if (transition) {\n    const { enter } = transition\n    if (enter) {\n      enter(\n        vnode.node as HTMLElement\n      )\n      return\n    }\n  }\n}\n\n/**\n * vnode 触发 leave hook 时，外部一般会做一些淡出动画\n * 动画结束后才能移除节点，否则无法产生动画\n * 这里由外部调用 done 来通知内部动画结束\n */\nfunction leaveVnode(vnode: VNode, component: Yox | void, done: () => void) {\n  // 如果组件根元素和组件本身都写了 transition\n  // 优先用外面定义的\n  // 因为这明确是在覆盖配置\n  let { data, transition } = vnode\n  if (component && !transition) {\n    // 再看组件根元素是否有 transition\n    transition = (component.$vnode as VNode).transition\n  }\n  if (transition) {\n    const { leave } = transition\n    if (leave) {\n      leave(\n        vnode.node as HTMLElement,\n        data[field.LEAVING] = function () {\n          if (data[field.LEAVING]) {\n            done()\n            data[field.LEAVING] = env.UNDEFINED\n          }\n        }\n      )\n      return\n    }\n  }\n  // 如果没有淡出动画，直接结束\n  done()\n}\n\nfunction updateChildren(api: API, parentNode: Node, children: VNode[], oldChildren: (VNode | void)[]) {\n\n  let startIndex = 0,\n  endIndex = children.length - 1,\n  startVnode = children[startIndex],\n  endVnode = children[endIndex],\n\n  oldStartIndex = 0,\n  oldEndIndex = oldChildren.length - 1,\n  oldStartVnode = oldChildren[oldStartIndex],\n  oldEndVnode = oldChildren[oldEndIndex],\n\n  oldKeyToIndex: Record<string, number> | void,\n  oldIndex: number | void\n\n  while (oldStartIndex <= oldEndIndex && startIndex <= endIndex) {\n\n    // 下面有设为 UNDEFINED 的逻辑\n    if (!startVnode) {\n      startVnode = children[++startIndex];\n    }\n    else if (!endVnode) {\n      endVnode = children[--endIndex];\n    }\n    else if (!oldStartVnode) {\n      oldStartVnode = oldChildren[++oldStartIndex]\n    }\n    else if (!oldEndVnode) {\n      oldEndVnode = oldChildren[--oldEndIndex]\n    }\n\n    // 从头到尾比较，位置相同且值得 patch\n    else if (isPatchable(startVnode, oldStartVnode)) {\n      patch(api, startVnode, oldStartVnode)\n      startVnode = children[++startIndex]\n      oldStartVnode = oldChildren[++oldStartIndex]\n    }\n\n    // 从尾到头比较，位置相同且值得 patch\n    else if (isPatchable(endVnode, oldEndVnode)) {\n      patch(api, endVnode, oldEndVnode)\n      endVnode = children[--endIndex]\n      oldEndVnode = oldChildren[--oldEndIndex]\n    }\n\n    // 比较完两侧的节点，剩下就是 位置发生改变的节点 和 全新的节点\n\n    // 当 endVnode 和 oldStartVnode 值得 patch\n    // 说明元素被移到右边了\n    else if (isPatchable(endVnode, oldStartVnode)) {\n      patch(api, endVnode, oldStartVnode)\n      insertBefore(\n        api,\n        parentNode,\n        oldStartVnode.node,\n        api.next(oldEndVnode.node)\n      )\n      endVnode = children[--endIndex]\n      oldStartVnode = oldChildren[++oldStartIndex]\n    }\n\n    // 当 oldEndVnode 和 startVnode 值得 patch\n    // 说明元素被移到左边了\n    else if (isPatchable(startVnode, oldEndVnode)) {\n      patch(api, startVnode, oldEndVnode)\n      insertBefore(\n        api,\n        parentNode,\n        oldEndVnode.node,\n        oldStartVnode.node\n      )\n      startVnode = children[++startIndex]\n      oldEndVnode = oldChildren[--oldEndIndex]\n    }\n\n    // 尝试同级元素的 key\n    else {\n\n      if (!oldKeyToIndex) {\n        oldKeyToIndex = createKeyToIndex(oldChildren, oldStartIndex, oldEndIndex)\n      }\n\n      // 新节点之前的位置\n      oldIndex = startVnode.key\n        ? oldKeyToIndex[startVnode.key]\n        : env.UNDEFINED\n\n      // 移动元素\n      if (isDef(oldIndex)) {\n        patch(api, startVnode, oldChildren[oldIndex as number] as VNode)\n        oldChildren[oldIndex as number] = env.UNDEFINED\n      }\n      // 新元素\n      else {\n        createVnode(api, startVnode)\n      }\n\n      insertVnode(api, parentNode, startVnode, oldStartVnode)\n\n      startVnode = children[++startIndex]\n\n    }\n  }\n\n  if (oldStartIndex > oldEndIndex) {\n    addVnodes(\n      api,\n      parentNode,\n      children,\n      startIndex,\n      endIndex,\n      children[endIndex + 1]\n    )\n  }\n  else if (startIndex > endIndex) {\n    removeVnodes(\n      api,\n      parentNode,\n      oldChildren,\n      oldStartIndex,\n      oldEndIndex\n    )\n  }\n}\n\nexport function patch(api: API, vnode: VNode, oldVnode: VNode) {\n\n  if (vnode === oldVnode) {\n    return\n  }\n\n  const { node, data } = oldVnode\n\n  // 如果不能 patch，则删除重建\n  if (!isPatchable(vnode, oldVnode)) {\n    // 同步加载的组件，初始化时不会传入占位节点\n    // 它内部会自动生成一个注释节点，当它的根 vnode 和注释节点对比时，必然无法 patch\n    // 于是走进此分支，为新组件创建一个 DOM 节点，然后继续 createComponent 后面的流程\n    const parentNode = api.parent(node)\n    createVnode(api, vnode)\n    if (parentNode) {\n      insertVnode(api, parentNode, vnode, oldVnode)\n      removeVnode(api, parentNode, oldVnode)\n    }\n    return\n  }\n\n  vnode.node = node\n  vnode.data = data\n\n  // 组件正在异步加载，更新为最新的 vnode\n  // 当异步加载完成时才能用上最新的 vnode\n  if (oldVnode.isComponent && data[field.LOADING]) {\n    data[field.VNODE] = vnode\n    return\n  }\n\n  // 两棵静态子树就别折腾了\n  if (vnode.isStatic && oldVnode.isStatic) {\n    return\n  }\n\n  nativeAttr.update(api, vnode, oldVnode)\n  nativeProp.update(api, vnode, oldVnode)\n  component.update(vnode, oldVnode)\n  directive.update(vnode, oldVnode)\n\n  const { text, html, children, isStyle, isOption } = vnode,\n\n  oldText = oldVnode.text,\n  oldHtml = oldVnode.html,\n  oldChildren = oldVnode.children\n\n  if (is.string(text)) {\n    if (text !== oldText) {\n      api.text(node, text, isStyle, isOption)\n    }\n  }\n  else if (is.string(html)) {\n    if (html !== oldHtml) {\n      api.html(node as Element, html, isStyle, isOption)\n    }\n  }\n  // 两个都有需要 diff\n  else if (children && oldChildren) {\n    if (children !== oldChildren) {\n      updateChildren(api, node, children, oldChildren)\n    }\n  }\n  // 有新的没旧的 - 新增节点\n  else if (children) {\n    if (is.string(oldText) || is.string(oldHtml)) {\n      api.text(node, env.EMPTY_STRING, isStyle)\n    }\n    addVnodes(api, node, children)\n  }\n  // 有旧的没新的 - 删除节点\n  else if (oldChildren) {\n    removeVnodes(api, node, oldChildren)\n  }\n  // 有旧的 text 没有新的 text\n  else if (is.string(oldText) || is.string(oldHtml)) {\n    api.text(node, env.EMPTY_STRING, isStyle)\n  }\n\n}\n\nexport function create(api: API, node: Node, context: Yox, keypath: string): VNode {\n  return {\n    tag: api.tag(node),\n    data: createData(),\n    node,\n    context,\n    keypath,\n  }\n}\n\nexport function destroy(api: API, vnode: VNode, isRemove?: boolean) {\n  if (isRemove) {\n    const parentNode = api.parent(vnode.node)\n    if (parentNode) {\n      removeVnode(api, parentNode, vnode)\n    }\n    else if (process.env.NODE_ENV === 'development') {\n      logger.fatal(`Can't destroy vnode without parent node.`)\n    }\n  }\n  else {\n    destroyVnode(api, vnode)\n  }\n}\n","import * as is from '../util/is'\nimport isDef from './isDef'\n\nexport default function (target: any, defaultValue?: number): number {\n  return is.numeric(target)\n    ? +target\n    : isDef(defaultValue)\n      ? defaultValue as number\n      : 0\n}\n","import * as env from '../util/env'\n\nexport default function (target: any): boolean {\n  return target === env.UNDEFINED\n}\n","import * as config from '../../yox-config/src/config'\nimport * as type from '../../yox-type/src/type'\n\nimport isDef from '../../yox-common/src/function/isDef'\nimport isUndef from '../../yox-common/src/function/isUndef'\nimport execute from '../../yox-common/src/function/execute'\nimport toString from '../../yox-common/src/function/toString'\n\nimport * as is from '../../yox-common/src/util/is'\nimport * as env from '../../yox-common/src/util/env'\nimport * as array from '../../yox-common/src/util/array'\nimport * as object from '../../yox-common/src/util/object'\nimport * as logger from '../../yox-common/src/util/logger'\nimport * as keypathUtil from '../../yox-common/src/util/keypath'\n\nimport CustomEvent from '../../yox-common/src/util/CustomEvent'\n\nimport Yox from '../../yox-type/src/interface/Yox'\nimport VNode from '../../yox-type/src/vnode/VNode'\nimport DirectiveHooks from '../../yox-type/src/hooks/Directive'\nimport TransitionHooks from '../../yox-type/src/hooks/Transition'\nimport ValueHolder from '../../yox-type/src/interface/ValueHolder'\n\nfunction setPair(target: any, name: string, key: string, value: any) {\n  const data = target[name] || (target[name] = {})\n  data[key] = value\n}\n\nexport function render(\n  context: Yox,\n  template: Function,\n  filters: Record<string, Function>,\n  partials: Record<string, Function>,\n  directives: Record<string, DirectiveHooks>,\n  transitions: Record<string, TransitionHooks>\n) {\n\n  let $scope: type.data = { $keypath: env.EMPTY_STRING },\n\n  $stack = [ $scope ],\n\n  $vnode: any,\n\n  vnodeStack: VNode[][] = [],\n\n  localPartials: Record<string, Function> = {},\n\n  findValue = function (stack: any[], index: number, key: string, lookup: boolean, depIgnore?: boolean, defaultKeypath?: string): ValueHolder {\n\n    let scope = stack[index], keypath = keypathUtil.join(scope.$keypath, key), value: any = stack, holder = env.VALUE_HOLDER\n\n    // 如果最后还是取不到值，用回最初的 keypath\n    if (isUndef(defaultKeypath)) {\n      defaultKeypath = keypath\n    }\n\n    // 如果取的是 scope 上直接有的数据，如 $keypath\n    if (isDef(scope[key])) {\n      value = scope[key]\n    }\n\n    // 如果取的是数组项，则要更进一步\n    else if (isDef(scope.$item)) {\n      scope = scope.$item\n\n      // 到这里 scope 可能为空\n      // 比如 new Array(10) 然后遍历这个数组，每一项肯定是空\n\n      // 取 this\n      if (key === env.EMPTY_STRING) {\n        value = scope\n      }\n      // 取 this.xx\n      else if (scope != env.NULL && isDef(scope[key])) {\n        value = scope[key]\n      }\n    }\n\n    if (value === stack) {\n      // 正常取数据\n      value = context.get(keypath, stack, depIgnore)\n      if (value === stack) {\n\n        if (lookup && index > 0) {\n          if (process.env.NODE_ENV === 'development') {\n            logger.debug(`Can't find [${keypath}], start looking up.`)\n          }\n          return findValue(stack, index - 1, key, lookup, depIgnore, defaultKeypath)\n        }\n\n        // 到头了，最后尝试过滤器\n        const result = object.get(filters, key)\n        if (result) {\n          holder = result\n          holder.keypath = key\n        }\n        else {\n          holder.value = env.UNDEFINED\n          holder.keypath = defaultKeypath\n        }\n        return holder\n\n      }\n    }\n\n    holder.value = value\n    holder.keypath = keypath\n\n    return holder\n\n  },\n\n  createEventListener = function (type: string): type.listener {\n    return function (event: CustomEvent, data?: type.data) {\n      // 事件名称相同的情况，只可能是监听 DOM 事件，比如写一个 Button 组件\n      // <button on-click=\"click\"> 纯粹的封装了一个原生 click 事件\n      if (type !== event.type) {\n        event = new CustomEvent(type, event)\n      }\n      context.fire(event, data)\n    }\n  },\n\n  createMethodListener = function (\n    name: string,\n    args: Function | void,\n    stack: any[]\n  ): type.listener {\n    return function (event: CustomEvent, data?: type.data) {\n\n      const method = context[name]\n\n      if (event instanceof CustomEvent) {\n\n        let result: any = env.UNDEFINED\n\n        if (args) {\n          const scope = array.last(stack)\n          if (scope) {\n            scope.$event = event\n            scope.$data = data\n            result = execute(method, context, args(stack))\n            scope.$event =\n            scope.$data = env.UNDEFINED\n          }\n        }\n        else {\n          result = execute(method, context, data ? [event, data] : event)\n        }\n\n        return result\n\n      }\n      else {\n        execute(\n          method,\n          context,\n          args ? args(stack) : env.UNDEFINED\n        )\n      }\n\n    }\n  },\n\n  createGetter = function (getter: Function, stack: any[]): type.getter {\n    return function () {\n      return getter(stack)\n    }\n  },\n\n  renderTextVnode = function (text: string) {\n    const vnodeList = array.last(vnodeStack)\n    if (vnodeList) {\n      const lastVnode = array.last(vnodeList)\n      if (lastVnode && lastVnode.isText) {\n        (lastVnode.text as string) += text\n      }\n      else {\n        const textVnode: any = {\n          isText: env.TRUE,\n          text,\n          context,\n          keypath: $scope.$keypath,\n        }\n        array.push(vnodeList, textVnode)\n      }\n    }\n  },\n\n  renderAttributeVnode = function (name: string, value: string | void) {\n    if ($vnode.isComponent) {\n      setPair($vnode, 'props', name, value)\n    }\n    else {\n      setPair($vnode, 'nativeAttrs', name, { name, value })\n    }\n  },\n\n  renderPropertyVnode = function (name: string, hint: type.hint, value: any | void) {\n    setPair($vnode, 'nativeProps', name, { name, value, hint })\n  },\n\n  renderLazyVnode = function (name: string, value: type.lazy) {\n    setPair($vnode, 'lazy', name, value)\n  },\n\n  renderTransitionVnode = function (name: string) {\n    $vnode.transition = transitions[name]\n    if (process.env.NODE_ENV === 'development') {\n      if (!$vnode.transition) {\n        logger.fatal(`transition [${name}] is not found.`)\n      }\n    }\n  },\n\n  renderBindingVnode = function (name: string, holder: ValueHolder, hint?: type.hint): any {\n\n    const key = keypathUtil.join(config.DIRECTIVE_BINDING, name)\n\n    setPair(\n      $vnode,\n      'directives',\n      key,\n      {\n        ns: config.DIRECTIVE_BINDING,\n        name,\n        key,\n        hooks: directives[config.DIRECTIVE_BINDING],\n        binding: holder.keypath,\n        hint,\n      }\n    )\n\n    return holder.value\n\n  },\n\n  renderModelVnode = function (holder: ValueHolder) {\n\n    $vnode.model = holder.value\n\n    setPair(\n      $vnode,\n      'directives',\n      config.DIRECTIVE_MODEL,\n      {\n        ns: config.DIRECTIVE_MODEL,\n        name: env.EMPTY_STRING,\n        key: config.DIRECTIVE_MODEL,\n        binding: holder.keypath,\n        hooks: directives[config.DIRECTIVE_MODEL]\n      }\n    )\n  },\n\n  renderEventMethodVnode = function (\n    name: string, key: string, value: string,\n    method: string, args: Function | void\n  ) {\n    setPair(\n      $vnode,\n      'directives',\n      key,\n      {\n        ns: config.DIRECTIVE_EVENT,\n        name,\n        key,\n        value,\n        hooks: directives[config.DIRECTIVE_EVENT],\n        handler: createMethodListener(method as string, args, $stack)\n      }\n    )\n  },\n\n  renderEventNameVnode = function (\n    name: string, key: string, value: string,\n    event: string\n  ) {\n    setPair(\n      $vnode,\n      'directives',\n      key,\n      {\n        ns: config.DIRECTIVE_EVENT,\n        name,\n        key,\n        value,\n        hooks: directives[config.DIRECTIVE_EVENT],\n        handler: createEventListener(event)\n      }\n    )\n  },\n\n  renderDirectiveVnode = function (\n    name: string, key: string, value: string,\n    method: string | void, args: Function | void, getter: Function | void\n  ) {\n\n    const hooks = directives[name]\n\n    if (process.env.NODE_ENV === 'development') {\n      if (!hooks) {\n        logger.fatal(`directive [${name}] is not found.`)\n      }\n    }\n\n    setPair(\n      $vnode,\n      'directives',\n      key,\n      {\n        ns: config.DIRECTIVE_CUSTOM,\n        name,\n        key,\n        value,\n        hooks,\n        getter: getter ? createGetter(getter, $stack) : env.UNDEFINED,\n        handler: method ? createMethodListener(method, args, $stack) : env.UNDEFINED,\n      }\n    )\n\n  },\n\n  renderSpreadVnode = function (holder: ValueHolder) {\n\n    const { value, keypath } = holder\n\n    // 如果为 null 或 undefined，则不需要 warn\n    if (value != env.NULL) {\n      // 数组也算一种对象，要排除掉\n      if (is.object(value) && !is.array(value)) {\n\n        object.each(\n          value,\n          function (value, key) {\n            setPair($vnode, 'props', key, value)\n          }\n        )\n\n        if (keypath) {\n          const key = keypathUtil.join(config.DIRECTIVE_BINDING, keypath)\n          setPair(\n            $vnode,\n            'directives',\n            key,\n            {\n              ns: config.DIRECTIVE_BINDING,\n              name: env.EMPTY_STRING,\n              key,\n              hooks: directives[config.DIRECTIVE_BINDING],\n              binding: keypathUtil.join(keypath, env.RAW_WILDCARD),\n            }\n          )\n        }\n\n      }\n    }\n\n  },\n\n  renderElementVnode = function (\n    vnode: type.data,\n    tag: string | void,\n    attrs: Function | void,\n    childs: Function | void,\n    slots: Record<string, Function> | void\n  ) {\n\n    if (tag) {\n      const componentName = context.get(tag)\n      if (process.env.NODE_ENV === 'development') {\n        if (!componentName) {\n          logger.warn(`Dynamic component [${tag}] is not found.`)\n        }\n      }\n      vnode.tag = componentName\n    }\n\n    if (attrs) {\n      $vnode = vnode\n      attrs()\n      $vnode = env.UNDEFINED\n    }\n\n    // childs 和 slots 不可能同时存在\n    if (childs) {\n      vnodeStack.push(vnode.children = [])\n      childs()\n      array.pop(vnodeStack)\n    }\n    else if (slots) {\n      const renderSlots = {}\n      object.each(\n        slots,\n        function (slot: Function, name: string) {\n          vnodeStack.push([])\n          slot()\n          const vnodes = array.pop(vnodeStack) as VNode[]\n          renderSlots[name] = vnodes.length ? vnodes : env.UNDEFINED\n        }\n      )\n      vnode.slots = renderSlots\n    }\n\n    vnode.context = context\n    vnode.keypath = $scope.$keypath\n\n    const vnodeList = array.last(vnodeStack)\n    if (vnodeList) {\n      array.push(vnodeList, vnode)\n    }\n\n    return vnode\n\n  },\n\n  renderExpressionIdentifier = function (\n    name: string,\n    lookup: boolean,\n    offset?: number,\n    holder?: boolean,\n    depIgnore?: boolean,\n    stack?: any[]\n  ) {\n    const myStack = stack || $stack,\n    result = findValue(\n      myStack,\n      myStack.length - ((offset || 0) + 1),\n      name,\n      lookup,\n      depIgnore\n    )\n    return holder ? result : result.value\n  },\n\n  renderExpressionMemberKeypath = function (\n    identifier: string,\n    runtimeKeypath: string[]\n  ) {\n    array.unshift(runtimeKeypath, identifier)\n    return array.join(runtimeKeypath, keypathUtil.separator)\n  },\n\n  renderExpressionMemberLiteral = function (\n    value: any,\n    staticKeypath: string | void,\n    runtimeKeypath: string[] | void,\n    holder: boolean | void\n  ) {\n    if (isDef(runtimeKeypath)) {\n      staticKeypath = array.join(runtimeKeypath as string[], keypathUtil.separator)\n    }\n    const result = env.VALUE_HOLDER, match = object.get(value, staticKeypath as string)\n    result.keypath = env.UNDEFINED\n    result.value = match ? match.value : env.UNDEFINED\n    return holder ? result : result.value\n  },\n\n  renderExpressionCall = function (\n    fn: Function | void,\n    args: any[] | void,\n    holder: boolean | void\n  ) {\n    const result = env.VALUE_HOLDER\n    result.keypath = env.UNDEFINED\n    // 当 holder 为 true, args 为空时，args 会传入 false\n    result.value = execute(fn, context, args || env.UNDEFINED)\n    return holder ? result : result.value\n  },\n\n  // <slot name=\"xx\"/>\n  renderSlot = function (name: string, defaultRender?: Function) {\n\n    const vnodeList = array.last(vnodeStack),\n\n    vnodes = context.get(name)\n\n    if (vnodeList) {\n      if (vnodes) {\n        array.each(\n          vnodes,\n          function (vnode: VNode) {\n            array.push(vnodeList, vnode)\n            vnode.slot = name\n            vnode.parent = context\n          }\n        )\n      }\n      else if (defaultRender) {\n        defaultRender()\n      }\n    }\n\n  },\n\n  // {{#partial name}}\n  //   xx\n  // {{/partial}}\n  renderPartial = function (name: string, render: Function) {\n    localPartials[name] = render\n  },\n\n  // {{> name}}\n  renderImport = function (name: string) {\n    if (localPartials[name]) {\n      localPartials[name]()\n    }\n    else {\n      const partial = partials[name]\n      if (partial) {\n        partial(\n          renderExpressionIdentifier,\n          renderExpressionMemberKeypath,\n          renderExpressionMemberLiteral,\n          renderExpressionCall,\n          renderTextVnode,\n          renderAttributeVnode,\n          renderPropertyVnode,\n          renderLazyVnode,\n          renderTransitionVnode,\n          renderBindingVnode,\n          renderModelVnode,\n          renderEventMethodVnode,\n          renderEventNameVnode,\n          renderDirectiveVnode,\n          renderSpreadVnode,\n          renderElementVnode,\n          renderSlot,\n          renderPartial,\n          renderImport,\n          renderEach,\n          toString\n        )\n      }\n      else if (process.env.NODE_ENV === 'development') {\n        logger.fatal(`partial [${name}] is not found.`)\n      }\n    }\n  },\n\n  eachHandler = function (\n    generate: Function,\n    item: any,\n    key: string | number,\n    keypath: string,\n    index: string | void,\n    length: number | void\n  ) {\n\n    const lastScope = $scope, lastStack = $stack\n\n    // each 会改变 keypath\n    $scope = { $keypath: keypath }\n    $stack = lastStack.concat($scope)\n\n    // 避免模板里频繁读取 list.length\n    if (isDef(length)) {\n      $scope.$length = length\n    }\n\n    // 业务层是否写了 expr:index\n    if (index) {\n      $scope[index] = key\n    }\n\n    // 无法通过 context.get($keypath + key) 读取到数据的场景\n    // 必须把 item 写到 scope\n    if (!keypath) {\n      $scope.$item = item\n    }\n\n    generate()\n\n    $scope = lastScope\n    $stack = lastStack\n\n  },\n\n  renderEach = function (\n    generate: Function,\n    from: ValueHolder,\n    to: ValueHolder | void,\n    equal: boolean | void,\n    index: string | void\n  ) {\n\n    const fromValue = from.value,\n\n    fromKeypath = from.keypath\n\n    if (to) {\n      let toValue = to.value, count = 0\n      if (fromValue < toValue) {\n        if (equal) {\n          for (let i = fromValue; i <= toValue; i++) {\n            eachHandler(\n              generate,\n              i,\n              count++,\n              env.EMPTY_STRING,\n              index\n            )\n          }\n        }\n        else {\n          for (let i = fromValue; i < toValue; i++) {\n            eachHandler(\n              generate,\n              i,\n              count++,\n              env.EMPTY_STRING,\n              index\n            )\n          }\n        }\n      }\n      else {\n        if (equal) {\n          for (let i = fromValue; i >= toValue; i--) {\n            eachHandler(\n              generate,\n              i,\n              count++,\n              env.EMPTY_STRING,\n              index\n            )\n          }\n        }\n        else {\n          for (let i = fromValue; i > toValue; i--) {\n            eachHandler(\n              generate,\n              i,\n              count++,\n              env.EMPTY_STRING,\n              index\n            )\n          }\n        }\n      }\n    }\n    else {\n      if (is.array(fromValue)) {\n        for (let i = 0, length = fromValue.length; i < length; i++) {\n          eachHandler(\n            generate,\n            fromValue[i],\n            i,\n            fromKeypath\n              ? keypathUtil.join(fromKeypath, env.EMPTY_STRING + i)\n              : env.EMPTY_STRING,\n            index,\n            length\n          )\n        }\n      }\n      else if (is.object(fromValue)) {\n        for (let key in fromValue) {\n          eachHandler(\n            generate,\n            fromValue[key],\n            key,\n            fromKeypath\n              ? keypathUtil.join(fromKeypath, key)\n              : env.EMPTY_STRING,\n            index\n          )\n        }\n      }\n    }\n\n  }\n\n  return template(\n    renderExpressionIdentifier,\n    renderExpressionMemberKeypath,\n    renderExpressionMemberLiteral,\n    renderExpressionCall,\n    renderTextVnode,\n    renderAttributeVnode,\n    renderPropertyVnode,\n    renderLazyVnode,\n    renderTransitionVnode,\n    renderBindingVnode,\n    renderModelVnode,\n    renderEventMethodVnode,\n    renderEventNameVnode,\n    renderDirectiveVnode,\n    renderSpreadVnode,\n    renderElementVnode,\n    renderSlot,\n    renderPartial,\n    renderImport,\n    renderEach,\n    toString\n  )\n\n}","import execute from '../../yox-common/src/function/execute'\n\nimport * as is from '../../yox-common/src/util/is'\nimport * as env from '../../yox-common/src/util/env'\nimport * as array from '../../yox-common/src/util/array'\nimport * as object from '../../yox-common/src/util/object'\n\nimport * as type from '../../yox-type/src/type'\nimport ComputedInterface from '../../yox-type/src/watcher/Computed'\nimport ObserverInterface from '../../yox-type/src/watcher/Observer'\nimport WatcherOptions from '../../yox-type/src/options/Watcher'\n\n/**\n * 计算属性\n *\n * 可配置 cache、deps、get、set 等\n */\nexport default class Computed implements ComputedInterface {\n\n  static current?: Computed\n\n  /**\n   * 对外的构造器，把用户配置的计算属性对象转换成内部对象\n   *\n   * @param keypath\n   * @param observer\n   * @param options\n   */\n  static build(keypath: string, observer: ObserverInterface, options: any): Computed | void {\n\n    let cache = env.TRUE,\n\n    sync = env.TRUE,\n\n    deps: string[] = [],\n\n    getter: type.getter | void,\n\n    setter: type.setter | void\n\n    if (is.func(options)) {\n      getter = options\n    }\n    else if (is.object(options)) {\n      if (is.boolean(options.cache)) {\n        cache = options.cache\n      }\n      if (is.boolean(options.sync)) {\n        sync = options.sync\n      }\n      // 因为可能会修改 deps，所以这里创建一个新的 deps，避免影响外部传入的 deps\n      if (is.array(options.deps)) {\n        deps = object.copy(options.deps)\n      }\n      if (is.func(options.get)) {\n        getter = options.get\n      }\n      if (is.func(options.set)) {\n        setter = options.set\n      }\n    }\n\n    if (getter) {\n      return new Computed(keypath, sync, cache, deps, observer, getter, setter)\n    }\n\n  }\n\n  keypath: string\n\n  value: any\n\n  deps: string[]\n\n  cache: boolean\n\n  fixed: boolean\n\n  context: any\n\n  observer: ObserverInterface\n\n  getter: type.getter\n\n  setter: type.setter | void\n\n  watcher: type.watcher\n\n  watcherOptions: WatcherOptions\n\n  unique: Record<string, boolean>\n\n  private constructor(\n    keypath: string,\n    sync: boolean,\n    cache: boolean,\n    deps: string[],\n    observer: ObserverInterface,\n    getter: type.getter,\n    setter: type.setter | void\n  ) {\n\n    const instance = this\n\n    instance.keypath = keypath\n    instance.cache = cache\n\n    instance.deps = deps\n\n    instance.context = observer.context\n    instance.observer = observer\n    instance.getter = getter\n    instance.setter = setter\n\n    instance.unique = {}\n\n    instance.watcher = function ($0: any, $1: any, $2: string) {\n\n      // 计算属性的依赖变了会走进这里\n\n      const oldValue = instance.value,\n      newValue = instance.get(env.TRUE)\n\n      if (newValue !== oldValue) {\n        observer.diff(keypath, newValue, oldValue)\n      }\n\n    }\n\n    instance.watcherOptions = {\n      sync,\n      watcher: instance.watcher\n    }\n\n    if (instance.fixed = !array.falsy(deps)) {\n      array.each(\n        deps,\n        function (dep: string) {\n          observer.watch(\n            dep,\n            instance.watcherOptions\n          )\n        }\n      )\n    }\n\n  }\n\n  /**\n   * 读取计算属性的值\n   *\n   * @param force 是否强制刷新缓存\n   */\n  get(force?: boolean): any {\n\n    const instance = this,\n\n    { getter, context } = instance\n\n    // 禁用缓存\n    if (!instance.cache) {\n      instance.value = execute(getter, context)\n    }\n\n    // 减少取值频率，尤其是处理复杂的计算规则\n    else if (force || !object.has(instance, env.RAW_VALUE)) {\n\n      // 如果写死了依赖，则不需要收集依赖\n      if (instance.fixed) {\n        instance.value = execute(getter, context)\n      }\n      else {\n\n        // 清空上次收集的依赖\n        instance.unbind()\n\n        // 开始收集新的依赖\n        const lastComputed = Computed.current\n        Computed.current = instance\n\n        instance.value = execute(getter, context)\n\n        // 绑定新的依赖\n        instance.bind()\n\n        Computed.current = lastComputed\n      }\n\n    }\n\n    return instance.value\n  }\n\n  set(value: any): void {\n    const { setter, context } = this\n    if (setter) {\n      setter.call(context, value)\n    }\n  }\n\n  /**\n   * 添加依赖\n   *\n   * 这里只是为了保证依赖唯一，最后由 bind() 实现绑定\n   *\n   * @param dep\n   */\n  add(dep: string): void {\n    this.unique[dep] = env.TRUE\n  }\n\n  /**\n   * 绑定依赖\n   */\n  bind(): void {\n\n    const { unique, deps, observer, watcherOptions } = this\n\n    object.each(\n      unique,\n      function (_: any, dep: string) {\n        array.push(deps, dep)\n        observer.watch(\n          dep,\n          watcherOptions\n        )\n      }\n    )\n\n    // 用完重置\n    // 方便下次收集依赖\n    this.unique = {}\n\n  }\n\n  /**\n   * 解绑依赖\n   */\n  unbind(): void {\n\n    const { deps, observer, watcher } = this\n\n    array.each(\n      deps,\n      function (dep: string) {\n        observer.unwatch(dep, watcher)\n      },\n      env.TRUE\n    )\n\n    deps.length = 0\n\n  }\n\n}","import * as env from '../../../yox-common/src/util/env'\nimport * as array from '../../../yox-common/src/util/array'\nimport * as string from '../../../yox-common/src/util/string'\nimport * as keypathUtil from '../../../yox-common/src/util/keypath'\n\n/**\n * 从 keypath 数组中选择和 keypath 最匹配的那一个\n *\n * @param sorted 经过排序的 keypath 数组\n * @param keypath\n */\nexport default function (sorted: string[], keypath: string): any {\n\n  let result: any\n\n  array.each(\n    sorted,\n    function (prefix: string) {\n      const length = keypathUtil.match(keypath, prefix)\n      if (length >= 0) {\n        result = {\n          name: prefix,\n          prop: string.slice(keypath, length)\n        }\n        return env.FALSE\n      }\n    }\n  )\n\n  return result\n\n}","import * as env from '../../../yox-common/src/util/env'\nimport * as object from '../../../yox-common/src/util/object'\n\nexport default function (source: any, keypath: string): any {\n\n  if (source == env.NULL || keypath === env.EMPTY_STRING) {\n    return source\n  }\n\n  const result = object.get(source, keypath)\n  if (result) {\n    return result.value\n  }\n\n}","import * as is from '../../../yox-common/src/util/is'\nimport * as env from '../../../yox-common/src/util/env'\n\n/**\n * 对比新旧数组\n *\n * @param newValue\n * @param oldValue\n * @param callback\n */\nexport default function (\n  newValue: any,\n  oldValue: any,\n  callback: (key: string, newValue: any, oldValue: any) => void\n): true | void {\n\n  const newIsString = is.string(newValue),\n\n  oldIsString = is.string(oldValue)\n\n  if (newIsString || oldIsString) {\n    callback(\n      env.RAW_LENGTH,\n      newIsString ? newValue.length : env.UNDEFINED,\n      oldIsString ? oldValue.length : env.UNDEFINED\n    )\n    return env.TRUE\n  }\n\n}","import * as is from '../../../yox-common/src/util/is'\nimport * as env from '../../../yox-common/src/util/env'\n\n/**\n * 对比新旧数组\n *\n * @param newValue\n * @param oldValue\n * @param callback\n */\nexport default function (\n  newValue: any,\n  oldValue: any,\n  callback: (key: string, newValue: any, oldValue: any) => void\n): true | void {\n\n  const newIsArray = is.array(newValue),\n\n  oldIsArray = is.array(oldValue)\n\n  if (newIsArray || oldIsArray) {\n\n    const newLength = newIsArray ? newValue.length : env.UNDEFINED,\n\n    oldLength = oldIsArray ? oldValue.length : env.UNDEFINED\n\n    callback(\n      env.RAW_LENGTH,\n      newLength,\n      oldLength\n    )\n\n    for (let i = 0, length = Math.max(newLength || 0, oldLength || 0); i < length; i++) {\n      callback(\n        '' + i,\n        newValue ? newValue[i] : env.UNDEFINED,\n        oldValue ? oldValue[i] : env.UNDEFINED\n      )\n    }\n\n    return env.TRUE\n\n  }\n\n}","import * as is from '../../../yox-common/src/util/is'\nimport * as env from '../../../yox-common/src/util/env'\nimport * as object from '../../../yox-common/src/util/object'\n\n/**\n * 对比新旧对象\n *\n * @param newValue\n * @param oldValue\n * @param callback\n */\nexport default function (\n  newValue: any,\n  oldValue: any,\n  callback: (key: string, newValue: any, oldValue: any) => void\n) {\n\n  const newIsObject = is.object(newValue),\n\n  oldIsObject = is.object(oldValue)\n\n  if (newIsObject || oldIsObject) {\n\n    newValue = newIsObject ? newValue : env.EMPTY_OBJECT\n    oldValue = oldIsObject ? oldValue : env.EMPTY_OBJECT\n\n    if (newIsObject) {\n      object.each(\n        newValue,\n        function (value: any, key: string) {\n          if (value !== oldValue[key]) {\n            callback(key, value, oldValue[key])\n          }\n        }\n      )\n    }\n\n    if (oldIsObject) {\n      object.each(\n        oldValue,\n        function (value: any, key: string) {\n          if (value !== newValue[key]) {\n            callback(key, newValue[key], value)\n          }\n        }\n      )\n    }\n\n  }\n\n}","import isDef from '../../../yox-common/src/function/isDef'\nimport * as array from '../../../yox-common/src/util/array'\nimport * as keypathUtil from '../../../yox-common/src/util/keypath'\n\nimport diffString from './diffString'\nimport diffArray from './diffArray'\nimport diffObject from './diffObject'\n\nexport default function diffRecursion(\n  keypath: string,\n  newValue: any,\n  oldValue: any,\n  watchFuzzyKeypaths: string[],\n  callback: (watchKeypath: string, keypath: string, newValue: any, oldValue: any) => void\n) {\n\n  const diff = function (subKeypath: string, subNewValue: any, subOldValue: any) {\n\n    if (subNewValue !== subOldValue) {\n\n      const newKeypath = keypathUtil.join(keypath, subKeypath)\n\n      array.each(\n        watchFuzzyKeypaths,\n        function (fuzzyKeypath: string) {\n          if (isDef(keypathUtil.matchFuzzy(newKeypath, fuzzyKeypath))) {\n            callback(\n              fuzzyKeypath, newKeypath, subNewValue, subOldValue\n            )\n          }\n        }\n      )\n\n      diffRecursion(newKeypath, subNewValue, subOldValue, watchFuzzyKeypaths, callback)\n\n    }\n\n  }\n\n  diffString(newValue, oldValue, diff)\n    || diffArray(newValue, oldValue, diff)\n    || diffObject(newValue, oldValue, diff)\n\n}","import isDef from '../../../yox-common/src/function/isDef'\nimport * as array from '../../../yox-common/src/util/array'\nimport * as object from '../../../yox-common/src/util/object'\nimport * as string from '../../../yox-common/src/util/string'\nimport * as keypathUtil from '../../../yox-common/src/util/keypath'\n\nimport readValue from './readValue'\nimport diffRecursion from './diffRecursion'\n\nexport default function (\n  keypath: string,\n  newValue: any,\n  oldValue: any,\n  watcher: Object, isRecursive: boolean,\n  callback: (watchKeypath: string, keypath: string, newValue: any, oldValue: any) => void\n) {\n\n  let fuzzyKeypaths: string[] | undefined\n\n  // 遍历监听的 keypath，如果未被监听，则无需触发任何事件\n  object.each(\n    watcher,\n    function (_, watchKeypath) {\n\n      // 模糊监听，如 users.*.name\n      if (keypathUtil.isFuzzy(watchKeypath)) {\n\n        // 如果当前修改的是 users.0 整个对象\n        // users.0 和 users.*.name 无法匹配\n        // 此时要知道设置 users.0 到底会不会改变 users.*.name 需要靠递归了\n\n        // 如果匹配，则无需递归\n        if (isDef(keypathUtil.matchFuzzy(keypath, watchKeypath))) {\n          callback(\n            watchKeypath, keypath, newValue, oldValue\n          )\n        }\n        else if (isRecursive) {\n          if (fuzzyKeypaths) {\n            array.push(\n              fuzzyKeypaths,\n              watchKeypath\n            )\n          }\n          else {\n            fuzzyKeypaths = [watchKeypath]\n          }\n        }\n\n        return\n      }\n\n      // 不是模糊匹配，直接靠前缀匹配\n      // 比如监听的是 users.0.name，此时修改 users.0，则直接读出子属性值，判断是否相等\n      const length = keypathUtil.match(watchKeypath, keypath)\n      if (length >= 0) {\n\n        const subKeypath = string.slice(watchKeypath, length),\n        subNewValue = readValue(newValue, subKeypath),\n        subOldValue = readValue(oldValue, subKeypath)\n\n        if (subNewValue !== subOldValue) {\n          callback(\n            watchKeypath, watchKeypath, subNewValue, subOldValue\n          )\n        }\n\n      }\n\n    }\n  )\n\n  // 存在模糊匹配的需求\n  // 必须对数据进行递归\n  // 性能确实会慢一些，但是很好用啊，几乎可以监听所有的数据\n  if (fuzzyKeypaths) {\n    diffRecursion(keypath, newValue, oldValue, fuzzyKeypaths, callback)\n  }\n\n}","import EmitterOptions from '../../../yox-type/src/options/Emitter'\n\n/**\n * 触发异步变化时，用此函数过滤下，哪些 listener 应该执行\n *\n * @param item\n * @param data\n */\nexport default function (_: string, args: any[] | void, options: EmitterOptions): boolean | void {\n\n  if (options.count && args) {\n\n    // 采用计数器的原因是，同一个 options 可能执行多次\n    // 比如监听 user.*，如果同批次修改了 user.name 和 user.age\n    // 这个监听器会调用多次，如果第一次执行就把 count 干掉了，第二次就无法执行了\n\n    options.count--\n\n    // 新旧值不相等\n    return args[0] !== args[1]\n\n  }\n\n}","import * as is from '../../../yox-common/src/util/is'\nimport * as env from '../../../yox-common/src/util/env'\nimport * as logger from '../../../yox-common/src/util/logger'\n\nimport * as type from '../../../yox-type/src/type'\nimport WatcherOptions from '../../../yox-type/src/options/Watcher'\n\n// 避免频繁创建对象\nconst optionsHolder: WatcherOptions = {\n  watcher: env.EMPTY_FUNCTION\n}\n\n/**\n * 格式化 watch options\n *\n * @param options\n */\nexport default function (options: type.watcher | WatcherOptions | void, immediate: boolean | void): WatcherOptions | void {\n\n  if (is.func(options)) {\n    optionsHolder.watcher = options as type.watcher\n    optionsHolder.immediate = immediate === env.TRUE\n    return optionsHolder\n  }\n\n  if (options && (options as WatcherOptions).watcher) {\n    return options as WatcherOptions\n  }\n\n  if (process.env.NODE_ENV === 'development') {\n    logger.fatal(`watcher should be a function or object.`)\n  }\n\n}","import * as is from '../../yox-common/src/util/is'\nimport * as env from '../../yox-common/src/util/env'\nimport * as array from '../../yox-common/src/util/array'\nimport * as object from '../../yox-common/src/util/object'\nimport * as string from '../../yox-common/src/util/string'\n\nimport toNumber from '../../yox-common/src/function/toNumber'\nimport execute from '../../yox-common/src/function/execute'\nimport Emitter from '../../yox-common/src/util/Emitter'\nimport NextTask from '../../yox-common/src/util/NextTask'\n\nimport * as type from '../../yox-type/src/type'\nimport ValueHolder from '../../yox-type/src/interface/ValueHolder'\nimport ComputedOptions from '../../yox-type/src/options/Computed'\nimport WatcherOptions from '../../yox-type/src/options/Watcher'\nimport EmitterOptions from '../../yox-type/src/options/Emitter'\nimport ObserverInterface from '../../yox-type/src/watcher/Observer'\n\nimport Computed from './Computed'\nimport matchBest from './function/matchBest'\nimport diffWatcher from './function/diffWatcher'\nimport filterWatcher from './function/filterWatcher'\nimport formatWatcherOptions from './function/formatWatcherOptions'\n\ninterface AsyncChange {\n\n  // 旧值\n  value: any\n\n  // 监听的 keypath\n  keypaths: string[]\n\n}\n\n/**\n * 观察者有两种观察模式：\n *\n * 1. 同步监听\n * 2. 异步监听\n *\n * 对于`计算属性`这种需要实时变化的对象，即它的依赖变了，它需要立即跟着变，否则会出现不一致的问题\n * 这种属于同步监听\n *\n * 对于外部调用 observer.watch('keypath', listener)，属于异步监听，它只关心是否变了，而不关心是否是立即触发的\n */\nexport default class Observer implements ObserverInterface {\n\n  data: type.data\n\n  context: any\n\n  nextTask: NextTask\n\n  computed?: Record<string, Computed>\n\n  reversedComputedKeys?: string[]\n\n  syncEmitter: Emitter\n\n  asyncEmitter: Emitter\n\n  asyncChanges: Record<string, AsyncChange>\n\n  pending?: boolean\n\n  constructor(data?: type.data, context?: any) {\n\n    const instance = this\n\n    instance.data = data || {}\n    instance.context = context || instance\n    instance.nextTask = new NextTask()\n\n    instance.syncEmitter = new Emitter()\n    instance.asyncEmitter = new Emitter()\n    instance.asyncChanges = {}\n\n  }\n\n  /**\n   * 获取数据\n   *\n   * @param keypath\n   * @param defaultValue\n   * @param depIgnore\n   * @return\n   */\n  get(\n    keypath: string,\n    defaultValue?: any,\n    depIgnore?: boolean\n  ): any {\n\n    const instance = this,\n\n    currentComputed = Computed.current,\n\n    { data, computed, reversedComputedKeys } = instance\n\n    // 传入 '' 获取整个 data\n    if (keypath === env.EMPTY_STRING) {\n      return data\n    }\n\n    // 调用 get 时，外面想要获取依赖必须设置是谁在收集依赖\n    // 如果没设置，则跳过依赖收集\n    if (currentComputed && !depIgnore) {\n      currentComputed.add(keypath)\n    }\n\n    let result: ValueHolder | void, target: Computed | void\n\n    if (computed) {\n      target = computed[keypath]\n      if (target) {\n        return target.get()\n      }\n      if (reversedComputedKeys) {\n        const match = matchBest(reversedComputedKeys, keypath)\n        if (match && match.prop) {\n          result = object.get(\n            computed[match.name].get(),\n            match.prop\n          )\n        }\n      }\n    }\n\n    if (!result) {\n      result = object.get(data, keypath)\n    }\n\n    return result ? result.value : defaultValue\n\n  }\n\n  /**\n   * 更新数据\n   *\n   * @param keypath\n   * @param value\n   */\n  set(\n    keypath: string | type.data,\n    value?: any\n  ) {\n\n    const instance = this,\n\n    { data, computed, reversedComputedKeys } = instance,\n\n    setValue = function (newValue: any, keypath: string) {\n\n      const oldValue = instance.get(keypath)\n      if (newValue === oldValue) {\n        return\n      }\n\n      let target: Computed | void\n\n      if (computed) {\n        target = computed[keypath]\n        if (target) {\n          target.set(newValue)\n        }\n        if (reversedComputedKeys) {\n          const match = matchBest(reversedComputedKeys, keypath)\n          if (match && match.prop) {\n            target = computed[match.name]\n            if (target) {\n              const targetValue = target.get()\n              if (is.object(targetValue)) {\n                object.set(targetValue, match.prop, newValue)\n              }\n            }\n          }\n        }\n      }\n\n      if (!target) {\n        object.set(data, keypath, newValue)\n      }\n\n      instance.diff(keypath, newValue, oldValue)\n\n    }\n\n    if (is.string(keypath)) {\n      setValue(value, keypath as string)\n    }\n    else if (is.object(keypath)) {\n      object.each(keypath as type.data, setValue)\n    }\n\n  }\n\n  /**\n   * 同步调用的 diff，用于触发 syncEmitter，以及唤醒 asyncEmitter\n   *\n   * @param keypath\n   * @param newValue\n   * @param oldValue\n   */\n  diff(\n    keypath: string,\n    newValue: any,\n    oldValue: any\n  ): void {\n\n    const instance = this,\n\n    { syncEmitter, asyncEmitter, asyncChanges } = instance,\n\n    /**\n     * 我们认为 $ 开头的变量是不可递归的\n     * 比如浏览器中常见的 $0 表示当前选中元素\n     * DOM 元素是不能递归的\n     */\n    isRecursive = string.codeAt(keypath) !== 36\n\n    diffWatcher(\n      keypath, newValue, oldValue,\n      syncEmitter.listeners, isRecursive,\n      function (watchKeypath: string, keypath: string, newValue: any, oldValue: any) {\n        syncEmitter.fire(watchKeypath, [newValue, oldValue, keypath])\n      }\n    )\n\n    /**\n     * 此处有坑，举个例子\n     *\n     * observer.watch('a', function () {})\n     *\n     * observer.set('a', 1)\n     *\n     * observer.watch('a', function () {})\n     *\n     * 这里，第一个 watcher 应该触发，但第二个不应该，因为它绑定监听时，值已经是最新的了\n     */\n\n    diffWatcher(\n      keypath, newValue, oldValue,\n      asyncEmitter.listeners, isRecursive,\n      function (watchKeypath: string, keypath: string, newValue: any, oldValue: any) {\n\n        array.each(\n          asyncEmitter.listeners[watchKeypath],\n          function (item: EmitterOptions) {\n            (item.count as number)++\n          }\n        )\n\n        const { keypaths } = asyncChanges[keypath] || (asyncChanges[keypath] = { value: oldValue, keypaths: [] })\n        if (!array.has(keypaths, watchKeypath)) {\n          array.push(keypaths, watchKeypath)\n        }\n\n        if (!instance.pending) {\n          instance.pending = env.TRUE\n          instance.nextTask.append(\n            function () {\n              if (instance.pending) {\n                instance.pending = env.UNDEFINED\n                instance.diffAsync()\n              }\n            }\n          )\n        }\n      }\n    )\n\n  }\n\n  /**\n   * 异步触发的 diff\n   */\n  diffAsync(): void {\n\n    const instance = this,\n\n    { asyncEmitter, asyncChanges } = instance\n\n    instance.asyncChanges = {}\n\n    object.each(\n      asyncChanges,\n      function (change: AsyncChange, keypath: string) {\n\n        const args = [instance.get(keypath), change.value, keypath]\n\n        // 不能在这判断新旧值是否相同，相同就不 fire\n        // 因为前面标记了 count，在这中断会导致 count 无法清除\n\n        array.each(\n          change.keypaths,\n          function (watchKeypath: string) {\n            asyncEmitter.fire(watchKeypath, args, filterWatcher)\n          }\n        )\n\n      }\n    )\n\n  }\n\n  /**\n   * 添加计算属性\n   *\n   * @param keypath\n   * @param computed\n   */\n  addComputed(\n    keypath: string,\n    options: type.getter | ComputedOptions\n  ): Computed | void {\n\n    const instance = this,\n\n    computed = Computed.build(keypath, instance, options)\n\n    if (computed) {\n\n      if (!instance.computed) {\n        instance.computed = {}\n      }\n\n      instance.computed[keypath] = computed\n      instance.reversedComputedKeys = object.sort(instance.computed, env.TRUE)\n\n      return computed\n\n    }\n\n  }\n\n  /**\n   * 移除计算属性\n   *\n   * @param keypath\n   */\n  removeComputed(\n    keypath: string\n  ): void {\n\n    const instance = this,\n\n    { computed } = instance\n\n    if (computed && object.has(computed, keypath)) {\n      delete computed[keypath]\n      instance.reversedComputedKeys = object.sort(computed, env.TRUE)\n    }\n\n  }\n\n  /**\n   * 监听数据变化\n   *\n   * @param keypath\n   * @param watcher\n   * @param immediate\n   */\n  watch(\n    keypath: string | Record<string, type.watcher | WatcherOptions>,\n    watcher?: type.watcher | WatcherOptions,\n    immediate?: boolean\n  ) {\n\n    const instance = this,\n\n    { context, syncEmitter, asyncEmitter } = instance,\n\n    bind = function (keypath: string, options: WatcherOptions) {\n\n      const emitter = options.sync ? syncEmitter : asyncEmitter,\n\n      // formatWatcherOptions 保证了 options.watcher 一定存在\n      listener: EmitterOptions = {\n        fn: options.watcher,\n        ctx: context,\n        count: 0,\n      }\n\n      if (options.once) {\n        listener.max = 1\n      }\n\n      emitter.on(keypath, listener)\n\n      if (options.immediate) {\n        execute(\n          options.watcher,\n          context,\n          [\n            instance.get(keypath),\n            env.UNDEFINED,\n            keypath\n          ]\n        )\n      }\n\n    }\n\n    if (is.string(keypath)) {\n      bind(\n        keypath as string,\n        formatWatcherOptions(watcher, immediate) as WatcherOptions\n      )\n      return\n    }\n\n    object.each(\n      keypath as type.data,\n      function (options: type.watcher | WatcherOptions, keypath: string) {\n        bind(keypath, formatWatcherOptions(options) as WatcherOptions)\n      }\n    )\n\n  }\n\n  /**\n   * 取消监听数据变化\n   *\n   * @param keypath\n   * @param watcher\n   */\n  unwatch(\n    keypath?: string,\n    watcher?: type.watcher\n  ) {\n    this.syncEmitter.off(keypath, watcher)\n    this.asyncEmitter.off(keypath, watcher)\n  }\n\n  /**\n   * 取反 keypath 对应的数据\n   *\n   * 不管 keypath 对应的数据是什么类型，操作后都是布尔型\n   *\n   * @param keypath\n   * @return 取反后的布尔值\n   */\n  toggle(keypath: string): boolean {\n    const value = !this.get(keypath)\n    this.set(keypath, value)\n    return value\n  }\n\n  /**\n   * 递增 keypath 对应的数据\n   *\n   * 注意，最好是整型的加法，如果涉及浮点型，不保证计算正确\n   *\n   * @param keypath 值必须能转型成数字，如果不能，则默认从 0 开始递增\n   * @param step 步进值，默认是 1\n   * @param max 可以递增到的最大值，默认不限制\n   */\n  increase(keypath: string, step?: number, max?: number): number | void {\n    const value = toNumber(this.get(keypath), 0) + (step || 1)\n    if (!is.number(max) || value <= (max as number)) {\n      this.set(keypath, value)\n      return value\n    }\n  }\n\n  /**\n   * 递减 keypath 对应的数据\n   *\n   * 注意，最好是整型的减法，如果涉及浮点型，不保证计算正确\n   *\n   * @param keypath 值必须能转型成数字，如果不能，则默认从 0 开始递减\n   * @param step 步进值，默认是 1\n   * @param min 可以递减到的最小值，默认不限制\n   */\n  decrease(keypath: string, step?: number, min?: number): number | void {\n    const value = toNumber(this.get(keypath), 0) - (step || 1)\n    if (!is.number(min) || value >= (min as number)) {\n      this.set(keypath, value)\n      return value\n    }\n  }\n\n  /**\n   * 在数组指定位置插入元素\n   *\n   * @param keypath\n   * @param item\n   * @param index\n   */\n  insert(keypath: string, item: any, index: number | boolean): true | void {\n\n    let list = this.get(keypath)\n    list = !is.array(list) ? [] : object.copy(list)\n\n    const { length } = list\n    if (index === env.TRUE || index === length) {\n      list.push(item)\n    }\n    else if (index === env.FALSE || index === 0) {\n      list.unshift(item)\n    }\n    else if (index > 0 && index < length) {\n      list.splice(index, 0, item)\n    }\n    else {\n      return\n    }\n\n    this.set(keypath, list)\n\n    return env.TRUE\n\n  }\n\n  /**\n   * 在数组尾部添加元素\n   *\n   * @param keypath\n   * @param item\n   */\n  append(keypath: string, item: any): true | void {\n    return this.insert(keypath, item, env.TRUE)\n  }\n\n  /**\n   * 在数组首部添加元素\n   *\n   * @param keypath\n   * @param item\n   */\n  prepend(keypath: string, item: any): true | void {\n    return this.insert(keypath, item, env.FALSE)\n  }\n\n  /**\n   * 通过索引移除数组中的元素\n   *\n   * @param keypath\n   * @param index\n   */\n  removeAt(keypath: string, index: number): true | void {\n    let list = this.get(keypath)\n    if (is.array(list)\n      && index >= 0\n      && index < list.length\n    ) {\n      list = object.copy(list)\n      list.splice(index, 1)\n      this.set(keypath, list)\n      return env.TRUE\n    }\n  }\n\n  /**\n   * 直接移除数组中的元素\n   *\n   * @param keypath\n   * @param item\n   */\n  remove(keypath: string, item: any): true | void {\n    let list = this.get(keypath)\n    if (is.array(list)) {\n      list = object.copy(list)\n      if (array.remove(list, item)) {\n        this.set(keypath, list)\n        return env.TRUE\n      }\n    }\n  }\n\n  /**\n   * 拷贝任意数据，支持深拷贝\n   *\n   * @param data\n   * @param deep\n   */\n  copy<T>(data: T, deep?: boolean): T {\n    return object.copy(data, deep)\n  }\n\n  /**\n   * 销毁\n   */\n  destroy() {\n    const instance = this\n    instance.syncEmitter.off()\n    instance.asyncEmitter.off()\n    instance.nextTask.clear()\n    object.clear(instance)\n  }\n\n}\n","import * as type from '../../yox-type/src/type'\nimport * as config from '../../yox-config/src/config'\n\nimport isDef from '../../yox-common/src/function/isDef'\nimport execute from '../../yox-common/src/function/execute'\n\nimport * as env from '../../yox-common/src/util/env'\nimport * as array from '../../yox-common/src/util/array'\nimport * as string from '../../yox-common/src/util/string'\nimport * as object from '../../yox-common/src/util/object'\nimport * as logger from '../../yox-common/src/util/logger'\n\nimport Emitter from '../../yox-common/src/util/Emitter'\nimport CustomEvent from '../../yox-common/src/util/CustomEvent'\n\nimport API from '../../yox-type/src/interface/API'\nimport SpecialEventHooks from '../../yox-type/src/hooks/SpecialEvent'\n\n// 这里先写 IE9 支持的接口\nlet innerText = 'textContent',\n\ninnerHTML = 'innerHTML',\n\nfindElement = function (selector: string): Element | void {\n  const node = (env.DOCUMENT as Document).querySelector(selector)\n  if (node) {\n    return node\n  }\n},\n\naddEventListener = function (node: HTMLElement | Window | Document, type: string, listener: (event: Event) => void) {\n  node.addEventListener(type, listener, env.FALSE)\n},\n\nremoveEventListener = function (node: HTMLElement | Window | Document, type: string, listener: (event: Event) => void) {\n  node.removeEventListener(type, listener, env.FALSE)\n},\n\n// IE9 不支持 classList\naddClass = function (node: HTMLElement, className: string) {\n  node.classList.add(className)\n},\n\nremoveClass = function (node: HTMLElement, className: string) {\n  node.classList.remove(className)\n},\n\ncreateEvent = function (event: any, node: HTMLElement | Window | Document): any {\n  return event\n}\n\nif (process.env.NODE_ENV !== 'pure') {\n  if (env.DOCUMENT) {\n\n    // 此时 document.body 不一定有值，比如 script 放在 head 里\n    if (!env.DOCUMENT.documentElement.classList) {\n      addClass = function (node: HTMLElement, className: string) {\n        const classes = node.className.split(CHAR_WHITESPACE)\n        if (!array.has(classes, className)) {\n          array.push(classes, className)\n          node.className = array.join(classes, CHAR_WHITESPACE)\n        }\n      }\n      removeClass = function (node: HTMLElement, className: string) {\n        const classes = node.className.split(CHAR_WHITESPACE)\n        if (array.remove(classes, className)) {\n          node.className = array.join(classes, CHAR_WHITESPACE)\n        }\n      }\n    }\n\n    // 为 IE9 以下浏览器打补丁\n    if (process.env.NODE_LEGACY) {\n\n      if (!env.DOCUMENT.addEventListener) {\n\n        const PROPERTY_CHANGE = 'propertychange'\n\n        addEventListener = function (node: any, type: string, listener: (event: Event) => void) {\n          if (type === env.EVENT_INPUT) {\n            addEventListener(\n              node,\n              PROPERTY_CHANGE,\n              // 借用 EMITTER，反正只是内部临时用一下...\n              listener[EMITTER] = function (event: any) {\n                if (event.propertyName === env.RAW_VALUE) {\n                  event = new CustomEvent(event)\n                  event.type = env.EVENT_INPUT\n                  execute(listener, this, event)\n                }\n              }\n            )\n          }\n          else if (type === env.EVENT_CHANGE && isBoxElement(node)) {\n            addEventListener(\n              node,\n              env.EVENT_CLICK,\n              listener[EMITTER] = function (event: any) {\n                event = new CustomEvent(event)\n                event.type = env.EVENT_CHANGE\n                execute(listener, this, event)\n              }\n            )\n          }\n          else {\n            node.attachEvent(`on${type}`, listener)\n          }\n        }\n\n        removeEventListener = function (node: any, type: string, listener: (event: Event) => void) {\n          if (type === env.EVENT_INPUT) {\n            removeEventListener(node, PROPERTY_CHANGE, listener[EMITTER])\n            delete listener[EMITTER]\n          }\n          else if (type === env.EVENT_CHANGE && isBoxElement(node)) {\n            removeEventListener(node, env.EVENT_CLICK, listener[EMITTER])\n            delete listener[EMITTER]\n          }\n          else {\n            node.detachEvent(`on${type}`, listener)\n          }\n        }\n\n        const isBoxElement = function (node: HTMLInputElement) {\n          return node.tagName === 'INPUT'\n            && (node.type === 'radio' || node.type === 'checkbox')\n        }\n\n        class IEEvent {\n\n          currentTarget: HTMLElement | Window | Document\n\n          target: HTMLElement | EventTarget\n\n          originalEvent: Event\n\n          constructor(event: Event, element: HTMLElement | Window | Document) {\n\n            object.extend(this, event)\n\n            this.currentTarget = element\n            this.target = event.srcElement || element\n            this.originalEvent = event\n\n          }\n\n          preventDefault() {\n            this.originalEvent.returnValue = env.FALSE\n          }\n\n          stopPropagation() {\n            this.originalEvent.cancelBubble = env.TRUE\n          }\n\n        }\n\n        // textContent 不兼容 IE 678\n        innerText = 'innerText'\n\n        createEvent = function (event, element) {\n          return new IEEvent(event, element)\n        }\n\n        findElement = function (selector: string): Element | void {\n          // 去掉 #\n          if (string.codeAt(selector, 0) === 35) {\n            selector = string.slice(selector, 1)\n          }\n          else if (process.env.NODE_ENV === 'development') {\n            logger.fatal(`\"#id\" is the only supported selector for legacy version.`)\n          }\n          const node = (env.DOCUMENT as Document).getElementById(selector)\n          if (node) {\n            return node\n          }\n        }\n\n      }\n\n    }\n\n  }\n}\n\nconst CHAR_WHITESPACE = ' ',\n\n/**\n * 绑定在 HTML 元素上的事件发射器\n */\nEMITTER = '$emitter',\n\n/**\n * 低版本 IE 上 style 标签的专有属性\n */\nSTYLE_SHEET = 'styleSheet',\n\n/**\n * 跟输入事件配套使用的事件\n */\nCOMPOSITION_START = 'compositionstart',\n\n/**\n * 跟输入事件配套使用的事件\n */\nCOMPOSITION_END = 'compositionend',\n\ndomain = 'http://www.w3.org/',\n\nnamespaces = {\n  svg: domain + '2000/svg',\n  // xml: domain + 'XML/1998/namespace',\n  // xlink: domain + '1999/xlink',\n},\n\nspecialEvents: Record<string, SpecialEventHooks> = {},\n\ndomApi: API = {\n\n  createElement(tag: string, isSvg?: boolean): Element {\n    return isSvg\n      ? (env.DOCUMENT as Document).createElementNS(namespaces.svg, tag)\n      : (env.DOCUMENT as Document).createElement(tag)\n  },\n\n  createText(text: string): Text {\n    return (env.DOCUMENT as Document).createTextNode(text)\n  },\n\n  createComment(text: string): Comment {\n    return (env.DOCUMENT as Document).createComment(text)\n  },\n\n  prop(node: HTMLElement, name: string, value?: string | number | boolean): string | number | boolean | void {\n    if (isDef(value)) {\n      object.set(node, name, value, env.FALSE)\n    }\n    else {\n      const holder = object.get(node, name)\n      if (holder) {\n        return holder.value\n      }\n    }\n  },\n\n  removeProp(node: HTMLElement, name: string, hint?: number): void {\n    object.set(\n      node,\n      name,\n      hint === config.HINT_BOOLEAN\n        ? env.FALSE\n        : env.EMPTY_STRING,\n      env.FALSE\n    )\n  },\n\n  attr(node: HTMLElement, name: string, value?: string): string | void {\n    if (isDef(value)) {\n      node.setAttribute(name, value as string)\n    }\n    else {\n      // value 还可能是 null\n      const value = node.getAttribute(name)\n      if (value != env.NULL) {\n        return value as string\n      }\n    }\n  },\n\n  removeAttr(node: HTMLElement, name: string): void {\n    node.removeAttribute(name)\n  },\n\n  before(parentNode: Node, node: Node, beforeNode: Node): void {\n    parentNode.insertBefore(node, beforeNode)\n  },\n\n  append(parentNode: Node, node: Node): void {\n    parentNode.appendChild(node)\n  },\n\n  replace(parentNode: Node, node: Node, oldNode: Node): void {\n    parentNode.replaceChild(node, oldNode)\n  },\n\n  remove(parentNode: Node, node: Node): void {\n    parentNode.removeChild(node)\n  },\n\n  parent(node: Node): Node | void {\n    const { parentNode } = node\n    if (parentNode) {\n      return parentNode\n    }\n  },\n\n  next(node: Node): Node | void {\n    const { nextSibling } = node\n    if (nextSibling) {\n      return nextSibling\n    }\n  },\n\n  find: findElement,\n\n  tag(node: Node): string | void {\n    if (node.nodeType === 1) {\n      return string.lower((node as HTMLElement).tagName)\n    }\n  },\n\n  text(node: Node, text?: string, isStyle?: boolean, isOption?: boolean): string | void {\n    if (isDef(text)) {\n      if (process.env.NODE_LEGACY) {\n        if (isStyle && object.has(node, STYLE_SHEET)) {\n          node[STYLE_SHEET].cssText = text\n        }\n        else {\n          if (isOption) {\n            (node as HTMLOptionElement).value = text as string\n          }\n          node[innerText] = text as string\n        }\n      }\n      else {\n        node[innerText] = text as string\n      }\n    }\n    else {\n      return node[innerText]\n    }\n  },\n\n  html(node: Element, html?: string, isStyle?: boolean, isOption?: boolean): string | void {\n    if (isDef(html)) {\n      if (process.env.NODE_LEGACY) {\n        if (isStyle && object.has(node, STYLE_SHEET)) {\n          node[STYLE_SHEET].cssText = html\n        }\n        else {\n          if (isOption) {\n            (node as HTMLOptionElement).value = html as string\n          }\n          node[innerHTML] = html as string\n        }\n      }\n      else {\n        node[innerHTML] = html as string\n      }\n    }\n    else {\n      return node[innerHTML]\n    }\n  },\n\n  addClass,\n\n  removeClass,\n\n  on(node: HTMLElement | Window | Document, type: string, listener: type.listener): void {\n\n    const emitter: Emitter = node[EMITTER] || (node[EMITTER] = new Emitter()),\n\n    nativeListeners = emitter.nativeListeners || (emitter.nativeListeners = {})\n\n    // 一个元素，相同的事件，只注册一个 native listener\n    if (!nativeListeners[type]) {\n\n      // 特殊事件\n      const special = specialEvents[type],\n\n      // 唯一的原生监听器\n      nativeListener = function (event: Event | CustomEvent) {\n\n        const customEvent = event instanceof CustomEvent\n          ? event\n          : new CustomEvent(event.type, createEvent(event, node))\n\n        if (customEvent.type !== type) {\n          customEvent.type = type\n        }\n\n        emitter.fire(type, [customEvent])\n\n      }\n\n      nativeListeners[type] = nativeListener\n\n      if (special) {\n        special.on(node, nativeListener)\n      }\n      else {\n        addEventListener(node, type, nativeListener)\n      }\n\n    }\n\n    emitter.on(type, listener)\n  },\n\n  off(node: HTMLElement | Window | Document, type: string, listener: type.listener): void {\n\n    const emitter: Emitter = node[EMITTER],\n\n    { listeners, nativeListeners } = emitter\n\n    // emitter 会根据 type 和 listener 参数进行适当的删除\n    emitter.off(type, listener)\n\n    // 如果注册的 type 事件都解绑了，则去掉原生监听器\n    if (nativeListeners && !emitter.has(type)) {\n\n      const special = specialEvents[type],\n\n      nativeListener = nativeListeners[type]\n\n      if (special) {\n        special.off(node, nativeListener)\n      }\n      else {\n        removeEventListener(node, type, nativeListener)\n      }\n\n      delete nativeListeners[type]\n\n    }\n\n    if (object.falsy(listeners)) {\n      node[EMITTER] = env.UNDEFINED\n    }\n\n  },\n\n  addSpecialEvent(type: string, hooks: SpecialEventHooks): void {\n    if (process.env.NODE_ENV === 'development') {\n      if (specialEvents[type]) {\n        logger.error(`Special event \"${type}\" is existed.`)\n      }\n      logger.info(`Special event \"${type}\" add success.`)\n    }\n    specialEvents[type] = hooks\n  },\n\n}\n\nspecialEvents[env.EVENT_MODEL] = {\n  on(node: HTMLElement | Window | Document, listener: type.nativeListener) {\n    let locked = env.FALSE\n    domApi.on(node, COMPOSITION_START, listener[COMPOSITION_START] = function () {\n      locked = env.TRUE\n    })\n    domApi.on(node, COMPOSITION_END, listener[COMPOSITION_END] = function (event: Event | CustomEvent) {\n      locked = env.FALSE\n      listener(event)\n    })\n    addEventListener(node, env.EVENT_INPUT, listener[env.EVENT_INPUT] = function (event: Event | CustomEvent) {\n      if (!locked) {\n        listener(event)\n      }\n    })\n  },\n  off(node: HTMLElement | Window | Document, listener: type.nativeListener) {\n    domApi.off(node, COMPOSITION_START, listener[COMPOSITION_START])\n    domApi.off(node, COMPOSITION_END, listener[COMPOSITION_END])\n    removeEventListener(node, env.EVENT_INPUT, listener[env.EVENT_INPUT])\n    listener[COMPOSITION_START] =\n    listener[COMPOSITION_END] =\n    listener[env.EVENT_INPUT] = env.UNDEFINED\n  }\n}\n\nexport default domApi","import execute from './execute'\n\nimport * as env from '../util/env'\nimport * as array from '../util/array'\n\n/**\n * 节流调用\n *\n * @param fn 需要节制调用的函数\n * @param delay 调用的时间间隔，单位毫秒\n * @param immediate 是否立即触发\n * @return 节流函数\n */\nexport default function (fn: Function, delay: number, immediate?: boolean) {\n\n  let timer: any\n\n  return function () {\n\n    if (!timer) {\n\n      const args = array.toArray(arguments)\n      if (immediate) {\n        execute(fn, env.UNDEFINED, args)\n      }\n\n      timer = setTimeout(\n        function () {\n          timer = env.UNDEFINED\n          if (!immediate) {\n            execute(fn, env.UNDEFINED, args)\n          }\n        },\n        delay\n      )\n\n    }\n\n  }\n}\n","import execute from '../../../yox-common/src/function/execute'\nimport debounce from '../../../yox-common/src/function/debounce'\n\nimport * as env from '../../../yox-common/src/util/env'\n\nimport api from '../../../yox-dom/src/dom'\n\nimport * as type from '../../../yox-type/src/type'\n\nimport Yox from '../../../yox-type/src/interface/Yox'\nimport VNode from '../../../yox-type/src/vnode/VNode'\nimport Directive from '../../../yox-type/src/vnode/Directive'\nimport DirectiveHooks from '../../../yox-type/src/hooks/Directive'\n\nconst directive: DirectiveHooks = {\n  bind(node: HTMLElement | Yox, directive: Directive, vnode: VNode) {\n\n    let { name, handler } = directive, { lazy } = vnode\n\n    if (!handler) {\n      return\n    }\n\n    if (lazy) {\n\n      const value = lazy[name] || lazy[env.EMPTY_STRING]\n\n      if (value === env.TRUE) {\n        name = env.EVENT_CHANGE\n      }\n      else if (value > 0) {\n        handler = debounce(\n          handler,\n          value,\n          // 避免连续多次点击，主要用于提交表单场景\n          // 移动端的 tap 事件可自行在业务层打补丁实现\n          name === env.EVENT_CLICK || name === env.EVENT_TAP\n        )\n      }\n\n    }\n\n    if (vnode.isComponent) {\n\n      (node as Yox).on(name, handler)\n      vnode.data[directive.key] = function () {\n        (node as Yox).off(name, handler as type.listener)\n      }\n\n    }\n    else {\n\n      api.on(node as HTMLElement, name, handler)\n      vnode.data[directive.key] = function () {\n        api.off(node as HTMLElement, name, handler as type.listener)\n      }\n\n    }\n\n  },\n\n  unbind(node: HTMLElement | Yox, directive: Directive, vnode: VNode) {\n    execute(vnode.data[directive.key])\n  }\n}\n\nexport default directive\n","import debounce from '../../../yox-common/src/function/debounce'\nimport execute from '../../../yox-common/src/function/execute'\nimport toString from '../../../yox-common/src/function/toString'\n\nimport * as is from '../../../yox-common/src/util/is'\nimport * as env from '../../../yox-common/src/util/env'\nimport * as array from '../../../yox-common/src/util/array'\n\nimport api from '../../../yox-dom/src/dom'\n\nimport * as config from '../../../yox-config/src/config'\nimport * as type from '../../../yox-type/src/type'\n\nimport Yox from '../../../yox-type/src/interface/Yox'\nimport VNode from '../../../yox-type/src/vnode/VNode'\nimport Directive from '../../../yox-type/src/vnode/Directive'\nimport DirectiveHooks from '../../../yox-type/src/hooks/Directive'\n\ninterface NativeControl {\n\n  set(node: HTMLElement, value: any): void\n\n  sync(node: HTMLElement, keypath: string, context: Yox): void\n\n  name: string\n\n}\n\nfunction debounceIfNeeded(fn: Function, lazy: type.lazy | void): any {\n  // 应用 lazy\n  return lazy && lazy !== env.TRUE\n    ? debounce(fn, lazy)\n    : fn\n}\n\nconst inputControl: NativeControl = {\n  set(node: HTMLInputElement, value: any) {\n    node.value = toString(value)\n  },\n  sync(node: HTMLInputElement, keypath: string, context: Yox) {\n    context.set(keypath, node.value)\n  },\n  name: env.RAW_VALUE\n},\n\nradioControl: NativeControl = {\n  set(node: HTMLInputElement, value: any) {\n    node.checked = node.value === toString(value)\n  },\n  sync(node: HTMLInputElement, keypath: string, context: Yox) {\n    if (node.checked) {\n      context.set(keypath, node.value)\n    }\n  },\n  name: 'checked'\n},\n\ncheckboxControl: NativeControl = {\n  set(node: HTMLInputElement, value: any) {\n    node.checked = is.array(value)\n      ? array.has(value, node.value, env.FALSE)\n      : !!value\n  },\n  sync(node: HTMLInputElement, keypath: string, context: Yox) {\n    const value = context.get(keypath)\n    if (is.array(value)) {\n      if (node.checked) {\n        context.append(keypath, node.value)\n      }\n      else {\n        context.removeAt(\n          keypath,\n          array.indexOf(value, node.value, env.FALSE)\n        )\n      }\n    }\n    else {\n      context.set(keypath, node.checked)\n    }\n  },\n  name: 'checked'\n},\n\nselectControl: NativeControl = {\n  set(node: HTMLSelectElement, value: any) {\n    array.each(\n      array.toArray(node.options),\n      node.multiple\n        ? function (option: HTMLOptionElement) {\n          option.selected = array.has(value, option.value, env.FALSE)\n        }\n        : function (option: HTMLOptionElement, index: number) {\n          if (option.value == value) {\n            node.selectedIndex = index\n            return env.FALSE\n          }\n        }\n    )\n  },\n  sync(node: HTMLSelectElement, keypath: string, context: Yox) {\n    const { options } = node\n    if (node.multiple) {\n      const values: string[] = []\n      array.each(\n        array.toArray(options),\n        function (option: HTMLOptionElement) {\n          if (option.selected) {\n            array.push(\n              values,\n              option.value\n            )\n          }\n        }\n      )\n      context.set(keypath, values)\n    }\n    else {\n      context.set(\n        keypath,\n        options[node.selectedIndex].value\n      )\n    }\n  },\n  name: env.RAW_VALUE\n},\n\ninputTypes = {\n  radio: radioControl,\n  checkbox: checkboxControl,\n},\n\ndirective: DirectiveHooks = {\n\n  once: env.TRUE,\n\n  bind(node: HTMLElement | Yox, directive: Directive, vnode: VNode) {\n\n    let { context, lazy, isComponent } = vnode,\n\n    dataBinding = directive.binding as string,\n\n    lazyValue = lazy && (lazy[config.DIRECTIVE_MODEL] || lazy[env.EMPTY_STRING]),\n\n    set: type.watcher | void,\n\n    sync: type.watcher,\n\n    unbind: Function\n\n    if (isComponent) {\n\n      let component = node as Yox,\n\n      viewBinding = component.$model as string\n\n      set = function (newValue: any) {\n        if (set) {\n          component.set(viewBinding, newValue)\n        }\n      }\n\n      sync = debounceIfNeeded(\n        function (newValue: any) {\n          context.set(dataBinding, newValue)\n        },\n        lazyValue\n      )\n\n      unbind = function () {\n        component.unwatch(viewBinding, sync)\n      }\n\n      component.watch(viewBinding, sync)\n\n    }\n    else {\n\n      let element = node as HTMLElement,\n\n      control = vnode.tag === 'select'\n        ? selectControl\n        : inputControl,\n\n      // checkbox,radio,select 监听的是 change 事件\n      eventName = env.EVENT_CHANGE\n\n      if (control === inputControl) {\n        const type = (node as HTMLInputElement).type\n        if (inputTypes[type]) {\n          control = inputTypes[type]\n        }\n        // 如果是输入框，则切换成 model 事件\n        // model 事件是个 yox-dom 实现的特殊事件\n        // 不会在输入法组合文字过程中得到触发事件\n        else if (lazyValue !== env.TRUE) {\n          eventName = env.EVENT_MODEL\n        }\n      }\n\n      set = function (newValue: any) {\n        if (set) {\n          control.set(element, newValue)\n        }\n      }\n\n      sync = debounceIfNeeded(\n        function () {\n          control.sync(element, dataBinding, context)\n        },\n        lazyValue\n      )\n\n      unbind = function () {\n        api.off(element, eventName, sync as type.listener)\n      }\n\n      api.on(element, eventName, sync as type.listener)\n\n      control.set(element, vnode.model)\n\n    }\n\n    // 监听数据，修改界面\n    context.watch(dataBinding, set as type.watcher)\n\n    vnode.data[directive.key] = function () {\n      context.unwatch(dataBinding, set as type.watcher)\n      set = env.UNDEFINED\n      unbind()\n    }\n\n  },\n\n  unbind(node: HTMLElement | Yox, directive: Directive, vnode: VNode) {\n    execute(vnode.data[directive.key])\n  }\n}\n\nexport default directive\n","import isDef from '../../../yox-common/src/function/isDef'\nimport execute from '../../../yox-common/src/function/execute'\n\nimport * as env from '../../../yox-common/src/util/env'\nimport * as keypathUtil from '../../../yox-common/src/util/keypath'\n\nimport * as type from '../../../yox-type/src/type'\nimport Yox from '../../../yox-type/src/interface/Yox'\nimport VNode from '../../../yox-type/src/vnode/VNode'\nimport Directive from '../../../yox-type/src/vnode/Directive'\nimport DirectiveHooks from '../../../yox-type/src/hooks/Directive'\n\nimport api from '../../../yox-dom/src/dom'\n\nconst directive: DirectiveHooks = {\n\n  once: env.TRUE,\n\n  bind(node: HTMLElement | Yox, directive: Directive, vnode: VNode) {\n\n    // binding 可能是模糊匹配\n    // 比如延展属性 {{...obj}}，这里 binding 会是 `obj.*`\n    let binding = directive.binding as string,\n\n    isFuzzy = keypathUtil.isFuzzy(binding),\n\n    watcher: type.watcher | void = function (newValue: any, _: any, keypath: string) {\n\n      if (watcher) {\n        const name = isFuzzy\n          ? keypathUtil.matchFuzzy(keypath, binding) as string\n          : directive.name\n\n        if (vnode.isComponent) {\n          const component = node as Yox\n          component.set(name, component.checkProp(name, newValue))\n        }\n        else if (isDef(directive.hint)) {\n          api.prop(node as HTMLElement, name, newValue)\n        }\n        else {\n          api.attr(node as HTMLElement, name, newValue)\n        }\n      }\n\n    }\n\n    vnode.context.watch(binding, watcher as type.watcher)\n\n    vnode.data[directive.key] = function () {\n      vnode.context.unwatch(binding, watcher as type.watcher)\n      watcher = env.UNDEFINED\n    }\n\n  },\n\n  unbind(node: HTMLElement | Yox, directive: Directive, vnode: VNode) {\n    execute(vnode.data[directive.key])\n  }\n\n}\n\nexport default directive\n","import * as config from '../../../yox-config/src/config'\nimport isDef from '../../../yox-common/src/function/isDef'\n\n// this type https://jkchao.github.io/typescript-book-chinese/typings/thisType.html\n\n/**\n * 组件是否存在某个 slot\n *\n * @param name\n */\nexport default function (name: string): boolean {\n  return isDef(this.get(config.SLOT_DATA_PREFIX + name))\n}\n","import isDef from '../../yox-common/src/function/isDef'\nimport execute from '../../yox-common/src/function/execute'\n\nimport CustomEvent from '../../yox-common/src/util/CustomEvent'\nimport Emitter from '../../yox-common/src/util/Emitter'\nimport NextTask from '../../yox-common/src/util/NextTask'\n\nimport * as is from '../../yox-common/src/util/is'\nimport * as env from '../../yox-common/src/util/env'\nimport * as array from '../../yox-common/src/util/array'\nimport * as string from '../../yox-common/src/util/string'\nimport * as object from '../../yox-common/src/util/object'\nimport * as logger from '../../yox-common/src/util/logger'\n\nimport * as config from '../../yox-config/src/config'\nimport * as snabbdom from '../../yox-snabbdom/src/snabbdom'\n\nimport * as templateCompiler from '../../yox-template-compiler/src/compiler'\nimport * as templateGenerator from '../../yox-template-compiler/src/generator'\nimport * as templateRender from '../../yox-template-compiler/src/renderer'\n\nimport * as type from '../../yox-type/src/type'\n\nimport VNode from '../../yox-type/src/vnode/VNode'\nimport YoxInterface from '../../yox-type/src/interface/Yox'\nimport YoxPluginInterface from '../../yox-type/src/interface/YoxPlugin'\nimport YoxOptions from '../../yox-type/src/options/Yox'\nimport ComputedOptions from '../../yox-type/src/options/Computed'\nimport WatcherOptions from '../../yox-type/src/options/Watcher'\nimport EmitterOptions from '../../yox-type/src/options/Emitter'\nimport DirectiveHooks from '../../yox-type/src/hooks/Directive'\nimport TransitionHooks from '../../yox-type/src/hooks/Transition'\nimport PropRule from '../../yox-type/src/interface/PropRule'\n\nimport Computed from '../../yox-observer/src/Computed'\nimport Observer from '../../yox-observer/src/Observer'\n\nimport domApi from '../../yox-dom/src/dom'\n\nimport event from './directive/event'\nimport model from './directive/model'\nimport binding from './directive/binding'\nimport hasSlot from './filter/hasSlot'\n\n\nconst globalDirectives = {},\n\nglobalTransitions = {},\n\nglobalComponents = {},\n\nglobalPartials = {},\n\nglobalFilters = {},\n\ncompileCache = {},\n\nLOADER_QUEUE = '$queue',\n\nTEMPLATE_COMPUTED = '$' + env.RAW_TEMPLATE,\n\nselectorPattern = /^[#.][-\\w+]+$/\n\nexport default class Yox implements YoxInterface {\n\n  $options: YoxOptions\n\n  $observer: Observer\n\n  $emitter: Emitter\n\n  $el?: HTMLElement\n\n  $template?: Function\n\n  $refs?: Record<string, YoxInterface | HTMLElement>\n\n  $model?: string\n\n  $root?: YoxInterface\n\n  $parent?: YoxInterface\n\n  $children?: YoxInterface[]\n\n  $vnode: VNode | undefined\n\n  $directives?: Record<string, DirectiveHooks>\n\n  $components?: Record<string, YoxOptions>\n\n  $transitions?: Record<string, TransitionHooks>\n\n  $partials?: Record<string, Function>\n\n  $filters?: Record<string, type.filter>\n\n  /**\n   * core 版本\n   */\n  public static version = process.env.NODE_VERSION\n\n  /**\n   * 方便外部共用的通用逻辑，特别是写插件，减少重复代码\n   */\n  public static is = is\n  public static array = array\n  public static object = object\n  public static string = string\n  public static logger = logger\n  public static Event = CustomEvent\n  public static Emitter = Emitter\n\n  /**\n   * 安装插件\n   *\n   * 插件必须暴露 install 方法\n   */\n  public static use(plugin: YoxPluginInterface): void {\n    plugin.install(Yox)\n  }\n\n  /**\n   * 因为组件采用的是异步更新机制，为了在更新之后进行一些操作，可使用 nextTick\n   */\n  public static nextTick(task: Function, context?: any): void {\n    NextTask.shared().append(task, context)\n  }\n\n  /**\n   * 编译模板，暴露出来是为了打包阶段的模板预编译\n   */\n  public static compile(template: string, stringify?: boolean): Function | string {\n    if (process.env.NODE_ENV !== 'pure') {\n      if (process.env.NODE_ENV !== 'runtime') {\n        if (!templateGenerator.hasGenerated(template)) {\n          // 未编译，常出现在开发阶段\n          if (!compileCache[template]) {\n            const nodes = templateCompiler.compile(template)\n            if (process.env.NODE_ENV === 'development') {\n              if (nodes.length !== 1) {\n                logger.fatal(`\"template\" should have just one root element.`)\n              }\n            }\n            compileCache[template] = templateGenerator.generate(nodes[0])\n          }\n          template = compileCache[template]\n          if (stringify) {\n            return template\n          }\n        }\n      }\n      return new Function(`return ${template}`)()\n    }\n    else {\n      return env.EMPTY_STRING\n    }\n  }\n\n  public static checkProp(key: string, value: any, rule: PropRule): any {\n    if (process.env.NODE_ENV !== 'pure') {\n      // 类型\n      const type = rule.type,\n\n      // 默认值\n      defaultValue = rule.value\n\n      // 传了数据\n      if (isDef(value)) {\n\n        if (process.env.NODE_ENV === 'development') {\n\n          // 如果不写 type 或 type 不是 字符串 或 数组\n          // 就当做此规则无效，和没写一样\n          if (type) {\n\n            // 自定义函数判断是否匹配类型\n            // 自己打印警告信息吧\n            if (is.func(type)) {\n              (type as type.propType)(key, value)\n            }\n            else {\n\n              let matched = env.FALSE\n\n              // type: 'string'\n              if (!string.falsy(type)) {\n                matched = matchType(value, type as string)\n              }\n              // type: ['string', 'number']\n              else if (!array.falsy(type)) {\n                array.each(\n                  type as string[],\n                  function (item: string) {\n                    if (matchType(value, item)) {\n                      matched = env.TRUE\n                      return env.FALSE\n                    }\n                  }\n                )\n              }\n\n              if (!matched) {\n                logger.warn(`The type of prop \"${key}\" expected to be \"${type}\", but is \"${value}\".`)\n              }\n\n            }\n\n          }\n          else {\n            logger.warn(`The prop \"${key}\" in propTypes has no type.`)\n          }\n        }\n\n      }\n      else {\n\n        if (process.env.NODE_ENV === 'development') {\n          // 没传值但此项是必传项\n          if (rule.required) {\n            logger.warn(`The prop \"${key}\" is marked as required, but its value is not found.`)\n          }\n        }\n\n        // 没传值但是配置了默认值\n        if (isDef(defaultValue)) {\n          value = type === env.RAW_FUNCTION\n            ? defaultValue\n            : is.func(defaultValue)\n              ? (defaultValue as type.propValue)()\n              : defaultValue\n        }\n\n      }\n    }\n\n    return value\n\n  }\n\n  public static directive(\n    name: string | Record<string, DirectiveHooks>,\n    directive?: DirectiveHooks\n  ): DirectiveHooks | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      if (is.string(name) && !directive) {\n        return getResource(globalDirectives, name as string)\n      }\n      setResource(globalDirectives, name, directive)\n    }\n  }\n\n  public static transition(\n    name: string | Record<string, TransitionHooks>,\n    transition?: TransitionHooks\n  ): TransitionHooks | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      if (is.string(name) && !transition) {\n        return getResource(globalTransitions, name as string)\n      }\n      setResource(globalTransitions, name, transition)\n    }\n  }\n\n  public static component(\n    name: string | Record<string, type.component>,\n    component?: type.component\n  ): type.component | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      if (is.string(name) && !component) {\n        return getResource(globalComponents, name as string)\n      }\n      setResource(globalComponents, name, component)\n    }\n  }\n\n  public static partial(\n    name: string | Record<string, string>,\n    partial?: string\n  ): Function | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      if (is.string(name) && !partial) {\n        return getResource(globalPartials, name as string)\n      }\n      setResource(globalPartials, name, partial, Yox.compile)\n    }\n  }\n\n  public static filter(\n    name: string | Record<string, type.filter>,\n    filter?: type.filter\n  ): type.filter | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      if (is.string(name) && !filter) {\n        return getResource(globalFilters, name as string)\n      }\n      setResource(globalFilters, name, filter)\n    }\n  }\n\n  constructor(options: YoxOptions | void) {\n\n    const instance = this, $options: YoxOptions = options || env.EMPTY_OBJECT\n\n    // 一进来就执行 before create\n    execute($options[config.HOOK_BEFORE_CREATE], instance, $options)\n    execute(Yox[config.HOOK_BEFORE_CREATE], env.UNDEFINED, $options)\n\n    instance.$options = $options\n\n    let {\n      data,\n      props,\n      computed,\n      events,\n      methods,\n      watchers,\n      extensions,\n    } = $options\n\n    // 如果传了 props，则 data 应该是个 function\n    if (process.env.NODE_ENV === 'development') {\n      if (props && is.object(data)) {\n        logger.fatal('\"data\" option should be a function.')\n      }\n    }\n\n    if (extensions) {\n      object.extend(instance, extensions)\n    }\n\n    // 数据源\n    const source = instance.checkProps(props || {})\n\n    // 先放 props\n    // 当 data 是函数时，可以通过 this.get() 获取到外部数据\n    const observer = instance.$observer = new Observer(source, instance)\n\n    if (computed) {\n      object.each(\n        computed,\n        function (options: type.getter | ComputedOptions, keypath: string) {\n          observer.addComputed(keypath, options)\n        }\n      )\n    }\n\n    // 后放 data\n    const extend = is.func(data) ? execute(data, instance, options) : data\n    if (is.object(extend)) {\n      object.each(\n        extend,\n        function (value, key) {\n          if (process.env.NODE_ENV === 'development') {\n            if (object.has(source, key)) {\n              logger.warn(`\"${key}\" is already defined as a prop. Use prop default value instead.`)\n            }\n          }\n          source[key] = value\n        }\n      )\n    }\n\n    if (methods) {\n      object.each(\n        methods,\n        function (method: Function, name: string) {\n          if (process.env.NODE_ENV === 'development') {\n            if (instance[name]) {\n              logger.fatal(`method [${name}] is conflicted with built-in methods.`)\n            }\n          }\n          instance[name] = method\n        }\n      )\n    }\n\n    // 监听各种事件\n    // 支持命名空间\n    instance.$emitter = new Emitter(env.TRUE)\n\n    if (events) {\n      instance.on(events)\n    }\n\n    if (process.env.NODE_ENV !== 'pure') {\n\n      let placeholder: Node | void = env.UNDEFINED,\n\n      {\n        el,\n        vnode,\n        root,\n        model,\n        parent,\n        replace,\n        template,\n        transitions,\n        components,\n        directives,\n        partials,\n        filters,\n        slots,\n      } = $options\n\n      if (model) {\n        instance.$model = model\n      }\n\n      // 把 slots 放进数据里，方便 get\n      if (slots) {\n        object.extend(source, slots)\n      }\n\n      // 检查 template\n      if (is.string(template)) {\n        // 传了选择器，则取对应元素的 html\n        if (selectorPattern.test(template as string)) {\n          placeholder = domApi.find(template as string)\n          if (placeholder) {\n            template = domApi.html(placeholder as Element) as string\n            placeholder = env.UNDEFINED\n          }\n          else if (process.env.NODE_ENV === 'development') {\n            logger.fatal(`\"${template}\" 选择器找不到对应的元素`)\n          }\n        }\n      }\n      else {\n        template = env.UNDEFINED\n      }\n\n      // 检查 el\n      if (el) {\n\n        if (is.string(el)) {\n          const selector = el as string\n          if (selectorPattern.test(selector)) {\n            placeholder = domApi.find(selector)\n            if (process.env.NODE_ENV === 'development') {\n              if (!placeholder) {\n                logger.fatal(`\"${selector}\" 选择器找不到对应的元素`)\n              }\n            }\n          }\n          else if (process.env.NODE_ENV === 'development') {\n            logger.fatal(`\"el\" option should be a selector.`)\n          }\n        }\n        else {\n          placeholder = el as Node\n        }\n\n        if (!replace) {\n          domApi.append(\n            placeholder as Node,\n            placeholder = domApi.createComment(env.EMPTY_STRING)\n          )\n        }\n\n      }\n\n      if (root) {\n        instance.$root = root\n      }\n      if (parent) {\n        instance.$parent = parent\n      }\n\n      setFlexibleOptions(instance, env.RAW_TRANSITION, transitions)\n      setFlexibleOptions(instance, env.RAW_COMPONENT, components)\n      setFlexibleOptions(instance, env.RAW_DIRECTIVE, directives)\n      setFlexibleOptions(instance, env.RAW_PARTIAL, partials)\n      setFlexibleOptions(instance, env.RAW_FILTER, filters)\n\n      // 当存在模板和计算属性时\n      // 因为这里把模板当做一种特殊的计算属性\n      // 因此模板这个计算属性的优先级应该最高\n      if (template) {\n\n        // 拷贝一份，避免影响外部定义的 watchers\n        const newWatchers = watchers\n          ? object.copy(watchers)\n          : {}\n\n        newWatchers[TEMPLATE_COMPUTED] = {\n          // 模板一旦变化，立即刷新\n          sync: env.TRUE,\n          watcher: function (vnode: VNode) {\n            instance.update(vnode, instance.$vnode as VNode)\n          }\n        }\n\n        // 当模板的依赖变了，则重新创建 virtual dom\n        observer.addComputed(\n          TEMPLATE_COMPUTED,\n          {\n            // 当模板依赖变化时，异步通知模板更新\n            sync: env.FALSE,\n            get: function () {\n              return instance.render()\n            }\n          }\n        )\n\n        afterCreateHook(instance, newWatchers)\n\n        // 编译模板\n        // 在开发阶段，template 是原始的 html 模板\n        // 在产品阶段，template 是编译后且经过 stringify 的字符串\n        // 当然，这个需要外部自己控制传入的 template 是什么\n        // Yox.compile 会自动判断 template 是否经过编译\n        instance.$template = Yox.compile(template) as Function\n\n        if (!vnode) {\n\n          if (process.env.NODE_ENV === 'development') {\n            if (!placeholder) {\n              logger.fatal('根组件不传 el 是几个意思？')\n            }\n          }\n\n          vnode = snabbdom.create(\n            domApi,\n            placeholder as Node,\n            instance,\n            env.EMPTY_STRING\n          )\n\n        }\n\n        instance.update(\n          instance.get(TEMPLATE_COMPUTED),\n          vnode\n        )\n\n        return\n\n      }\n      else if (process.env.NODE_ENV === 'development') {\n        if (placeholder || vnode) {\n          logger.fatal('组件不写 template 是几个意思？')\n        }\n      }\n\n    }\n\n    afterCreateHook(instance, watchers)\n\n  }\n\n  /**\n   * 添加计算属性\n   */\n  addComputed(\n    keypath: string,\n    computed: type.getter | ComputedOptions\n  ): Computed | void {\n    return this.$observer.addComputed(keypath, computed)\n  }\n\n  /**\n   * 删除计算属性\n   */\n  removeComputed(\n    keypath: string\n  ): void {\n    this.$observer.removeComputed(keypath)\n  }\n\n  /**\n   * 取值\n   */\n  get(\n    keypath: string,\n    defaultValue?: any,\n    depIgnore?: boolean\n  ): any {\n    return this.$observer.get(keypath, defaultValue, depIgnore)\n  }\n\n  /**\n   * 设值\n   */\n  set(\n    keypath: string | type.data,\n    value?: any\n  ): void {\n    // 组件经常有各种异步改值，为了避免组件销毁后依然调用 set\n    // 这里判断一下，至于其他方法的异步调用就算了，业务自己控制吧\n    const { $observer } = this\n    if ($observer) {\n      $observer.set(keypath, value)\n    }\n  }\n\n  /**\n   * 监听事件\n   */\n  on(\n    type: string | Record<string, type.listener>,\n    listener?: type.listener\n  ): YoxInterface {\n    return addEvents(this, type, listener)\n  }\n\n  /**\n   * 监听一次事件\n   */\n  once(\n    type: string | Record<string, type.listener>,\n    listener?: type.listener\n  ): YoxInterface {\n    return addEvents(this, type, listener, env.TRUE)\n  }\n\n  /**\n   * 取消监听事件\n   */\n  off(\n    type?: string,\n    listener?: type.listener\n  ): YoxInterface {\n    this.$emitter.off(type, listener)\n    return this\n  }\n\n  /**\n   * 发射事件\n   */\n  fire(\n    type: string | CustomEvent,\n    data?: type.data | boolean,\n    downward?: boolean\n  ): boolean {\n\n    // 外部为了使用方便，fire(type) 或 fire(type, data) 就行了\n    // 内部为了保持格式统一\n    // 需要转成 Event，这样还能知道 target 是哪个组件\n\n    let instance = this,\n\n    event = type instanceof CustomEvent ? type : new CustomEvent(type),\n\n    args: any[] = [event],\n\n    isComplete: boolean\n\n    // 告诉外部是谁发出的事件\n    if (!event.target) {\n      event.target = instance\n    }\n\n    // 比如 fire('name', true) 直接向下发事件\n    if (is.object(data)) {\n      array.push(args, data as type.data)\n    }\n    else if (data === env.TRUE) {\n      downward = env.TRUE\n    }\n\n    isComplete = instance.$emitter.fire(event.type, args)\n    if (isComplete) {\n      const { $parent, $children } = instance\n      if (downward) {\n        if ($children) {\n          event.phase = CustomEvent.PHASE_DOWNWARD\n          array.each(\n            $children,\n            function (child) {\n              return isComplete = child.fire(event, data, env.TRUE)\n            }\n          )\n        }\n      }\n      else if ($parent) {\n        event.phase = CustomEvent.PHASE_UPWARD\n        isComplete = $parent.fire(event, data)\n      }\n    }\n\n    return isComplete\n\n  }\n\n  /**\n   * 监听数据变化\n   */\n  watch(\n    keypath: string | Record<string, type.watcher | WatcherOptions>,\n    watcher?: type.watcher | WatcherOptions,\n    immediate?: boolean\n  ): YoxInterface {\n    this.$observer.watch(keypath, watcher, immediate)\n    return this\n  }\n\n  /**\n   * 取消监听数据变化\n   */\n  unwatch(\n    keypath?: string,\n    watcher?: type.watcher\n  ): YoxInterface {\n    this.$observer.unwatch(keypath, watcher)\n    return this\n  }\n\n  /**\n   * 加载组件，组件可以是同步或异步，最后会调用 callback\n   *\n   * @param name 组件名称\n   * @param callback 组件加载成功后的回调\n   */\n  loadComponent(name: string, callback: type.componentCallback): void {\n    if (process.env.NODE_ENV !== 'pure') {\n      if (!loadComponent(this.$components, name, callback)) {\n        const hasComponent = loadComponent(globalComponents, name, callback)\n        if (process.env.NODE_ENV === 'development') {\n          if (!hasComponent) {\n            logger.error(`Component [${name}] is not found.`)\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * 创建子组件\n   *\n   * @param options 组件配置\n   * @param vnode 虚拟节点\n   */\n  createComponent(options: YoxOptions, vnode: VNode): YoxInterface {\n    if (process.env.NODE_ENV !== 'pure') {\n\n      const instance = this\n\n      options = object.copy(options)\n      options.root = instance.$root || instance\n      options.parent = instance\n      options.vnode = vnode\n      options.replace = env.TRUE\n\n      let { props, slots } = vnode,\n\n      modelKey = options.model || env.RAW_VALUE,\n\n      modelValue = vnode.model\n\n      options.model = modelKey\n\n      if (isDef(modelValue)) {\n        if (!props) {\n          props = {}\n        }\n        props[modelKey] = modelValue\n      }\n\n      if (props) {\n        options.props = props\n      }\n\n      if (slots) {\n        options.slots = slots\n      }\n\n      const child = new Yox(options)\n\n      array.push(\n        instance.$children || (instance.$children = []),\n        child\n      )\n\n      const node = child.$el\n      if (node) {\n        vnode.node = node\n      }\n      else if (process.env.NODE_ENV === 'development') {\n        logger.fatal(`The root element of [Component ${vnode.tag}] is not found.`)\n      }\n\n      return child\n    }\n    else {\n      return this\n    }\n  }\n\n  directive(\n    name: string | Record<string, DirectiveHooks>,\n    directive?: DirectiveHooks\n  ): DirectiveHooks | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      const instance = this, { $directives } = instance\n      if (is.string(name) && !directive) {\n        return getResource($directives, name as string, Yox.directive)\n      }\n      setResource(\n        $directives || (instance.$directives = {}),\n        name,\n        directive\n      )\n    }\n  }\n\n  transition(\n    name: string | Record<string, TransitionHooks>,\n    transition?: TransitionHooks\n  ): TransitionHooks | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      const instance = this, { $transitions } = instance\n      if (is.string(name) && !transition) {\n        return getResource($transitions, name as string, Yox.transition)\n      }\n      setResource(\n        $transitions || (instance.$transitions = {}),\n        name,\n        transition\n      )\n    }\n  }\n\n  component(\n    name: string | Record<string, type.component>,\n    component?: type.component\n  ): type.component | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      const instance = this, { $components } = instance\n      if (is.string(name) && !component) {\n        return getResource($components, name as string, Yox.component)\n      }\n      setResource(\n        $components || (instance.$components = {}),\n        name,\n        component\n      )\n    }\n  }\n\n  partial(\n    name: string | Record<string, string>,\n    partial?: string\n  ): Function | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      const instance = this, { $partials } = instance\n      if (is.string(name) && !partial) {\n        return getResource($partials, name as string, Yox.partial)\n      }\n      setResource(\n        $partials || (instance.$partials = {}),\n        name,\n        partial,\n        Yox.compile\n      )\n    }\n  }\n\n  filter(\n    name: string | Record<string, type.filter>,\n    filter?: type.filter\n  ): type.filter | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      const instance = this, { $filters } = instance\n      if (is.string(name) && !filter) {\n        return getResource($filters, name as string, Yox.filter)\n      }\n      setResource(\n        $filters || (instance.$filters = {}),\n        name,\n        filter\n      )\n    }\n  }\n\n  /**\n   * 对于某些特殊场景，修改了数据，但是模板的依赖中并没有这一项\n   * 而你非常确定需要更新模板，强制刷新正是你需要的\n   */\n  forceUpdate(data?: type.data): void {\n    if (process.env.NODE_ENV !== 'pure') {\n\n      const instance = this,\n\n      { $vnode, $observer } = instance,\n\n      { computed } = $observer\n\n      if ($vnode && computed) {\n\n        const template = computed[TEMPLATE_COMPUTED],\n\n        oldValue = template.get()\n\n        if (data) {\n          instance.set(data)\n        }\n\n        // 当前可能正在进行下一轮更新\n        $observer.nextTask.run()\n\n        // 没有更新模板，强制刷新\n        if (!data && oldValue === template.get()) {\n          instance.update(\n            template.get(env.TRUE),\n            $vnode\n          )\n        }\n      }\n    }\n  }\n\n  /**\n   * 把模板抽象语法树渲染成 virtual dom\n   */\n  render() {\n    if (process.env.NODE_ENV !== 'pure') {\n      const instance = this\n      return templateRender.render(\n        instance,\n        instance.$template as Function,\n        object.merge(instance.$filters, globalFilters) as Record<string, Function>,\n        object.merge(instance.$partials, globalPartials) as Record<string, Function>,\n        object.merge(instance.$directives, globalDirectives) as Record<string, DirectiveHooks>,\n        object.merge(instance.$transitions, globalTransitions) as Record<string, TransitionHooks>\n      )\n    }\n  }\n\n  /**\n   * 更新 virtual dom\n   *\n   * @param vnode\n   * @param oldVnode\n   */\n  update(vnode: VNode, oldVnode: VNode) {\n    if (process.env.NODE_ENV !== 'pure') {\n      let instance = this,\n\n      { $vnode, $options } = instance,\n\n      afterHook: string\n\n      // 每次渲染重置 refs\n      // 在渲染过程中收集最新的 ref\n      // 这样可避免更新时，新的 ref，在前面创建，老的 ref 却在后面删除的情况\n      instance.$refs = {}\n\n      if ($vnode) {\n        execute($options[config.HOOK_BEFORE_UPDATE], instance)\n        execute(Yox[config.HOOK_BEFORE_UPDATE], env.UNDEFINED, instance)\n        snabbdom.patch(domApi, vnode, oldVnode)\n        afterHook = config.HOOK_AFTER_UPDATE\n      }\n      else {\n        execute($options[config.HOOK_BEFORE_MOUNT], instance)\n        execute(Yox[config.HOOK_BEFORE_MOUNT], env.UNDEFINED, instance)\n        snabbdom.patch(domApi, vnode, oldVnode)\n        instance.$el = vnode.node as HTMLElement\n        afterHook = config.HOOK_AFTER_MOUNT\n      }\n\n      instance.$vnode = vnode\n\n      // 跟 nextTask 保持一个节奏\n      // 这样可以预留一些优化的余地\n      Yox.nextTick(\n        function () {\n          if (instance.$vnode) {\n            execute($options[afterHook], instance)\n            execute(Yox[afterHook], env.UNDEFINED, instance)\n          }\n        }\n      )\n    }\n  }\n\n  /**\n   * 校验组件参数\n   *\n   * @param props\n   */\n  checkProps(props: type.data): type.data {\n    if (process.env.NODE_ENV !== 'pure') {\n      const { propTypes } = this.$options\n      if (propTypes) {\n        const result = object.copy(props)\n        object.each(\n          propTypes,\n          function (rule: PropRule, key: string) {\n            result[key] = Yox.checkProp(key, props[key], rule)\n          }\n        )\n        return result\n      }\n    }\n    return props\n  }\n\n  checkProp(key: string, value: any): any {\n    if (process.env.NODE_ENV !== 'pure') {\n      const { propTypes } = this.$options\n      if (propTypes) {\n        const rule = propTypes[key]\n        if (rule) {\n          value = Yox.checkProp(key, value, rule)\n        }\n      }\n    }\n    return value\n  }\n\n  /**\n   * 销毁组件\n   */\n  destroy(): void {\n\n    const instance = this,\n\n    { $parent, $options, $emitter, $observer } = instance\n\n    execute($options[config.HOOK_BEFORE_DESTROY], instance)\n    execute(Yox[config.HOOK_BEFORE_DESTROY], env.UNDEFINED, instance)\n\n    if (process.env.NODE_ENV !== 'pure') {\n\n      const { $vnode } = instance\n\n      if ($parent && $parent.$children) {\n        array.remove($parent.$children, instance)\n      }\n\n      if ($vnode) {\n        // virtual dom 通过判断 parent.$vnode 知道宿主组件是否正在销毁\n        instance.$vnode = env.UNDEFINED\n        snabbdom.destroy(domApi, $vnode, !$parent)\n      }\n\n    }\n\n    $emitter.off()\n    $observer.destroy()\n\n    execute($options[config.HOOK_AFTER_DESTROY], instance)\n    execute(Yox[config.HOOK_AFTER_DESTROY], env.UNDEFINED, instance)\n\n    object.clear(instance)\n\n  }\n\n  /**\n   * 因为组件采用的是异步更新机制，为了在更新之后进行一些操作，可使用 nextTick\n   */\n  nextTick(task: Function): void {\n    this.$observer.nextTask.append(task, this)\n  }\n\n  /**\n   * 取反 keypath 对应的数据\n   *\n   * 不管 keypath 对应的数据是什么类型，操作后都是布尔型\n   */\n  toggle(keypath: string): boolean {\n    return this.$observer.toggle(keypath)\n  }\n\n  /**\n   * 递增 keypath 对应的数据\n   *\n   * 注意，最好是整型的加法，如果涉及浮点型，不保证计算正确\n   *\n   * @param keypath 值必须能转型成数字，如果不能，则默认从 0 开始递增\n   * @param step 步进值，默认是 1\n   * @param max 可以递增到的最大值，默认不限制\n   */\n  increase(keypath: string, step?: number, max?: number): number | void {\n    return this.$observer.increase(keypath, step, max)\n  }\n\n  /**\n   * 递减 keypath 对应的数据\n   *\n   * 注意，最好是整型的减法，如果涉及浮点型，不保证计算正确\n   *\n   * @param keypath 值必须能转型成数字，如果不能，则默认从 0 开始递减\n   * @param step 步进值，默认是 1\n   * @param min 可以递减到的最小值，默认不限制\n   */\n  decrease(keypath: string, step?: number, min?: number): number | void {\n    return this.$observer.decrease(keypath, step, min)\n  }\n\n  /**\n   * 在数组指定位置插入元素\n   *\n   * @param keypath\n   * @param item\n   * @param index\n   */\n  insert(keypath: string, item: any, index: number | boolean): true | void {\n    return this.$observer.insert(keypath, item, index)\n  }\n\n  /**\n   * 在数组尾部添加元素\n   *\n   * @param keypath\n   * @param item\n   */\n  append(keypath: string, item: any): true | void {\n    return this.$observer.append(keypath, item)\n  }\n\n  /**\n   * 在数组首部添加元素\n   *\n   * @param keypath\n   * @param item\n   */\n  prepend(keypath: string, item: any): true | void {\n    return this.$observer.prepend(keypath, item)\n  }\n\n  /**\n   * 通过索引移除数组中的元素\n   *\n   * @param keypath\n   * @param index\n   */\n  removeAt(keypath: string, index: number): true | void {\n    return this.$observer.removeAt(keypath, index)\n  }\n\n  /**\n   * 直接移除数组中的元素\n   *\n   * @param keypath\n   * @param item\n   */\n  remove(keypath: string, item: any): true | void {\n    return this.$observer.remove(keypath, item)\n  }\n\n  /**\n   * 拷贝任意数据，支持深拷贝\n   *\n   * @param data\n   * @param deep\n   */\n  copy<T>(data: T, deep?: boolean): T {\n    return this.$observer.copy(data, deep)\n  }\n\n}\n\nconst toString = Object.prototype.toString\n\nfunction matchType(value: any, type: string) {\n  return type === 'numeric'\n    ? is.numeric(value)\n    : string.lower(toString.call(value)) === `[object ${type}]`\n}\n\nfunction afterCreateHook(instance: Yox, watchers: Record<string, type.watcher | WatcherOptions> | void) {\n\n  if (watchers) {\n    instance.watch(watchers)\n  }\n\n  execute(instance.$options[config.HOOK_AFTER_CREATE], instance)\n  execute(Yox[config.HOOK_AFTER_CREATE], env.UNDEFINED, instance)\n\n}\n\nfunction setFlexibleOptions(instance: Yox, key: string, value: Function | type.data | void) {\n  if (is.func(value)) {\n    instance[key](execute(value, instance))\n  }\n  else if (is.object(value)) {\n    instance[key](value)\n  }\n}\n\nfunction addEvent(instance: Yox, type: string, listener: type.listener, once?: true) {\n  const options: EmitterOptions = {\n    fn: listener,\n    ctx: instance\n  }\n  if (once) {\n    options.max = 1\n  }\n  instance.$emitter.on(type, options)\n}\n\nfunction addEvents(\n  instance: Yox,\n  type: string | Record<string, type.listener>,\n  listener?: type.listener,\n  once?: true\n): Yox {\n  if (is.string(type)) {\n    addEvent(instance, type as string, listener as type.listener, once)\n  }\n  else {\n    object.each(\n      type as type.data,\n      function (value: type.listener, key: string) {\n        addEvent(instance, key, value, once)\n      }\n    )\n  }\n  return instance\n}\n\nfunction loadComponent(data: Record<string, type.component> | void, name: string, callback: type.componentCallback): true | void {\n  if (data && data[name]) {\n    const component = data[name]\n    // 注册的是异步加载函数\n    if (is.func(component)) {\n\n      let loader = component as type.componentLoader,\n\n      queue: type.componentCallback[] = loader[LOADER_QUEUE]\n\n      if (queue) {\n        array.push(queue, callback)\n      }\n      else {\n        queue = component[LOADER_QUEUE] = [callback]\n\n        loader(\n          function (options: YoxOptions) {\n\n            loader[LOADER_QUEUE] = env.UNDEFINED\n\n            data[name] = options\n\n            array.each(\n              queue,\n              function (callback) {\n                callback(options)\n              }\n            )\n\n          }\n        )\n      }\n\n    }\n    // 不是异步加载函数，直接同步返回\n    else {\n      callback(component as YoxOptions)\n    }\n    return env.TRUE\n  }\n}\n\nfunction getResource(data: type.data | void, name: string, lookup?: Function) {\n  if (data && data[name]) {\n    return data[name]\n  }\n  else if (lookup) {\n    return lookup(name)\n  }\n}\n\nfunction setResource(data: type.data, name: string | type.data, value?: any, formatValue?: (value: any) => any) {\n  if (is.string(name)) {\n    data[name as string] = formatValue ? formatValue(value) : value\n  }\n  else {\n    object.each(\n      name as type.data,\n      function (value, key) {\n        data[key] = formatValue ? formatValue(value) : value\n      }\n    )\n  }\n}\n\nif (process.env.NODE_ENV !== 'pure') {\n  Yox['dom'] = domApi\n  // 全局注册内置指令\n  Yox.directive({ event, model, binding })\n  // 全局注册内置过滤器\n  Yox.filter({ hasSlot })\n}\n\n"],"names":["TRUE","FALSE","NULL","UNDEFINED","RAW_UNDEFINED","RAW_FILTER","RAW_PARTIAL","RAW_COMPONENT","RAW_DIRECTIVE","RAW_TRANSITION","RAW_VALUE","RAW_LENGTH","RAW_FUNCTION","RAW_TEMPLATE","RAW_WILDCARD","RAW_MINUS_ONE","WINDOW","window","DOCUMENT","document","EVENT_TAP","EVENT_CLICK","EVENT_INPUT","EVENT_CHANGE","EVENT_MODEL","EMPTY_FUNCTION","EMPTY_OBJECT","Object","freeze","EMPTY_ARRAY","EMPTY_STRING","VALUE_HOLDER","value","target","env.UNDEFINED","func","env.RAW_FUNCTION","array","Array","isArray","object","env.NULL","string","number","boolean","numeric","isNaN","parseFloat","isFinite","fn","context","args","is.func","is.array","apply","isDef","call","type","originalEvent","this","phase","CustomEvent","PHASE_CURRENT","isPrevented","preventDefault","env.TRUE","isStoped","stopPropagation","env.RAW_MINUS_ONE","each","callback","reversed","length","i","env.FALSE","nativePush","item","nativeUnshift","unshift","addItem","action","push","indexOf","strict","result","index","last","pop","remove","splice","has","toArray","execute","env.EMPTY_ARRAY","slice","toObject","key","join","separator","falsy","camelizePattern","hyphenatePattern","capitalizePattern","camelizeCache","hyphenateCache","capitalizeCache","camelize","str","replace","$0","$1","upper","hyphenate","lower","capitalize","trim","env.EMPTY_STRING","start","end","is.number","part","lastIndexOf","startsWith","endsWith","offset","charAt","codeAt","charCodeAt","toUpperCase","toLowerCase","is.string","dotPattern","asteriskPattern","doubleAsteriskPattern","splitCache","patternCache","match","keypath","prefix","string.startsWith","list","split","lastIndex","keypath1","keypath2","isFuzzy","string.has","env.RAW_WILDCARD","matchFuzzy","pattern","cache","RegExp","keys","sortKeyByAsc","a","b","sortKeyByDesc","sort","desc","clear","_","extend","original","merge","object1","object2","copy","deep","array.each","is.object","get","keypathUtil.each","isLast","hasValue","env.VALUE_HOLDER","set","autofill","defaultValue","toString","DEBUG","INFO","WARN","ERROR","FATAL","nativeConsole","console","env.RAW_UNDEFINED","level","test","env.EMPTY_FUNCTION","stylePrefix","getLevel","env.WINDOW","logLevel","getStyle","backgroundColor","debug","msg","tag","log","info","warn","error","fatal","Error","nextTick","ns","listeners","Emitter","filter","instance","_a","name","isComplete","object.copy","event_1","options","matchNamespace","array.has","listener","ctx","num","max","off","prevent","stop","array.push","ns_1","matchListener_1","createMatchListener","object.each","matchListener","parseNamespace","string.indexOf","string.slice","matchTrue","namespace","setImmediate","isNative","shared","MessageChannel","channel","port1","onmessage","port2","postMessage","setTimeout","tasks","NextTask","run","array.unshift","task","SLOT_DATA_PREFIX","HINT_BOOLEAN","DIRECTIVE_MODEL","DIRECTIVE_EVENT","DIRECTIVE_BINDING","DIRECTIVE_CUSTOM","HOOK_BEFORE_CREATE","HOOK_AFTER_CREATE","HOOK_BEFORE_MOUNT","HOOK_AFTER_MOUNT","HOOK_BEFORE_UPDATE","HOOK_AFTER_UPDATE","HOOK_BEFORE_DESTROY","HOOK_AFTER_DESTROY","guid","ID","VNODE","LOADING","COMPONENT","LEAVING","update","api","vnode","oldVnode","node","nativeAttrs","oldNativeAttrs","newValue_1","env.EMPTY_OBJECT","oldValue_1","attr","removeAttr","nativeProps","oldNativeProps","prop","removeProp","hint","data","directives","oldDirectives","node_1","field.COMPONENT","isKeypathChange_1","directive","once","bind","unbind","node_2","ref","props","slots","model","isComponent","$model","object.merge","checkProps","forceUpdate","refs","$refs","isPatchable","createKeyToIndex","vnodes","startIndex","endIndex","insertBefore","parentNode","referenceNode","before","append","createComponent","child","parent","field.LOADING","component.update","directive.update","createData","field.ID","createVnode","isComment","isText","isStyle","isOption","children","text","html","createText","createComment","componentOptions_1","loadComponent","object.has","field.VNODE","enterVnode","env.RAW_COMPONENT","createElement","isSvg","addVnodes","nativeAttr.update","nativeProp.update","insertVnode","hasParent","enter","component_1","isStatic","$observer","nextTask","prepend","removeVnodes","removeVnode","component_2","done","destroyVnode","leaveVnode","slot","$vnode","component_3","directive.remove","destroy","component","transition","field.LEAVING","leave","updateChildren","oldChildren","oldKeyToIndex","oldIndex","startVnode","endVnode","oldStartIndex","oldEndIndex","oldStartVnode","oldEndVnode","patch","next","oldText","oldHtml","create","isRemove","is.numeric","setPair","render","template","filters","partials","transitions","$scope","$keypath","$stack","vnodeStack","localPartials","findValue","stack","lookup","depIgnore","defaultKeypath","scope","keypathUtil.join","holder","isUndef","$item","object.get","createMethodListener","event","method","array.last","$event","$data","createGetter","getter","renderTextVnode","vnodeList","lastVnode","renderAttributeVnode","renderPropertyVnode","renderLazyVnode","renderTransitionVnode","renderBindingVnode","config.DIRECTIVE_BINDING","hooks","binding","renderModelVnode","config.DIRECTIVE_MODEL","renderEventMethodVnode","config.DIRECTIVE_EVENT","handler","renderEventNameVnode","fire","renderDirectiveVnode","config.DIRECTIVE_CUSTOM","renderSpreadVnode","renderElementVnode","attrs","childs","componentName","array.pop","renderSlots_1","renderExpressionIdentifier","myStack","renderExpressionMemberKeypath","identifier","runtimeKeypath","array.join","keypathUtil.separator","renderExpressionMemberLiteral","staticKeypath","renderExpressionCall","renderSlot","defaultRender","renderPartial","renderImport","partial","renderEach","eachHandler","generate","lastScope","lastStack","concat","$length","from","to","equal","fromValue","fromKeypath","toValue","count","sync","deps","observer","setter","unique","watcher","$2","oldValue","newValue","diff","watcherOptions","fixed","array.falsy","dep","watch","Computed","is.boolean","force","env.RAW_VALUE","lastComputed","current","unwatch","sorted","keypathUtil.match","source","newIsString","oldIsString","env.RAW_LENGTH","newIsArray","oldIsArray","newLength","oldLength","Math","newIsObject","oldIsObject","diffRecursion","watchFuzzyKeypaths","subKeypath","subNewValue","subOldValue","newKeypath_1","fuzzyKeypath","keypathUtil.matchFuzzy","diffString","diffArray","diffObject","isRecursive","fuzzyKeypaths","watchKeypath","keypathUtil.isFuzzy","readValue","optionsHolder","immediate","syncEmitter","asyncEmitter","asyncChanges","Observer","currentComputed","computed","reversedComputedKeys","add","matchBest","setValue","targetValue","object.set","string.codeAt","diffWatcher","keypaths","pending","diffAsync","change","filterWatcher","build","object.sort","emitter","on","formatWatcherOptions","step","toNumber","min","insert","array.remove","object.clear","innerText","innerHTML","findElement","selector","env.DOCUMENT","querySelector","addEventListener","removeEventListener","addClass","className","classList","removeClass","createEvent","documentElement","classes","CHAR_WHITESPACE","PROPERTY_CHANGE_1","env.EVENT_INPUT","EMITTER","propertyName","env.EVENT_CHANGE","isBoxElement_1","env.EVENT_CLICK","attachEvent","detachEvent","tagName","IEEvent_1","element","object.extend","currentTarget","srcElement","IEEvent","returnValue","cancelBubble","getElementById","STYLE_SHEET","COMPOSITION_START","COMPOSITION_END","domain","namespaces","svg","specialEvents","domApi","createElementNS","createTextNode","config.HINT_BOOLEAN","setAttribute","value_1","getAttribute","removeAttribute","beforeNode","appendChild","oldNode","replaceChild","removeChild","nextSibling","find","nodeType","string.lower","cssText","nativeListeners","special","nativeListener","customEvent","object.falsy","addSpecialEvent","delay","timer","args_1","array.toArray","arguments","env.EVENT_MODEL","locked","lazy","debounce","env.EVENT_TAP","debounceIfNeeded","inputControl","radioControl","checked","checkboxControl","removeAt","array.indexOf","selectControl","multiple","option","selected","selectedIndex","values_1","inputTypes","radio","checkbox","dataBinding","lazyValue","viewBinding_1","element_1","control_1","eventName_1","type_1","checkProp","config.SLOT_DATA_PREFIX","globalDirectives","globalTransitions","globalComponents","globalPartials","globalFilters","LOADER_QUEUE","TEMPLATE_COMPUTED","env.RAW_TEMPLATE","selectorPattern","$options","config.HOOK_BEFORE_CREATE","Yox","events","methods","watchers","extensions","addComputed","$emitter","placeholder","el","root","model_1","components","$root","$parent","setFlexibleOptions","env.RAW_TRANSITION","env.RAW_DIRECTIVE","env.RAW_PARTIAL","env.RAW_FILTER","newWatchers","afterCreateHook","$template","compile","snabbdom.create","plugin","install","stringify","Function","rule","getResource","setResource","removeComputed","addEvents","downward","$children","PHASE_DOWNWARD","PHASE_UPWARD","$components","modelKey","modelValue","$el","$directives","$transitions","$partials","$filters","templateRender.render","afterHook_1","instance_1","$options_1","config.HOOK_BEFORE_UPDATE","snabbdom.patch","config.HOOK_AFTER_UPDATE","config.HOOK_BEFORE_MOUNT","config.HOOK_AFTER_MOUNT","propTypes","result_1","config.HOOK_BEFORE_DESTROY","snabbdom.destroy","config.HOOK_AFTER_DESTROY","toggle","increase","decrease","is","logger","config.HOOK_AFTER_CREATE","addEvent","loader_1","queue_1","formatValue","hasSlot"],"mappings":"aAKO,IAAMA,MAAO,EACPC,OAAQ,EACRC,KAAO,KACPC,eAAY,EAKZC,cAAgB,YAOhBC,WAAa,SACbC,YAAc,UACdC,cAAgB,YAChBC,cAAgB,YAChBC,eAAiB,aAGjBC,UAAY,QACZC,WAAa,SACbC,aAAe,WACfC,aAAe,WACfC,aAAe,IAKfC,eAAiB,EAKjBC,cAAgBC,SAAWb,cAAgBa,OAASd,UAKpDe,gBAAkBC,WAAaf,cAAgBe,SAAWhB,UAY1DiB,UAAY,MAKZC,YAAc,QAKdC,YAAc,QAKdC,aAAe,SAKfC,YAAc,QAKdC,eAAiB,aAOjBC,aAAeC,OAAOC,OAAO,IAK7BC,YAAcF,OAAOC,OAAO,IAK5BE,aAAe,GAKfC,aAA4B,CACvCC,MAAO7B,0BCxGgB8B,GACvB,OAAOA,IAAWC,mBCKJC,KAAKH,GACnB,cAAcA,IAAUI,sBASVC,MAAML,GACpB,OAAOM,MAAMC,QAAQP,YASPQ,OAAOR,GAErB,OAAOA,IAAUS,MAA6B,iBAAVT,WAStBU,OAAOV,GACrB,MAAwB,iBAAVA,WASAW,OAAOX,GACrB,MAAwB,iBAAVA,WASAY,QAAQZ,GACtB,MAAwB,kBAAVA,WASAa,QAAQb,GACtB,OAAOW,OAAOX,IACRU,OAAOV,KAAWc,MAAMC,WAAWf,KAAWgB,SAAShB,4IC5DtCiB,EAASC,EAAeC,GAC/C,GAAIC,KAAQH,GACV,OAAOI,MAASF,GACZF,EAAGK,MAAMJ,EAASC,GAClBI,MAAML,GACJD,EAAGO,KAAKN,EAASC,GACjBI,MAAMJ,GACJF,EAAGE,GACHF,ICdZ,2BAkCE,WAAYQ,EAAcC,GACxBC,KAAKF,KAAOA,EACZE,KAAKC,MAAQC,EAAYC,cACrBJ,IACFC,KAAKD,cAAgBA,GA0C3B,OAnCEG,2BAAA,WAEE,IADiBF,KACHI,YAAa,CACjB,IAAAL,EAFOC,mBAGXD,GACFA,EAAcM,iBAJDL,KAMNI,YAAcE,KAEzB,OARiBN,MAcnBE,4BAAA,WAEE,IADiBF,KACHO,SAAU,CACd,IAAAR,EAFOC,mBAGXD,GACFA,EAAcS,kBAJDR,KAMNO,SAAWD,KAEtB,OARiBN,MAWnBE,oBAAA,WACE,OAAOF,KAAKK,kBAGdH,iBAAA,WACE,OAAOF,KAAKQ,mBA3EAN,gBAAgB,EAEhBA,eAAe,EAEfA,iBAAiBO,mBCAjC,SAAgBC,KACdhC,EACAiC,EACAC,GAEQ,IAAAC,WACR,GAAIA,EACF,GAAID,EACF,IAAK,IAAIE,EAAID,EAAS,EAAGC,GAAK,GACxBH,EAASjC,EAAMoC,GAAIA,EAAGD,KAAYE,MADPD,UAOjC,IAASA,EAAI,EAAGA,EAAID,GACdF,EAASjC,EAAMoC,GAAIA,EAAGD,KAAYE,MADZD,MASlC,SAASE,WAActC,EAAYuC,GACjCvC,EAAMA,EAAMmC,QAAUI,EAGxB,SAASC,cAAiBxC,EAAYuC,GACpCvC,EAAMyC,QAAQF,GAUhB,SAASG,QAAW1C,EAAYL,EAAgBgD,GAC1C3B,MAASrB,GACXqC,KACErC,EACA,SAAU4C,GACRI,EAAO3C,EAAOuC,KAKlBI,EAAO3C,EAAOL,YAUFiD,KAAQ5C,EAAYJ,GAClC8C,QAAQ1C,EAAOJ,EAAQ0C,qBASTG,QAAWzC,EAAYJ,GACrC8C,QAAQ1C,EAAOJ,EAAQ4C,eAWzB,SAAgBK,QAAW7C,EAAYJ,EAAWkD,GAChD,IAAIC,EAAShB,cAUb,OATAC,KACEhC,EACA,SAAUuC,EAAWS,GACnB,GAAIF,IAAWT,MAAYE,GAAQ3C,EAAS2C,IAAS3C,EAEnD,OADAmD,EAASC,EACFX,QAINU,WASOE,KAAQjD,GACd,IAAAmC,WACR,GAAIA,EAAS,EACX,OAAOnC,EAAMmC,EAAS,YAYVe,IAAOlD,GAErB,YAAa,EACX,OAAOA,EAAMkD,MAYjB,SAAgBC,OAAUnD,EAAYJ,EAAWkD,GAC/C,IAAIC,EAAS,EAWb,OAVAf,KACEhC,EACA,SAAUuC,EAASS,IACbF,IAAWT,MAAYE,GAAQ3C,EAAS2C,IAAS3C,KACnDI,EAAMoD,OAAOJ,EAAO,GACpBD,MAGJnB,MAEKmB,EAWT,SAAgBM,IAAOrD,EAAYJ,EAAWkD,GAC5C,OAAOD,QAAQ7C,EAAOJ,EAAQkD,IAAW,WAS3BQ,QAAWtD,GACzB,OAAOgB,MAAShB,GACZA,EACAuD,QAAQC,YAAgBC,MAAOzD,GAWrC,SAAgB0D,SAAS1D,EAAc2D,EAAqBhE,GAC1D,IAAIoD,EAAS,GAOb,OANAf,KACEhC,EACA,SAAUuC,GACRQ,EAAOY,EAAMpB,EAAKoB,GAAOpB,GAAQ5C,GAAS4C,IAGvCQ,WAUOa,KAAK5D,EAAiB6D,GACpC,OAAO7D,EAAM4D,KAAKC,YASJC,MAAM9D,GACpB,OAAQgB,MAAShB,KAAWA,EAAMmC,wLCrN9B4B,gBAAkB,aAExBC,iBAAmB,aAEnBC,kBAAoB,SAEpBC,cAAwC,GAExCC,eAAyC,GAEzCC,gBAA0C,YAQ1BC,SAASC,GASvB,OARKJ,cAAcI,KACjBJ,cAAcI,GAAOA,EAAIC,QACvBR,gBACA,SAAUS,EAAIC,GACZ,OAAOC,MAAMD,MAIZP,cAAcI,YASPK,UAAUL,GASxB,OARKH,eAAeG,KAClBH,eAAeG,GAAOA,EAAIC,QACxBP,iBACA,SAAUQ,EAAIC,GACZ,MAAO,IAAMG,MAAMH,MAIlBN,eAAeG,YASRO,WAAWP,GAOzB,OANKF,gBAAgBE,KACnBF,gBAAgBE,GAAOA,EAAIC,QACzBN,kBACAS,QAGGN,gBAAgBE,YASTQ,KAAKR,GACnB,OAAOR,QAAMQ,GACTS,aACAT,EAAIQ,OAWV,SAAgBrB,MAAMa,EAAaU,EAAeC,GAChD,OAAOC,OAAUD,GACbD,IAAUC,EACRF,aACAT,EAAIb,MAAMuB,EAAOC,GACnBX,EAAIb,MAAMuB,GAWhB,SAAgBnC,UAAQyB,EAAaa,EAAcH,GACjD,OAAOV,EAAIzB,QAAQsC,EAAMjE,MAAM8D,GAASA,EAAQ,GAWlD,SAAgBI,YAAYd,EAAaa,EAAcF,GACrD,OAAOX,EAAIc,YAAYD,EAAMjE,MAAM+D,GAAOA,EAAMX,EAAInC,iBAUtCkD,WAAWf,EAAaa,GACtC,OAA8B,IAAvBtC,UAAQyB,EAAKa,YAUNG,SAAShB,EAAaa,GACpC,IAAMI,EAASjB,EAAInC,OAASgD,EAAKhD,OACjC,OAAOoD,GAAU,GAAKH,YAAYd,EAAKa,KAAUI,WAMnCC,OAAOlB,EAAatB,GAClC,OAAOsB,EAAIkB,OAAOxC,GAAS,YAMbyC,OAAOnB,EAAatB,GAClC,OAAOsB,EAAIoB,WAAW1C,GAAS,YAMjB0B,MAAMJ,GACpB,OAAOA,EAAIqB,uBAMGf,MAAMN,GACpB,OAAOA,EAAIsB,uBAUGvC,MAAIiB,EAAaa,GAC/B,OAAOtC,UAAQyB,EAAKa,IAAS,WASfrB,QAAMQ,GACpB,OAAQuB,OAAUvB,KAASA,EAAInC,qRCzL3B2D,WAAa,MAEnBC,gBAAkB,MAElBC,sBAAwB,QAExBC,WAAuC,GAEvCC,aAAuC,GAE1BrC,UAAY,aASTsC,MAAMC,EAAiBC,GACrC,OAAID,IAAYC,EACPA,EAAOlE,OAGTmE,WAAkBF,EADzBC,GAAUxC,WAENwC,EAAOlE,OACPJ,uBASUC,OAAKoE,EAAiBnE,GAOpC,IAJA,IAAMsE,EAAOrF,MAAM+E,WAAWG,IAC1BH,WAAWG,GACVH,WAAWG,GAAWA,EAAQI,MAAM3C,WAEhCzB,EAAI,EAAGqE,EAAYF,EAAKpE,OAAS,EAAGC,GAAKqE,GAC5CxE,EAASsE,EAAKnE,GAAIA,IAAMqE,KAAepE,MADgBD,eAa/CwB,OAAK8C,EAAkBC,GACrC,OAAOD,GAAYC,EACfD,EAAW7C,UAAY8C,EACvBD,GAAYC,WAQFC,QAAQR,GACtB,OAAOS,MAAWT,EAASU,uBASbC,WAAWX,EAAiBY,GAC1C,IAAIC,EAAQf,aAAac,GACzB,IAAKC,EAAO,CACV,IAAM3C,EAAM0C,EACTzC,QAAQuB,WAAY,OACpBvB,QAAQwB,gBAAiB,UACzBxB,QAAQyB,sBAAuB,cAClCiB,EAAQf,aAAac,GAAW,IAAIE,OAAO,IAAI5C,OAEjD,IAAMvB,EAASqD,EAAQD,MAAMc,GAC7B,GAAIlE,EACF,OAAOA,EAAO,YC5EFoE,KAAKhH,GACnB,OAAOb,OAAO6H,KAAKhH,GAGrB,SAASiH,aAAaC,EAAWC,GAC/B,OAAOD,EAAElF,OAASmF,EAAEnF,OAGtB,SAASoF,cAAcF,EAAWC,GAChC,OAAOA,EAAEnF,OAASkF,EAAElF,gBAUNqF,KAAKrH,EAAmBsH,GACtC,OAAON,KAAKhH,GAAQqH,KAClBC,EAAOF,cAAgBH,uBAUXpF,OAAK7B,EAAmB8B,GACtC,IAAK,IAAI0B,KAAOxD,EACd,GAAI8B,EAAS9B,EAAOwD,GAAMA,KAAStB,MACjC,eAUUqF,MAAMvH,GACpB6B,OACE7B,EACA,SAAUwH,EAAGhE,UACJxD,EAAOwD,cAUJiE,OAAOC,EAAqB1H,GAO1C,OANA6B,OACE7B,EACA,SAAUR,EAAOgE,GACfkE,EAASlE,GAAOhE,IAGbkI,WAQOC,MAAMC,EAA2BC,GAC/C,OAAOD,GAAWC,EACdJ,OAAOA,OAAO,GAAIG,GAAUC,GAC5BD,GAAWC,WAUDC,KAAK9H,EAAa+H,GAChC,IAAInF,EAAS5C,EAwBb,OAvBIa,MAASb,GACP+H,GACFnF,EAAS,GACToF,KACEhI,EACA,SAAUoC,EAAMS,GACdD,EAAOC,GAASiF,KAAK1F,EAAM2F,MAK/BnF,EAAS5C,EAAOsD,QAGX2E,OAAUjI,KACjB4C,EAAS,GACTf,OACE7B,EACA,SAAUR,EAAOgE,GACfZ,EAAOY,GAAOuE,EAAOD,KAAKtI,EAAOuI,GAAQvI,KAIxCoD,WAYOsF,IAAIlI,EAAaiG,GAwD/B,OAvCAkC,OACElC,EACA,SAAUzC,EAAK4E,GAEb,GAAIpI,GAAUC,KA6BZ,OADAD,EAASN,UACFwC,MA1BP,IAAI1C,EAAQQ,EAAOwD,GAInB6E,EAAWtH,MAAMvB,GAGbA,GAASoB,KAAQpB,EAAM0I,OACzB1I,EAAQA,EAAM0I,OAGZE,EACEC,GACFC,aAAiB9I,MAAQA,EACzBQ,EAASsI,cAGTtI,EAASN,UAIXM,EAASR,IAWVQ,EAYT,SAAgBuI,IAAIvI,EAAmBiG,EAAiBzG,EAAYgJ,GAClEL,OACElC,EACA,SAAUzC,EAAK4E,GACb,GAAIA,EACFpI,EAAOwD,GAAOhE,OAEX,GAAIQ,EAAOwD,GACdxD,EAASA,EAAOwD,OAEb,CAAA,IAAIgF,EAIP,OAAOtG,MAHPlC,EAASA,EAAOwD,GAAO,eAgBfN,MAAIlD,EAAmBwD,GAErC,OAAOzC,MAAMf,EAAOwD,aASNG,QAAM3D,GACpB,OAAQiI,OAAUjI,IACba,MAASb,KACRgH,KAAKhH,GAAQgC,+KCrPIvC,EAAagJ,GACpC,OAAOhJ,GAAUQ,MAAYR,EAAOiJ,SAChCjJ,EAAOiJ,WACP3H,MAAM0H,GACJA,EACA7D,aCLD,IAAM+D,MAAQ,EACRC,KAAO,EACPC,KAAO,EACPC,MAAQ,EACRC,MAAQ,EAKfC,qBAAuCC,UAAYC,cAAoBD,QAAUhJ,KAKvFkJ,MAAQ,MAAMC,KAAKV,SAASW,iBAAuBV,MAAQE,KAK3DS,YAAc,KAKd,SAASC,WACP,GAAIC,OAAY,CACd,IAAMC,EAAWD,OAA0B,cAC3C,GAAIC,GAAYd,OAASc,GAAYV,MACnC,OAAOU,EAGX,OAAON,MAGT,SAASO,SAASC,GAChB,MAAO,oBAAoBA,4EAQbC,MAAMC,EAAaC,GAC7Bd,eAAiBO,YAAcZ,OACjCK,cAAce,IAAIT,aAAeQ,GAAO,aAAcJ,SAAS,QAASG,YAS5DG,KAAKH,EAAaC,GAC5Bd,eAAiBO,YAAcX,MACjCI,cAAce,IAAIT,aAAeQ,GAAO,YAAaJ,SAAS,WAAYG,YAS9DI,KAAKJ,EAAaC,GAC5Bd,eAAiBO,YAAcV,MACjCG,cAAciB,KAAKX,aAAeQ,GAAO,YAAaJ,SAAS,QAASG,YAS5DK,MAAML,EAAaC,GAC7Bd,eAAiBO,YAAcT,OACjCE,cAAckB,MAAMZ,aAAeQ,GAAO,aAAcJ,SAAS,WAAYG,YASjEM,MAAMN,EAAaC,GACjC,GAAIP,YAAcR,MAChB,MAAM,IAAIqB,MAAM,KAAIN,GAAO,mBAAiBD,OCvF5CQ,oKCgCF,WAAYC,GACVnJ,KAAKmJ,GAAKA,GAAMpI,MAChBf,KAAKoJ,UAAY,GA0OrB,OAjOEC,iBAAA,SACEvJ,EACAN,EACA8J,GAGA,IAAIC,EAAWvJ,KAEfwJ,yBAAEC,SAAMN,OAERlE,EAAOsE,EAASH,UAAUK,GAE1BC,EAAapJ,KAEb,GAAI2E,EAAM,CAGRA,EAAO0E,KAAY1E,GAKnB,IAAM2E,EAAQpK,GAAQA,EAAK,aAAcU,YACrCV,EAAK,GACLjB,UAEJsI,KACE5B,EACA,SAAU4E,EAAyBxD,GAGjC,GAAKyD,eAAeX,EAAIU,IAElBE,IAAU9E,EAAM4E,MAEhBP,GAAWA,EAAOxJ,EAAMN,EAAMqK,IAJpC,CAeID,IACFA,EAAMI,SAAWH,EAAQvK,IAG3B,IAAImC,EAASQ,QAAQ4H,EAAQvK,GAAIuK,EAAQI,IAAKzK,GAwB9C,OAtBIoK,IACFA,EAAMI,SAAWzL,WAInBsL,EAAQK,IAAML,EAAQK,IAAOL,EAAQK,IAAM,EAAK,EAG5CL,EAAQK,MAAQL,EAAQM,KAC1BZ,EAASa,IAAItK,EAAM+J,EAAQvK,IAIzBsK,IACEnI,IAAWV,MACb6I,EAAMS,UAAUC,OAETV,EAAMrJ,WACbkB,EAASV,QAITU,IAAWV,MACN2I,EAAa3I,WADtB,KAQN,OAAO2I,GAUTL,eAAA,SACEvJ,EACAkK,GAGA,IAEEZ,EAFepJ,eAIjB6J,EAA0BpK,KAAQuK,GAC9B,CAAE1K,GAAI0K,GACNA,EAEJ,GAAIlD,OAAU+C,IAAYpK,KAAQoK,EAAQvK,IAAK,CACvC,IAAAkK,iBATSxJ,WASPyJ,SAAMN,OACdU,EAAQV,GAAKA,EACboB,KACEnB,EAAUK,KAAUL,EAAUK,GAAQ,IACtCI,KAeNR,gBAAA,SACEvJ,EACAkK,GAGM,IAEJZ,EAFepJ,eAIjB,GAAIF,EAAM,CAEF,IAAA0J,iBANSxJ,WAMPyJ,SAAMe,OAEdC,EAAgBC,oBAAoBV,GAEpCtJ,EAAO,SAAUuE,EAAwBwE,GACvC5C,KACE5B,EACA,SAAU4E,EAAyBnI,GAC7B+I,EAAcZ,IAAYC,eAAeU,EAAIX,IAC/C5E,EAAKnD,OAAOJ,EAAO,IAGvBpB,MAEG2E,EAAKpE,eACDuI,EAAUK,IAIjBA,EACEL,EAAUK,IACZ/I,EAAK0I,EAAUK,GAAOA,GAGjBe,GACPG,OAAYvB,EAAW1I,QA/BVV,KAqCNoJ,UAAY,IAkBzBC,gBAAA,SACEvJ,EACAkK,GAGA,IAEEZ,EAFapJ,eAIfwJ,iBAJexJ,WAIbyJ,SAAMN,OAER1H,EAASnB,KAETsK,EAAgBF,oBAAoBV,GAEpCtJ,EAAO,SAAUuE,GASf,OARA4B,KACE5B,EACA,SAAU4E,GACR,GAAIe,EAAcf,IAAYC,eAAeX,EAAIU,GAC/C,OAAOpI,EAASV,QAIfU,GAYT,OATIgI,EACEL,EAAUK,IACZ/I,EAAK0I,EAAUK,IAGVN,GACPwB,OAAYvB,EAAW1I,IAGjBe,QAYZ,SAASoJ,eAAe1B,EAAarJ,GAEnC,IAAM2B,EAAS,CACbgI,KAAM3J,EACNqJ,GAAI1F,cAGN,GAAI0F,EAAI,CACN,IAAMzH,EAAQoJ,UAAehL,EAAM,KAC/B4B,GAAS,IACXD,EAAOgI,KAAOsB,MAAajL,EAAM,EAAG4B,GACpCD,EAAO0H,GAAK4B,MAAajL,EAAM4B,EAAQ,IAI3C,OAAOD,EAKT,SAASuJ,UAAUnB,GACjB,OAAOvJ,KAgBT,SAASoK,oBAAoBV,GAC3B,OAAOvK,KAAQuK,GACT,SAAUH,GACR,OAAOG,IAAaH,EAAQvK,IAE9B0L,UAaR,SAASlB,eAAemB,EAAmBpB,GACjC,IAAAV,OACR,OAAOA,GAAM8B,EACT9B,IAAO8B,EACP3K,uBCjVmBhC,GACvB,OAAOmB,KAAQnB,IAAW,cAAc2J,KAAKV,SAASjJ,WFI7C4M,eAAiBzM,cAAoB0M,SAASD,gBACvDhC,SAAWgC,cAgBb,IGlBIE,kBHQFlC,gBADSmC,iBAAmB5M,cAAoB0M,SAASE,gBAC9C,SAAU/L,GACnB,IAAMgM,EAAU,IAAID,eACpBC,EAAQC,MAAMC,UAAYlM,EAC1BgM,EAAQG,MAAMC,YAAY,IAIjBC,+BGCX,aACE3L,KAAK4L,MAAQ,GAoEjB,OA9EgBC,SAAd,WACE,OAAOT,SAAWA,OAAS,IAAIS,IAejCA,mBAAA,SAAOrN,EAAgBe,GACf,IAAAgK,EAAWvJ,KAAQ4L,UACzBrB,KACEqB,EACA,CACEtM,GAAId,EACJyL,IAAK1K,IAGY,IAAjBqM,EAAM/K,QACRqI,WACE,WACEK,EAASuC,SASjBD,oBAAA,SAAQrN,EAAgBe,GAChB,IAAAgK,EAAWvJ,KAAQ4L,UACzBG,QACEH,EACA,CACEtM,GAAId,EACJyL,IAAK1K,IAGY,IAAjBqM,EAAM/K,QACRqI,WACE,WACEK,EAASuC,SASjBD,kBAAA,WACE7L,KAAK4L,MAAM/K,OAAS,GAMtBgL,gBAAA,WACU,IAAAD,aACJA,EAAM/K,SACRb,KAAK4L,MAAQ,GACb/E,KACE+E,EACA,SAAUI,GACR/J,QAAQ+J,EAAK1M,GAAI0M,EAAK/B,cC7EnBgC,iBAAmB,SAKnBC,aAAe,EAIfC,gBAAkB,QAClBC,gBAAkB,QAClBC,kBAAoB,UACpBC,iBAAmB,IAEnBC,mBAAqB,eACrBC,kBAAoB,cACpBC,kBAAoB,cACpBC,iBAAmB,aACnBC,mBAAqB,eACrBC,kBAAoB,cACpBC,oBAAsB,gBACtBC,mBAAqB,eC9B9BC,KAAO,oBAGT,QAASA,KCDJ,IAAMC,GAAK,MAELC,MAAQ,SAERC,QAAU,WAEVC,UAAY,aAEZC,QAAU,oBCJPC,OAAOC,EAAUC,EAAcC,GAErC,IAAAC,SAAMC,gBAEdC,EAAiBH,GAAYA,EAASE,YAEtC,GAAIA,GAAeC,EAAgB,CAEjC,IAAMC,EAAWF,GAAeG,aAEhCC,EAAWH,GAAkBE,aAE7BlD,OACEiD,EACA,SAAUG,EAAiBtE,GACpBqE,EAASrE,IACTsE,EAAK1P,QAAUyP,EAASrE,GAAMpL,OAEjCiP,EAAIS,KAAKN,EAAMhE,EAAMsE,EAAK1P,SAKhCsM,OACEmD,EACA,SAAUzH,EAAcoD,GACjBmE,EAASnE,IACZ6D,EAAIU,WAAWP,EAAMhE,eC3Bf4D,SAAOC,EAAUC,EAAcC,GAErC,IAAAC,SAAMQ,gBAEdC,EAAiBV,GAAYA,EAASS,YAEtC,GAAIA,GAAeC,EAAgB,CAEjC,IAAMN,EAAWK,GAAeJ,aAEhCC,EAAWI,GAAkBL,aAE7BlD,OACEiD,EACA,SAAUO,EAAgB1E,GACnBqE,EAASrE,IACT0E,EAAK9P,QAAUyP,EAASrE,GAAMpL,OAEjCiP,EAAIa,KAAKV,EAAMhE,EAAM0E,EAAK9P,SAKhCsM,OACEmD,EACA,SAAUK,EAAgB1E,GACnBmE,EAASnE,IACZ6D,EAAIc,WAAWX,EAAMhE,EAAM0E,EAAKE,kBCzB1BhB,SAAOE,EAAcC,GAE3B,IAAAc,SAAMC,eAEdC,EAAgBhB,GAAYA,EAASe,WAErC,GAAIA,GAAcC,EAAe,CAE/B,IAAMC,EAAOH,EAAKI,YAAoBnB,EAAME,KAE5CkB,EAAkBnB,GAAYD,EAAMzI,UAAY0I,EAAS1I,QAEzD8I,EAAWW,GAAcV,aAEzBC,EAAWU,GAAiBX,aAE5BlD,OACEiD,EACA,SAAUgB,EAAsBnF,GACxB,IAAAD,UAAEqF,SAAMC,SAAMC,WACfjB,EAASrE,IAGLoF,GACJD,EAAUvQ,QAAUyP,EAASrE,GAAMpL,OACnCsQ,KAECI,GACFA,EAAON,EAAMX,EAASrE,GAAO+D,GAE/BsB,EAAKL,EAAMG,EAAWrB,IATtBuB,EAAKL,EAAMG,EAAWrB,KAc5B5C,OACEmD,EACA,SAAUc,EAAsBnF,GAC9B,IAAKmE,EAASnE,GAAO,CACX,IAAAsF,iBACJA,GACFA,EAAON,EAAMG,EAAWpB,gBAUpB3L,SAAO0L,GACb,IAAAgB,eACR,GAAIA,EAAY,CACd,IAAMS,EAAOzB,EAAMe,KAAKI,YAAoBnB,EAAME,KAClD9C,OACE4D,EACA,SAAUK,GACA,IAAAG,iBACJA,GACFA,EAAOC,EAAMJ,EAAWrB,eC5DlBF,SAAOE,EAAcC,GAE7B,IAAmDC,EAAnDa,SAAMW,QAAKC,UAAOC,UAAOC,UAAO7P,YAEtC,GAAIgO,EAAM8B,aAIR,GAHA5B,EAAOa,EAAKI,WAGRlB,EAAU,CAKR5N,MAAMwP,KACHF,IACHA,EAAQ,IAEVA,EAAMzB,EAAK6B,QAAUF,GAGvB,IAAM3N,EAAS8N,MAAaL,EAAQzB,EAAK+B,WAAWN,GAAS3Q,UAAe4Q,GACxE1N,GACFgM,EAAKgC,YAAYhO,SAKrBgM,EAAOF,EAAME,KAGf,GAAIwB,EAAK,CACP,IAAMS,EAAOnQ,EAAQoQ,MACjBD,IACFA,EAAKT,GAAOxB,IClBlB,SAASmC,YAAYrC,EAAcC,GACjC,OAAOD,EAAM5E,MAAQ6E,EAAS7E,KACzB4E,EAAMlL,MAAQmL,EAASnL,IAG9B,SAASwN,iBAAiBC,EAA0BC,EAAoBC,GAQtE,IANA,IAAIvO,EAEJ8L,EAEAlL,EAEO0N,GAAcC,IACnBzC,EAAQuC,EAAOC,MACD1N,EAAMkL,EAAMlL,OACnBZ,IACHA,EAAS,IAEXA,EAAOY,GAAO0N,GAEhBA,IAGF,OAAOtO,GAAUoM,aAInB,SAASoC,aAAa3C,EAAU4C,EAAkBzC,EAAY0C,GACxDA,EACF7C,EAAI8C,OAAOF,EAAYzC,EAAM0C,GAG7B7C,EAAI+C,OAAOH,EAAYzC,GAI3B,SAAS6C,gBAAgB/C,EAAc1D,GAErC,IAAM0G,GAAShD,EAAMiD,QAAUjD,EAAMhO,SAAS+Q,gBAAgBzG,EAAS0D,GAQvE,OANAA,EAAMe,KAAKI,WAAmB6B,EAC9BhD,EAAMe,KAAKmC,SAAiB1P,MAE5B2P,SAAiBnD,GACjBoD,SAAiBpD,GAEVgD,EAIT,SAASK,aACP,IAAMtC,EAAO,GAEb,OADAA,EAAKuC,IAAY9D,SACVuB,EAGT,SAASwC,YAAYxD,EAAUC,GAEvB,IAAA5E,QAAK8E,SAAMa,SAAMe,gBAAa0B,cAAWC,WAAQC,YAASC,aAAUC,aAAUC,SAAMC,SAAM9R,YAEhG,IAAIkO,IAAQa,EAQZ,GAJAA,EAAOsC,aAEPrD,EAAMe,KAAOA,EAET0C,EACFzD,EAAME,KAAOH,EAAIgE,WAAWF,QAI9B,GAAIL,EACFxD,EAAME,KAAOH,EAAIiE,cAAcH,QAIjC,GAAI/B,EAAa,CAEf,IAAImC,EAA2CjT,UAG3CoK,GACFpJ,EAAQkS,cACN9I,EACA,SAAUkB,GACJ6H,MAAWpD,EAAMmC,SAEfnC,EAAKmC,WAEHnC,EAAKqD,SACPpE,EAAQe,EAAKqD,cAENrD,EAAKqD,QAEdC,WACErE,EACA+C,gBAAgB/C,EAAO1D,KAM3B2H,EAAmB3H,IAO3B0D,EAAME,KAAOH,EAAIiE,cAAcM,eAE3BL,EACFlB,gBAAgB/C,EAAOiE,GAGvBlD,EAAKmC,SAAiBnQ,UAMxBmN,EAAOF,EAAME,KAAOH,EAAIwE,cAAcvE,EAAM5E,IAAe4E,EAAMwE,OAE7DZ,EACFa,UAAU1E,EAAKG,EAAM0D,GAEdC,EACP9D,EAAI8D,KAAK3D,EAAiB2D,EAAMH,EAASC,GAElCG,GACP/D,EAAI+D,KAAK5D,EAAiB4D,EAAMJ,EAASC,GAG3Ce,OAAkB3E,EAAKC,GACvB2E,SAAkB5E,EAAKC,GACvBmD,SAAiBnD,GACjBoD,SAAiBpD,GAKrB,SAASyE,UAAU1E,EAAU4C,EAAkBJ,EAAiBC,EAAqBC,EAAmBI,GAEtG,IADA,IAAI7C,EAAc7J,EAAQqM,GAAc,EAAGpM,EAAM/D,MAAMoQ,GAAYA,EAAqBF,EAAOjP,OAAS,EACjG6C,GAASC,GAEdmN,YAAYxD,EADZC,EAAQuC,EAAOpM,IAEfyO,YAAY7E,EAAK4C,EAAY3C,EAAO6C,GACpC1M,IAIJ,SAASyO,YAAY7E,EAAU4C,EAAkB3C,EAAc6C,GAErD,IAAA3C,SAAMa,SAAM/O,YAEpB6S,EAAY9E,EAAIkD,OAAO/C,GAYvB,GATI2C,EACF9C,EAAI8C,OAAOF,EAAYzC,EAAM2C,EAAO3C,MAGpCH,EAAI+C,OAAOH,EAAYzC,IAKpB2E,EAAW,CACd,IAAIC,EAAyB9T,UAC7B,GAAIgP,EAAM8B,YAAa,CACrB,IAAMiD,EAAYhE,EAAKI,WACnB4D,IACFD,EAAQ,WACNT,WAAWrE,EAAO+E,UAId/E,EAAMgF,UAAahF,EAAMyD,QAAWzD,EAAMwD,YAClDsB,EAAQ,WACNT,WAAWrE,KAGX8E,GAIF9S,EAAQiT,UAAUC,SAASC,QAAQL,IAMzC,SAASM,aAAarF,EAAU4C,EAAkBJ,EAA0BC,EAAqBC,GAE/F,IADA,IAAIzC,EAAqB7J,EAAQqM,GAAc,EAAGpM,EAAM/D,MAAMoQ,GAAYA,EAAqBF,EAAOjP,OAAS,EACxG6C,GAASC,IACd4J,EAAQuC,EAAOpM,KAEbkP,YAAYtF,EAAK4C,EAAY3C,GAE/B7J,IAIJ,SAASkP,YAAYtF,EAAU4C,EAAkB3C,GACvC,IAAAE,SACR,GAAIF,EAAMgF,UAAYhF,EAAMyD,QAAUzD,EAAMwD,UAC1CzD,EAAIzL,OAAOqO,EAAYzC,OAEpB,CAEH,IAKAoF,EALIC,EAAO,WACTC,aAAazF,EAAKC,GAClBD,EAAIzL,OAAOqO,EAAYzC,IAKzB,GAAIF,EAAM8B,eACRwD,EAAYtF,EAAMe,KAAKI,YAIrB,YADAoE,IAKJE,WAAWzF,EAAOsF,EAAWC,IAKjC,SAASC,aAAazF,EAAUC,GAgBtB,IAAAe,SAAM6C,aAAUX,WAAQyC,SAOhC,GAAIA,GAAQzC,GAAUA,EAAO0C,OAAQ,CAEnC,IAAM/D,EAAQqB,EAAOzJ,IAAIkM,GAEzB,GAAI9D,GAASpF,IAAUoF,EAAO5B,GAC5B,OAIJ,GAAIA,EAAM8B,YAAa,CACrB,IAAM8D,EAAY7E,EAAKI,WACnByE,GACFC,SAAiB7F,GACjB4F,EAAUE,WAGV/E,EAAKmC,SAAiB1P,WAIxBqS,SAAiB7F,GACb4D,GACFtK,KACEsK,EACA,SAAUZ,GACRwC,aAAazF,EAAKiD,KAW5B,SAASqB,WAAWrE,EAAc+F,GAI1B,IAAAhF,SAAMiF,eAMZ,GALID,IAAcC,IAEhBA,EAAcD,EAAUJ,OAAiBK,YAE3CtR,QAAQqM,EAAKkF,UACTD,EAAY,CACN,IAAAlB,UACR,GAAIA,EAIF,YAHAA,EACE9E,EAAME,OAYd,SAASuF,WAAWzF,EAAc+F,EAAuBR,GAIjD,IAAAxE,SAAMiF,eAKZ,GAJID,IAAcC,IAEhBA,EAAcD,EAAUJ,OAAiBK,YAEvCA,EAAY,CACN,IAAAE,UACR,GAAIA,EAUF,YATAA,EACElG,EAAME,KACNa,EAAKkF,SAAiB,WAChBlF,EAAKkF,WACPV,IACAxE,EAAKkF,SAAiBjV,aAQhCuU,IAGF,SAASY,eAAepG,EAAU4C,EAAkBiB,EAAmBwC,GAerE,IAbA,IAUAC,EACAC,EAXI9D,EAAa,EACjBC,EAAWmB,EAAStQ,OAAS,EAC7BiT,EAAa3C,EAASpB,GACtBgE,EAAW5C,EAASnB,GAEpBgE,EAAgB,EAChBC,EAAcN,EAAY9S,OAAS,EACnCqT,EAAgBP,EAAYK,GAC5BG,EAAcR,EAAYM,GAKnBD,GAAiBC,GAAelE,GAAcC,GAG9C8D,EAGKC,EAGAG,EAGAC,EAKDvE,YAAYkE,EAAYI,IAC/BE,MAAM9G,EAAKwG,EAAYI,GACvBJ,EAAa3C,IAAWpB,GACxBmE,EAAgBP,IAAcK,IAIvBpE,YAAYmE,EAAUI,IAC7BC,MAAM9G,EAAKyG,EAAUI,GACrBJ,EAAW5C,IAAWnB,GACtBmE,EAAcR,IAAcM,IAOrBrE,YAAYmE,EAAUG,IAC7BE,MAAM9G,EAAKyG,EAAUG,GACrBjE,aACE3C,EACA4C,EACAgE,EAAczG,KACdH,EAAI+G,KAAKF,EAAY1G,OAEvBsG,EAAW5C,IAAWnB,GACtBkE,EAAgBP,IAAcK,IAKvBpE,YAAYkE,EAAYK,IAC/BC,MAAM9G,EAAKwG,EAAYK,GACvBlE,aACE3C,EACA4C,EACAiE,EAAY1G,KACZyG,EAAczG,MAEhBqG,EAAa3C,IAAWpB,GACxBoE,EAAcR,IAAcM,KAMvBL,IACHA,EAAgB/D,iBAAiB8D,EAAaK,EAAeC,IAS3DrU,MALJiU,EAAWC,EAAWzR,IAClBuR,EAAcE,EAAWzR,KACzB9D,YAIF6V,MAAM9G,EAAKwG,EAAYH,EAAYE,IACnCF,EAAYE,GAAsBtV,WAIlCuS,YAAYxD,EAAKwG,GAGnB3B,YAAY7E,EAAK4C,EAAY4D,EAAYI,GAEzCJ,EAAa3C,IAAWpB,IAvExBoE,EAAcR,IAAcM,GAH5BC,EAAgBP,IAAcK,GAH9BD,EAAW5C,IAAWnB,GAHtB8D,EAAa3C,IAAWpB,GAqFxBiE,EAAgBC,EAClBjC,UACE1E,EACA4C,EACAiB,EACApB,EACAC,EACAmB,EAASnB,EAAW,IAGfD,EAAaC,GACpB2C,aACErF,EACA4C,EACAyD,EACAK,EACAC,GAKN,SAAgBG,MAAM9G,EAAUC,EAAcC,GAE5C,GAAID,IAAUC,EAAd,CAIQ,IAAAC,SAAMa,SAGd,IAAKsB,YAAYrC,EAAOC,GAAW,CAIjC,IAAM0C,EAAa5C,EAAIkD,OAAO/C,GAM9B,OALAqD,YAAYxD,EAAKC,QACb2C,IACFiC,YAAY7E,EAAK4C,EAAY3C,EAAOC,GACpCoF,YAAYtF,EAAK4C,EAAY1C,KAUjC,GALAD,EAAME,KAAOA,EACbF,EAAMe,KAAOA,EAITd,EAAS6B,aAAef,EAAKmC,SAC/BnC,EAAKqD,OAAepE,OAKtB,IAAIA,EAAMgF,WAAY/E,EAAS+E,SAA/B,CAIAN,OAAkB3E,EAAKC,EAAOC,GAC9B0E,SAAkB5E,EAAKC,EAAOC,GAC9BkD,SAAiBnD,EAAOC,GACxBmD,SAAiBpD,EAAOC,GAEhB,IAAA4D,SAAMC,SAAMF,aAAUF,YAASC,aAEvCoD,EAAU9G,EAAS4D,KACnBmD,EAAU/G,EAAS6D,KACnBsC,EAAcnG,EAAS2D,SAEnB5M,OAAU6M,GACRA,IAASkD,GACXhH,EAAI8D,KAAK3D,EAAM2D,EAAMH,EAASC,GAGzB3M,OAAU8M,GACbA,IAASkD,GACXjH,EAAI+D,KAAK5D,EAAiB4D,EAAMJ,EAASC,GAIpCC,GAAYwC,EACfxC,IAAawC,GACfD,eAAepG,EAAKG,EAAM0D,EAAUwC,GAI/BxC,IACH5M,OAAU+P,IAAY/P,OAAUgQ,KAClCjH,EAAI8D,KAAK3D,EAAMhK,aAAkBwN,GAEnCe,UAAU1E,EAAKG,EAAM0D,IAGdwC,EACPhB,aAAarF,EAAKG,EAAMkG,IAGjBpP,OAAU+P,IAAY/P,OAAUgQ,KACvCjH,EAAI8D,KAAK3D,EAAMhK,aAAkBwN,KAKrC,SAAgBuD,OAAOlH,EAAUG,EAAYlO,EAAcuF,GACzD,MAAO,CACL6D,IAAK2E,EAAI3E,IAAI8E,GACba,KAAMsC,aACNnD,OACAlO,UACAuF,WAIJ,SAAgBuO,QAAQ/F,EAAUC,EAAckH,GAC9C,GAAIA,EAAU,CACZ,IAAMvE,EAAa5C,EAAIkD,OAAOjD,EAAME,MAChCyC,GACF0C,YAAYtF,EAAK4C,EAAY3C,QAO/BwF,aAAazF,EAAKC,qBCnlBGjP,EAAagJ,GACpC,OAAOoN,QAAWpW,IACbA,EACDsB,MAAM0H,GACJA,EACA,mBCNiBhJ,GACvB,OAAOA,IAAWC,UCoBpB,SAASoW,QAAQrW,EAAamL,EAAcpH,EAAahE,IAC1CC,EAAOmL,KAAUnL,EAAOmL,GAAQ,KACxCpH,GAAOhE,WAGEuW,OACdrV,EACAsV,EACAC,EACAC,EACAxG,EACAyG,GAGA,IAIA9B,EAJI+B,EAAoB,CAAEC,SAAUzR,cAEpC0R,EAAS,CAAEF,GAIXG,EAAwB,GAExBC,EAA0C,GAE1CC,EAAY,SAAUC,EAAc7T,EAAeW,EAAamT,EAAiBC,EAAqBC,GAEpG,IAAIC,EAAQJ,EAAM7T,GAAQoD,EAAU8Q,OAAiBD,EAAMT,SAAU7S,GAAMhE,EAAakX,EAAOM,EAAS1O,aA6BxG,GA1BI2O,QAAQJ,KACVA,EAAiB5Q,GAIflF,MAAM+V,EAAMtT,IACdhE,EAAQsX,EAAMtT,GAIPzC,MAAM+V,EAAMI,SACnBJ,EAAQA,EAAMI,MAMV1T,IAAQoB,aACVpF,EAAQsX,EAGDA,GAAS7W,MAAYc,MAAM+V,EAAMtT,MACxChE,EAAQsX,EAAMtT,KAIdhE,IAAUkX,IAEZlX,EAAQkB,EAAQwH,IAAIjC,EAASyQ,EAAOE,MACtBF,EAAO,CAEnB,GAAIC,GAAU9T,EAAQ,EAIpB,OAAO4T,EAAUC,EAAO7T,EAAQ,EAAGW,EAAKmT,EAAQC,EAAWC,GAI7D,IAAMjU,EAASuU,IAAWlB,EAASzS,GASnC,OARIZ,GACFoU,EAASpU,GACFqD,QAAUzC,GAGjBwT,EAAOxX,MAAQE,UACfsX,EAAO/Q,QAAU4Q,GAEZG,EAQX,OAHAA,EAAOxX,MAAQA,EACfwX,EAAO/Q,QAAUA,EAEV+Q,GAeTI,EAAuB,SACrBxM,EACAjK,EACA+V,GAEA,OAAO,SAAUW,EAAoB5H,GAEnC,IAAM6H,EAAS5W,EAAQkK,GAEvB,GAAIyM,aAAiBhW,YAAa,CAEhC,IAAIuB,EAAclD,UAElB,GAAIiB,EAAM,CACR,IAAMmW,EAAQS,KAAWb,GACrBI,IACFA,EAAMU,OAASH,EACfP,EAAMW,MAAQhI,EACd7M,EAASQ,QAAQkU,EAAQ5W,EAASC,EAAK+V,IACvCI,EAAMU,OACNV,EAAMW,MAAQ/X,gBAIhBkD,EAASQ,QAAQkU,EAAQ5W,EAAS+O,EAAO,CAAC4H,EAAO5H,GAAQ4H,GAG3D,OAAOzU,EAIPQ,QACEkU,EACA5W,EACAC,EAAOA,EAAK+V,GAAShX,aAO7BgY,EAAe,SAAUC,EAAkBjB,GACzC,OAAO,WACL,OAAOiB,EAAOjB,KAIlBkB,EAAkB,SAAUrF,GAC1B,IAAMsF,EAAYN,KAAWhB,GAC7B,GAAIsB,EAAW,CACb,IAAMC,EAAYP,KAAWM,GAC7B,GAAIC,GAAaA,EAAU3F,OACxB2F,EAAUvF,MAAmBA,OAS9B7G,KAAWmM,EANY,CACrB1F,OAAQ1Q,KACR8Q,OACA7R,UACAuF,QAASmQ,EAAOC,aAOxB0B,EAAuB,SAAUnN,EAAcpL,GACzC6U,EAAO7D,YACTsF,QAAQzB,EAAQ,QAASzJ,EAAMpL,GAG/BsW,QAAQzB,EAAQ,cAAezJ,EAAM,CAAEA,OAAMpL,WAIjDwY,EAAsB,SAAUpN,EAAc4E,EAAiBhQ,GAC7DsW,QAAQzB,EAAQ,cAAezJ,EAAM,CAAEA,OAAMpL,QAAOgQ,UAGtDyI,EAAkB,SAAUrN,EAAcpL,GACxCsW,QAAQzB,EAAQ,OAAQzJ,EAAMpL,IAGhC0Y,EAAwB,SAAUtN,GAChCyJ,EAAOK,WAAayB,EAAYvL,IAQlCuN,EAAqB,SAAUvN,EAAcoM,EAAqBxH,GAEhE,IAAMhM,EAAMuT,OAAiBqB,kBAA0BxN,GAgBvD,OAdAkL,QACEzB,EACA,aACA7Q,EACA,CACE8G,GAAI8N,kBACJxN,OACApH,MACA6U,MAAO3I,EAAW0I,mBAClBE,QAAStB,EAAO/Q,QAChBuJ,SAIGwH,EAAOxX,OAIhB+Y,EAAmB,SAAUvB,GAE3B3C,EAAO9D,MAAQyG,EAAOxX,MAEtBsW,QACEzB,EACA,aACAmE,gBACA,CACElO,GAAIkO,gBACJ5N,KAAMhG,aACNpB,IAAKgV,gBACLF,QAAStB,EAAO/Q,QAChBoS,MAAO3I,EAAW8I,oBAKxBC,EAAyB,SACvB7N,EAAcpH,EAAahE,EAC3B8X,EAAgB3W,GAEhBmV,QACEzB,EACA,aACA7Q,EACA,CACE8G,GAAIoO,gBACJ9N,OACApH,MACAhE,QACA6Y,MAAO3I,EAAWgJ,iBAClBC,QAASvB,EAAqBE,EAAkB3W,EAAM2V,MAK5DsC,EAAuB,SACrBhO,EAAcpH,EAAahE,EAC3B6X,GApKoB,IAAUpW,EAsK9B6U,QACEzB,EACA,aACA7Q,EACA,CACE8G,GAAIoO,gBACJ9N,OACApH,MACAhE,QACA6Y,MAAO3I,EAAWgJ,iBAClBC,SAhL0B1X,EAgLGoW,EA/K1B,SAAUA,EAAoB5H,GAG/BxO,IAASoW,EAAMpW,OACjBoW,EAAQ,IAAIhW,YAAYJ,EAAMoW,IAEhC3W,EAAQmY,KAAKxB,EAAO5H,QA8KxBqJ,EAAuB,SACrBlO,EAAcpH,EAAahE,EAC3B8X,EAAuB3W,EAAuBgX,GAG9C,IAAMU,EAAQ3I,EAAW9E,GAQzBkL,QACEzB,EACA,aACA7Q,EACA,CACE8G,GAAIyO,iBACJnO,OACApH,MACAhE,QACA6Y,QACAV,OAAQA,EAASD,EAAaC,EAAQrB,GAAU5W,UAChDiZ,QAASrB,EAASF,EAAqBE,EAAQ3W,EAAM2V,GAAU5W,aAMrEsZ,EAAoB,SAAUhC,GAEpB,IAAAxX,UAAOyG,YAGf,GAAIzG,GAASS,MAEPgI,OAAUzI,KAAWqB,MAASrB,KAEhCsM,OACEtM,EACA,SAAUA,EAAOgE,GACfsS,QAAQzB,EAAQ,QAAS7Q,EAAKhE,KAI9ByG,GAAS,CACX,IAAMzC,EAAMuT,OAAiBqB,kBAA0BnS,GACvD6P,QACEzB,EACA,aACA7Q,EACA,CACE8G,GAAI8N,kBACJxN,KAAMhG,aACNpB,MACA6U,MAAO3I,EAAW0I,mBAClBE,QAASvB,OAAiB9Q,EAASU,kBAU/CsS,EAAqB,SACnBvK,EACA5E,EACAoP,EACAC,EACA7I,GAGA,GAAIxG,EAAK,CACP,IAAMsP,EAAgB1Y,EAAQwH,IAAI4B,GAMlC4E,EAAM5E,IAAMsP,EAUd,GAPIF,IACF7E,EAAS3F,EACTwK,IACA7E,EAAS3U,WAIPyZ,EACF5C,EAAW9T,KAAKiM,EAAM4D,SAAW,IACjC6G,IACAE,IAAU9C,QAEP,GAAIjG,EAAO,CACd,IAAMgJ,EAAc,GACpBxN,OACEwE,EACA,SAAU8D,EAAgBxJ,GACxB2L,EAAW9T,KAAK,IAChB2R,IACA,IAAMnD,EAASoI,IAAU9C,GACzB+C,EAAY1O,GAAQqG,EAAOjP,OAASiP,EAASvR,YAGjDgP,EAAM4B,MAAQgJ,EAGhB5K,EAAMhO,QAAUA,EAChBgO,EAAMzI,QAAUmQ,EAAOC,SAEvB,IAAMwB,EAAYN,KAAWhB,GAK7B,OAJIsB,GACFnM,KAAWmM,EAAWnJ,GAGjBA,GAIT6K,EAA6B,SAC3B3O,EACA+L,EACAvR,EACA4R,EACAJ,EACAF,GAEA,IAAM8C,EAAU9C,GAASJ,EACzB1T,EAAS6T,EACP+C,EACAA,EAAQxX,SAAWoD,GAAU,GAAK,GAClCwF,EACA+L,EACAC,GAEF,OAAOI,EAASpU,EAASA,EAAOpD,OAGlCia,EAAgC,SAC9BC,EACAC,GAGA,OADAzM,QAAcyM,EAAgBD,GACvBE,KAAWD,EAAgBE,YAGpCC,EAAgC,SAC9Bta,EACAua,EACAJ,EACA3C,GAEIjW,MAAM4Y,KACRI,EAAgBH,KAAWD,EAA4BE,YAEzD,IAAMjX,EAAS0F,aAAkBtC,EAAQmR,IAAW3X,EAAOua,GAG3D,OAFAnX,EAAOqD,QAAUvG,UACjBkD,EAAOpD,MAAQwG,EAAQA,EAAMxG,MAAQE,UAC9BsX,EAASpU,EAASA,EAAOpD,OAGlCwa,EAAuB,SACrBvZ,EACAE,EACAqW,GAEA,IAAMpU,EAAS0F,aAIf,OAHA1F,EAAOqD,QAAUvG,UAEjBkD,EAAOpD,MAAQ4D,QAAQ3C,EAAIC,EAASC,GAAQjB,WACrCsX,EAASpU,EAASA,EAAOpD,OAIlCya,EAAa,SAAUrP,EAAcsP,GAEnC,IAAMrC,EAAYN,KAAWhB,GAE7BtF,EAASvQ,EAAQwH,IAAI0C,GAEjBiN,IACE5G,EACFjJ,KACEiJ,EACA,SAAUvC,GACRhD,KAAWmM,EAAWnJ,GACtBA,EAAM0F,KAAOxJ,EACb8D,EAAMiD,OAASjR,IAIZwZ,GACPA,MASNC,EAAgB,SAAUvP,EAAcmL,GACtCS,EAAc5L,GAAQmL,GAIxBqE,EAAe,SAAUxP,GACvB,GAAI4L,EAAc5L,GAChB4L,EAAc5L,SAEX,CACH,IAAMyP,EAAUnE,EAAStL,GACrByP,GACFA,EACEd,EACAE,EACAK,EACAE,EACApC,EACAG,EACAC,EACAC,EACAC,EACAC,EACAI,EACAE,EACAG,EACAE,EACAE,EACAC,EACAgB,EACAE,EACAC,EACAE,EACA5R,YASR6R,EAAc,SACZC,EACApY,EACAoB,EACAyC,EACApD,EACAb,GAGA,IAAMyY,EAAYrE,EAAQsE,EAAYpE,EAGtCF,EAAS,CAAEC,SAAUpQ,GACrBqQ,EAASoE,EAAUC,OAAOvE,GAGtBrV,MAAMiB,KACRoU,EAAOwE,QAAU5Y,GAIfa,IACFuT,EAAOvT,GAASW,GAKbyC,IACHmQ,EAAOc,MAAQ9U,GAGjBoY,IAEApE,EAASqE,EACTnE,EAASoE,GAIXJ,EAAa,SACXE,EACAK,EACAC,EACAC,EACAlY,GAGA,IAAMmY,EAAYH,EAAKrb,MAEvByb,EAAcJ,EAAK5U,QAEnB,GAAI6U,EAAI,CACN,IAAII,EAAUJ,EAAGtb,MAAO2b,EAAQ,EAChC,GAAIH,EAAYE,EACd,GAAIH,EACF,IAAK,IAAI9Y,EAAI+Y,EAAW/Y,GAAKiZ,EAASjZ,IACpCsY,EACEC,EACAvY,EACAkZ,IACAvW,aACA/B,QAKJ,IAASZ,EAAI+Y,EAAW/Y,EAAIiZ,EAASjZ,IACnCsY,EACEC,EACAvY,EACAkZ,IACAvW,aACA/B,QAMN,GAAIkY,EACF,IAAS9Y,EAAI+Y,EAAW/Y,GAAKiZ,EAASjZ,IACpCsY,EACEC,EACAvY,EACAkZ,IACAvW,aACA/B,QAKJ,IAASZ,EAAI+Y,EAAW/Y,EAAIiZ,EAASjZ,IACnCsY,EACEC,EACAvY,EACAkZ,IACAvW,aACA/B,QAOR,GAAIhC,MAASma,GACN,CAAI/Y,EAAI,EAAb,IAAK,IAAWD,EAASgZ,EAAUhZ,OAAQC,EAAID,EAAQC,IACrDsY,EACEC,EACAQ,EAAU/Y,GACVA,EACAgZ,EACIlE,OAAiBkE,EAAarW,aAAmB3C,GACjD2C,aACJ/B,EACAb,QAID,GAAIiG,OAAU+S,GACjB,IAAK,IAAIxX,KAAOwX,EACdT,EACEC,EACAQ,EAAUxX,GACVA,EACAyX,EACIlE,OAAiBkE,EAAazX,GAC9BoB,aACJ/B,IAQV,OAAOmT,EACLuD,EACAE,EACAK,EACAE,EACApC,EACAG,EACAC,EACAC,EACAC,EACAC,EACAI,EACAE,EACAG,EACAE,EACAE,EACAC,EACAgB,EACAE,EACAC,EACAE,EACA5R,UCrqBJ,wBA2EE,WACEzC,EACAmV,EACAtU,EACAuU,EACAC,EACA3D,EACA4D,GAGA,IAAM7Q,EAAWvJ,KAEjBuJ,EAASzE,QAAUA,EACnByE,EAAS5D,MAAQA,EAEjB4D,EAAS2Q,KAAOA,EAEhB3Q,EAAShK,QAAU4a,EAAS5a,QAC5BgK,EAAS4Q,SAAWA,EACpB5Q,EAASiN,OAASA,EAClBjN,EAAS6Q,OAASA,EAElB7Q,EAAS8Q,OAAS,GAElB9Q,EAAS+Q,QAAU,SAAUpX,EAASC,EAASoX,GAI7C,IAAMC,EAAWjR,EAASlL,MAC1Boc,EAAWlR,EAASxC,IAAIzG,MAEpBma,IAAaD,GACfL,EAASO,KAAK5V,EAAS2V,EAAUD,IAKrCjR,EAASoR,eAAiB,CACxBV,OACAK,QAAS/Q,EAAS+Q,UAGhB/Q,EAASqR,OAASC,MAAYX,KAChCrT,KACEqT,EACA,SAAUY,GACRX,EAASY,MACPD,EACAvR,EAASoR,kBAkHrB,OAlOSK,QAAP,SAAalW,EAAiBqV,EAA6BtQ,GAEzD,IAMA2M,EAEA4D,EARIzU,EAAQrF,KAEZ2Z,EAAO3Z,KAEP4Z,EAAiB,GA4BjB,GAtBIza,KAAQoK,GACV2M,EAAS3M,EAEF/C,OAAU+C,KACboR,QAAWpR,EAAQlE,SACrBA,EAAQkE,EAAQlE,OAEdsV,QAAWpR,EAAQoQ,QACrBA,EAAOpQ,EAAQoQ,MAGbva,MAASmK,EAAQqQ,QACnBA,EAAOvQ,KAAYE,EAAQqQ,OAEzBza,KAAQoK,EAAQ9C,OAClByP,EAAS3M,EAAQ9C,KAEftH,KAAQoK,EAAQzC,OAClBgT,EAASvQ,EAAQzC,MAIjBoP,EACF,OAAO,IAAIwE,EAASlW,EAASmV,EAAMtU,EAAOuU,EAAMC,EAAU3D,EAAQ4D,IA0FtEY,gBAAA,SAAIE,GAEI,IAEJ1E,EAFexW,YAEPT,EAFOS,aAKjB,GALiBA,KAKH2F,OAKT,GAAIuV,IAAUxJ,MAVF1R,KAUuBmb,WAGtC,GAbenb,KAaF4a,MAbE5a,KAcJ3B,MAAQ4D,QAAQuU,EAAQjX,OAE9B,CAhBUS,KAmBJ+O,SAGT,IAAMqM,EAAeJ,EAASK,QAC9BL,EAASK,QAvBIrb,KAAAA,KAyBJ3B,MAAQ4D,QAAQuU,EAAQjX,GAzBpBS,KA4BJ8O,OAETkM,EAASK,QAAUD,QA9BNpb,KAMN3B,MAAQ4D,QAAQuU,EAAQjX,GA6BnC,OAnCiBS,KAmCD3B,OAGlB2c,gBAAA,SAAI3c,GACI,IAAE+b,cAAQ7a,eACZ6a,GACFA,EAAOva,KAAKN,EAASlB,IAWzB2c,gBAAA,SAAIF,GACF9a,KAAKqa,OAAOS,GAAOxa,MAMrB0a,iBAAA,WAEQ,IAAEX,cAAQH,YAAMC,gBAAUQ,sBAEhChQ,OACE0P,EACA,SAAUhU,EAAQyU,GAChBvQ,KAAW2P,EAAMY,GACjBX,EAASY,MACPD,EACAH,KAON3a,KAAKqa,OAAS,IAOhBW,mBAAA,WAEQ,IAAEd,YAAMC,gBAAUG,eAExBzT,KACEqT,EACA,SAAUY,GACRX,EAASmB,QAAQR,EAAKR,IAExBha,MAGF4Z,EAAKrZ,OAAS,2BC/OO0a,EAAkBzW,GAEzC,IAAIrD,EAgBJ,OAdAoF,KACE0U,EACA,SAAUxW,GACR,IAAMlE,EAAS2a,MAAkB1W,EAASC,GAC1C,GAAIlE,GAAU,EAKZ,OAJAY,EAAS,CACPgI,KAAM1E,EACNoJ,KAAMpD,MAAajG,EAASjE,IAEvBE,QAKNU,qBC1BgBga,EAAa3W,GAEpC,GAAI2W,GAAU3c,MAAYgG,IAAYrB,aACpC,OAAOgY,EAGT,IAAMha,EAASuU,IAAWyF,EAAQ3W,GAClC,OAAIrD,EACKA,EAAOpD,WADhB,sBCCAoc,EACAD,EACA7Z,GAGA,IAAM+a,EAAcnX,OAAUkW,GAE9BkB,EAAcpX,OAAUiW,GAExB,GAAIkB,GAAeC,EAMjB,OALAhb,EACEib,WACAF,EAAcjB,EAAS5Z,OAAStC,UAChCod,EAAcnB,EAAS3Z,OAAStC,WAE3B+B,wBCfTma,EACAD,EACA7Z,GAGA,IAAMkb,EAAanc,MAAS+a,GAE5BqB,EAAapc,MAAS8a,GAEtB,GAAIqB,GAAcC,EAAY,CAE5B,IAAMC,EAAYF,EAAapB,EAAS5Z,OAAStC,UAEjDyd,EAAYF,EAAatB,EAAS3Z,OAAStC,UAE3CoC,EACEib,WACAG,EACAC,GAGF,IAAK,IAAIlb,EAAI,EAAGD,EAASob,KAAK9R,IAAI4R,GAAa,EAAGC,GAAa,GAAIlb,EAAID,EAAQC,IAC7EH,EACE,GAAKG,EACL2Z,EAAWA,EAAS3Z,GAAKvC,UACzBic,EAAWA,EAAS1Z,GAAKvC,WAI7B,OAAO+B,0BC5BTma,EACAD,EACA7Z,GAGA,IAAMub,EAAcpV,OAAU2T,GAE9B0B,EAAcrV,OAAU0T,IAEpB0B,GAAeC,KAEjB1B,EAAWyB,EAAczB,EAAW5M,aACpC2M,EAAW2B,EAAc3B,EAAW3M,aAEhCqO,GACFvR,OACE8P,EACA,SAAUpc,EAAYgE,GAChBhE,IAAUmc,EAASnY,IACrB1B,EAAS0B,EAAKhE,EAAOmc,EAASnY,MAMlC8Z,GACFxR,OACE6P,EACA,SAAUnc,EAAYgE,GAChBhE,IAAUoc,EAASpY,IACrB1B,EAAS0B,EAAKoY,EAASpY,GAAMhE,eClCjB+d,cACtBtX,EACA2V,EACAD,EACA6B,EACA1b,GAGA,IAAM+Z,EAAO,SAAU4B,EAAoBC,EAAkBC,GAE3D,GAAID,IAAgBC,EAAa,CAE/B,IAAMC,EAAa7G,OAAiB9Q,EAASwX,GAE7CzV,KACEwV,EACA,SAAUK,GACJ9c,MAAM+c,WAAuBF,EAAYC,KAC3C/b,EACE+b,EAAcD,EAAYF,EAAaC,KAM/CJ,cAAcK,EAAYF,EAAaC,EAAaH,EAAoB1b,KAM5Eic,WAAWnC,EAAUD,EAAUE,IAC1BmC,UAAUpC,EAAUD,EAAUE,IAC9BoC,WAAWrC,EAAUD,EAAUE,wBC/BpC5V,EACA2V,EACAD,EACAF,EAAiByC,EACjBpc,GAGA,IAAIqc,EAGJrS,OACE2P,EACA,SAAUjU,EAAG4W,GAGX,GAAIC,QAAoBD,GAOlBrd,MAAM+c,WAAuB7X,EAASmY,IACxCtc,EACEsc,EAAcnY,EAAS2V,EAAUD,GAG5BuC,IACHC,EACFzS,KACEyS,EACAC,GAIFD,EAAgB,CAACC,QApBvB,CA6BA,IAAMpc,EAAS2a,MAAkByB,EAAcnY,GAC/C,GAAIjE,GAAU,EAAG,CAEf,IAAMyb,EAAavR,MAAakS,EAAcpc,GAC9C0b,EAAcY,UAAU1C,EAAU6B,GAClCE,EAAcW,UAAU3C,EAAU8B,GAE9BC,IAAgBC,GAClB7b,EACEsc,EAAcA,EAAcV,EAAaC,OAY/CQ,GACFZ,cAActX,EAAS2V,EAAUD,EAAUwC,EAAerc,0BCpErC0F,EAAW7G,EAAoBqK,GAEtD,GAAIA,EAAQmQ,OAASxa,EASnB,OAHAqK,EAAQmQ,QAGDxa,EAAK,KAAOA,EAAK,GCX5B,IAAM4d,cAAgC,CACpC9C,QAASpS,8CAQc2B,EAA+CwT,GAEtE,OAAI5d,KAAQoK,IACVuT,cAAc9C,QAAUzQ,EACxBuT,cAAcC,UAAYA,IAAc/c,KACjC8c,eAGLvT,GAAYA,EAA2ByQ,QAClCzQ,OADT,ECoBF,wBAoBE,WAAYyE,EAAkB/O,GAEXS,KAERsO,KAAOA,GAAQ,GAFPtO,KAGRT,QAAUA,GAHFS,KAAAA,KAIRyS,SAAW,IAAI5G,SAJP7L,KAMRsd,YAAc,IAAIjU,QANVrJ,KAORud,aAAe,IAAIlU,QAPXrJ,KAQRwd,aAAe,GAogB5B,OAxfEC,gBAAA,SACE3Y,EACAwC,EACAmO,GAGM,IAiBFhU,EAA4BnD,EAfhCof,EAAkB1C,SAASK,QAEzB/M,EAJetO,UAIT2d,EAJS3d,cAIC4d,EAJD5d,0BAOjB,GAAI8E,IAAYrB,aACd,OAAO6K,EAWT,GANIoP,IAAoBjI,GACtBiI,EAAgBG,IAAI/Y,GAKlB6Y,EAAU,CAEZ,GADArf,EAASqf,EAAS7Y,GAEhB,OAAOxG,EAAOyI,MAEhB,GAAI6W,EAAsB,CACxB,IAAM/Y,EAAQiZ,UAAUF,EAAsB9Y,GAC1CD,GAASA,EAAMsJ,OACjB1M,EAASuU,IACP2H,EAAS9Y,EAAM4E,MAAM1C,MACrBlC,EAAMsJ,QAUd,OAJK1M,IACHA,EAASuU,IAAW1H,EAAMxJ,IAGrBrD,EAASA,EAAOpD,MAAQiJ,GAUjCmW,gBAAA,SACE3Y,EACAzG,GAGA,IAAMkL,EAAWvJ,KAEfsO,SAAMqP,aAAUC,yBAElBG,EAAW,SAAUtD,EAAe3V,GAElC,IAAM0V,EAAWjR,EAASxC,IAAIjC,GAC9B,GAAI2V,IAAaD,EAAjB,CAIA,IAAIlc,EAEJ,GAAIqf,KACFrf,EAASqf,EAAS7Y,KAEhBxG,EAAO8I,IAAIqT,GAETmD,GAAsB,CACxB,IAAM/Y,EAAQiZ,UAAUF,EAAsB9Y,GAC9C,GAAID,GAASA,EAAMsJ,OACjB7P,EAASqf,EAAS9Y,EAAM4E,OACZ,CACV,IAAMuU,EAAc1f,EAAOyI,MACvBD,OAAUkX,IACZC,IAAWD,EAAanZ,EAAMsJ,KAAMsM,IAOzCnc,GACH2f,IAAW3P,EAAMxJ,EAAS2V,GAG5BlR,EAASmR,KAAK5V,EAAS2V,EAAUD,KAI/BjW,OAAUO,GACZiZ,EAAS1f,EAAOyG,GAETgC,OAAUhC,IACjB6F,OAAY7F,EAAsBiZ,IAYtCN,iBAAA,SACE3Y,EACA2V,EACAD,GAGA,IAAMjR,EAAWvJ,KAEfsd,gBAAaC,iBAAcC,iBAO7BT,EAAyC,KAA3BmB,OAAcpZ,GAE5BqZ,YACErZ,EAAS2V,EAAUD,EACnB8C,EAAYlU,UAAW2T,EACvB,SAAUE,EAAsBnY,EAAiB2V,EAAeD,GAC9D8C,EAAY5F,KAAKuF,EAAc,CAACxC,EAAUD,EAAU1V,MAgBxDqZ,YACErZ,EAAS2V,EAAUD,EACnB+C,EAAanU,UAAW2T,EACxB,SAAUE,EAAsBnY,EAAiB2V,EAAeD,GAE9D3T,KACE0W,EAAanU,UAAU6T,GACvB,SAAUhc,GACPA,EAAK+Y,UAIF,IAAAoE,gDACHrU,IAAUqU,EAAUnB,IACvB1S,KAAW6T,EAAUnB,GAGlB1T,EAAS8U,UACZ9U,EAAS8U,QAAU/d,KACnBiJ,EAASkJ,SAASpC,OAChB,WACM9G,EAAS8U,UACX9U,EAAS8U,QAAU9f,UACnBgL,EAAS+U,mBAavBb,sBAAA,WAEQ,IAAAlU,EAAWvJ,KAEfud,iBAAcC,iBAEhBjU,EAASiU,aAAe,GAExB7S,OACE6S,EACA,SAAUe,EAAqBzZ,GAE7B,IAAMtF,EAAO,CAAC+J,EAASxC,IAAIjC,GAAUyZ,EAAOlgB,MAAOyG,GAKnD+B,KACE0X,EAAOH,SACP,SAAUnB,GACRM,EAAa7F,KAAKuF,EAAczd,EAAMgf,oBAehDf,wBAAA,SACE3Y,EACA+E,GAGA,IAEA8T,EAAW3C,SAASyD,MAAM3Z,EAFT9E,KAE4B6J,GAE7C,GAAI8T,EASF,OAbe3d,KAMD2d,WANC3d,KAOJ2d,SAAW,IAPP3d,KAUN2d,SAAS7Y,GAAW6Y,EAVd3d,KAWN4d,qBAAuBc,KAXjB1e,KAWsC2d,SAAUrd,MAExDqd,GAWXF,2BAAA,SACE3Y,GAGM,IAEJ6Y,EAFe3d,cAIb2d,GAAYjM,MAAWiM,EAAU7Y,YAC5B6Y,EAAS7Y,GALD9E,KAMN4d,qBAAuBc,KAAYf,EAAUrd,QAY1Dmd,kBAAA,SACE3Y,EACAwV,EACA+C,GAGA,IAAM9T,EAAWvJ,KAEfT,YAAS+d,gBAAaC,iBAExBzO,EAAO,SAAUhK,EAAiB+E,GAEhC,IAAM8U,EAAU9U,EAAQoQ,KAAOqD,EAAcC,EAG7CvT,EAA2B,CACzB1K,GAAIuK,EAAQyQ,QACZrQ,IAAK1K,EACLya,MAAO,GAGLnQ,EAAQgF,OACV7E,EAASG,IAAM,GAGjBwU,EAAQC,GAAG9Z,EAASkF,GAEhBH,EAAQwT,WACVpb,QACE4H,EAAQyQ,QACR/a,EACA,CACEgK,EAASxC,IAAIjC,GACbvG,UACAuG,KAOJP,OAAUO,GACZgK,EACEhK,EACA+Z,qBAAqBvE,EAAS+C,IAKlC1S,OACE7F,EACA,SAAU+E,EAAwC/E,GAChDgK,EAAKhK,EAAS+Z,qBAAqBhV,OAYzC4T,oBAAA,SACE3Y,EACAwV,GAEAta,KAAKsd,YAAYlT,IAAItF,EAASwV,GAC9Bta,KAAKud,aAAanT,IAAItF,EAASwV,IAWjCmD,mBAAA,SAAO3Y,GACL,IAAMzG,GAAS2B,KAAK+G,IAAIjC,GAExB,OADA9E,KAAKoH,IAAItC,EAASzG,GACXA,GAYTof,qBAAA,SAAS3Y,EAAiBga,EAAe3U,GACvC,IAAM9L,EAAQ0gB,SAAS/e,KAAK+G,IAAIjC,GAAU,IAAMga,GAAQ,GACxD,IAAKlb,OAAUuG,IAAQ9L,GAAU8L,EAE/B,OADAnK,KAAKoH,IAAItC,EAASzG,GACXA,GAaXof,qBAAA,SAAS3Y,EAAiBga,EAAeE,GACvC,IAAM3gB,EAAQ0gB,SAAS/e,KAAK+G,IAAIjC,GAAU,IAAMga,GAAQ,GACxD,IAAKlb,OAAUob,IAAQ3gB,GAAU2gB,EAE/B,OADAhf,KAAKoH,IAAItC,EAASzG,GACXA,GAWXof,mBAAA,SAAO3Y,EAAiB7D,EAAWS,GAEjC,IAAIuD,EAAOjF,KAAK+G,IAAIjC,GAGZjE,GAFRoE,EAAQvF,MAASuF,GAAa0E,KAAY1E,GAAjB,WAGzB,GAAIvD,IAAUpB,MAAYoB,IAAUb,EAClCoE,EAAK3D,KAAKL,QAEP,GAAIS,IAAUX,OAAuB,IAAVW,EAC9BuD,EAAK9D,QAAQF,OAEV,CAAA,KAAIS,EAAQ,GAAKA,EAAQb,GAI5B,OAHAoE,EAAKnD,OAAOJ,EAAO,EAAGT,GAQxB,OAFAjB,KAAKoH,IAAItC,EAASG,GAEX3E,MAUTmd,mBAAA,SAAO3Y,EAAiB7D,GACtB,OAAOjB,KAAKif,OAAOna,EAAS7D,EAAMX,OASpCmd,oBAAA,SAAQ3Y,EAAiB7D,GACvB,OAAOjB,KAAKif,OAAOna,EAAS7D,EAAMF,QASpC0c,qBAAA,SAAS3Y,EAAiBpD,GACxB,IAAIuD,EAAOjF,KAAK+G,IAAIjC,GACpB,GAAIpF,MAASuF,IACRvD,GAAS,GACTA,EAAQuD,EAAKpE,OAKhB,OAHAoE,EAAO0E,KAAY1E,IACdnD,OAAOJ,EAAO,GACnB1B,KAAKoH,IAAItC,EAASG,GACX3E,MAUXmd,mBAAA,SAAO3Y,EAAiB7D,GACtB,IAAIgE,EAAOjF,KAAK+G,IAAIjC,GACpB,GAAIpF,MAASuF,IAEPia,OADJja,EAAO0E,KAAY1E,GACIhE,GAErB,OADAjB,KAAKoH,IAAItC,EAASG,GACX3E,MAWbmd,iBAAA,SAAQnP,EAAS1H,GACf,OAAO+C,KAAY2E,EAAM1H,IAM3B6W,oBAAA,WACmBzd,KACRsd,YAAYlT,MADJpK,KAERud,aAAanT,MAFLpK,KAGRyS,SAASrM,QAClB+Y,MAJiBnf,YCrjBjBof,UAAY,cAEhBC,UAAY,YAEZC,YAAc,SAAUC,GACtB,IAAM9R,EAAQ+R,SAA0BC,cAAcF,GACtD,GAAI9R,EACF,OAAOA,GAIXiS,iBAAmB,SAAUjS,EAAuC3N,EAAckK,GAChFyD,EAAKiS,iBAAiB5f,EAAMkK,EAAUjJ,QAGxC4e,oBAAsB,SAAUlS,EAAuC3N,EAAckK,GACnFyD,EAAKkS,oBAAoB7f,EAAMkK,EAAUjJ,QAI3C6e,SAAW,SAAUnS,EAAmBoS,GACtCpS,EAAKqS,UAAUjC,IAAIgC,IAGrBE,YAAc,SAAUtS,EAAmBoS,GACzCpS,EAAKqS,UAAUje,OAAOge,IAGxBG,YAAc,SAAU9J,EAAYzI,GAClC,OAAOyI,GAIP,GAAIsJ,WAGGA,SAAaS,gBAAgBH,YAChCF,SAAW,SAAUnS,EAAmBoS,GACtC,IAAMK,EAAUzS,EAAKoS,UAAU3a,MAAMib,iBAChCpW,IAAUmW,EAASL,KACtBtV,KAAW2V,EAASL,GACpBpS,EAAKoS,UAAYpH,KAAWyH,EAASC,mBAGzCJ,YAAc,SAAUtS,EAAmBoS,GACzC,IAAMK,EAAUzS,EAAKoS,UAAU3a,MAAMib,iBACjCjB,OAAagB,EAASL,KACxBpS,EAAKoS,UAAYpH,KAAWyH,EAASC,qBAQpCX,SAAaE,kBAAkB,CAElC,IAAMU,kBAAkB,iBAExBV,iBAAmB,SAAUjS,EAAW3N,EAAckK,GAChDlK,IAASugB,YACXX,iBACEjS,EACA2S,kBAEApW,EAASsW,SAAW,SAAUpK,GACxBA,EAAMqK,eAAiBpF,aACzBjF,EAAQ,IAAIhW,YAAYgW,IAClBpW,KAAOugB,YACbpe,QAAQ+H,EAAUhK,KAAMkW,MAKvBpW,IAAS0gB,cAAoBC,eAAahT,GACjDiS,iBACEjS,EACAiT,YACA1W,EAASsW,SAAW,SAAUpK,IAC5BA,EAAQ,IAAIhW,YAAYgW,IAClBpW,KAAO0gB,aACbve,QAAQ+H,EAAUhK,KAAMkW,KAK5BzI,EAAKkT,YAAY,KAAK7gB,EAAQkK,IAIlC2V,oBAAsB,SAAUlS,EAAW3N,EAAckK,GACnDlK,IAASugB,aACXV,oBAAoBlS,EAAM2S,kBAAiBpW,EAASsW,iBAC7CtW,EAASsW,UAETxgB,IAAS0gB,cAAoBC,eAAahT,IACjDkS,oBAAoBlS,EAAMiT,YAAiB1W,EAASsW,iBAC7CtW,EAASsW,UAGhB7S,EAAKmT,YAAY,KAAK9gB,EAAQkK,IAIlC,IAAMyW,eAAe,SAAUhT,GAC7B,MAAwB,UAAjBA,EAAKoT,UACQ,UAAdpT,EAAK3N,MAAkC,aAAd2N,EAAK3N,OAGhCghB,qBAQJ,WAAY5K,EAAc6K,GAExBC,OAAchhB,KAAMkW,GAEpBlW,KAAKihB,cAAgBF,EACrB/gB,KAAK1B,OAAS4X,EAAMgL,YAAcH,EAClC/gB,KAAKD,cAAgBmW,EAYzB,OAREiL,2BAAA,WACEnhB,KAAKD,cAAcqhB,YAAcrgB,OAGnCogB,4BAAA,WACEnhB,KAAKD,cAAcshB,aAAe/gB,WAMtC8e,UAAY,YAEZY,YAAc,SAAU9J,EAAO6K,GAC7B,OAAO,IAAID,UAAQ5K,EAAO6K,IAG5BzB,YAAc,SAAUC,GAEa,KAA/BrB,OAAcqB,EAAU,KAC1BA,EAAWxU,MAAawU,EAAU,IAKpC,IAAM9R,EAAQ+R,SAA0B8B,eAAe/B,GACvD,GAAI9R,EACF,OAAOA,GAWnB,IAAM0S,gBAAkB,IAKxBG,QAAU,WAKViB,YAAc,aAKdC,kBAAoB,mBAKpBC,gBAAkB,iBAElBC,OAAS,qBAETC,WAAa,CACXC,IAAKF,OAAS,YAKhBG,cAAmD,GAEnDC,OAAc,CAEZhQ,cAAA,SAAcnJ,EAAaoJ,GACzB,OAAOA,EACFyN,SAA0BuC,gBAAgBJ,WAAWC,IAAKjZ,GAC1D6W,SAA0B1N,cAAcnJ,IAG/C2I,WAAA,SAAWF,GACT,OAAQoO,SAA0BwC,eAAe5Q,IAGnDG,cAAA,SAAcH,GACZ,OAAQoO,SAA0BjO,cAAcH,IAGlDjD,KAAA,SAAKV,EAAmBhE,EAAcpL,GACpC,GAAIuB,MAAMvB,GACR4f,IAAWxQ,EAAMhE,EAAMpL,EAAO0C,WAE3B,CACH,IAAM8U,EAASG,IAAWvI,EAAMhE,GAChC,GAAIoM,EACF,OAAOA,EAAOxX,QAKpB+P,WAAA,SAAWX,EAAmBhE,EAAc4E,GAC1C4P,IACExQ,EACAhE,EACA4E,IAAS4T,aACLlhB,MACA0C,aACJ1C,QAIJgN,KAAA,SAAKN,EAAmBhE,EAAcpL,GACpC,GAAIuB,MAAMvB,GACRoP,EAAKyU,aAAazY,EAAMpL,OAErB,CAEH,IAAM8jB,EAAQ1U,EAAK2U,aAAa3Y,GAChC,GAAI0Y,GAASrjB,KACX,OAAOqjB,IAKbnU,WAAA,SAAWP,EAAmBhE,GAC5BgE,EAAK4U,gBAAgB5Y,IAGvB2G,OAAA,SAAOF,EAAkBzC,EAAY6U,GACnCpS,EAAWD,aAAaxC,EAAM6U,IAGhCjS,OAAA,SAAOH,EAAkBzC,GACvByC,EAAWqS,YAAY9U,IAGzBxK,QAAA,SAAQiN,EAAkBzC,EAAY+U,GACpCtS,EAAWuS,aAAahV,EAAM+U,IAGhC3gB,OAAA,SAAOqO,EAAkBzC,GACvByC,EAAWwS,YAAYjV,IAGzB+C,OAAA,SAAO/C,GACG,IAAAyC,eACR,GAAIA,EACF,OAAOA,GAIXmE,KAAA,SAAK5G,GACK,IAAAkV,gBACR,GAAIA,EACF,OAAOA,GAIXC,KAAMtD,YAEN3W,IAAA,SAAI8E,GACF,GAAsB,IAAlBA,EAAKoV,SACP,OAAOC,MAAcrV,EAAqBoT,UAI9CzP,KAAA,SAAK3D,EAAY2D,EAAeH,EAAmBC,GACjD,IAAItR,MAAMwR,GAiBR,OAAO3D,EAAK2R,WAfNnO,GAAWS,MAAWjE,EAAM8T,aAC9B9T,EAAK8T,aAAawB,QAAU3R,GAGxBF,IACDzD,EAA2BpP,MAAQ+S,GAEtC3D,EAAK2R,WAAahO,IAY1BC,KAAA,SAAK5D,EAAe4D,EAAeJ,EAAmBC,GACpD,IAAItR,MAAMyR,GAiBR,OAAO5D,EAAK4R,WAfNpO,GAAWS,MAAWjE,EAAM8T,aAC9B9T,EAAK8T,aAAawB,QAAU1R,GAGxBH,IACDzD,EAA2BpP,MAAQgT,GAEtC5D,EAAK4R,WAAahO,IAY1BuO,kBAEAG,wBAEAnB,GAAA,SAAGnR,EAAuC3N,EAAckK,GAEtD,IAAM2U,EAAmBlR,EAAK6S,WAAa7S,EAAK6S,SAAW,IAAIjX,SAE/D2Z,EAAkBrE,EAAQqE,kBAAoBrE,EAAQqE,gBAAkB,IAGxE,IAAKA,EAAgBljB,GAAO,CAG1B,IAAMmjB,EAAUpB,cAAc/hB,GAG9BojB,EAAiB,SAAUhN,GAEzB,IAAMiN,EAAcjN,aAAiBhW,YACjCgW,EACA,IAAIhW,YAAYgW,EAAMpW,KAAMkgB,YAAY9J,EAAOzI,IAE/C0V,EAAYrjB,OAASA,IACvBqjB,EAAYrjB,KAAOA,GAGrB6e,EAAQjH,KAAK5X,EAAM,CAACqjB,KAItBH,EAAgBljB,GAAQojB,EAEpBD,EACFA,EAAQrE,GAAGnR,EAAMyV,GAGjBxD,iBAAiBjS,EAAM3N,EAAMojB,GAKjCvE,EAAQC,GAAG9e,EAAMkK,IAGnBI,IAAA,SAAIqD,EAAuC3N,EAAckK,GAEjD,IAAA2U,EAAmBlR,EAAK6S,SAE5BlX,cAAW4Z,oBAMb,GAHArE,EAAQvU,IAAItK,EAAMkK,GAGdgZ,IAAoBrE,EAAQ5c,IAAIjC,GAAO,CAEzC,IAAMmjB,EAAUpB,cAAc/hB,GAE9BojB,EAAiBF,EAAgBljB,GAE7BmjB,EACFA,EAAQ7Y,IAAIqD,EAAMyV,GAGlBvD,oBAAoBlS,EAAM3N,EAAMojB,UAG3BF,EAAgBljB,GAIrBsjB,QAAaha,KACfqE,EAAK6S,SAAW/hB,YAKpB8kB,gBAAA,SAAgBvjB,EAAcoX,GAO5B2K,cAAc/hB,GAAQoX,sBC1aD5X,EAAcgkB,EAAejG,GAEpD,IAAIkG,EAEJ,OAAO,WAEL,IAAKA,EAAO,CAEV,IAAMC,EAAOC,QAAcC,WACvBrG,GACFpb,QAAQ3C,EAAIf,UAAeilB,GAG7BD,EAAQ5X,WACN,WACE4X,EAAQhlB,UACH8e,GACHpb,QAAQ3C,EAAIf,UAAeilB,IAG/BF,KD2ZRzB,cAAc8B,aAAmB,CAC/B/E,GAAA,SAAGnR,EAAuCzD,GACxC,IAAI4Z,EAAS7iB,MACb+gB,OAAOlD,GAAGnR,EAAM+T,kBAAmBxX,EAASwX,mBAAqB,WAC/DoC,EAAStjB,OAEXwhB,OAAOlD,GAAGnR,EAAMgU,gBAAiBzX,EAASyX,iBAAmB,SAAUvL,GACrE0N,EAAS7iB,MACTiJ,EAASkM,KAEXwJ,iBAAiBjS,EAAM4S,YAAiBrW,EAASqW,aAAmB,SAAUnK,GACvE0N,GACH5Z,EAASkM,MAIf9L,IAAA,SAAIqD,EAAuCzD,GACzC8X,OAAO1X,IAAIqD,EAAM+T,kBAAmBxX,EAASwX,oBAC7CM,OAAO1X,IAAIqD,EAAMgU,gBAAiBzX,EAASyX,kBAC3C9B,oBAAoBlS,EAAM4S,YAAiBrW,EAASqW,cACpDrW,EAASwX,mBACTxX,EAASyX,iBACTzX,EAASqW,aAAmB9hB,YEpchC,IAAMqQ,UAA4B,CAChCE,KAAA,SAAKrB,EAAyBmB,EAAsBrB,GAE5C,IAAA9D,SAAM+N,YAAyBqM,SAErC,GAAKrM,EAAL,CAIA,GAAIqM,EAAM,CAER,IAAMxlB,EAAQwlB,EAAKpa,IAASoa,EAAKpgB,cAE7BpF,IAAUiC,KACZmJ,EAAO+W,aAEAniB,EAAQ,IACfmZ,EAAUsM,SACRtM,EACAnZ,EAGAoL,IAASiX,aAAmBjX,IAASsa,YAMvCxW,EAAM8B,aAEP5B,EAAamR,GAAGnV,EAAM+N,GACvBjK,EAAMe,KAAKM,EAAUvM,KAAO,WACzBoL,EAAarD,IAAIX,EAAM+N,MAM1BlK,OAAIsR,GAAGnR,EAAqBhE,EAAM+N,GAClCjK,EAAMe,KAAKM,EAAUvM,KAAO,WAC1BiL,OAAIlD,IAAIqD,EAAqBhE,EAAM+N,OAOzCzI,OAAA,SAAOtB,EAAyBmB,EAAsBrB,GACpDtL,QAAQsL,EAAMe,KAAKM,EAAUvM,QClCjC,SAAS2hB,iBAAiB1kB,EAAcukB,GAEtC,OAAOA,GAAQA,IAASvjB,KACpBwjB,SAASxkB,EAAIukB,GACbvkB,EAGN,IAAM2kB,aAA8B,CAClC7c,IAAA,SAAIqG,EAAwBpP,GAC1BoP,EAAKpP,MAAQkJ,SAASlJ,IAExB4b,KAAA,SAAKxM,EAAwB3I,EAAiBvF,GAC5CA,EAAQ6H,IAAItC,EAAS2I,EAAKpP,QAE5BoL,KAAM0R,WAGR+I,aAA8B,CAC5B9c,IAAA,SAAIqG,EAAwBpP,GAC1BoP,EAAK0W,QAAU1W,EAAKpP,QAAUkJ,SAASlJ,IAEzC4b,KAAA,SAAKxM,EAAwB3I,EAAiBvF,GACxCkO,EAAK0W,SACP5kB,EAAQ6H,IAAItC,EAAS2I,EAAKpP,QAG9BoL,KAAM,WAGR2a,gBAAiC,CAC/Bhd,IAAA,SAAIqG,EAAwBpP,GAC1BoP,EAAK0W,QAAUzkB,MAASrB,GACpB0L,IAAU1L,EAAOoP,EAAKpP,MAAO0C,SAC3B1C,GAER4b,KAAA,SAAKxM,EAAwB3I,EAAiBvF,GAC5C,IAAMlB,EAAQkB,EAAQwH,IAAIjC,GACtBpF,MAASrB,GACPoP,EAAK0W,QACP5kB,EAAQ8Q,OAAOvL,EAAS2I,EAAKpP,OAG7BkB,EAAQ8kB,SACNvf,EACAwf,QAAcjmB,EAAOoP,EAAKpP,MAAO0C,QAKrCxB,EAAQ6H,IAAItC,EAAS2I,EAAK0W,UAG9B1a,KAAM,WAGR8a,cAA+B,CAC7Bnd,IAAA,SAAIqG,EAAyBpP,GAC3BwI,KACE4c,QAAchW,EAAK5D,SACnB4D,EAAK+W,SACD,SAAUC,GACVA,EAAOC,SAAW3a,IAAU1L,EAAOomB,EAAOpmB,MAAO0C,QAEjD,SAAU0jB,EAA2B/iB,GACrC,GAAI+iB,EAAOpmB,OAASA,EAElB,OADAoP,EAAKkX,cAAgBjjB,EACdX,SAKjBkZ,KAAA,SAAKxM,EAAyB3I,EAAiBvF,GACrC,IAAAsK,YACR,GAAI4D,EAAK+W,SAAU,CACjB,IAAMI,EAAmB,GACzB/d,KACE4c,QAAc5Z,GACd,SAAU4a,GACJA,EAAOC,UACTna,KACEqa,EACAH,EAAOpmB,SAKfkB,EAAQ6H,IAAItC,EAAS8f,QAGrBrlB,EAAQ6H,IACNtC,EACA+E,EAAQ4D,EAAKkX,eAAetmB,QAIlCoL,KAAM0R,WAGR0J,WAAa,CACXC,MAAOZ,aACPa,SAAUX,iBAGZxV,YAA4B,CAE1BC,KAAMvO,KAENwO,KAAA,SAAKrB,EAAyBmB,EAAsBrB,GAE5C,IAMNnG,EAEA6S,EAEAlL,EAVMxP,YAASskB,SAAMxU,gBAErB2V,EAAcpW,EAAUuI,QAExB8N,EAAYpB,IAASA,EAAKxM,kBAA2BwM,EAAKpgB,eAQ1D,GAAI4L,EAAa,CAEf,IAAIiD,EAAY7E,EAEhByX,EAAc5S,EAAUhD,OAExBlI,EAAM,SAAUqT,GACVrT,GACFkL,EAAUlL,IAAI8d,EAAazK,IAI/BR,EAAO+J,iBACL,SAAUvJ,GACRlb,EAAQ6H,IAAI4d,EAAavK,IAE3BwK,GAGFlW,EAAS,WACPuD,EAAUgJ,QAAQ4J,EAAajL,IAGjC3H,EAAUyI,MAAMmK,EAAajL,OAG1B,CAEH,IAAIkL,EAAU1X,EAEd2X,EAAwB,WAAd7X,EAAM5E,IACZ4b,cACAN,aAGJoB,EAAY7E,aAEZ,GAAI4E,IAAYnB,aAAc,CAC5B,IAAMqB,EAAQ7X,EAA0B3N,KACpC+kB,WAAWS,GACbF,EAAUP,WAAWS,GAKdL,IAAc3kB,OACrB+kB,EAAY1B,aAIhBvc,EAAM,SAAUqT,GACVrT,GACFge,EAAQhe,IAAI+d,EAAS1K,IAIzBR,EAAO+J,iBACL,WACEoB,EAAQnL,KAAKkL,EAASH,EAAazlB,IAErC0lB,GAGFlW,EAAS,WACPzB,OAAIlD,IAAI+a,EAASE,EAAWpL,IAG9B3M,OAAIsR,GAAGuG,EAASE,EAAWpL,GAE3BmL,EAAQhe,IAAI+d,EAAS5X,EAAM6B,OAK7B7P,EAAQwb,MAAMiK,EAAa5d,GAE3BmG,EAAMe,KAAKM,EAAUvM,KAAO,WAC1B9C,EAAQ+b,QAAQ0J,EAAa5d,GAC7BA,EAAM7I,UACNwQ,MAKJA,OAAA,SAAOtB,EAAyBmB,EAAsBrB,GACpDtL,QAAQsL,EAAMe,KAAKM,EAAUvM,QC5N3BuM,YAA4B,CAEhCC,KAAMvO,KAENwO,KAAA,SAAKrB,EAAyBmB,EAAsBrB,GAIlD,IAAI4J,EAAUvI,EAAUuI,QAExB7R,EAAU4X,QAAoB/F,GAE9BmD,EAA+B,SAAUG,EAAepU,EAAQvB,GAE9D,GAAIwV,EAAS,CACX,IAAM7Q,EAAOnE,EACTqX,WAAuB7X,EAASqS,GAChCvI,EAAUnF,KAEd,GAAI8D,EAAM8B,YAAa,CACrB,IAAMiE,EAAY7F,EAClB6F,EAAUlM,IAAIqC,EAAM6J,EAAUiS,UAAU9b,EAAMgR,SAEvC7a,MAAMgP,EAAUP,MACvBf,OAAIa,KAAKV,EAAqBhE,EAAMgR,GAGpCnN,OAAIS,KAAKN,EAAqBhE,EAAMgR,KAM1ClN,EAAMhO,QAAQwb,MAAM5D,EAASmD,GAE7B/M,EAAMe,KAAKM,EAAUvM,KAAO,WAC1BkL,EAAMhO,QAAQ+b,QAAQnE,EAASmD,GAC/BA,EAAU/b,YAKdwQ,OAAA,SAAOtB,EAAyBmB,EAAsBrB,GACpDtL,QAAQsL,EAAMe,KAAKM,EAAUvM,QC/CjC,iBAAyBoH,GACvB,OAAO7J,MAAMI,KAAK+G,IAAIye,iBAA0B/b,QCkC5Cgc,iBAAmB,GAEzBC,kBAAoB,GAEpBC,iBAAmB,GAEnBC,eAAiB,GAEjBC,cAAgB,GAEhBC,aAEe,SAEfC,kBAAoB,IAAMC,aAE1BC,gBAAkB,+BA+OhB,WAAYpc,GAEV,IAAMN,EAAWvJ,KAAMkmB,EAAuBrc,GAAWgE,aAGzD5L,QAAQikB,EAASC,oBAA4B5c,EAAU2c,GACvDjkB,QAAQmkB,EAAID,oBAA4B5nB,UAAe2nB,GAEvD3c,EAAS2c,SAAWA,EAGlB,IAAA5X,SACAY,UACAyO,aACA0I,WACAC,YACAC,aACAC,eAUEA,GACFxF,OAAczX,EAAUid,GAI1B,IAAM/K,EAASlS,EAASiG,WAAWN,GAAS,IAItCiL,EAAW5Q,EAASiJ,UAAY,IAAIiL,SAAShC,EAAQlS,GAEvDoU,GACFhT,OACEgT,EACA,SAAU9T,EAAwC/E,GAChDqV,EAASsM,YAAY3hB,EAAS+E,KAMpC,IAAMvD,EAAS7G,KAAQ6O,GAAQrM,QAAQqM,EAAM/E,EAAUM,GAAWyE,EAC9DxH,OAAUR,IACZqE,OACErE,EACA,SAAUjI,EAAOgE,GAMfoZ,EAAOpZ,GAAOhE,IAKhBioB,GACF3b,OACE2b,EACA,SAAUnQ,EAAkB1M,GAM1BF,EAASE,GAAQ0M,IAOvB5M,EAASmd,SAAW,IAAIrd,QAAQ/I,MAE5B+lB,GACF9c,EAASqV,GAAGyH,GAKR,IAAAM,EAA2BpoB,UAG7BqoB,OACArZ,UACAsZ,SACAC,UACAtW,WACAvN,YACA4R,aACAG,gBACA+R,eACAxY,eACAwG,aACAD,YACA3F,UA+BF,GA5BI2X,IACFvd,EAAS+F,OAASwX,GAIhB3X,GACF6R,OAAcvF,EAAQtM,GAIpB5K,OAAUsQ,GAERoR,gBAAgBhe,KAAK4M,KACvB8R,EAAc7E,OAAOc,KAAK/N,MAExBA,EAAWiN,OAAOzQ,KAAKsV,GACvBA,EAAcpoB,WAQlBsW,EAAWtW,UAITqoB,EAAI,CAEN,GAAIriB,OAAUqiB,GAAK,CACjB,IAAMrH,EAAWqH,EACbX,gBAAgBhe,KAAKsX,KACvBoH,EAAc7E,OAAOc,KAAKrD,SAY5BoH,EAAcC,EAGX3jB,GACH6e,OAAOzR,OACLsW,EACAA,EAAc7E,OAAOvQ,cAAc9N,eAsBzC,GAhBIojB,IACFtd,EAASyd,MAAQH,GAEfrW,IACFjH,EAAS0d,QAAUzW,GAGrB0W,mBAAmB3d,EAAU4d,eAAoBnS,GACjDkS,mBAAmB3d,EAAUsI,cAAmBkV,GAChDG,mBAAmB3d,EAAU6d,cAAmB7Y,GAChD2Y,mBAAmB3d,EAAU8d,YAAiBtS,GAC9CmS,mBAAmB3d,EAAU+d,WAAgBxS,GAKzCD,EAAU,CAGZ,IAAM0S,EAAchB,EAChB5c,KAAY4c,GACZ,GAqDJ,OAnDAgB,EAAYxB,mBAAqB,CAE/B9L,KAAM3Z,KACNga,QAAS,SAAU/M,GACjBhE,EAAS8D,OAAOE,EAAOhE,EAAS2J,UAKpCiH,EAASsM,YACPV,kBACA,CAEE9L,KAAMlZ,MACNgG,IAAK,WACH,OAAOwC,EAASqL,YAKtB4S,gBAAgBje,EAAUge,GAO1Bhe,EAASke,UAAYrB,EAAIsB,QAAQ7S,GAE5BtH,IAQHA,EAAQoa,OACN7F,OACA6E,EACApd,EACA9F,oBAKJ8F,EAAS8D,OACP9D,EAASxC,IAAIgf,mBACbxY,GAcNia,gBAAgBje,EAAUgd,GA8lB9B,OA3gCgBH,MAAd,SAAkBwB,GAChBA,EAAOC,QAAQzB,IAMHA,WAAd,SAAuBpa,EAAgBzM,GACrCsM,SAAST,SAASiF,OAAOrE,EAAMzM,IAMnB6mB,UAAd,SAAsBvR,EAAkBiT,GAoBpC,OAAO,IAAIC,SAAS,UAAUlT,EAAvB,IAOGuR,YAAd,SAAwB/jB,EAAahE,EAAY2pB,GAG7C,IAAM1C,EAAO0C,EAAKloB,KAGlBwH,EAAe0gB,EAAK3pB,MAuEtB,OApEMuB,MAAMvB,IAyDJuB,MAAM0H,KACRjJ,EAAQinB,IAAS7mB,aACb6I,EACA7H,KAAQ6H,GACLA,IACDA,GAMLjJ,GAIK+nB,YAAd,SACE3c,EACAmF,GAGE,GAAIrK,OAAUkF,KAAUmF,EACtB,OAAOqZ,YAAYxC,iBAAkBhc,GAEvCye,YAAYzC,iBAAkBhc,EAAMmF,IAI1BwX,aAAd,SACE3c,EACA8J,GAGE,GAAIhP,OAAUkF,KAAU8J,EACtB,OAAO0U,YAAYvC,kBAAmBjc,GAExCye,YAAYxC,kBAAmBjc,EAAM8J,IAI3B6S,YAAd,SACE3c,EACA6J,GAGE,GAAI/O,OAAUkF,KAAU6J,EACtB,OAAO2U,YAAYtC,iBAAkBlc,GAEvCye,YAAYvC,iBAAkBlc,EAAM6J,IAI1B8S,UAAd,SACE3c,EACAyP,GAGE,GAAI3U,OAAUkF,KAAUyP,EACtB,OAAO+O,YAAYrC,eAAgBnc,GAErCye,YAAYtC,eAAgBnc,EAAMyP,EAASkN,EAAIsB,UAIrCtB,SAAd,SACE3c,EACAH,GAGE,GAAI/E,OAAUkF,KAAUH,EACtB,OAAO2e,YAAYpC,cAAepc,GAEpCye,YAAYrC,cAAepc,EAAMH,IAkQrC8c,wBAAA,SACEthB,EACA6Y,GAEA,OAAO3d,KAAKwS,UAAUiU,YAAY3hB,EAAS6Y,IAM7CyI,2BAAA,SACEthB,GAEA9E,KAAKwS,UAAU2V,eAAerjB,IAMhCshB,gBAAA,SACEthB,EACAwC,EACAmO,GAEA,OAAOzV,KAAKwS,UAAUzL,IAAIjC,EAASwC,EAAcmO,IAMnD2Q,gBAAA,SACEthB,EACAzG,GAIQ,IAAAmU,iBACJA,GACFA,EAAUpL,IAAItC,EAASzG,IAO3B+nB,eAAA,SACEtmB,EACAkK,GAEA,OAAOoe,UAAUpoB,KAAMF,EAAMkK,IAM/Boc,iBAAA,SACEtmB,EACAkK,GAEA,OAAOoe,UAAUpoB,KAAMF,EAAMkK,EAAU1J,OAMzC8lB,gBAAA,SACEtmB,EACAkK,GAGA,OADAhK,KAAK0mB,SAAStc,IAAItK,EAAMkK,GACjBhK,MAMTomB,iBAAA,SACEtmB,EACAwO,EACA+Z,GAOA,IAMA3e,EAJAwM,EAAQpW,aAAgBI,YAAcJ,EAAO,IAAII,YAAYJ,GAE7DN,EAAc,CAAC0W,GAkBf,GAbKA,EAAM5X,SACT4X,EAAM5X,OAVO0B,MAcX8G,OAAUwH,GACZ/D,KAAW/K,EAAM8O,GAEVA,IAAShO,OAChB+nB,EAAW/nB,MAGboJ,EArBe1J,KAqBO0mB,SAAShP,KAAKxB,EAAMpW,KAAMN,GAChC,CACN,IAAAynB,EAvBKjnB,aAuBIsoB,EAvBJtoB,eAwBTqoB,EACEC,IACFpS,EAAMjW,MAAQC,YAAYqoB,eAC1B1hB,KACEyhB,EACA,SAAU/X,GACR,OAAO7G,EAAa6G,EAAMmH,KAAKxB,EAAO5H,EAAMhO,SAK3C2mB,IACP/Q,EAAMjW,MAAQC,YAAYsoB,aAC1B9e,EAAaud,EAAQvP,KAAKxB,EAAO5H,IAIrC,OAAO5E,GAOT0c,kBAAA,SACEthB,EACAwV,EACA+C,GAGA,OADArd,KAAKwS,UAAUuI,MAAMjW,EAASwV,EAAS+C,GAChCrd,MAMTomB,oBAAA,SACEthB,EACAwV,GAGA,OADAta,KAAKwS,UAAU8I,QAAQxW,EAASwV,GACzBta,MASTomB,0BAAA,SAAc3c,EAAc9I,GAExB,IAAK8Q,cAAczR,KAAKyoB,YAAahf,EAAM9I,GACpB8Q,cAAckU,iBAAkBlc,EAAM9I,IAgBjEylB,4BAAA,SAAgBvc,EAAqB0D,IAKjC1D,EAAUF,KAAYE,IACdgd,KAHS7mB,KAGOgnB,OAHPhnB,KAIjB6J,EAAQ2G,OAJSxQ,KAKjB6J,EAAQ0D,MAAQA,EAChB1D,EAAQ5G,QAAU3C,KAEZ,IAAA4O,UAAOC,UAEbuZ,EAAW7e,EAAQuF,OAAS+L,UAE5BwN,EAAapb,EAAM6B,MAEnBvF,EAAQuF,MAAQsZ,EAEZ9oB,MAAM+oB,KACHzZ,IACHA,EAAQ,IAEVA,EAAMwZ,GAAYC,GAGhBzZ,IACFrF,EAAQqF,MAAQA,GAGdC,IACFtF,EAAQsF,MAAQA,GAGlB,IAAMoB,EAAQ,IAAI6V,EAAIvc,GAEtBU,KAjCiBvK,KAkCNsoB,YAlCMtoB,KAkCiBsoB,UAAY,IAC5C/X,GAGF,IAAM9C,EAAO8C,EAAMqY,IAQnB,OAPInb,IACFF,EAAME,KAAOA,GAMR8C,GAOX6V,sBAAA,SACE3c,EACAmF,GAGQ,IAAmBia,EAAR7oB,iBACjB,GAAIuE,OAAUkF,KAAUmF,EACtB,OAAOqZ,YAAYY,EAAapf,EAAgB2c,EAAIxX,WAEtDsZ,YACEW,IALe7oB,KAKU6oB,YAAc,IACvCpf,EACAmF,IAKNwX,uBAAA,SACE3c,EACA8J,GAGQ,IAAmBuV,EAAR9oB,kBACjB,GAAIuE,OAAUkF,KAAU8J,EACtB,OAAO0U,YAAYa,EAAcrf,EAAgB2c,EAAI7S,YAEvD2U,YACEY,IALe9oB,KAKW8oB,aAAe,IACzCrf,EACA8J,IAKN6S,sBAAA,SACE3c,EACA6J,GAGQ,IAAmBmV,EAARzoB,iBACjB,GAAIuE,OAAUkF,KAAU6J,EACtB,OAAO2U,YAAYQ,EAAahf,EAAgB2c,EAAI9S,WAEtD4U,YACEO,IALezoB,KAKUyoB,YAAc,IACvChf,EACA6J,IAKN8S,oBAAA,SACE3c,EACAyP,GAGQ,IAAmB6P,EAAR/oB,eACjB,GAAIuE,OAAUkF,KAAUyP,EACtB,OAAO+O,YAAYc,EAAWtf,EAAgB2c,EAAIlN,SAEpDgP,YACEa,IALe/oB,KAKQ+oB,UAAY,IACnCtf,EACAyP,EACAkN,EAAIsB,UAKVtB,mBAAA,SACE3c,EACAH,GAGQ,IAAmB0f,EAARhpB,cACjB,GAAIuE,OAAUkF,KAAUH,EACtB,OAAO2e,YAAYe,EAAUvf,EAAgB2c,EAAI9c,QAEnD4e,YACEc,IALehpB,KAKOgpB,SAAW,IACjCvf,EACAH,IASN8c,wBAAA,SAAY9X,GAGF,IAEJ4E,EAFelT,YAEPwS,EAFOxS,eAIf2d,aAEF,GAAIzK,GAAUyK,EAAU,CAEtB,IAAM9I,EAAW8I,EAASoI,mBAE1BvL,EAAW3F,EAAS9N,MAEhBuH,GAZWtO,KAaJoH,IAAIkH,GAIfkE,EAAUC,SAAS3G,MAGdwC,GAAQkM,IAAa3F,EAAS9N,OApBpB/G,KAqBJqN,OACPwH,EAAS9N,IAAIzG,MACb4S,KAUVkT,mBAAA,WAGI,OAAO6C,OADUjpB,KAAAA,KAGNynB,UACTlY,MAJevP,KAIOgpB,SAAUnD,eAChCtW,MALevP,KAKO+oB,UAAWnD,gBACjCrW,MANevP,KAMO6oB,YAAapD,kBACnClW,MAPevP,KAOO8oB,aAAcpD,qBAW1CU,mBAAA,SAAO7Y,EAAcC,GAEjB,IAIA0b,EAJIC,EAAWnpB,KAEbkT,WAAQkW,aAOVD,EAASxZ,MAAQ,GAEbuD,GACFjR,QAAQmnB,EAASC,oBAA4BF,GAC7ClnB,QAAQmkB,EAAIiD,oBAA4B9qB,UAAe4qB,GACvDG,MAAexH,OAAQvU,EAAOC,GAC9B0b,EAAYK,oBAGZtnB,QAAQmnB,EAASI,mBAA2BL,GAC5ClnB,QAAQmkB,EAAIoD,mBAA2BjrB,UAAe4qB,GACtDG,MAAexH,OAAQvU,EAAOC,GAC9B2b,EAASP,IAAMrb,EAAME,KACrByb,EAAYO,kBAGdN,EAASjW,OAAS3F,EAIlB6Y,EAAIld,SACF,WACMigB,EAASjW,SACXjR,QAAQmnB,EAASF,GAAYC,GAC7BlnB,QAAQmkB,EAAI8C,GAAY3qB,UAAe4qB,OAYjD/C,uBAAA,SAAWlX,GAEC,IAAAwa,0BACR,GAAIA,EAAW,CACb,IAAMC,EAAShgB,KAAYuF,GAO3B,OANAvE,OACE+e,EACA,SAAU1B,EAAgB3lB,GACxBsnB,EAAOtnB,GAAO+jB,EAAIb,UAAUljB,EAAK6M,EAAM7M,GAAM2lB,KAG1C2B,EAGX,OAAOza,GAGTkX,sBAAA,SAAU/jB,EAAahE,GAEX,IAAAqrB,0BACR,GAAIA,EAAW,CACb,IAAM1B,EAAO0B,EAAUrnB,GACnB2lB,IACF3pB,EAAQ+nB,EAAIb,UAAUljB,EAAKhE,EAAO2pB,IAIxC,OAAO3pB,GAMT+nB,oBAAA,WAEQ,IAEJa,EAFejnB,aAENkmB,EAFMlmB,cAEI0mB,EAFJ1mB,cAEcwS,EAFdxS,eAIjBiC,QAAQikB,EAAS0D,qBAJA5pB,MAKjBiC,QAAQmkB,EAAIwD,qBAA6BrrB,UALxByB,MASP,IAAAkT,EATOlT,YAWXinB,GAAWA,EAAQqB,WACrBpJ,OAAa+H,EAAQqB,UAZRtoB,MAeXkT,IAfWlT,KAiBJkT,OAAS3U,UAClBsrB,QAAiB/H,OAAQ5O,GAAS+T,IAKtCP,EAAStc,MACToI,EAAUa,UAEVpR,QAAQikB,EAAS4D,oBA1BA9pB,MA2BjBiC,QAAQmkB,EAAI0D,oBAA4BvrB,UA3BvByB,MA6BjBmf,MA7BiBnf,OAoCnBomB,qBAAA,SAASpa,GACPhM,KAAKwS,UAAUC,SAASpC,OAAOrE,EAAMhM,OAQvComB,mBAAA,SAAOthB,GACL,OAAO9E,KAAKwS,UAAUuX,OAAOjlB,IAY/BshB,qBAAA,SAASthB,EAAiBga,EAAe3U,GACvC,OAAOnK,KAAKwS,UAAUwX,SAASllB,EAASga,EAAM3U,IAYhDic,qBAAA,SAASthB,EAAiBga,EAAeE,GACvC,OAAOhf,KAAKwS,UAAUyX,SAASnlB,EAASga,EAAME,IAUhDoH,mBAAA,SAAOthB,EAAiB7D,EAAWS,GACjC,OAAO1B,KAAKwS,UAAUyM,OAAOna,EAAS7D,EAAMS,IAS9C0kB,mBAAA,SAAOthB,EAAiB7D,GACtB,OAAOjB,KAAKwS,UAAUnC,OAAOvL,EAAS7D,IASxCmlB,oBAAA,SAAQthB,EAAiB7D,GACvB,OAAOjB,KAAKwS,UAAUE,QAAQ5N,EAAS7D,IASzCmlB,qBAAA,SAASthB,EAAiBpD,GACxB,OAAO1B,KAAKwS,UAAU6R,SAASvf,EAASpD,IAS1C0kB,mBAAA,SAAOthB,EAAiB7D,GACtB,OAAOjB,KAAKwS,UAAU3Q,OAAOiD,EAAS7D,IASxCmlB,iBAAA,SAAQ9X,EAAS1H,GACf,OAAO5G,KAAKwS,UAAU7L,KAAK2H,EAAM1H,IA1hCrBwf,UAAU,iBAKVA,KAAK8D,GACL9D,QAAQ1nB,QACR0nB,SAASvnB,SACTunB,SAASrnB,SACTqnB,SAAS+D,OACT/D,QAAQlmB,YACRkmB,UAAU/c,aA4hC1B,SAASme,gBAAgBje,EAAegd,GAElCA,GACFhd,EAASwR,MAAMwL,GAGjBtkB,QAAQsH,EAAS2c,SAASkE,mBAA2B7gB,GACrDtH,QAAQmkB,IAAIgE,mBAA2B7rB,UAAegL,GAIxD,SAAS2d,mBAAmB3d,EAAelH,EAAahE,GAClDoB,KAAQpB,GACVkL,EAASlH,GAAKJ,QAAQ5D,EAAOkL,IAEtBzC,OAAUzI,IACjBkL,EAASlH,GAAKhE,GAIlB,SAASgsB,SAAS9gB,EAAezJ,EAAckK,EAAyB6E,GACtE,IAAMhF,EAA0B,CAC9BvK,GAAI0K,EACJC,IAAKV,GAEHsF,IACFhF,EAAQM,IAAM,GAEhBZ,EAASmd,SAAS9H,GAAG9e,EAAM+J,GAG7B,SAASue,UACP7e,EACAzJ,EACAkK,EACA6E,GAaA,OAXItK,OAAUzE,GACZuqB,SAAS9gB,EAAUzJ,EAAgBkK,EAA2B6E,GAG9DlE,OACE7K,EACA,SAAUzB,EAAsBgE,GAC9BgoB,SAAS9gB,EAAUlH,EAAKhE,EAAOwQ,KAI9BtF,EAGT,SAASkI,cAAcnD,EAA6C7E,EAAc9I,GAChF,GAAI2N,GAAQA,EAAK7E,GAAO,CACtB,IAAM6J,EAAYhF,EAAK7E,GAEvB,GAAIhK,KAAQ6T,GAAY,CAEtB,IAAIgX,EAAShX,EAEbiX,EAAkCD,EAAOxE,cAErCyE,EACFhgB,KAAWggB,EAAO5pB,IAGlB4pB,EAAQjX,EAAUwS,cAAgB,CAACnlB,GAEnC2pB,EACE,SAAUzgB,GAERygB,EAAOxE,cAAgBvnB,UAEvB+P,EAAK7E,GAAQI,EAEbhD,KACE0jB,EACA,SAAU5pB,GACRA,EAASkJ,aAWnBlJ,EAAS2S,GAEX,OAAOhT,MAIX,SAAS2nB,YAAY3Z,EAAwB7E,EAAc+L,GACzD,OAAIlH,GAAQA,EAAK7E,GACR6E,EAAK7E,GAEL+L,EACAA,EAAO/L,QADX,EAKP,SAASye,YAAY5Z,EAAiB7E,EAA0BpL,EAAamsB,GACvEjmB,OAAUkF,GACZ6E,EAAK7E,GAAkB+gB,EAAcA,EAAYnsB,GAASA,EAG1DsM,OACElB,EACA,SAAUpL,EAAOgE,GACfiM,EAAKjM,GAAOmoB,EAAcA,EAAYnsB,GAASA,IAOrD+nB,IAAS,IAAItE,OAEbsE,IAAIxX,UAAU,CAAEsH,gBAAO9G,kBAAO+H,sBAE9BiP,IAAI9c,OAAO,CAAEmhB"}