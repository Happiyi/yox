{"version":3,"file":"yox.cjs.min.js","sources":["../../../../yox-common/src/util/env.ts","../../../../yox-common/src/function/isDef.ts","../../../../yox-common/src/util/is.ts","../../../../yox-common/src/function/execute.ts","../../../../yox-common/src/util/CustomEvent.ts","../../../../yox-common/src/util/array.ts","../../../../yox-common/src/util/string.ts","../../../../yox-common/src/util/keypath.ts","../../../../yox-common/src/util/object.ts","../../../../yox-common/src/function/toString.ts","../../../../yox-common/src/util/logger.ts","../../../../yox-common/src/function/nextTick.ts","../../../../yox-common/src/util/Emitter.ts","../../../../yox-common/src/function/isNative.ts","../../../../yox-common/src/util/NextTask.ts","../../../../yox-config/src/config.ts","../../../../yox-common/src/function/guid.ts","../../../../yox-snabbdom/src/field.ts","../../../../yox-snabbdom/src/nativeAttr.ts","../../../../yox-snabbdom/src/nativeProp.ts","../../../../yox-snabbdom/src/directive.ts","../../../../yox-snabbdom/src/component.ts","../../../../yox-snabbdom/src/snabbdom.ts","../../../../yox-common/src/function/toNumber.ts","../../../../yox-expression-compiler/src/nodeType.ts","../../../../yox-expression-compiler/src/interpreter.ts","../../../../yox-common/src/function/toJSON.ts","../../../../yox-template-compiler/src/stringify.ts","../../../../yox-common/src/function/isUndef.ts","../../../../yox-expression-compiler/src/executor.ts","../../../../yox-template-compiler/src/renderer.ts","../../../../yox-observer/src/Computed.ts","../../../../yox-observer/src/function/matchBest.ts","../../../../yox-observer/src/function/readValue.ts","../../../../yox-observer/src/function/diffString.ts","../../../../yox-observer/src/function/diffArray.ts","../../../../yox-observer/src/function/diffObject.ts","../../../../yox-observer/src/function/diffRecursion.ts","../../../../yox-observer/src/function/diffWatcher.ts","../../../../yox-observer/src/function/filterWatcher.ts","../../../../yox-observer/src/function/formatWatcherOptions.ts","../../../../yox-observer/src/Observer.ts","../../../../yox-dom/src/dom.ts","../../../../yox-common/src/function/debounce.ts","../../../src/directive/event.ts","../../../src/directive/model.ts","../../../src/directive/binding.ts","../../../src/filter/hasSlot.ts","../../../src/Yox.ts"],"sourcesContent":["/**\n * 为了压缩，定义的常量\n */\nexport const TRUE = true\nexport const FALSE = false\nexport const NULL = null\nexport const UNDEFINED = void 0\n\nexport const RAW_TRUE = 'true'\nexport const RAW_FALSE = 'false'\nexport const RAW_NULL = 'null'\nexport const RAW_UNDEFINED = 'undefined'\n\nexport const RAW_KEY = 'key'\nexport const RAW_REF = 'ref'\nexport const RAW_SLOT = 'slot'\nexport const RAW_NAME = 'name'\n\nexport const RAW_FILTER = 'filter'\nexport const RAW_PARTIAL = 'partial'\nexport const RAW_COMPONENT = 'component'\nexport const RAW_DIRECTIVE = 'directive'\nexport const RAW_TRANSITION = 'transition'\n\nexport const RAW_THIS = 'this'\nexport const RAW_VALUE = 'value'\nexport const RAW_LENGTH = 'length'\nexport const RAW_FUNCTION = 'function'\nexport const RAW_TEMPLATE = 'template'\nexport const RAW_WILDCARD = '*'\n\nexport const KEYPATH_PARENT = '..'\nexport const KEYPATH_CURRENT = RAW_THIS\n\nexport const RAW_MINUS_ONE = -1\n\n/**\n * Single instance for window in browser\n */\nexport const WINDOW = typeof window !== RAW_UNDEFINED ? window : UNDEFINED\n\n/**\n * Single instance for document in browser\n */\nexport const DOCUMENT = typeof document !== RAW_UNDEFINED ? document : UNDEFINED\n\n/**\n * tap 事件\n *\n * 非常有用的抽象事件，比如 pc 端是 click 事件，移动端是 touchend 事件\n *\n * 这样只需 on-tap=\"handler\" 就可以完美兼容各端\n *\n * 框架未实现此事件，通过 Yox.dom.specialEvents 提供给外部扩展\n *\n */\nexport const EVENT_TAP = 'tap'\n\n/**\n * 点击事件\n */\nexport const EVENT_CLICK = 'click'\n\n/**\n * 输入事件\n */\nexport const EVENT_INPUT = 'input'\n\n/**\n * 变化事件\n */\nexport const EVENT_CHANGE = 'change'\n\n/**\n * 唯一内置的特殊事件：model\n */\nexport const EVENT_MODEL = 'model'\n\n/**\n * Single instance for noop function\n */\nexport const EMPTY_FUNCTION = function () {\n  /** yox */\n}\n\n/**\n * 空对象，很多地方会用到，比如 `a || EMPTY_OBJECT` 确保是个对象\n */\nexport const EMPTY_OBJECT = Object.freeze({})\n\n/**\n * 空数组\n */\nexport const EMPTY_ARRAY = Object.freeze([])\n\n/**\n * 空字符串\n */\nexport const EMPTY_STRING = ''","import * as env from '../util/env'\n\nexport default function (target: any): boolean {\n  return target !== env.UNDEFINED\n}\n","import * as env from './env'\n\n/**\n * Check if value is a function.\n *\n * @param value\n * @return\n */\nexport function func(value: any): boolean {\n  return typeof value === env.RAW_FUNCTION\n}\n\n/**\n * Check if value is an array.\n *\n * @param value\n * @return\n */\nexport function array(value: any): boolean {\n  return Array.isArray(value)\n}\n\n/**\n * Check if value is an object.\n *\n * @param value\n * @return\n */\nexport function object(value: any): boolean {\n  // 低版本 IE 会把 null 和 undefined 当作 object\n  return value !== env.NULL && typeof value === 'object'\n}\n\n/**\n * Check if value is a string.\n *\n * @param value\n * @return\n */\nexport function string(value: any): boolean {\n  return typeof value === 'string'\n}\n\n/**\n * Check if value is a number.\n *\n * @param value\n * @return\n */\nexport function number(value: any): boolean {\n  return typeof value === 'number'\n}\n\n/**\n * Check if value is boolean.\n *\n * @param value\n * @return\n */\nexport function boolean(value: any): boolean {\n  return typeof value === 'boolean'\n}\n\n/**\n * Check if value is numeric.\n *\n * @param value\n * @return\n */\nexport function numeric(value: any): boolean {\n  return number(value)\n    || (string(value) && !isNaN(parseFloat(value)) && isFinite(value))\n}\n","import isDef from './isDef'\nimport * as is from '../util/is'\n\n/**\n * 任性地执行一个函数，不管它有没有、是不是\n *\n * @param fn 调用的函数\n * @param context 执行函数时的 this 指向\n * @param args 调用函数的参数，多参数时传入数组\n * @return 调用函数的返回值\n */\nexport default function (fn: any, context?: any, args?: any): any {\n  if (is.func(fn)) {\n    return is.array(args)\n      ? fn.apply(context, args)\n      : isDef(context)\n        ? fn.call(context, args)\n        : isDef(args)\n          ? fn(args)\n          : fn()\n  }\n}\n","import CustomEventInterface from '../../../yox-type/src/event/CustomEvent'\nimport Yox from '../../../yox-type/src/interface/Yox'\n\nimport * as env from './env'\n\nexport default class CustomEvent implements CustomEventInterface {\n\n  public static PHASE_CURRENT = 0\n\n  public static PHASE_UPWARD = 1\n\n  public static PHASE_DOWNWARD = env.RAW_MINUS_ONE\n\n  // 事件名称\n  type: string\n\n  // 事件当前阶段\n  phase: number\n\n  // 哪个组件发出的事件\n  target?: Yox\n\n  // 原始事件，比如 DOM 事件\n  originalEvent?: CustomEventInterface | Event\n\n  // 是否已阻止事件的默认行为\n  isPrevented?: true\n\n  // 是否已停止事件冒泡\n  isStoped?: true\n\n  // 处理当前事件的监听器，方便外部获取 listener 进行解绑\n  listener?: Function\n\n  /**\n   * 构造函数\n   *\n   * 可以传事件名称，也可以传原生事件对象\n   */\n  constructor(type: string, originalEvent?: CustomEventInterface | Event) {\n    this.type = type\n    this.phase = CustomEvent.PHASE_CURRENT\n    if (originalEvent) {\n      this.originalEvent = originalEvent\n    }\n  }\n\n  /**\n   * 阻止事件的默认行为\n   */\n  preventDefault(): CustomEventInterface {\n    const instance = this\n    if (!instance.isPrevented) {\n      const { originalEvent } = instance\n      if (originalEvent) {\n        originalEvent.preventDefault()\n      }\n      instance.isPrevented = env.TRUE\n    }\n    return instance\n  }\n\n  /**\n   * 停止事件广播\n   */\n  stopPropagation(): CustomEventInterface {\n    const instance = this\n    if (!instance.isStoped) {\n      const { originalEvent } = instance\n      if (originalEvent) {\n        originalEvent.stopPropagation()\n      }\n      instance.isStoped = env.TRUE\n    }\n    return instance\n  }\n\n  prevent(): CustomEventInterface {\n    return this.preventDefault()\n  }\n\n  stop(): CustomEventInterface {\n    return this.stopPropagation()\n  }\n\n}\n","import * as is from './is'\nimport * as env from './env'\nimport execute from '../function/execute'\n\n/**\n * 遍历数组\n *\n * @param array\n * @param callback 返回 false 可停止遍历\n * @param reversed 是否逆序遍历\n */\nexport function each<T>(\n  array: T[],\n  callback: (item: T, index: number, length: number) => boolean | void,\n  reversed?: boolean\n): void {\n  const { length } = array\n  if (length) {\n    if (reversed) {\n      for (let i = length - 1; i >= 0; i--) {\n        if (callback(array[i], i, length) === env.FALSE) {\n          break\n        }\n      }\n    }\n    else {\n      for (let i = 0; i < length; i++) {\n        if (callback(array[i], i, length) === env.FALSE) {\n          break\n        }\n      }\n    }\n  }\n}\n\nfunction nativePush<T>(array: T[], item: T) {\n  array[array.length] = item\n}\n\nfunction nativeUnshift<T>(array: T[], item: T) {\n  array.unshift(item)\n}\n\n/**\n * 添加\n *\n * @param array\n * @param value\n * @param action\n */\nfunction addItem<T>(array: T[], value: T | T[], action: Function) {\n  if (is.array(value)) {\n    each(\n      value as T[],\n      function (item: T) {\n        action(array, item)\n      }\n    )\n  }\n  else {\n    action(array, value)\n  }\n}\n\n/**\n * 往后加\n *\n * @param array\n * @param target\n */\nexport function push<T>(array: T[], target: T | T[]): void {\n  addItem(array, target, nativePush)\n}\n\n/**\n * 往前加\n *\n * @param array\n * @param target\n */\nexport function unshift<T>(array: T[], target: T | T[]): void {\n  addItem(array, target, nativeUnshift)\n}\n\n/**\n * 数组项在数组中的位置\n *\n * @param array 数组\n * @param target 数组项\n * @param strict 是否全等判断，默认是全等\n * @return 如果未找到，返回 -1\n */\nexport function indexOf<T>(array: T[], target: T, strict?: boolean): number {\n  let result = env.RAW_MINUS_ONE\n  each(\n    array,\n    function (item: any, index: number) {\n      if (strict === env.FALSE ? item == target : item === target) {\n        result = index\n        return env.FALSE\n      }\n    }\n  )\n  return result\n}\n\n/**\n * 获取数组最后一项\n *\n * @param array 数组\n * @return\n */\nexport function last<T>(array: T[]): T | void {\n  const { length } = array\n  if (length > 0) {\n    return array[length - 1]\n  }\n}\n\n/**\n * 弹出数组最后一项\n *\n * 项目里用的太多，仅用于节省字符...\n *\n * @param array 数组\n * @return 弹出的数组项\n */\nexport function pop<T>(array: T[]): T | void {\n  const { length } = array\n  if (length > 0) {\n    return array.pop()\n  }\n}\n\n/**\n * 删除数组项\n *\n * @param array 数组\n * @param item 待删除项\n * @param strict 是否全等判断，默认是全等\n * @return 删除的数量\n */\nexport function remove<T>(array: T[], target: T, strict?: boolean): number {\n  let result = 0\n  each(\n    array,\n    function (item: T, index: number) {\n      if (strict === env.FALSE ? item == target : item === target) {\n        array.splice(index, 1)\n        result++\n      }\n    },\n    env.TRUE\n  )\n  return result\n}\n\n/**\n * 数组是否包含 item\n *\n * @param array 数组\n * @param target 可能包含的数组项\n * @param strict 是否全等判断，默认是全等\n * @return\n */\nexport function has<T>(array: T[], target: T, strict?: boolean): boolean {\n  return indexOf(array, target, strict) >= 0\n}\n\n/**\n * 把类数组转成数组\n *\n * @param array 类数组\n * @return\n */\nexport function toArray<T>(array: T[] | ArrayLike<T>): T[] {\n  return is.array(array)\n    ? array\n    : execute(env.EMPTY_ARRAY.slice, array)\n}\n\n/**\n * 把数组转成对象\n *\n * @param array 数组\n * @param key 数组项包含的字段名称，如果数组项是基本类型，可不传\n * @param value\n * @return\n */\nexport function toObject(array: any[], key?: string | null, value?: any): Object {\n  let result = {}\n  each(\n    array,\n    function (item: any) {\n      result[key ? item[key] : item] = value || item\n    }\n  )\n  return result\n}\n\n/**\n * 把数组合并成字符串\n *\n * @param array\n * @param separator\n * @return\n */\nexport function join(array: string[], separator: string): string {\n  return array.join(separator)\n}\n\n/**\n * 用于判断长度大于 0 的数组\n *\n * @param array\n * @return\n */\nexport function falsy(array: any): boolean {\n  return !is.array(array) || !array.length\n}\n","import * as is from './is'\nimport * as env from './env'\n\nimport isDef from '../function/isDef'\n\nconst camelizePattern = /-([a-z])/gi,\n\nhyphenatePattern = /\\B([A-Z])/g,\n\ncapitalizePattern = /^[a-z]/,\n\ncamelizeCache: Record<string, string> = {},\n\nhyphenateCache: Record<string, string> = {},\n\ncapitalizeCache: Record<string, string> = {}\n\n/**\n * 连字符转成驼峰\n *\n * @param str\n * @return 驼峰格式的字符串\n */\nexport function camelize(str: string): string {\n  if (!camelizeCache[str]) {\n    camelizeCache[str] = str.replace(\n      camelizePattern,\n      function ($0, $1) {\n        return upper($1)\n      }\n    )\n  }\n  return camelizeCache[str]\n}\n\n/**\n * 驼峰转成连字符\n *\n * @param str\n * @return 连字符格式的字符串\n */\nexport function hyphenate(str: string): string {\n  if (!hyphenateCache[str]) {\n    hyphenateCache[str] = str.replace(\n      hyphenatePattern,\n      function ($0, $1) {\n        return '-' + lower($1)\n      }\n    )\n  }\n  return hyphenateCache[str]\n}\n\n/**\n * 首字母大写\n *\n * @param str\n * @return\n */\nexport function capitalize(str: string): string {\n  if (!capitalizeCache[str]) {\n    capitalizeCache[str] = str.replace(\n      capitalizePattern,\n      upper\n    )\n  }\n  return capitalizeCache[str]\n}\n\n/**\n * 清除两侧空白符\n *\n * @param str\n * @return 清除两侧空白符的字符串\n */\nexport function trim(str: any): string {\n  return falsy(str)\n    ? env.EMPTY_STRING\n    : str.trim()\n}\n\n/**\n * 截取字符串\n *\n * @param str\n * @param start\n * @param end\n * @return\n */\nexport function slice(str: string, start: number, end?: number): string {\n  return is.number(end)\n    ? start === end\n      ? env.EMPTY_STRING\n      : str.slice(start, end)\n    : str.slice(start)\n}\n\n/**\n * 获取子串的起始位置\n *\n * @param str\n * @param part\n * @param start\n * @return\n */\nexport function indexOf(str: string, part: string, start?: number): number {\n  return str.indexOf(part, isDef(start) ? start : 0)\n}\n\n/**\n * 获取子串的起始位置\n *\n * @param str\n * @param part\n * @param end\n * @return\n */\nexport function lastIndexOf(str: string, part: string, end?: number): number {\n  return str.lastIndexOf(part, isDef(end) ? end : str.length)\n}\n\n/**\n * str 是否以 part 开头\n *\n * @param str\n * @param part\n * @return\n */\nexport function startsWith(str: string, part: string): boolean {\n  return indexOf(str, part) === 0\n}\n\n/**\n * str 是否以 part 结束\n *\n * @param str\n * @param part\n * @return\n */\nexport function endsWith(str: string, part: string): boolean {\n  const offset = str.length - part.length\n  return offset >= 0 && lastIndexOf(str, part) === offset\n}\n\n/**\n * 获取某个位置的字符\n */\nexport function charAt(str: string, index?: number): string {\n  return str.charAt(index || 0)\n}\n\n/**\n * 获取某个位置的字符编码\n */\nexport function codeAt(str: string, index?: number): number {\n  return str.charCodeAt(index || 0)\n}\n\n/**\n * 大写格式\n */\nexport function upper(str: string): string {\n  return str.toUpperCase()\n}\n\n/**\n * 小写格式\n */\nexport function lower(str: string): string {\n  return str.toLowerCase()\n}\n\n/**\n * str 是否包含 part\n *\n * @param str\n * @param part\n * @return 是否包含\n */\nexport function has(str: string, part: string): boolean {\n  return indexOf(str, part) >= 0\n}\n\n/**\n * 判断长度大于 0 的字符串\n *\n * @param str\n * @return\n */\nexport function falsy(str: any): boolean {\n  return !is.string(str) || !str.length\n}\n","import * as env from './env'\nimport * as string from './string'\n\nimport isDef from '../function/isDef'\n\nconst SEP_DOT = '.',\n\ndotPattern = /\\./g,\n\nasteriskPattern = /\\*/g,\n\ndoubleAsteriskPattern = /\\*\\*/g,\n\nsplitCache: Record<string, string[]> = {},\n\npatternCache: Record<string, RegExp> = {}\n\n/**\n * 判断 keypath 是否以 prefix 开头，如果是，返回匹配上的前缀长度，否则返回 -1\n *\n * @param keypath\n * @param prefix\n * @return\n */\nexport function match(keypath: string, prefix: string): number {\n  if (keypath === prefix) {\n    return prefix.length\n  }\n  prefix += SEP_DOT\n  return string.startsWith(keypath, prefix)\n    ? prefix.length\n    : env.RAW_MINUS_ONE\n}\n\n/**\n * 遍历 keypath 的每个部分\n *\n * @param keypath\n * @param callback 返回 false 可中断遍历\n */\nexport function each(keypath: string, callback: (key: string, isLast: boolean) => boolean | void) {\n  // 判断字符串是因为 keypath 有可能是 toString\n  // 而 splitCache.toString 是个函数\n  const list = isDef(splitCache[keypath])\n    ? splitCache[keypath]\n    : (splitCache[keypath] = keypath.split(SEP_DOT))\n\n  for (let i = 0, lastIndex = list.length - 1; i <= lastIndex; i++) {\n    if (callback(list[i], i === lastIndex) === env.FALSE) {\n      break\n    }\n  }\n}\n\n/**\n * 遍历 keypath 的每个部分\n *\n * @param keypath1\n * @param keypath2\n */\nexport function join(keypath1: string, keypath2: string): string {\n  return keypath1 && keypath2\n    ? keypath1 + SEP_DOT + keypath2\n    : keypath1 || keypath2\n}\n\n/**\n * 是否模糊匹配\n *\n * @param keypath\n */\nexport function isFuzzy(keypath: string): boolean {\n  return string.has(keypath, env.RAW_WILDCARD)\n}\n\n/**\n * 模糊匹配 keypath\n *\n * @param keypath\n * @param pattern\n */\nexport function matchFuzzy(keypath: string, pattern: string): string | void {\n  let cache = patternCache[pattern]\n  if (!cache) {\n    const str = pattern\n      .replace(dotPattern, '\\\\.')\n      .replace(asteriskPattern, '(\\\\w+)')\n      .replace(doubleAsteriskPattern, '([\\.\\\\w]+?)')\n    cache = patternCache[pattern] = new RegExp(`^${str}$`)\n  }\n  const result = keypath.match(cache)\n  if (result) {\n    return result[1]\n  }\n}","import * as is from './is'\nimport * as env from './env'\nimport * as array from './array'\nimport * as keypathUtil from './keypath'\n\nimport isDef from '../function/isDef'\n\nimport * as type from '../../../yox-type/src/type'\nimport ValueHolder from '../../../yox-type/src/interface/ValueHolder'\n\n/**\n * 获取对象的 key 的数组\n *\n * @param object\n * @return\n */\nexport function keys(object: type.data): string[] {\n  return Object.keys(object)\n}\n\nfunction sortKeyByAsc(a: string, b: string): number {\n  return a.length - b.length\n}\n\nfunction sortKeyByDesc(a: string, b: string): number {\n  return b.length - a.length\n}\n\n/**\n * 排序对象的 key\n *\n * @param object\n * @param desc 是否逆序，默认从小到大排序\n * @return\n */\nexport function sort(object: type.data, desc?: boolean): string[] {\n  return keys(object).sort(\n    desc ? sortKeyByDesc : sortKeyByAsc\n  )\n}\n\n/**\n * 遍历对象\n *\n * @param object\n * @param callback 返回 false 可停止遍历\n */\nexport function each(object: type.data, callback: (value: any, key: string) => boolean | void): void {\n  for (let key in object) {\n    if (callback(object[key], key) === env.FALSE) {\n      break\n    }\n  }\n}\n\n/**\n * 清空对象所有的键值对\n *\n * @param object\n */\nexport function clear(object: type.data): void {\n  each(\n    object,\n    function (_, key) {\n      delete object[key]\n    }\n  )\n}\n\n/**\n * 扩展对象\n *\n * @return\n */\nexport function extend(original: type.data, object: type.data): type.data {\n  each(\n    object,\n    function (value, key) {\n      original[key] = value\n    }\n  )\n  return original\n}\n\n/**\n * 合并对象\n *\n * @return\n */\nexport function merge(object1: type.data | void, object2: type.data | void): type.data | void {\n  return object1 && object2\n    ? extend(extend({}, object1), object2)\n    : object1 || object2\n}\n\n/**\n * 拷贝对象\n *\n * @param object\n * @param deep 是否需要深拷贝\n * @return\n */\nexport function copy(object: any, deep?: boolean): any {\n  let result = object\n  if (is.array(object)) {\n    if (deep) {\n      result = []\n      array.each(\n        object,\n        function (item, index) {\n          result[index] = copy(item, deep)\n        }\n      )\n    }\n    else {\n      result = object.slice()\n    }\n  }\n  else if (is.object(object)) {\n    result = {}\n    each(\n      object,\n      function (value, key) {\n        result[key] = deep ? copy(value, deep) : value\n      }\n    )\n  }\n  return result\n}\n\n/**\n * 辅助 get 函数，持有最后找到的值，避免频繁的创建临时对象\n */\nconst valueHolder: ValueHolder = {\n  value: env.UNDEFINED\n}\n\n/**\n * 从对象中查找一个 keypath\n *\n * 返回值是空时，表示没找到值\n *\n * @param object\n * @param keypath\n * @return\n */\nexport function get(object: any, keypath: string): ValueHolder | undefined {\n\n  /**\n   * 考虑以下情况:\n   *\n   * {\n   *   'a.b.c.d': 1,\n   *   'a.b.c': {\n   *      d: 2\n   *   }\n   * }\n   *\n   * 此时 keypath 是 `a.b.c.d`，可以获取到 1\n   * 如果没有这个 key，按 keypath 推进是取不到值的，因为没有 a.b.c 对象\n   * 个人觉得没有必要支持字面量，情况实在太多，会把这个函数搞的性能很差\n   */\n\n  keypathUtil.each(\n    keypath,\n    function (key, isLast) {\n\n      if (object != env.NULL) {\n\n        // 先直接取值\n        let value = object[key],\n\n        // 紧接着判断值是否存在\n        // 下面会处理计算属性的值，不能在它后面设置 hasValue\n        hasValue = isDef(value)\n\n        // 如果是计算属性，取计算属性的值\n        if (value && is.func(value.get)) {\n          value = value.get()\n        }\n\n        if (isLast) {\n          if (hasValue) {\n            valueHolder.value = value\n            object = valueHolder\n          }\n          else {\n            object = env.UNDEFINED\n          }\n        }\n        else {\n          object = value\n        }\n      }\n      else {\n        object = env.UNDEFINED\n        return env.FALSE\n      }\n\n    }\n  )\n\n  return object\n\n}\n\n/**\n * 为对象设置一个键值对\n *\n * @param object\n * @param keypath\n * @param value\n * @param autofill 是否自动填充不存在的对象，默认自动填充\n */\nexport function set(object: type.data, keypath: string, value: any, autofill?: boolean): void {\n  keypathUtil.each(\n    keypath,\n    function (key, isLast) {\n      if (isLast) {\n        object[key] = value\n      }\n      else if (object[key]) {\n        object = object[key]\n      }\n      else if (autofill) {\n        object = object[key] = {}\n      }\n      else {\n        return env.FALSE\n      }\n    }\n  )\n}\n\n/**\n * 对象是否包含某个 key\n *\n * @param object\n * @param key\n * @return\n */\nexport function has(object: type.data, key: string | number): boolean {\n  // 不用 hasOwnProperty，性能差\n  return isDef(object[key])\n}\n\n/**\n * 是否是空对象\n *\n * @param object\n * @return\n */\nexport function falsy(object: any): boolean {\n  return !is.object(object)\n    || is.array(object)\n    || !keys(object).length\n}","import * as env from '../util/env'\nimport isDef from './isDef'\n\nexport default function (target: any, defaultValue?: string): string {\n  return target != env.NULL && target.toString\n    ? target.toString()\n    : isDef(defaultValue)\n      ? defaultValue as string\n      : env.EMPTY_STRING\n}\n","import * as env from './env'\nimport toString from '../function/toString'\n\nexport const DEBUG = 1\nexport const INFO = 2\nexport const WARN = 3\nexport const ERROR = 4\nexport const FATAL = 5\n\n/**\n * 是否有原生的日志特性，没有必要单独实现\n */\nconst nativeConsole: Console | null = typeof console !== env.RAW_UNDEFINED ? console : env.NULL,\n\n/**\n * 当前是否是源码调试，如果开启了代码压缩，empty function 里的注释会被干掉\n */\nlevel = /yox/.test(toString(env.EMPTY_FUNCTION)) ? DEBUG : WARN,\n\n/**\n * console 样式前缀\n */\nstylePrefix = '%c'\n\n/**\n * 全局调试开关\n */\nfunction getLevel() {\n  if (env.WINDOW) {\n    const logLevel = env.WINDOW['YOX_LOG_LEVEL']\n    if (logLevel >= DEBUG && logLevel <= FATAL) {\n      return logLevel as number\n    }\n  }\n  return level\n}\n\nfunction getStyle(backgroundColor: string) {\n  return `background-color:${backgroundColor};border-radius:12px;color:#fff;font-size:10px;padding:3px 6px;`\n}\n\n/**\n * 打印 debug 日志\n *\n * @param msg\n */\nexport function debug(msg: string, tag?: string): void {\n  if (nativeConsole && getLevel() <= DEBUG) {\n    nativeConsole.log(stylePrefix + (tag || 'Yox debug'), getStyle('#999'), msg)\n  }\n}\n\n/**\n * 打印 info 日志\n *\n * @param msg\n */\nexport function info(msg: string, tag?: string): void {\n  if (nativeConsole && getLevel() <= INFO) {\n    nativeConsole.log(stylePrefix + (tag || 'Yox info'), getStyle('#2db7f5'), msg)\n  }\n}\n\n/**\n * 打印 warn 日志\n *\n * @param msg\n */\nexport function warn(msg: string, tag?: string): void {\n  if (nativeConsole && getLevel() <= WARN) {\n    nativeConsole.warn(stylePrefix + (tag || 'Yox warn'), getStyle('#f90'), msg)\n  }\n}\n\n/**\n * 打印 error 日志\n *\n * @param msg\n */\nexport function error(msg: string, tag?: string): void {\n  if (nativeConsole && getLevel() <= ERROR) {\n    nativeConsole.error(stylePrefix + (tag || 'Yox error'), getStyle('#ed4014'), msg)\n  }\n}\n\n/**\n * 致命错误，中断程序\n *\n * @param msg\n */\nexport function fatal(msg: string, tag?: string): void {\n  if (getLevel() <= FATAL) {\n    throw new Error(`[${tag || 'Yox fatal'}]: ${msg}`)\n  }\n}\n","import * as env from '../util/env'\nimport isNative from './isNative'\n\ndeclare const setImmediate: Function\n\nlet nextTick: Function\n\n// IE (10+) 和 node\nif (typeof setImmediate === env.RAW_FUNCTION && isNative(setImmediate)) {\n  nextTick = setImmediate\n}\n// 用 MessageChannel 去做 setImmediate 的 polyfill\n// 原理是将新的 message 事件加入到原有的 dom events 之后\n// 兼容性 IE10+ 和其他标准浏览器\nif (typeof MessageChannel === env.RAW_FUNCTION && isNative(MessageChannel)) {\n  nextTick = function (fn: any) {\n    const channel = new MessageChannel()\n    channel.port1.onmessage = fn\n    channel.port2.postMessage(1)\n  }\n}\nelse {\n  nextTick = setTimeout\n}\n\nexport default nextTick\n","import execute from '../function/execute'\n\nimport * as is from './is'\nimport * as env from './env'\nimport * as array from './array'\nimport * as object from './object'\nimport * as string from './string'\nimport * as logger from './logger'\n\nimport CustomEvent from './CustomEvent'\n\nimport * as type from '../../../yox-type/src/type'\nimport EmitterOptions from '../../../yox-type/src/options/Emitter'\nimport EmitterInterface from '../../../yox-type/src/event/Emitter'\n\ninterface Namespace {\n  name: string\n  ns: string\n}\n\nexport default class Emitter implements EmitterInterface {\n\n  /**\n   * 是否开启命名空间\n   */\n  ns: boolean\n\n  /**\n   * 已注册的事件监听\n   */\n  listeners: Record<string, EmitterOptions[]>\n\n  /**\n   * 原生事件监听，一个事件对应一个 listener\n   */\n  nativeListeners?: Record<string, type.nativeListener>\n\n  constructor(ns?: boolean) {\n    this.ns = ns || env.FALSE\n    this.listeners = {}\n  }\n\n  /**\n   * 发射事件\n   *\n   * @param bullet 事件或事件名称\n   * @param data 事件数据\n   */\n  fire(\n    type: string,\n    args: any[] | void,\n    filter?: (type: string, args: any[] | void, options: EmitterOptions) => boolean | void\n  ): boolean {\n\n    let instance = this,\n\n    { name, ns } = parseNamespace(instance.ns, type),\n\n    list = instance.listeners[name],\n\n    isComplete = env.TRUE\n\n    if (list) {\n\n      // 避免遍历过程中，数组发生变化，比如增删了\n      list = object.copy(list)\n\n      // 判断是否是发射事件\n      // 如果 args 的第一个参数是 CustomEvent 类型，表示发射事件\n      // 因为事件处理函数的参数列表是 (event, data)\n      const event = args && args[0] instanceof CustomEvent\n        ? args[0] as CustomEvent\n        : env.UNDEFINED\n\n      array.each(\n        list,\n        function (options: EmitterOptions, _: number) {\n\n          // 命名空间不匹配\n          if (!matchNamespace(ns, options)\n            // 在 fire 过程中被移除了\n            || !array.has(list, options)\n            // 传了 filter，则用 filter 判断是否过滤此 options\n            || (filter && !filter(type, args, options))\n          ) {\n            return\n          }\n\n          // 为 event 对象加上当前正在处理的 listener\n          // 这样方便业务层移除事件绑定\n          // 比如 on('xx', function) 这样定义了匿名 listener\n          // 在这个 listener 里面获取不到当前 listener 的引用\n          // 为了能引用到，有时候会先定义 var listener = function,\n          // 然后再 on('xx', listener) 这样其实是没有必要的\n          if (event) {\n            event.listener = options.fn\n          }\n\n          let result = execute(options.fn, options.ctx, args)\n\n          if (event) {\n            event.listener = env.UNDEFINED\n          }\n\n          // 执行次数\n          options.num = options.num ? (options.num + 1) : 1\n\n          // 注册的 listener 可以指定最大执行次数\n          if (options.num === options.max) {\n            instance.off(type, options.fn)\n          }\n\n          // 如果没有返回 false，而是调用了 event.stop 也算是返回 false\n          if (event) {\n            if (result === env.FALSE) {\n              event.prevent().stop()\n            }\n            else if (event.isStoped) {\n              result = env.FALSE\n            }\n          }\n\n          if (result === env.FALSE) {\n            return isComplete = env.FALSE\n          }\n        }\n      )\n\n    }\n\n    return isComplete\n\n  }\n\n  /**\n   * 注册监听\n   *\n   * @param type\n   * @param listener\n   */\n  on(\n    type: string,\n    listener?: Function | EmitterOptions\n  ): void {\n\n    const instance = this,\n\n    { listeners } = instance,\n\n    options: EmitterOptions = is.func(listener)\n      ? { fn: listener as Function }\n      : listener as EmitterOptions\n\n    if (is.object(options) && is.func(options.fn)) {\n      const { name, ns } = parseNamespace(instance.ns, type)\n      options.ns = ns\n      array.push(\n        listeners[name] || (listeners[name] = []),\n        options\n      )\n    }\n    else if (process.env.NODE_ENV === 'development') {\n      logger.fatal(`Invoke emitter.on(type, listener) failed.`)\n    }\n\n  }\n\n  /**\n   * 取消监听\n   *\n   * @param type\n   * @param listener\n   */\n  off(\n    type?: string,\n    listener?: Function\n  ): void {\n\n    const instance = this,\n\n    { listeners } = instance\n\n    if (type) {\n\n      const { name, ns } = parseNamespace(instance.ns, type),\n\n      matchListener = createMatchListener(listener),\n\n      each = function (list: EmitterOptions[], name: string) {\n        array.each(\n          list,\n          function (options: EmitterOptions, index: number) {\n            if (matchListener(options) && matchNamespace(ns, options)) {\n              list.splice(index, 1)\n            }\n          },\n          env.TRUE\n        )\n        if (!list.length) {\n          delete listeners[name]\n        }\n      }\n\n      if (name) {\n        if (listeners[name]) {\n          each(listeners[name], name)\n        }\n      }\n      else if (ns) {\n        object.each(listeners, each)\n      }\n\n    }\n    else {\n      // 清空\n      instance.listeners = {}\n      // 在开发阶段进行警告，比如传了 type 进来，type 是个空值\n      // 但你不知道它是空值\n      if (process.env.NODE_ENV === 'development') {\n        if (arguments.length > 0) {\n          logger.warn(`emitter.off(type) is invoked, but the \"type\" argument is undefined or null.`)\n        }\n      }\n    }\n\n  }\n\n  /**\n   * 是否已监听某个事件\n   *\n   * @param type\n   * @param listener\n   */\n  has(\n    type: string,\n    listener?: Function\n  ): boolean {\n\n    let instance = this,\n\n    { listeners } = instance,\n\n    { name, ns } = parseNamespace(instance.ns, type),\n\n    result = env.TRUE,\n\n    matchListener = createMatchListener(listener),\n\n    each = function (list: EmitterOptions[]) {\n      array.each(\n        list,\n        function (options: EmitterOptions) {\n          if (matchListener(options) && matchNamespace(ns, options)) {\n            return result = env.FALSE\n          }\n        }\n      )\n      return result\n    }\n\n    if (name) {\n      if (listeners[name]) {\n        each(listeners[name])\n      }\n    }\n    else if (ns) {\n      object.each(listeners, each)\n    }\n\n    return !result\n\n  }\n\n}\n\n/**\n * 把事件类型解析成命名空间格式\n *\n * @param ns\n * @param type\n */\nfunction parseNamespace(ns: boolean, type: string): Namespace {\n\n  const result = {\n    name: type,\n    ns: env.EMPTY_STRING,\n  }\n\n  if (ns) {\n    const index = string.indexOf(type, '.')\n    if (index >= 0) {\n      result.name = string.slice(type, 0, index)\n      result.ns = string.slice(type, index + 1)\n    }\n  }\n\n  return result\n\n}\n\n\nfunction matchTrue(options: EmitterOptions) {\n  return env.TRUE\n}\n\n/**\n * 外部会传入 Function 或 EmitterOptions 或 空\n *\n * 这里根据传入值的不同类型，创建不同的判断函数\n *\n * 如果传入的是 EmitterOptions，则全等判断\n *\n * 如果传入的是 Function，则判断函数是否全等\n *\n * 如果传入的是空，则直接返回 true\n *\n * @param listener\n */\nfunction createMatchListener(listener: Function | void): (options: EmitterOptions) => boolean {\n  return is.func(listener)\n      ? function (options: EmitterOptions) {\n          return listener === options.fn\n        }\n      : matchTrue\n}\n\n/**\n * 判断 options 是否能匹配命名空间\n *\n * 如果 namespace 和 options.ns 都不为空，则需完全匹配\n *\n * 如果他们两个其中任何一个为空，则不判断命名空间\n *\n * @param namespace\n * @param options\n */\nfunction matchNamespace(namespace: string, options: EmitterOptions): boolean {\n  const { ns } = options\n  return ns && namespace\n    ? ns === namespace\n    : env.TRUE\n}","import * as is from '../util/is'\nimport toString from './toString'\n\nexport default function (target: any): boolean {\n  return is.func(target) && /native code/.test(toString(target))\n}","import NextTaskInterface from '../../../yox-type/src/interface/NextTask'\nimport TaskInterface from '../../../yox-type/src/interface/Task'\n\nimport * as array from './array'\nimport execute from '../function/execute'\nimport nextTick from '../function/nextTick'\n\nlet shared: NextTask | void\n\nexport default class NextTask implements NextTaskInterface {\n\n  /**\n   * 全局单例\n   */\n  public static shared(): NextTask {\n    return shared || (shared = new NextTask())\n  }\n\n  /**\n   * 异步队列\n   */\n  tasks: TaskInterface[]\n\n  constructor() {\n    this.tasks = []\n  }\n\n  /**\n   * 在队尾添加异步任务\n   */\n  append(func: Function, context?: any): void {\n    const instance = this, { tasks } = instance\n    array.push(\n      tasks,\n      {\n        fn: func,\n        ctx: context\n      }\n    )\n    if (tasks.length === 1) {\n      nextTick(\n        function () {\n          instance.run()\n        }\n      )\n    }\n  }\n\n  /**\n   * 在队首添加异步任务\n   */\n  prepend(func: Function, context?: any): void {\n    const instance = this, { tasks } = instance\n    array.unshift(\n      tasks,\n      {\n        fn: func,\n        ctx: context\n      }\n    )\n    if (tasks.length === 1) {\n      nextTick(\n        function () {\n          instance.run()\n        }\n      )\n    }\n  }\n\n  /**\n   * 清空异步队列\n   */\n  clear(): void {\n    this.tasks.length = 0\n  }\n\n  /**\n   * 立即执行异步任务，并清空队列\n   */\n  run(): void {\n    const { tasks } = this\n    if (tasks.length) {\n      this.tasks = []\n      array.each(\n        tasks,\n        function (task) {\n          execute(task.fn, task.ctx)\n        }\n      )\n    }\n  }\n\n}\n","export const SYNTAX_IF = '#if'\nexport const SYNTAX_ELSE = 'else'\nexport const SYNTAX_ELSE_IF = 'else if'\nexport const SYNTAX_EACH = '#each'\nexport const SYNTAX_PARTIAL = '#partial'\nexport const SYNTAX_IMPORT = '>'\nexport const SYNTAX_SPREAD = '...'\nexport const SYNTAX_COMMENT = /^!\\s/\n\nexport const SLOT_DATA_PREFIX = '$slot_'\nexport const SLOT_NAME_DEFAULT = 'children'\n\nexport const HINT_STRING = 1\nexport const HINT_NUMBER = 2\nexport const HINT_BOOLEAN = 3\n\nexport const DIRECTIVE_ON = 'on'\nexport const DIRECTIVE_LAZY = 'lazy'\nexport const DIRECTIVE_MODEL = 'model'\nexport const DIRECTIVE_EVENT = 'event'\nexport const DIRECTIVE_BINDING = 'binding'\nexport const DIRECTIVE_CUSTOM = 'o'\n\nexport const HOOK_BEFORE_CREATE = 'beforeCreate'\nexport const HOOK_AFTER_CREATE = 'afterCreate'\nexport const HOOK_BEFORE_MOUNT = 'beforeMount'\nexport const HOOK_AFTER_MOUNT = 'afterMount'\nexport const HOOK_BEFORE_UPDATE = 'beforeUpdate'\nexport const HOOK_AFTER_UPDATE = 'afterUpdate'\nexport const HOOK_BEFORE_DESTROY = 'beforeDestroy'\nexport const HOOK_AFTER_DESTROY = 'afterDestroy'\n","let guid = 0\n\nexport default function (): number {\n  return ++guid\n}\n","// vnode.data 内部使用的几个字段\n\nexport const ID = '$id'\n\nexport const VNODE = '$vnode'\n\nexport const LOADING = '$loading'\n\nexport const COMPONENT = '$component'\n\nexport const LEAVING = '$leaving'","import * as env from '../../yox-common/src/util/env'\nimport * as object from '../../yox-common/src/util/object'\n\nimport VNode from '../../yox-type/src/vnode/VNode'\nimport Attribute from '../../yox-type/src/vnode/Attribute'\n\nexport function update(api: any, vnode: VNode, oldVnode?: VNode) {\n\n  const { node, nativeAttrs } = vnode,\n\n  oldNativeAttrs = oldVnode && oldVnode.nativeAttrs\n\n  if (nativeAttrs || oldNativeAttrs) {\n\n    const newValue = nativeAttrs || env.EMPTY_OBJECT,\n\n    oldValue = oldNativeAttrs || env.EMPTY_OBJECT\n\n    object.each(\n      newValue,\n      function (attr: Attribute, name: string) {\n        if (!oldValue[name]\n          || attr.value !== oldValue[name].value\n        ) {\n          api.attr(node, name, attr.value)\n        }\n      }\n    )\n\n    object.each(\n      oldValue,\n      function (_: Attribute, name: string) {\n        if (!newValue[name]) {\n          api.removeAttr(node, name)\n        }\n      }\n    )\n\n  }\n\n}\n","import * as env from '../../yox-common/src/util/env'\nimport * as object from '../../yox-common/src/util/object'\n\nimport VNode from '../../yox-type/src/vnode/VNode'\nimport Property from '../../yox-type/src/vnode/Property'\n\nexport function update(api: any, vnode: VNode, oldVnode?: VNode) {\n\n  const { node, nativeProps } = vnode,\n\n  oldNativeProps = oldVnode && oldVnode.nativeProps\n\n  if (nativeProps || oldNativeProps) {\n\n    const newValue = nativeProps || env.EMPTY_OBJECT,\n\n    oldValue = oldNativeProps || env.EMPTY_OBJECT\n\n    object.each(\n      newValue,\n      function (prop: Property, name: string) {\n        if (!oldValue[name]\n          || prop.value !== oldValue[name].value\n        ) {\n          api.prop(node, name, prop.value)\n        }\n      }\n    )\n\n    object.each(\n      oldValue,\n      function (prop: Property, name: string) {\n        if (!newValue[name]) {\n          api.removeProp(node, name, prop.hint)\n        }\n      }\n    )\n\n  }\n\n}","import * as env from '../../yox-common/src/util/env'\nimport * as object from '../../yox-common/src/util/object'\n\nimport VNode from '../../yox-type/src/vnode/VNode'\nimport Directive from '../../yox-type/src/vnode/Directive'\n\nimport * as field from './field'\n\nexport function update(vnode: VNode, oldVnode?: VNode) {\n\n  const { data, directives } = vnode,\n\n  oldDirectives = oldVnode && oldVnode.directives\n\n  if (directives || oldDirectives) {\n\n    const node = data[field.COMPONENT] || vnode.node,\n\n    isKeypathChange = oldVnode && vnode.keypath !== oldVnode.keypath,\n\n    newValue = directives || env.EMPTY_OBJECT,\n\n    oldValue = oldDirectives || env.EMPTY_OBJECT\n\n    object.each(\n      newValue,\n      function (directive: Directive, name: string) {\n        const { once, bind, unbind } = directive.hooks\n        if (!oldValue[name]) {\n          bind(node, directive, vnode)\n        }\n        else if (once\n          || directive.value !== oldValue[name].value\n          || isKeypathChange\n        ) {\n          if (unbind) {\n            unbind(node, oldValue[name], oldVnode as VNode)\n          }\n          bind(node, directive, vnode)\n        }\n      }\n    )\n\n    object.each(\n      oldValue,\n      function (directive: Directive, name: string) {\n        if (!newValue[name]) {\n          const { unbind } = directive.hooks\n          if (unbind) {\n            unbind(node, directive, oldVnode as VNode)\n          }\n        }\n      }\n    )\n\n  }\n\n}\n\nexport function remove(vnode: VNode) {\n  const { directives } = vnode\n  if (directives) {\n    const node = vnode.data[field.COMPONENT] || vnode.node\n    object.each(\n      directives,\n      function (directive: Directive) {\n        const { unbind } = directive.hooks\n        if (unbind) {\n          unbind(node, directive, vnode)\n        }\n      }\n    )\n  }\n}\n","import VNode from '../../yox-type/src/vnode/VNode'\n\nimport isDef from '../../yox-common/src/function/isDef'\nimport * as env from '../../yox-common/src/util/env'\nimport * as object from '../../yox-common/src/util/object'\n\nimport * as field from './field'\n\nexport function update(vnode: VNode, oldVnode?: VNode) {\n\n  let { data, ref, props, slots, model, context } = vnode, node: any\n\n  if (vnode.isComponent) {\n    node = data[field.COMPONENT]\n    // 更新时才要 set\n    // 因为初始化时，所有这些都经过构造函数完成了\n    if (oldVnode) {\n\n      // 更新组件时，如果写了 <Component model=\"xx\"/>\n      // 必须把双向绑定的值写到 props 里，否则一旦 propTypes 加了默认值\n      // 传下去的数据就错了\n      if (isDef(model)) {\n        if (!props) {\n          props = {}\n        }\n        props[node.$model] = model\n      }\n\n      const result = object.merge(props ? node.checkProps(props) : env.UNDEFINED, slots)\n      if (result) {\n        node.forceUpdate(result)\n      }\n    }\n  }\n  else {\n    node = vnode.node\n  }\n\n  if (ref) {\n    const refs = context.$refs\n    if (refs) {\n      refs[ref] = node\n    }\n  }\n\n}\n","import * as is from '../../yox-common/src/util/is'\nimport * as env from '../../yox-common/src/util/env'\nimport * as array from '../../yox-common/src/util/array'\nimport * as object from '../../yox-common/src/util/object'\nimport * as logger from '../../yox-common/src/util/logger'\n\nimport guid from '../../yox-common/src/function/guid'\nimport isDef from '../../yox-common/src/function/isDef'\nimport execute from '../../yox-common/src/function/execute'\n\nimport * as type from '../../yox-type/src/type'\nimport API from '../../yox-type/src/interface/API'\nimport Yox from '../../yox-type/src/interface/Yox'\nimport VNode from '../../yox-type/src/vnode/VNode'\nimport YoxOptions from '../../yox-type/src/options/Yox'\n\nimport * as field from './field'\n\nimport * as nativeAttr from './nativeAttr'\nimport * as nativeProp from './nativeProp'\nimport * as directive from './directive'\nimport * as component from './component'\n\nfunction isPatchable(vnode: VNode, oldVnode: VNode): boolean {\n  return vnode.tag === oldVnode.tag\n    && vnode.key === oldVnode.key\n}\n\nfunction createKeyToIndex(vnodes: (VNode | void)[], startIndex: number, endIndex: number): Record<string, number> {\n\n  let result: Record<string, number> | void,\n\n  vnode: VNode | void,\n\n  key: string | void\n\n  while (startIndex <= endIndex) {\n    vnode = vnodes[startIndex]\n    if (vnode && (key = vnode.key)) {\n      if (!result) {\n        result = {}\n      }\n      result[key] = startIndex\n    }\n    startIndex++\n  }\n\n  return result || env.EMPTY_OBJECT\n\n}\n\nfunction insertBefore(api: API, parentNode: Node, node: Node, referenceNode: Node | void) {\n  if (referenceNode) {\n    api.before(parentNode, node, referenceNode)\n  }\n  else {\n    api.append(parentNode, node)\n  }\n}\n\nfunction createComponent(vnode: VNode, options: YoxOptions) {\n\n  const child = (vnode.parent || vnode.context).createComponent(options, vnode)\n\n  vnode.data[field.COMPONENT] = child\n  vnode.data[field.LOADING] = env.FALSE\n\n  component.update(vnode)\n  directive.update(vnode)\n\n  return child\n\n}\n\nfunction createData(): type.data {\n  const data = {}\n  data[field.ID] = guid()\n  return data\n}\n\nfunction createVnode(api: API, vnode: VNode) {\n\n  let { tag, node, data, isComponent, isComment, isText, isStyle, isOption, children, text, html, context } = vnode\n\n  if (node && data) {\n    return\n  }\n\n  data = createData()\n\n  vnode.data = data\n\n  if (isText) {\n    vnode.node = api.createText(text as string)\n    return\n  }\n\n  if (isComment) {\n    vnode.node = api.createComment(text as string)\n    return\n  }\n\n  if (isComponent) {\n\n    let componentOptions: YoxOptions | undefined = env.UNDEFINED\n\n    // 动态组件，tag 可能为空\n    if (tag) {\n      context.loadComponent(\n        tag,\n        function (options: YoxOptions) {\n          if (object.has(data, field.LOADING)) {\n            // 异步组件\n            if (data[field.LOADING]) {\n              // 尝试使用最新的 vnode\n              if (data[field.VNODE]) {\n                vnode = data[field.VNODE]\n                // 用完就删掉\n                delete data[field.VNODE]\n              }\n              enterVnode(\n                vnode,\n                createComponent(vnode, options)\n              )\n            }\n          }\n          // 同步组件\n          else {\n            componentOptions = options\n          }\n        }\n      )\n    }\n\n    // 不论是同步还是异步组件，都需要一个占位元素\n    vnode.node = api.createComment(env.RAW_COMPONENT)\n\n    if (componentOptions) {\n      createComponent(vnode, componentOptions as YoxOptions)\n    }\n    else {\n      data[field.LOADING] = env.TRUE\n    }\n\n  }\n  else {\n\n    node = vnode.node = api.createElement(vnode.tag as string, vnode.isSvg)\n\n    if (children) {\n      addVnodes(api, node, children)\n    }\n    else if (text) {\n      api.text(node as Element, text, isStyle, isOption)\n    }\n    else if (html) {\n      api.html(node as Element, html, isStyle, isOption)\n    }\n\n    nativeAttr.update(api, vnode)\n    nativeProp.update(api, vnode)\n    component.update(vnode)\n    directive.update(vnode)\n\n  }\n}\n\nfunction addVnodes(api: API, parentNode: Node, vnodes: VNode[], startIndex?: number, endIndex?: number, before?: VNode) {\n  let vnode: VNode, start = startIndex || 0, end = isDef(endIndex) ? endIndex as number : vnodes.length - 1\n  while (start <= end) {\n    vnode = vnodes[start]\n    createVnode(api, vnode)\n    insertVnode(api, parentNode, vnode, before)\n    start++\n  }\n}\n\nfunction insertVnode(api: API, parentNode: Node, vnode: VNode, before?: VNode) {\n\n  const { node, data, context } = vnode,\n\n  hasParent = api.parent(node)\n\n  // 这里不调用 insertBefore，避免判断两次\n  if (before) {\n    api.before(parentNode, node, before.node)\n  }\n  else {\n    api.append(parentNode, node)\n  }\n\n  // 普通元素和组件的占位节点都会走到这里\n  // 但是占位节点不用 enter，而是等组件加载回来之后再调 enter\n  if (!hasParent) {\n    let enter: Function | void = env.UNDEFINED\n    if (vnode.isComponent) {\n      const component = data[field.COMPONENT]\n      if (component) {\n        enter = function () {\n          enterVnode(vnode, component)\n        }\n      }\n    }\n    else if (!vnode.isStatic && !vnode.isText && !vnode.isComment) {\n      enter = function () {\n        enterVnode(vnode)\n      }\n    }\n    if (enter) {\n      // 执行到这时，组件还没有挂载到 DOM 树\n      // 如果此时直接触发 enter，外部还需要做多余的工作，比如 setTimeout\n      // 索性这里直接等挂载到 DOM 数之后再触发\n      context.$observer.nextTask.prepend(enter)\n    }\n  }\n\n}\n\nfunction removeVnodes(api: API, parentNode: Node, vnodes: (VNode | void)[], startIndex?: number, endIndex?: number) {\n  let vnode: VNode | void, start = startIndex || 0, end = isDef(endIndex) ? endIndex as number : vnodes.length - 1\n  while (start <= end) {\n    vnode = vnodes[start]\n    if (vnode) {\n      removeVnode(api, parentNode, vnode)\n    }\n    start++\n  }\n}\n\nfunction removeVnode(api: API, parentNode: Node, vnode: VNode) {\n  const { node } = vnode\n  if (vnode.isStatic || vnode.isText || vnode.isComment) {\n    api.remove(parentNode, node)\n  }\n  else {\n\n    let done = function () {\n      destroyVnode(api, vnode)\n      api.remove(parentNode, node)\n    },\n\n    component: Yox | void\n\n    if (vnode.isComponent) {\n      component = vnode.data[field.COMPONENT]\n      // 异步组件，还没加载成功就被删除了\n      if (!component) {\n        done()\n        return\n      }\n    }\n\n    leaveVnode(vnode, component, done)\n\n  }\n}\n\nfunction destroyVnode(api: API, vnode: VNode) {\n\n  /**\n   * 如果一个子组件的模板是这样写的：\n   *\n   * <div>\n   *   {{#if visible}}\n   *      <slot name=\"children\"/>\n   *   {{/if}}\n   * </div>\n   *\n   * 当 visible 从 true 变为 false 时，不能销毁 slot 导入的任何 vnode\n   * 不论是组件或是元素，都不能销毁，只能简单的 remove，\n   * 否则子组件下一次展现它们时，会出问题\n   */\n\n  const { data, children, parent, slot } = vnode\n\n  // 销毁插槽组件\n\n  // 如果宿主组件正在销毁，$vnode 属性会在调 destroy() 之前被删除\n  // 这里表示的是宿主组件还没被销毁\n  // 如果宿主组件被销毁了，则它的一切都要进行销毁\n  if (slot && parent && parent.$vnode) {\n    // 如果更新时，父组件没有传入该 slot，则子组件需要销毁该 slot\n    const slots = parent.get(slot)\n    // slots 要么没有，要么是数组，不可能是别的\n    if (slots && array.has(slots, vnode)) {\n      return\n    }\n  }\n\n  if (vnode.isComponent) {\n    const component = data[field.COMPONENT]\n    if (component) {\n      directive.remove(vnode)\n      component.destroy()\n    }\n    else [\n      data[field.LOADING] = env.FALSE\n    ]\n  }\n  else {\n    directive.remove(vnode)\n    if (children) {\n      array.each(\n        children,\n        function (child: VNode) {\n          destroyVnode(api, child)\n        }\n      )\n    }\n  }\n\n}\n\n/**\n * vnode 触发 enter hook 时，外部一般会做一些淡入动画\n */\nfunction enterVnode(vnode: VNode, component: Yox | void) {\n  // 如果组件根元素和组件本身都写了 transition\n  // 优先用外面定义的\n  // 因为这明确是在覆盖配置\n  let { data, transition } = vnode\n  if (component && !transition) {\n    // 再看组件根元素是否有 transition\n    transition = (component.$vnode as VNode).transition\n  }\n  execute(data[field.LEAVING])\n  if (transition) {\n    const { enter } = transition\n    if (enter) {\n      enter(\n        vnode.node as HTMLElement\n      )\n      return\n    }\n  }\n}\n\n/**\n * vnode 触发 leave hook 时，外部一般会做一些淡出动画\n * 动画结束后才能移除节点，否则无法产生动画\n * 这里由外部调用 done 来通知内部动画结束\n */\nfunction leaveVnode(vnode: VNode, component: Yox | void, done: () => void) {\n  // 如果组件根元素和组件本身都写了 transition\n  // 优先用外面定义的\n  // 因为这明确是在覆盖配置\n  let { data, transition } = vnode\n  if (component && !transition) {\n    // 再看组件根元素是否有 transition\n    transition = (component.$vnode as VNode).transition\n  }\n  if (transition) {\n    const { leave } = transition\n    if (leave) {\n      leave(\n        vnode.node as HTMLElement,\n        data[field.LEAVING] = function () {\n          if (data[field.LEAVING]) {\n            done()\n            data[field.LEAVING] = env.UNDEFINED\n          }\n        }\n      )\n      return\n    }\n  }\n  // 如果没有淡出动画，直接结束\n  done()\n}\n\nfunction updateChildren(api: API, parentNode: Node, children: VNode[], oldChildren: (VNode | void)[]) {\n\n  let startIndex = 0,\n  endIndex = children.length - 1,\n  startVnode = children[startIndex],\n  endVnode = children[endIndex],\n\n  oldStartIndex = 0,\n  oldEndIndex = oldChildren.length - 1,\n  oldStartVnode = oldChildren[oldStartIndex],\n  oldEndVnode = oldChildren[oldEndIndex],\n\n  oldKeyToIndex: Record<string, number> | void,\n  oldIndex: number | void\n\n  while (oldStartIndex <= oldEndIndex && startIndex <= endIndex) {\n\n    // 下面有设为 UNDEFINED 的逻辑\n    if (!startVnode) {\n      startVnode = children[++startIndex];\n    }\n    else if (!endVnode) {\n      endVnode = children[--endIndex];\n    }\n    else if (!oldStartVnode) {\n      oldStartVnode = oldChildren[++oldStartIndex]\n    }\n    else if (!oldEndVnode) {\n      oldEndVnode = oldChildren[--oldEndIndex]\n    }\n\n    // 从头到尾比较，位置相同且值得 patch\n    else if (isPatchable(startVnode, oldStartVnode)) {\n      patch(api, startVnode, oldStartVnode)\n      startVnode = children[++startIndex]\n      oldStartVnode = oldChildren[++oldStartIndex]\n    }\n\n    // 从尾到头比较，位置相同且值得 patch\n    else if (isPatchable(endVnode, oldEndVnode)) {\n      patch(api, endVnode, oldEndVnode)\n      endVnode = children[--endIndex]\n      oldEndVnode = oldChildren[--oldEndIndex]\n    }\n\n    // 比较完两侧的节点，剩下就是 位置发生改变的节点 和 全新的节点\n\n    // 当 endVnode 和 oldStartVnode 值得 patch\n    // 说明元素被移到右边了\n    else if (isPatchable(endVnode, oldStartVnode)) {\n      patch(api, endVnode, oldStartVnode)\n      insertBefore(\n        api,\n        parentNode,\n        oldStartVnode.node,\n        api.next(oldEndVnode.node)\n      )\n      endVnode = children[--endIndex]\n      oldStartVnode = oldChildren[++oldStartIndex]\n    }\n\n    // 当 oldEndVnode 和 startVnode 值得 patch\n    // 说明元素被移到左边了\n    else if (isPatchable(startVnode, oldEndVnode)) {\n      patch(api, startVnode, oldEndVnode)\n      insertBefore(\n        api,\n        parentNode,\n        oldEndVnode.node,\n        oldStartVnode.node\n      )\n      startVnode = children[++startIndex]\n      oldEndVnode = oldChildren[--oldEndIndex]\n    }\n\n    // 尝试同级元素的 key\n    else {\n\n      if (!oldKeyToIndex) {\n        oldKeyToIndex = createKeyToIndex(oldChildren, oldStartIndex, oldEndIndex)\n      }\n\n      // 新节点之前的位置\n      oldIndex = startVnode.key\n        ? oldKeyToIndex[startVnode.key]\n        : env.UNDEFINED\n\n      // 移动元素\n      if (isDef(oldIndex)) {\n        patch(api, startVnode, oldChildren[oldIndex as number] as VNode)\n        oldChildren[oldIndex as number] = env.UNDEFINED\n      }\n      // 新元素\n      else {\n        createVnode(api, startVnode)\n      }\n\n      insertVnode(api, parentNode, startVnode, oldStartVnode)\n\n      startVnode = children[++startIndex]\n\n    }\n  }\n\n  if (oldStartIndex > oldEndIndex) {\n    addVnodes(\n      api,\n      parentNode,\n      children,\n      startIndex,\n      endIndex,\n      children[endIndex + 1]\n    )\n  }\n  else if (startIndex > endIndex) {\n    removeVnodes(\n      api,\n      parentNode,\n      oldChildren,\n      oldStartIndex,\n      oldEndIndex\n    )\n  }\n}\n\nexport function patch(api: API, vnode: VNode, oldVnode: VNode) {\n\n  if (vnode === oldVnode) {\n    return\n  }\n\n  const { node, data } = oldVnode\n\n  // 如果不能 patch，则删除重建\n  if (!isPatchable(vnode, oldVnode)) {\n    // 同步加载的组件，初始化时不会传入占位节点\n    // 它内部会自动生成一个注释节点，当它的根 vnode 和注释节点对比时，必然无法 patch\n    // 于是走进此分支，为新组件创建一个 DOM 节点，然后继续 createComponent 后面的流程\n    const parentNode = api.parent(node)\n    createVnode(api, vnode)\n    if (parentNode) {\n      insertVnode(api, parentNode, vnode, oldVnode)\n      removeVnode(api, parentNode, oldVnode)\n    }\n    return\n  }\n\n  vnode.node = node\n  vnode.data = data\n\n  // 组件正在异步加载，更新为最新的 vnode\n  // 当异步加载完成时才能用上最新的 vnode\n  if (oldVnode.isComponent && data[field.LOADING]) {\n    data[field.VNODE] = vnode\n    return\n  }\n\n  // 两棵静态子树就别折腾了\n  if (vnode.isStatic && oldVnode.isStatic) {\n    return\n  }\n\n  nativeAttr.update(api, vnode, oldVnode)\n  nativeProp.update(api, vnode, oldVnode)\n  component.update(vnode, oldVnode)\n  directive.update(vnode, oldVnode)\n\n  const { text, html, children, isStyle, isOption } = vnode,\n\n  oldText = oldVnode.text,\n  oldHtml = oldVnode.html,\n  oldChildren = oldVnode.children\n\n  if (is.string(text)) {\n    if (text !== oldText) {\n      api.text(node, text, isStyle, isOption)\n    }\n  }\n  else if (is.string(html)) {\n    if (html !== oldHtml) {\n      api.html(node as Element, html, isStyle, isOption)\n    }\n  }\n  // 两个都有需要 diff\n  else if (children && oldChildren) {\n    if (children !== oldChildren) {\n      updateChildren(api, node, children, oldChildren)\n    }\n  }\n  // 有新的没旧的 - 新增节点\n  else if (children) {\n    if (is.string(oldText) || is.string(oldHtml)) {\n      api.text(node, env.EMPTY_STRING, isStyle)\n    }\n    addVnodes(api, node, children)\n  }\n  // 有旧的没新的 - 删除节点\n  else if (oldChildren) {\n    removeVnodes(api, node, oldChildren)\n  }\n  // 有旧的 text 没有新的 text\n  else if (is.string(oldText) || is.string(oldHtml)) {\n    api.text(node, env.EMPTY_STRING, isStyle)\n  }\n\n}\n\nexport function create(api: API, node: Node, context: Yox, keypath: string): VNode {\n  return {\n    tag: api.tag(node),\n    data: createData(),\n    node,\n    context,\n    keypath,\n  }\n}\n\nexport function destroy(api: API, vnode: VNode, isRemove?: boolean) {\n  if (isRemove) {\n    const parentNode = api.parent(vnode.node)\n    if (parentNode) {\n      removeVnode(api, parentNode, vnode)\n    }\n    else if (process.env.NODE_ENV === 'development') {\n      logger.fatal(`Can't destroy vnode without parent node.`)\n    }\n  }\n  else {\n    destroyVnode(api, vnode)\n  }\n}\n","import * as is from '../util/is'\nimport isDef from './isDef'\n\nexport default function (target: any, defaultValue?: number): number {\n  return is.numeric(target)\n    ? +target\n    : isDef(defaultValue)\n      ? defaultValue as number\n      : 0\n}\n","/**\n * 字面量\n */\nexport const LITERAL = 1\n\n/**\n * 标识符\n */\nexport const IDENTIFIER = 2\n\n/**\n * 对象属性或数组下标\n */\nexport const MEMBER = 3\n\n/**\n * 一元表达式，如 - a\n */\nexport const UNARY = 4\n\n/**\n * 二元表达式，如 a + b\n */\nexport const BINARY = 5\n\n/**\n * 三元表达式，如 a ? b : c\n */\nexport const TERNARY = 6\n\n/**\n * 数组表达式，如 [ 1, 2, 3 ]\n */\nexport const ARRAY = 7\n\n/**\n * 对象表达式，如 { name: 'yox' }\n */\nexport const OBJECT = 8\n\n/**\n * 函数调用表达式，如 a()\n */\nexport const CALL = 9\n","export const unary = {\n  '+': { x(a: any) { return +a } },\n  '-': { x(a: any) { return -a } },\n  '~': { x(a: any) { return ~a } },\n  '!': { x(a: any) { return !a } },\n  '!!': { x(a: any) { return !!a } },\n}\n\n// 参考 https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence\nexport const binary = {\n  '*': { p: 14, x(a: any, b: any) { return a * b } },\n  '/': { p: 14, x(a: any, b: any) { return a / b } },\n  '%': { p: 14, x(a: any, b: any) { return a % b } },\n  '+': { p: 13, x(a: any, b: any) { return a + b } },\n  '-': { p: 13, x(a: any, b: any) { return a - b } },\n  '<<': { p: 12, x(a: any, b: any) { return a << b } },\n  '>>': { p: 12, x(a: any, b: any) { return a >> b } },\n  '>>>': { p: 12, x(a: any, b: any) { return a >>> b } },\n  '<': { p: 11, x(a: any, b: any) { return a < b } },\n  '<=': { p: 11, x(a: any, b: any) { return a <= b } },\n  '>': { p: 11, x(a: any, b: any) { return a > b } },\n  '>=': { p: 11, x(a: any, b: any) { return a >= b } },\n  '==': { p: 10, x(a: any, b: any) { return a == b } },\n  '!=': { p: 10, x(a: any, b: any) { return a != b } },\n  '===': { p: 10, x(a: any, b: any) { return a === b } },\n  '!==': { p: 10, x(a: any, b: any) { return a !== b } },\n  '&': { p: 9, x(a: any, b: any) { return a & b } },\n  '^': { p: 8, x(a: any, b: any) { return a ^ b } },\n  '|': { p: 7, x(a: any, b: any) { return a | b } },\n  '&&': { p: 6, x(a: any, b: any) { return a && b } },\n  '||': { p: 5, x(a: any, b: any) { return a || b } },\n}\n","export default function (target: any): string {\n  return JSON.stringify(target)\n}\n","import * as config from '../../yox-config/src/config'\nimport * as type from '../../yox-type/src/type'\n\nimport isDef from '../../yox-common/src/function/isDef'\nimport toJSON from '../../yox-common/src/function/toJSON'\n\nimport * as env from '../../yox-common/src/util/env'\nimport * as array from '../../yox-common/src/util/array'\nimport * as string from '../../yox-common/src/util/string'\nimport * as object from '../../yox-common/src/util/object'\n\nimport * as exprNodeType from '../../yox-expression-compiler/src/nodeType'\nimport * as nodeType from './nodeType'\n\nimport ExpressionNode from '../../yox-expression-compiler/src/node/Node'\nimport ExpressionIdentifier from '../../yox-expression-compiler/src/node/Identifier'\nimport ExpressionCall from '../../yox-expression-compiler/src/node/Call'\n\nimport Node from './node/Node'\nimport Text from './node/Text'\nimport Each from './node/Each'\nimport If from './node/If'\nimport ElseIf from './node/ElseIf'\nimport Element from './node/Element'\nimport Attribute from './node/Attribute'\nimport Directive from './node/Directive'\nimport Property from './node/Property'\nimport Expression from './node/Expression'\nimport Import from './node/Import'\nimport Partial from './node/Partial'\nimport Spread from './node/Spread'\n\n/**\n * 这里的难点在于处理 Element 的 children，举个例子：\n *\n * ['1', _x(expr), _l(expr, index, generate), _x(expr) ? ['1', _x(expr), _l(expr, index, generate)] : y]\n *\n * children 用数组表示，其中表达式求出的值可能是任意类型，比如数组或对象，我们无法控制表达式的值最终会是什么类型\n *\n * 像 each 或 import 这样的语法，内部其实会产生一个 vnode 数组，这里就出现了两个难点：\n *\n * 1. 如何区分 each 或其他语法产生的数组和表达式求值的数组\n * 2. 如何避免频繁的创建数组\n *\n * 我能想到的解决方案是，根据当前节点类型，如果是元素，则确保 children 的每一项的值序列化后都是函数调用的形式\n *\n * 这样能确保是从左到右依次执行，也就便于在内部创建一个公共数组，执行一个函数就收集一个值，而不管那个值到底是什么类型\n *\n */\n\n// 是否要执行 join 操作\nconst joinStack: boolean[] = [],\n\n// 是否正在收集子节点\ncollectStack: (boolean | void)[] = [],\n\nnodeStringify = {},\n\nRENDER_SLOT = 'a',\n\nRENDER_EACH = 'b',\n\nRENDER_EXPRESSION = 'c',\n\nRENDER_EXPRESSION_ARG = 'd',\n\nRENDER_EXPRESSION_VNODE = 'e',\n\nRENDER_TEXT_VNODE = 'f',\n\nRENDER_ATTRIBUTE_VNODE = 'g',\n\nRENDER_PROPERTY_VNODE = 'h',\n\nRENDER_LAZY_VNODE = 'i',\n\nRENDER_TRANSITION_VNODE = 'j',\n\nRENDER_MODEL_VNODE = 'k',\n\nRENDER_EVENT_METHOD_VNODE = 'l',\n\nRENDER_EVENT_NAME_VNODE = 'm',\n\nRENDER_DIRECTIVE_VNODE = 'n',\n\nRENDER_SPREAD_VNODE = 'o',\n\nRENDER_ELEMENT_VNODE = 'p',\n\nRENDER_PARTIAL = 'q',\n\nRENDER_IMPORT = 'r',\n\nARG_CONTEXT = 's',\n\nSEP_COMMA = ',',\n\nSEP_COLON = ':',\n\nSEP_PLUS = '+',\n\nSEP_AND = '&&',\n\nSTRING_TRUE = '!0',\n\nSTRING_FALSE = '!1',\n\nSTRING_EMPTY = toJSON(env.EMPTY_STRING),\n\nCODE_RETURN = 'return '\n\n// 序列化代码的前缀\nlet codePrefix: string | void,\n\n// 表达式求值是否要求返回字符串类型\nisStringRequired: boolean | void\n\nfunction getCodePrefix() {\n  if (!codePrefix) {\n    codePrefix = `function(${\n      array.join([\n        RENDER_EXPRESSION,\n        RENDER_EXPRESSION_ARG,\n        RENDER_EXPRESSION_VNODE,\n        RENDER_TEXT_VNODE,\n        RENDER_ATTRIBUTE_VNODE,\n        RENDER_PROPERTY_VNODE,\n        RENDER_LAZY_VNODE,\n        RENDER_TRANSITION_VNODE,\n        RENDER_MODEL_VNODE,\n        RENDER_EVENT_METHOD_VNODE,\n        RENDER_EVENT_NAME_VNODE,\n        RENDER_DIRECTIVE_VNODE,\n        RENDER_SPREAD_VNODE,\n        RENDER_ELEMENT_VNODE,\n        RENDER_SLOT,\n        RENDER_PARTIAL,\n        RENDER_IMPORT,\n        RENDER_EACH\n      ], SEP_COMMA)\n    }){${CODE_RETURN}`\n  }\n  return codePrefix\n}\n\n/**\n * 目的是 保证调用参数顺序稳定，减少运行时判断\n */\nfunction trimArgs(list: (string | void)[]) {\n\n  let args: string[] = [], removable = env.TRUE\n\n  array.each(\n    list,\n    function (arg: string | void) {\n      if (isDef(arg)) {\n        removable = env.FALSE\n        array.unshift(args, arg as string)\n      }\n      else if (!removable) {\n        array.unshift(args, STRING_FALSE)\n      }\n    },\n    env.TRUE\n  )\n\n  return args\n\n}\n\nfunction stringifyObject(obj: Object): string {\n  const fields: string[] = []\n  object.each(\n    obj,\n    function (value: any, key: string) {\n      if (isDef(value)) {\n        array.push(\n          fields,\n          `${toJSON(key)}${SEP_COLON}${value}`\n        )\n      }\n    }\n  )\n  return `{${array.join(fields, SEP_COMMA)}}`\n}\n\nfunction stringifyArray(arr: any[]): string {\n  return `[${array.join(arr, SEP_COMMA)}]`\n}\n\nfunction stringifyCall(name: string, args: (string | void)[]): string {\n  return `${name}(${array.join(trimArgs(args), SEP_COMMA)})`\n}\n\nfunction stringifyFunction(result: string | void, arg?: string): string {\n  return `function(${arg || env.EMPTY_STRING}){${result || env.EMPTY_STRING}}`\n}\n\nfunction stringifyGroup(code: string): string {\n  return `(${code})`\n}\n\nfunction stringifyExpression(renderName: string, expr: ExpressionNode, extra?: any): string {\n  return stringifyCall(renderName, [toJSON(expr), extra])\n}\n\nfunction stringifyExpressionArg(expr: ExpressionNode): string {\n  return stringifyExpression(\n    RENDER_EXPRESSION_ARG,\n    expr,\n    ARG_CONTEXT\n  )\n}\n\nfunction stringifyValue(value: any, expr: ExpressionNode | void, children: Node[] | void): string | void {\n  if (isDef(value)) {\n    return toJSON(value)\n  }\n  // 只有一个表达式时，保持原始类型\n  if (expr) {\n    return stringifyExpression(RENDER_EXPRESSION, expr)\n  }\n  // 多个值拼接时，要求是字符串\n  if (children) {\n    isStringRequired = children.length > 1\n    return stringifyChildren(children)\n  }\n}\n\nfunction stringifyChildren(children: Node[], isComplex: boolean | void): string {\n  // 如果是复杂节点的 children，则每个 child 的序列化都是函数调用的形式\n  // 因此最后可以拼接为 fn1(), fn2(), fn3() 这样依次调用，而不用再多此一举的使用数组，因为在 renderer 里也用不上这个数组\n\n  // children 大于一个时，才有 join 的可能，单个值 jion 啥啊...\n  const isJoin = children.length > 1 && !isComplex\n\n  array.push(joinStack, isJoin)\n  const value = array.join(\n    children.map(\n      function (child: Node) {\n        return nodeStringify[child.type](child)\n      }\n    ),\n    isJoin ? SEP_PLUS : SEP_COMMA\n  )\n  array.pop(joinStack)\n\n  return value\n\n}\n\nfunction stringifyConditionChildren(children: Node[] | void, isComplex: boolean | void): string | void {\n  if (children) {\n    const result = stringifyChildren(children, isComplex)\n    return children.length > 1 && isComplex\n      ? stringifyGroup(result)\n      : result\n  }\n}\n\nfunction stringifyIf(node: If | ElseIf, stub: boolean | void) {\n\n  let { children, isComplex, next } = node,\n\n  test = stringifyExpression(RENDER_EXPRESSION, node.expr),\n\n  yes = stringifyConditionChildren(children, isComplex),\n\n  no: string | void,\n\n  result: string\n\n  if (next) {\n    no = next.type === nodeType.ELSE\n      ? stringifyConditionChildren(next.children, next.isComplex)\n      : stringifyIf(next as ElseIf, stub)\n  }\n  // 到达最后一个条件，发现第一个 if 语句带有 stub，需创建一个注释标签占位\n  else if (stub) {\n    no = renderElement(\n      stringifyObject({\n        isComment: STRING_TRUE,\n        text: STRING_EMPTY,\n      })\n    )\n  }\n\n  if (isDef(yes) || isDef(no)) {\n\n    const isJoin = array.last(joinStack)\n\n    if (isJoin) {\n      if (!isDef(yes)) {\n        yes = STRING_EMPTY\n      }\n      if (!isDef(no)) {\n        no = STRING_EMPTY\n      }\n    }\n\n    if (!isDef(no)) {\n      result = `${test}${SEP_AND}${yes}`\n    }\n    else if (!isDef(yes)) {\n      result = `!${test}${SEP_AND}${no}`\n    }\n    else {\n      result = `${test}?${yes}:${no}`\n    }\n\n    // 如果是连接操作，因为 ?: 优先级最低，因此要加 ()\n    return isJoin\n      ? stringifyGroup(result)\n      : result\n\n  }\n\n  return STRING_EMPTY\n\n}\n\nfunction renderElement(data: string, tag: string | void, attrs: string | void, childs: string | void, slots: string | void): string {\n  return stringifyCall(\n    RENDER_ELEMENT_VNODE,\n    [data, tag, attrs, childs, slots]\n  )\n}\n\nfunction getComponentSlots(children: Node[]): string | void {\n\n  const result: Record<string, string> = {},\n\n  slots: Record<string, Node[]> = {},\n\n  addSlot = function (name: string, nodes: Node[] | void) {\n\n    if (!array.falsy(nodes)) {\n      name = config.SLOT_DATA_PREFIX + name\n      array.push(\n        slots[name] || (slots[name] = []),\n        nodes as Node[]\n      )\n    }\n\n  }\n\n  array.each(\n    children,\n    function (child: Node) {\n      // 找到具名 slot\n      if (child.type === nodeType.ELEMENT) {\n        const element = child as Element\n        if (element.slot) {\n          addSlot(\n            element.slot,\n            element.tag === env.RAW_TEMPLATE\n              ? element.children\n              : [element]\n          )\n          return\n        }\n      }\n\n      // 匿名 slot，名称统一为 children\n      addSlot(config.SLOT_NAME_DEFAULT, [child])\n\n    }\n  )\n\n  object.each(\n    slots,\n    function (children: any, name: string) {\n      // 强制为复杂节点，因为 slot 的子节点不能用字符串拼接的方式来渲染\n      result[name] = stringifyFunction(\n        stringifyChildren(children, env.TRUE)\n      )\n    }\n  )\n\n  if (!object.falsy(result)) {\n    return stringifyObject(result)\n  }\n\n}\n\nnodeStringify[nodeType.ELEMENT] = function (node: Element): string {\n\n  let { tag, isComponent, isSvg, isStyle, isOption, isStatic, isComplex, name, ref, key, html, attrs, children } = node,\n\n  data: type.data = {},\n\n  outputTag: string | void,\n\n  outputAttrs: string[] = [],\n\n  outputChilds: string | void,\n\n  outputSlots: string | void\n\n  if (tag === env.RAW_SLOT) {\n    const args = [toJSON(config.SLOT_DATA_PREFIX + name)]\n    if (children) {\n      array.push(\n        args,\n        stringifyFunction(\n          stringifyChildren(children, env.TRUE)\n        )\n      )\n    }\n    return stringifyCall(RENDER_SLOT, args)\n  }\n\n  array.push(collectStack, env.FALSE)\n\n  if (attrs) {\n    array.each(\n      attrs,\n      function (attr: Node) {\n        array.push(\n          outputAttrs,\n          nodeStringify[attr.type](attr)\n        )\n      }\n    )\n  }\n\n  // 如果以 $ 开头，表示动态组件\n  if (string.codeAt(tag) === 36) {\n    outputTag = toJSON(string.slice(tag, 1))\n  }\n  else {\n    data.tag = toJSON(tag)\n  }\n\n  if (isSvg) {\n    data.isSvg = STRING_TRUE\n  }\n\n  if (isStyle) {\n    data.isStyle = STRING_TRUE\n  }\n\n  if (isOption) {\n    data.isOption = STRING_TRUE\n  }\n\n  if (isStatic) {\n    data.isStatic = STRING_TRUE\n  }\n\n  if (ref) {\n    data.ref = stringifyValue(ref.value, ref.expr, ref.children)\n  }\n\n  if (key) {\n    data.key = stringifyValue(key.value, key.expr, key.children)\n  }\n\n  if (html) {\n    data.html = stringifyExpression(RENDER_EXPRESSION, html, STRING_TRUE)\n  }\n\n  if (isComponent) {\n    data.isComponent = STRING_TRUE\n    if (children) {\n      collectStack[collectStack.length - 1] = env.TRUE\n      outputSlots = getComponentSlots(children)\n    }\n  }\n  else if (children) {\n    isStringRequired = env.TRUE\n    collectStack[collectStack.length - 1] = isComplex\n    outputChilds = stringifyChildren(children, isComplex)\n    if (isComplex) {\n      outputChilds = stringifyFunction(outputChilds)\n    }\n    else {\n      data.text = outputChilds\n      outputChilds = env.UNDEFINED\n    }\n  }\n\n  array.pop(collectStack)\n\n  return renderElement(\n    stringifyObject(data),\n    outputTag,\n    array.falsy(outputAttrs)\n      ? env.UNDEFINED\n      : stringifyFunction(\n          array.join(outputAttrs, SEP_COMMA)\n        ),\n    outputChilds,\n    outputSlots\n  )\n\n}\n\nnodeStringify[nodeType.ATTRIBUTE] = function (node: Attribute): string {\n  const { binding } = node\n  return stringifyCall(\n    RENDER_ATTRIBUTE_VNODE,\n    [\n      toJSON(node.name),\n      binding ? STRING_TRUE : env.UNDEFINED,\n      binding ? toJSON(node.expr) : env.UNDEFINED,\n      binding ? env.UNDEFINED : stringifyValue(node.value, node.expr, node.children)\n    ]\n  )\n}\n\nnodeStringify[nodeType.PROPERTY] = function (node: Property): string {\n  const { binding } = node\n  return stringifyCall(\n    RENDER_PROPERTY_VNODE,\n    [\n      toJSON(node.name),\n      toJSON(node.hint),\n      binding ? STRING_TRUE : env.UNDEFINED,\n      binding ? toJSON(node.expr) : env.UNDEFINED,\n      binding ? env.UNDEFINED : stringifyValue(node.value, node.expr, node.children)\n    ]\n  )\n}\n\nnodeStringify[nodeType.DIRECTIVE] = function (node: Directive): string {\n\n  const { ns, name, key, value, expr } = node\n\n  if (ns === config.DIRECTIVE_LAZY) {\n    return stringifyCall(\n      RENDER_LAZY_VNODE,\n      [toJSON(name), toJSON(value)]\n    )\n  }\n\n  if (ns === env.RAW_TRANSITION) {\n    return stringifyCall(\n      RENDER_TRANSITION_VNODE,\n      [toJSON(value)]\n    )\n  }\n\n  // <input model=\"id\">\n  if (ns === config.DIRECTIVE_MODEL) {\n    return stringifyCall(\n      RENDER_MODEL_VNODE,\n      [toJSON(expr)]\n    )\n  }\n\n  let renderName = RENDER_DIRECTIVE_VNODE,\n\n  args: (string | undefined)[] = [\n    toJSON(name),\n    toJSON(key),\n    toJSON(value),\n  ]\n\n  // 尽可能把表达式编译成函数，这样对外界最友好\n  //\n  // 众所周知，事件指令会编译成函数，对于自定义指令来说，也要尽可能编译成函数\n  //\n  // 比如 o-tap=\"method()\" 或 o-log=\"{'id': '11'}\"\n  // 前者会编译成 handler（调用方法），后者会编译成 getter（取值）\n\n  if (expr) {\n\n    // 如果表达式明确是在调用方法，则序列化成 method + args 的形式\n    if (expr.type === exprNodeType.CALL) {\n      if (ns === config.DIRECTIVE_EVENT) {\n        renderName = RENDER_EVENT_METHOD_VNODE\n      }\n      // compiler 保证了函数调用的 name 是标识符\n      array.push(\n        args,\n        toJSON(((expr as ExpressionCall).name as ExpressionIdentifier).name)\n      )\n      // 为了实现运行时动态收集参数，这里序列化成函数\n      if (!array.falsy((expr as ExpressionCall).args)) {\n        // args 函数在触发事件时调用，调用时会传入它的作用域，因此这里要加一个参数\n        array.push(\n          args,\n          stringifyFunction(\n            CODE_RETURN + stringifyArray((expr as ExpressionCall).args.map(stringifyExpressionArg)),\n            ARG_CONTEXT\n          )\n        )\n      }\n    }\n    // 不是调用方法，就是事件转换\n    else if (ns === config.DIRECTIVE_EVENT) {\n      renderName = RENDER_EVENT_NAME_VNODE\n      array.push(\n        args,\n        toJSON(expr.raw)\n      )\n    }\n    else if (ns === config.DIRECTIVE_CUSTOM) {\n\n      // 取值函数\n      // getter 函数在触发事件时调用，调用时会传入它的作用域，因此这里要加一个参数\n      if (expr.type !== exprNodeType.LITERAL) {\n        array.push(args, env.UNDEFINED) // method\n        array.push(args, env.UNDEFINED) // args\n        array.push(\n          args,\n          stringifyFunction(\n            CODE_RETURN + stringifyExpressionArg(expr),\n            ARG_CONTEXT\n          )\n        )\n      }\n\n    }\n\n  }\n\n  return stringifyCall(renderName, args)\n\n}\n\nnodeStringify[nodeType.SPREAD] = function (node: Spread): string {\n  return stringifyCall(\n    RENDER_SPREAD_VNODE,\n    [toJSON(node.expr), node.binding ? STRING_TRUE : env.UNDEFINED]\n  )\n}\n\nnodeStringify[nodeType.TEXT] = function (node: Text): string {\n\n  const result = toJSON(node.text)\n\n  if (array.last(collectStack) && !array.last(joinStack)) {\n    return stringifyCall(\n      RENDER_TEXT_VNODE,\n      [result]\n    )\n  }\n\n  return result\n}\n\nnodeStringify[nodeType.EXPRESSION] = function (node: Expression): string {\n\n  // 强制保留 isStringRequired 参数，减少运行时判断参数是否存在\n  // 因为还有 stack 参数呢，各种判断真的很累\n\n  return stringifyExpression(\n    array.last(collectStack) && !array.last(joinStack)\n      ? RENDER_EXPRESSION_VNODE\n      : RENDER_EXPRESSION,\n    node.expr,\n    isStringRequired ? STRING_TRUE : env.UNDEFINED\n  )\n}\n\nnodeStringify[nodeType.IF] = function (node: If): string {\n  return stringifyIf(node, node.stub)\n}\n\nnodeStringify[nodeType.EACH] = function (node: Each): string {\n\n  return stringifyCall(\n    RENDER_EACH,\n    [\n      // compiler 保证了 children 一定有值\n      stringifyFunction(\n        stringifyChildren(node.children as Node[], node.isComplex)\n      ),\n      toJSON(node.from),\n      node.to ? toJSON(node.to) : env.UNDEFINED,\n      node.equal ? STRING_TRUE : env.UNDEFINED,\n      node.index ? toJSON(node.index) : env.UNDEFINED\n    ]\n  )\n\n}\n\nnodeStringify[nodeType.PARTIAL] = function (node: Partial): string {\n\n  return stringifyCall(\n    RENDER_PARTIAL,\n    [\n      toJSON(node.name),\n      // compiler 保证了 children 一定有值\n      stringifyFunction(\n        stringifyChildren(node.children as Node[], node.isComplex)\n      )\n    ]\n  )\n\n}\n\nnodeStringify[nodeType.IMPORT] = function (node: Import): string {\n\n  return stringifyCall(\n    RENDER_IMPORT,\n    [toJSON(node.name)]\n  )\n\n}\n\nexport function stringify(node: Node): string {\n  return getCodePrefix() + nodeStringify[node.type](node) + '}'\n}\n\nexport function hasStringify(code: string): boolean {\n  return string.startsWith(code, getCodePrefix())\n}","import * as env from '../util/env'\n\nexport default function (target: any): boolean {\n  return target === env.UNDEFINED\n}\n","import isDef from '../../yox-common/src/function/isDef'\nimport isUndef from '../../yox-common/src/function/isUndef'\nimport invoke from '../../yox-common/src/function/execute'\n\nimport * as env from '../../yox-common/src/util/env'\nimport * as array from '../../yox-common/src/util/array'\nimport * as object from '../../yox-common/src/util/object'\nimport * as keypathUtil from '../../yox-common/src/util/keypath'\n\nimport * as nodeType from './nodeType'\nimport * as interpreter from './interpreter'\n\nimport Node from './node/Node'\nimport Keypath from './node/Keypath'\nimport Identifier from './node/Identifier'\nimport Literal from './node/Literal'\nimport Member from './node/Member'\nimport Ternary from './node/Ternary'\nimport Binary from './node/Binary'\nimport Unary from './node/Unary'\nimport Call from './node/Call'\n\nimport ArrayNode from './node/Array'\nimport ObjectNode from './node/Object'\n\ntype Getter = (keypath: string, node: Keypath) => any\n\nexport function execute(node: Node, getter?: Getter, context?: any): any {\n\n  switch (node.type) {\n\n    case nodeType.LITERAL:\n      return (node as Literal).value\n\n    case nodeType.IDENTIFIER:\n      return (getter as Getter)((node as Identifier).name, (node as Identifier))\n\n    case nodeType.UNARY:\n      return interpreter.unary[(node as Unary).op].x(\n        execute((node as Unary).a, getter, context)\n      )\n\n    case nodeType.BINARY:\n      return interpreter.binary[(node as Binary).op].x(\n        execute((node as Binary).a, getter, context),\n        execute((node as Binary).b, getter, context)\n      )\n\n    case nodeType.TERNARY:\n      return execute((node as Ternary).test, getter, context)\n        ? execute((node as Ternary).yes, getter, context)\n        : execute((node as Ternary).no, getter, context)\n\n    case nodeType.ARRAY:\n      return (node as ArrayNode).nodes.map(\n        function (node) {\n          return execute(node, getter, context)\n        }\n      )\n\n    case nodeType.OBJECT:\n      const result = {}\n      array.each(\n        (node as ObjectNode).keys,\n        function (key: string, index: number) {\n          result[key] = execute((node as ObjectNode).values[index], getter, context)\n        }\n      )\n      return result\n\n    case nodeType.CALL:\n      return invoke(\n        execute((node as Call).name, getter, context),\n        context,\n        (node as Call).args.map(\n          function (node) {\n            return execute(node, getter, context)\n          }\n        )\n      )\n\n    case nodeType.MEMBER:\n\n      /**\n       * 先说第一种奇葩情况：\n       *\n       * 'xx'.length\n       *\n       * 没有变量数据，直接执行字面量，这里用不上 getter\n       *\n       * 第二种：\n       *\n       * a.b.c\n       *\n       * 这是常规操作\n       *\n       * 第三种：\n       *\n       * 'xx'[name]\n       *\n       * 以字面量开头，后面会用到变量\n       *\n       */\n\n      let staticKeypath = (node as Member).sk, props = (node as Member).props, first: any, data: any\n\n      if (isUndef(staticKeypath)) {\n\n        // props 至少两个，否则无法创建 Member\n        first = props[0]\n\n        if (first.type === nodeType.IDENTIFIER) {\n          staticKeypath = (first as Identifier).name\n        }\n        else {\n          staticKeypath = env.EMPTY_STRING\n          data = execute(first, getter, context)\n        }\n\n        for (let i = 1, len = props.length; i < len; i++) {\n          staticKeypath = keypathUtil.join(\n            staticKeypath,\n            execute(props[i], getter, context)\n          )\n        }\n\n      }\n\n      if (isDef(data)) {\n        data = object.get(data, staticKeypath as string)\n        return data ? data.value : env.UNDEFINED\n      }\n\n      if (getter) {\n        return getter(staticKeypath as string, (node as Member))\n      }\n  }\n\n}\n","import * as config from '../../yox-config/src/config'\nimport * as type from '../../yox-type/src/type'\n\nimport isDef from '../../yox-common/src/function/isDef'\nimport isUndef from '../../yox-common/src/function/isUndef'\nimport execute from '../../yox-common/src/function/execute'\nimport toString from '../../yox-common/src/function/toString'\n\nimport * as is from '../../yox-common/src/util/is'\nimport * as env from '../../yox-common/src/util/env'\nimport * as array from '../../yox-common/src/util/array'\nimport * as object from '../../yox-common/src/util/object'\nimport * as logger from '../../yox-common/src/util/logger'\nimport * as keypathUtil from '../../yox-common/src/util/keypath'\n\nimport CustomEvent from '../../yox-common/src/util/CustomEvent'\n\nimport ExpressionNode from '../../yox-expression-compiler/src/node/Node'\nimport Keypath from '../../yox-expression-compiler/src/node/Keypath'\n\nimport * as exprExecutor from '../../yox-expression-compiler/src/executor'\n\nimport Yox from '../../yox-type/src/interface/Yox'\nimport VNode from '../../yox-type/src/vnode/VNode'\nimport DirectiveHooks from '../../yox-type/src/hooks/Directive'\nimport TransitionHooks from '../../yox-type/src/hooks/Transition'\n\nfunction setPair(target: any, name: string, key: string, value: any) {\n  const data = target[name] || (target[name] = {})\n  data[key] = value\n}\n\nexport function render(\n  context: Yox,\n  template: Function,\n  filters: Record<string, Function>,\n  partials: Record<string, Function>,\n  directives: Record<string, DirectiveHooks>,\n  transitions: Record<string, TransitionHooks>\n) {\n\n  let $scope: type.data = { $keypath: env.EMPTY_STRING },\n\n  $stack = [ $scope ],\n\n  $vnode: any,\n\n  vnodeStack: VNode[][] = [],\n\n  localPartials: Record<string, Function> = {},\n\n  lookup = function (stack: any[], index: number, key: string, node: Keypath, depIgnore?: boolean, defaultKeypath?: string) {\n\n    let scope = stack[index], keypath = keypathUtil.join(scope.$keypath, key)\n\n    node.ak = keypath\n\n    // 如果最后还是取不到值，用回最初的 keypath\n    if (isUndef(defaultKeypath)) {\n      defaultKeypath = keypath\n    }\n\n    // 如果取的是 scope 上直接有的数据，如 $keypath\n    if (isDef(scope[key])) {\n      return scope[key]\n    }\n\n    // 如果取的是数组项，则要更进一步\n    if (isDef(scope.$item)) {\n      scope = scope.$item\n\n      // 到这里 scope 可能为空\n      // 比如 new Array(10) 然后遍历这个数组，每一项肯定是空\n\n      // 取 this\n      if (key === env.EMPTY_STRING) {\n        return scope\n      }\n      // 取 this.xx\n      if (scope != env.NULL && isDef(scope[key])) {\n        return scope[key]\n      }\n    }\n\n    // 正常取数据\n    const result = context.get(keypath, lookup, depIgnore)\n    if (result === lookup) {\n      // undefined 或 true 都表示需要向上寻找\n      if (node.lookup !== env.FALSE && index > 0) {\n        if (process.env.NODE_ENV === 'development') {\n          logger.debug(`Can't find [${keypath}], start looking up.`)\n        }\n        return lookup(stack, index - 1, key, node, depIgnore, defaultKeypath)\n      }\n      const holder = object.get(filters, key)\n      return holder\n        ? holder.value\n        : (node.ak = defaultKeypath, env.UNDEFINED)\n    }\n\n    return result\n\n  },\n\n  getValue = function (expr: ExpressionNode, depIgnore?: boolean, stack?: any[]): any {\n\n    const renderStack = stack || $stack,\n\n    { length } = renderStack\n\n    return exprExecutor.execute(\n      expr,\n      function (keypath: string, node: Keypath): any {\n        return lookup(\n          renderStack,\n          length - ((node.offset || 0) + 1),\n          keypath,\n          node,\n          depIgnore\n        )\n      },\n      context\n    )\n\n  },\n\n  addBinding = function (vnode: type.data, name: string, expr: Keypath, hint?: type.hint): any {\n\n    const value = getValue(expr, env.TRUE),\n\n    key = keypathUtil.join(config.DIRECTIVE_BINDING, name)\n\n    setPair(\n      vnode,\n      'directives',\n      key,\n      {\n        ns: config.DIRECTIVE_BINDING,\n        name,\n        key,\n        hooks: directives[config.DIRECTIVE_BINDING],\n        binding: expr.ak,\n        hint,\n      }\n    )\n\n    return value\n\n  },\n\n  createEventListener = function (type: string): type.listener {\n    return function (event: CustomEvent, data?: type.data) {\n      // 事件名称相同的情况，只可能是监听 DOM 事件，比如写一个 Button 组件\n      // <button on-click=\"click\"> 纯粹的封装了一个原生 click 事件\n      if (type !== event.type) {\n        event = new CustomEvent(type, event)\n      }\n      context.fire(event, data)\n    }\n  },\n\n  createMethodListener = function (\n    name: string,\n    args: Function | void,\n    stack: any[]\n  ): type.listener {\n    return function (event: CustomEvent, data?: type.data) {\n\n      const method = context[name]\n\n      if (event instanceof CustomEvent) {\n\n        let result: any = env.UNDEFINED\n\n        if (args) {\n          const scope = array.last(stack)\n          if (scope) {\n            scope.$event = event\n            scope.$data = data\n            result = execute(method, context, args(stack))\n            scope.$event =\n            scope.$data = env.UNDEFINED\n          }\n        }\n        else {\n          result = execute(method, context, data ? [event, data] : event)\n        }\n\n        return result\n\n      }\n      else {\n        execute(\n          method,\n          context,\n          args ? args(stack) : env.UNDEFINED\n        )\n      }\n\n    }\n  },\n\n  createGetter = function (getter: Function, stack: any[]): type.getter {\n    return function () {\n      return getter(stack)\n    }\n  },\n\n  renderExpression = function (expr: ExpressionNode, stringRequired: boolean | void): any {\n    const value = getValue(expr)\n    return stringRequired\n      ? toString(value)\n      : value\n  },\n\n  renderExpressionArg = function (expr: ExpressionNode, stack: any[]): any {\n    return getValue(expr, env.UNDEFINED, stack)\n  },\n\n  renderExpressionVnode = function (expr: ExpressionNode, stringRequired: boolean) {\n    renderTextVnode(\n      renderExpression(expr, stringRequired)\n    )\n  },\n\n  renderTextVnode = function (text: string) {\n    const vnodeList = array.last(vnodeStack)\n    if (vnodeList) {\n      const lastVnode = array.last(vnodeList)\n      if (lastVnode && lastVnode.isText) {\n        (lastVnode.text as string) += text\n      }\n      else {\n        const textVnode: any = {\n          isText: env.TRUE,\n          text,\n          context,\n          keypath: $scope.$keypath,\n        }\n        array.push(vnodeList, textVnode)\n      }\n    }\n  },\n\n  renderAttributeVnode = function (name: string, binding: boolean | void, expr: Keypath | void, value: string | void) {\n    if (binding) {\n      value = addBinding($vnode, name, expr as Keypath)\n    }\n    if ($vnode.isComponent) {\n      setPair($vnode, 'props', name, value)\n    }\n    else {\n      setPair($vnode, 'nativeAttrs', name, { name, value })\n    }\n  },\n\n  renderPropertyVnode = function (name: string, hint: type.hint, binding: boolean | void, expr: Keypath | void, value: any | void) {\n    if (binding) {\n      value = addBinding($vnode, name, expr as Keypath, hint)\n    }\n    setPair($vnode, 'nativeProps', name, { name, value, hint })\n  },\n\n  renderLazyVnode = function (name: string, value: type.lazy) {\n    setPair($vnode, 'lazy', name, value)\n  },\n\n  renderTransitionVnode = function (name: string) {\n    $vnode.transition = transitions[name]\n    if (process.env.NODE_ENV === 'development') {\n      if (!$vnode.transition) {\n        logger.fatal(`transition [${name}] is not found.`)\n      }\n    }\n  },\n\n  renderModelVnode = function (expr: Keypath) {\n\n    $vnode.model = getValue(expr, env.TRUE)\n\n    setPair(\n      $vnode,\n      'directives',\n      config.DIRECTIVE_MODEL,\n      {\n        ns: config.DIRECTIVE_MODEL,\n        name: env.EMPTY_STRING,\n        key: config.DIRECTIVE_MODEL,\n        binding: expr.ak,\n        hooks: directives[config.DIRECTIVE_MODEL]\n      }\n    )\n  },\n\n  renderEventMethodVnode = function (\n    name: string, key: string, value: string,\n    method: string, args: Function | void\n  ) {\n    setPair(\n      $vnode,\n      'directives',\n      key,\n      {\n        ns: config.DIRECTIVE_EVENT,\n        name,\n        key,\n        value,\n        hooks: directives[config.DIRECTIVE_EVENT],\n        handler: createMethodListener(method as string, args, $stack)\n      }\n    )\n  },\n\n  renderEventNameVnode = function (\n    name: string, key: string, value: string,\n    event: string\n  ) {\n    setPair(\n      $vnode,\n      'directives',\n      key,\n      {\n        ns: config.DIRECTIVE_EVENT,\n        name,\n        key,\n        value,\n        hooks: directives[config.DIRECTIVE_EVENT],\n        handler: createEventListener(event)\n      }\n    )\n  },\n\n  renderDirectiveVnode = function (\n    name: string, key: string, value: string,\n    method: string | void, args: Function | void, getter: Function | void\n  ) {\n\n    const hooks = directives[name]\n\n    if (process.env.NODE_ENV === 'development') {\n      if (!hooks) {\n        logger.fatal(`directive [${name}] is not found.`)\n      }\n    }\n\n    setPair(\n      $vnode,\n      'directives',\n      key,\n      {\n        ns: config.DIRECTIVE_CUSTOM,\n        name,\n        key,\n        value,\n        hooks,\n        getter: getter ? createGetter(getter, $stack) : env.UNDEFINED,\n        handler: method ? createMethodListener(method, args, $stack) : env.UNDEFINED,\n      }\n    )\n\n  },\n\n  renderSpreadVnode = function (expr: ExpressionNode, binding?: boolean) {\n\n    const value = getValue(expr, binding)\n\n    // 数组也算一种对象，要排除掉\n    if (is.object(value) && !is.array(value)) {\n\n      object.each(\n        value,\n        function (value: any, key: string) {\n          setPair($vnode, 'props', key, value)\n        }\n      )\n\n      const absoluteKeypath = expr['ak']\n      if (absoluteKeypath) {\n        const key = keypathUtil.join(config.DIRECTIVE_BINDING, absoluteKeypath)\n        setPair(\n          $vnode,\n          'directives',\n          key,\n          {\n            ns: config.DIRECTIVE_BINDING,\n            name: env.EMPTY_STRING,\n            key,\n            hooks: directives[config.DIRECTIVE_BINDING],\n            binding: keypathUtil.join(absoluteKeypath, env.RAW_WILDCARD),\n          }\n        )\n      }\n\n    }\n    else if (process.env.NODE_ENV === 'development') {\n      logger.warn(`[${expr.raw}] 不是对象，延展个毛啊`)\n    }\n\n  },\n\n  renderElementVnode = function (\n    vnode: type.data,\n    tag: string | void,\n    attrs: Function | void,\n    childs: Function | void,\n    slots: Record<string, Function> | void\n  ) {\n\n    if (tag) {\n      const componentName = context.get(tag)\n      if (process.env.NODE_ENV === 'development') {\n        if (!componentName) {\n          logger.warn(`Dynamic component [${tag}] is not found.`)\n        }\n      }\n      vnode.tag = componentName\n    }\n\n    if (attrs) {\n      $vnode = vnode\n      attrs()\n      $vnode = env.UNDEFINED\n    }\n\n    // childs 和 slots 不可能同时存在\n    if (childs) {\n      vnodeStack.push(vnode.children = [])\n      childs()\n      array.pop(vnodeStack)\n    }\n    else if (slots) {\n      const renderSlots = {}\n      object.each(\n        slots,\n        function (slot: Function, name: string) {\n          vnodeStack.push([])\n          slot()\n          const vnodes = array.pop(vnodeStack) as VNode[]\n          renderSlots[name] = vnodes.length ? vnodes : env.UNDEFINED\n        }\n      )\n      vnode.slots = renderSlots\n    }\n\n    vnode.context = context\n    vnode.keypath = $scope.$keypath\n\n    const vnodeList = array.last(vnodeStack)\n    if (vnodeList) {\n      array.push(vnodeList, vnode)\n    }\n\n    return vnode\n\n  },\n\n  // <slot name=\"xx\"/>\n  renderSlot = function (name: string, defaultRender?: Function) {\n\n    const vnodeList = array.last(vnodeStack),\n\n    vnodes = context.get(name)\n\n    if (vnodeList) {\n      if (vnodes) {\n        array.each(\n          vnodes,\n          function (vnode: VNode) {\n            array.push(vnodeList, vnode)\n            vnode.slot = name\n            vnode.parent = context\n          }\n        )\n      }\n      else if (defaultRender) {\n        defaultRender()\n      }\n    }\n\n  },\n\n  // {{#partial name}}\n  //   xx\n  // {{/partial}}\n  renderPartial = function (name: string, render: Function) {\n    localPartials[name] = render\n  },\n\n  // {{> name}}\n  renderImport = function (name: string) {\n    if (localPartials[name]) {\n      localPartials[name]()\n    }\n    else {\n      const partial = partials[name]\n      if (partial) {\n        partial(\n          renderExpression,\n          renderExpressionArg,\n          renderExpressionVnode,\n          renderTextVnode,\n          renderAttributeVnode,\n          renderPropertyVnode,\n          renderLazyVnode,\n          renderTransitionVnode,\n          renderModelVnode,\n          renderEventMethodVnode,\n          renderEventNameVnode,\n          renderDirectiveVnode,\n          renderSpreadVnode,\n          renderElementVnode,\n          renderSlot,\n          renderPartial,\n          renderImport,\n          renderEach\n        )\n      }\n      else if (process.env.NODE_ENV === 'development') {\n        logger.fatal(`partial [${name}] is not found.`)\n      }\n    }\n  },\n\n  eachHandler = function (\n    generate: Function,\n    item: any,\n    key: string | number,\n    keypath: string,\n    index: string | void,\n    length: number | void\n  ) {\n\n    const lastScope = $scope, lastStack = $stack\n\n    // each 会改变 keypath\n    $scope = { $keypath: keypath }\n    $stack = lastStack.concat($scope)\n\n    // 避免模板里频繁读取 list.length\n    if (isDef(length)) {\n      $scope.$length = length\n    }\n\n    // 业务层是否写了 expr:index\n    if (index) {\n      $scope[index] = key\n    }\n\n    // 无法通过 context.get($keypath + key) 读取到数据的场景\n    // 必须把 item 写到 scope\n    if (!keypath) {\n      $scope.$item = item\n    }\n\n    generate()\n\n    $scope = lastScope\n    $stack = lastStack\n\n  },\n\n  renderEach = function (\n    generate: Function,\n    from: ExpressionNode,\n    to: ExpressionNode | void,\n    equal: boolean | void,\n    index: string | void\n  ) {\n\n    const fromValue = getValue(from)\n\n    if (to) {\n      let toValue = getValue(to), count = 0\n      if (fromValue < toValue) {\n        if (equal) {\n          for (let i = fromValue; i <= toValue; i++) {\n            eachHandler(\n              generate,\n              i,\n              count++,\n              env.EMPTY_STRING,\n              index\n            )\n          }\n        }\n        else {\n          for (let i = fromValue; i < toValue; i++) {\n            eachHandler(\n              generate,\n              i,\n              count++,\n              env.EMPTY_STRING,\n              index\n            )\n          }\n        }\n      }\n      else {\n        if (equal) {\n          for (let i = fromValue; i >= toValue; i--) {\n            eachHandler(\n              generate,\n              i,\n              count++,\n              env.EMPTY_STRING,\n              index\n            )\n          }\n        }\n        else {\n          for (let i = fromValue; i > toValue; i--) {\n            eachHandler(\n              generate,\n              i,\n              count++,\n              env.EMPTY_STRING,\n              index\n            )\n          }\n        }\n      }\n    }\n    else {\n      const eachKeypath = from['ak']\n      if (is.array(fromValue)) {\n        for (let i = 0, length = fromValue.length; i < length; i++) {\n          eachHandler(\n            generate,\n            fromValue[i],\n            i,\n            eachKeypath\n              ? keypathUtil.join(eachKeypath, env.EMPTY_STRING + i)\n              : env.EMPTY_STRING,\n            index,\n            length\n          )\n        }\n      }\n      else if (is.object(fromValue)) {\n        for (let key in fromValue) {\n          eachHandler(\n            generate,\n            fromValue[key],\n            key,\n            eachKeypath\n              ? keypathUtil.join(eachKeypath, key)\n              : env.EMPTY_STRING,\n            index\n          )\n        }\n      }\n    }\n\n  }\n\n  return template(\n    renderExpression,\n    renderExpressionArg,\n    renderExpressionVnode,\n    renderTextVnode,\n    renderAttributeVnode,\n    renderPropertyVnode,\n    renderLazyVnode,\n    renderTransitionVnode,\n    renderModelVnode,\n    renderEventMethodVnode,\n    renderEventNameVnode,\n    renderDirectiveVnode,\n    renderSpreadVnode,\n    renderElementVnode,\n    renderSlot,\n    renderPartial,\n    renderImport,\n    renderEach\n  )\n\n}","import execute from '../../yox-common/src/function/execute'\n\nimport * as is from '../../yox-common/src/util/is'\nimport * as env from '../../yox-common/src/util/env'\nimport * as array from '../../yox-common/src/util/array'\nimport * as object from '../../yox-common/src/util/object'\n\nimport * as type from '../../yox-type/src/type'\nimport ComputedInterface from '../../yox-type/src/watcher/Computed'\nimport ObserverInterface from '../../yox-type/src/watcher/Observer'\nimport WatcherOptions from '../../yox-type/src/options/Watcher'\n\n/**\n * 计算属性\n *\n * 可配置 cache、deps、get、set 等\n */\nexport default class Computed implements ComputedInterface {\n\n  static current?: Computed\n\n  /**\n   * 对外的构造器，把用户配置的计算属性对象转换成内部对象\n   *\n   * @param keypath\n   * @param observer\n   * @param options\n   */\n  static build(keypath: string, observer: ObserverInterface, options: any): Computed | void {\n\n    let cache = env.TRUE,\n\n    sync = env.TRUE,\n\n    deps: string[] = [],\n\n    getter: type.getter | void,\n\n    setter: type.setter | void\n\n    if (is.func(options)) {\n      getter = options\n    }\n    else if (is.object(options)) {\n      if (is.boolean(options.cache)) {\n        cache = options.cache\n      }\n      if (is.boolean(options.sync)) {\n        sync = options.sync\n      }\n      // 因为可能会修改 deps，所以这里创建一个新的 deps，避免影响外部传入的 deps\n      if (is.array(options.deps)) {\n        deps = object.copy(options.deps)\n      }\n      if (is.func(options.get)) {\n        getter = options.get\n      }\n      if (is.func(options.set)) {\n        setter = options.set\n      }\n    }\n\n    if (getter) {\n      return new Computed(keypath, sync, cache, deps, observer, getter, setter)\n    }\n\n  }\n\n  keypath: string\n\n  value: any\n\n  deps: string[]\n\n  cache: boolean\n\n  fixed: boolean\n\n  context: any\n\n  observer: ObserverInterface\n\n  getter: type.getter\n\n  setter: type.setter | void\n\n  watcher: type.watcher\n\n  watcherOptions: WatcherOptions\n\n  unique: Record<string, boolean>\n\n  private constructor(\n    keypath: string,\n    sync: boolean,\n    cache: boolean,\n    deps: string[],\n    observer: ObserverInterface,\n    getter: type.getter,\n    setter: type.setter | void\n  ) {\n\n    const instance = this\n\n    instance.keypath = keypath\n    instance.cache = cache\n\n    instance.deps = deps\n\n    instance.context = observer.context\n    instance.observer = observer\n    instance.getter = getter\n    instance.setter = setter\n\n    instance.unique = {}\n\n    instance.watcher = function ($0: any, $1: any, $2: string) {\n\n      // 计算属性的依赖变了会走进这里\n\n      const oldValue = instance.value,\n      newValue = instance.get(env.TRUE)\n\n      if (newValue !== oldValue) {\n        observer.diff(keypath, newValue, oldValue)\n      }\n\n    }\n\n    instance.watcherOptions = {\n      sync,\n      watcher: instance.watcher\n    }\n\n    if (instance.fixed = !array.falsy(deps)) {\n      array.each(\n        deps,\n        function (dep: string) {\n          observer.watch(\n            dep,\n            instance.watcherOptions\n          )\n        }\n      )\n    }\n\n  }\n\n  /**\n   * 读取计算属性的值\n   *\n   * @param force 是否强制刷新缓存\n   */\n  get(force?: boolean): any {\n\n    const instance = this,\n\n    { getter, context } = instance\n\n    // 禁用缓存\n    if (!instance.cache) {\n      instance.value = execute(getter, context)\n    }\n\n    // 减少取值频率，尤其是处理复杂的计算规则\n    else if (force || !object.has(instance, env.RAW_VALUE)) {\n\n      // 如果写死了依赖，则不需要收集依赖\n      if (instance.fixed) {\n        instance.value = execute(getter, context)\n      }\n      else {\n\n        // 清空上次收集的依赖\n        instance.unbind()\n\n        // 开始收集新的依赖\n        const lastComputed = Computed.current\n        Computed.current = instance\n\n        instance.value = execute(getter, context)\n\n        // 绑定新的依赖\n        instance.bind()\n\n        Computed.current = lastComputed\n      }\n\n    }\n\n    return instance.value\n  }\n\n  set(value: any): void {\n    const { setter, context } = this\n    if (setter) {\n      setter.call(context, value)\n    }\n  }\n\n  /**\n   * 添加依赖\n   *\n   * 这里只是为了保证依赖唯一，最后由 bind() 实现绑定\n   *\n   * @param dep\n   */\n  add(dep: string): void {\n    this.unique[dep] = env.TRUE\n  }\n\n  /**\n   * 绑定依赖\n   */\n  bind(): void {\n\n    const { unique, deps, observer, watcherOptions } = this\n\n    object.each(\n      unique,\n      function (_: any, dep: string) {\n        array.push(deps, dep)\n        observer.watch(\n          dep,\n          watcherOptions\n        )\n      }\n    )\n\n    // 用完重置\n    // 方便下次收集依赖\n    this.unique = {}\n\n  }\n\n  /**\n   * 解绑依赖\n   */\n  unbind(): void {\n\n    const { deps, observer, watcher } = this\n\n    array.each(\n      deps,\n      function (dep: string) {\n        observer.unwatch(dep, watcher)\n      },\n      env.TRUE\n    )\n\n    deps.length = 0\n\n  }\n\n}","import * as env from '../../../yox-common/src/util/env'\nimport * as array from '../../../yox-common/src/util/array'\nimport * as string from '../../../yox-common/src/util/string'\nimport * as keypathUtil from '../../../yox-common/src/util/keypath'\n\n/**\n * 从 keypath 数组中选择和 keypath 最匹配的那一个\n *\n * @param sorted 经过排序的 keypath 数组\n * @param keypath\n */\nexport default function (sorted: string[], keypath: string): any {\n\n  let result: any\n\n  array.each(\n    sorted,\n    function (prefix: string) {\n      const length = keypathUtil.match(keypath, prefix)\n      if (length >= 0) {\n        result = {\n          name: prefix,\n          prop: string.slice(keypath, length)\n        }\n        return env.FALSE\n      }\n    }\n  )\n\n  return result\n\n}","import * as env from '../../../yox-common/src/util/env'\nimport * as object from '../../../yox-common/src/util/object'\n\nexport default function (source: any, keypath: string): any {\n\n  if (source == env.NULL || keypath === env.EMPTY_STRING) {\n    return source\n  }\n\n  const result = object.get(source, keypath)\n  if (result) {\n    return result.value\n  }\n\n}","import * as is from '../../../yox-common/src/util/is'\nimport * as env from '../../../yox-common/src/util/env'\n\n/**\n * 对比新旧数组\n *\n * @param newValue\n * @param oldValue\n * @param callback\n */\nexport default function (\n  newValue: any,\n  oldValue: any,\n  callback: (key: string, newValue: any, oldValue: any) => void\n): true | void {\n\n  const newIsString = is.string(newValue),\n\n  oldIsString = is.string(oldValue)\n\n  if (newIsString || oldIsString) {\n    callback(\n      env.RAW_LENGTH,\n      newIsString ? newValue.length : env.UNDEFINED,\n      oldIsString ? oldValue.length : env.UNDEFINED\n    )\n    return env.TRUE\n  }\n\n}","import * as is from '../../../yox-common/src/util/is'\nimport * as env from '../../../yox-common/src/util/env'\n\n/**\n * 对比新旧数组\n *\n * @param newValue\n * @param oldValue\n * @param callback\n */\nexport default function (\n  newValue: any,\n  oldValue: any,\n  callback: (key: string, newValue: any, oldValue: any) => void\n): true | void {\n\n  const newIsArray = is.array(newValue),\n\n  oldIsArray = is.array(oldValue)\n\n  if (newIsArray || oldIsArray) {\n\n    const newLength = newIsArray ? newValue.length : env.UNDEFINED,\n\n    oldLength = oldIsArray ? oldValue.length : env.UNDEFINED\n\n    callback(\n      env.RAW_LENGTH,\n      newLength,\n      oldLength\n    )\n\n    for (let i = 0, length = Math.max(newLength || 0, oldLength || 0); i < length; i++) {\n      callback(\n        '' + i,\n        newValue ? newValue[i] : env.UNDEFINED,\n        oldValue ? oldValue[i] : env.UNDEFINED\n      )\n    }\n\n    return env.TRUE\n\n  }\n\n}","import * as is from '../../../yox-common/src/util/is'\nimport * as env from '../../../yox-common/src/util/env'\nimport * as object from '../../../yox-common/src/util/object'\n\n/**\n * 对比新旧对象\n *\n * @param newValue\n * @param oldValue\n * @param callback\n */\nexport default function (\n  newValue: any,\n  oldValue: any,\n  callback: (key: string, newValue: any, oldValue: any) => void\n) {\n\n  const newIsObject = is.object(newValue),\n\n  oldIsObject = is.object(oldValue)\n\n  if (newIsObject || oldIsObject) {\n\n    newValue = newIsObject ? newValue : env.EMPTY_OBJECT\n    oldValue = oldIsObject ? oldValue : env.EMPTY_OBJECT\n\n    if (newIsObject) {\n      object.each(\n        newValue,\n        function (value: any, key: string) {\n          if (value !== oldValue[key]) {\n            callback(key, value, oldValue[key])\n          }\n        }\n      )\n    }\n\n    if (oldIsObject) {\n      object.each(\n        oldValue,\n        function (value: any, key: string) {\n          if (value !== newValue[key]) {\n            callback(key, newValue[key], value)\n          }\n        }\n      )\n    }\n\n  }\n\n}","import isDef from '../../../yox-common/src/function/isDef'\nimport * as array from '../../../yox-common/src/util/array'\nimport * as keypathUtil from '../../../yox-common/src/util/keypath'\n\nimport diffString from './diffString'\nimport diffArray from './diffArray'\nimport diffObject from './diffObject'\n\nexport default function diffRecursion(\n  keypath: string,\n  newValue: any,\n  oldValue: any,\n  watchFuzzyKeypaths: string[],\n  callback: (watchKeypath: string, keypath: string, newValue: any, oldValue: any) => void\n) {\n\n  const diff = function (subKeypath: string, subNewValue: any, subOldValue: any) {\n\n    if (subNewValue !== subOldValue) {\n\n      const newKeypath = keypathUtil.join(keypath, subKeypath)\n\n      array.each(\n        watchFuzzyKeypaths,\n        function (fuzzyKeypath: string) {\n          if (isDef(keypathUtil.matchFuzzy(newKeypath, fuzzyKeypath))) {\n            callback(\n              fuzzyKeypath, newKeypath, subNewValue, subOldValue\n            )\n          }\n        }\n      )\n\n      diffRecursion(newKeypath, subNewValue, subOldValue, watchFuzzyKeypaths, callback)\n\n    }\n\n  }\n\n  diffString(newValue, oldValue, diff)\n    || diffArray(newValue, oldValue, diff)\n    || diffObject(newValue, oldValue, diff)\n\n}","import isDef from '../../../yox-common/src/function/isDef'\nimport * as array from '../../../yox-common/src/util/array'\nimport * as object from '../../../yox-common/src/util/object'\nimport * as string from '../../../yox-common/src/util/string'\nimport * as keypathUtil from '../../../yox-common/src/util/keypath'\n\nimport readValue from './readValue'\nimport diffRecursion from './diffRecursion'\n\nexport default function (\n  keypath: string,\n  newValue: any,\n  oldValue: any,\n  watcher: Object, isRecursive: boolean,\n  callback: (watchKeypath: string, keypath: string, newValue: any, oldValue: any) => void\n) {\n\n  let fuzzyKeypaths: string[] | undefined\n\n  // 遍历监听的 keypath，如果未被监听，则无需触发任何事件\n  object.each(\n    watcher,\n    function (_, watchKeypath) {\n\n      // 模糊监听，如 users.*.name\n      if (keypathUtil.isFuzzy(watchKeypath)) {\n\n        // 如果当前修改的是 users.0 整个对象\n        // users.0 和 users.*.name 无法匹配\n        // 此时要知道设置 users.0 到底会不会改变 users.*.name 需要靠递归了\n\n        // 如果匹配，则无需递归\n        if (isDef(keypathUtil.matchFuzzy(keypath, watchKeypath))) {\n          callback(\n            watchKeypath, keypath, newValue, oldValue\n          )\n        }\n        else if (isRecursive) {\n          if (fuzzyKeypaths) {\n            array.push(\n              fuzzyKeypaths,\n              watchKeypath\n            )\n          }\n          else {\n            fuzzyKeypaths = [watchKeypath]\n          }\n        }\n\n        return\n      }\n\n      // 不是模糊匹配，直接靠前缀匹配\n      // 比如监听的是 users.0.name，此时修改 users.0，则直接读出子属性值，判断是否相等\n      const length = keypathUtil.match(watchKeypath, keypath)\n      if (length >= 0) {\n\n        const subKeypath = string.slice(watchKeypath, length),\n        subNewValue = readValue(newValue, subKeypath),\n        subOldValue = readValue(oldValue, subKeypath)\n\n        if (subNewValue !== subOldValue) {\n          callback(\n            watchKeypath, watchKeypath, subNewValue, subOldValue\n          )\n        }\n\n      }\n\n    }\n  )\n\n  // 存在模糊匹配的需求\n  // 必须对数据进行递归\n  // 性能确实会慢一些，但是很好用啊，几乎可以监听所有的数据\n  if (fuzzyKeypaths) {\n    diffRecursion(keypath, newValue, oldValue, fuzzyKeypaths, callback)\n  }\n\n}","import EmitterOptions from '../../../yox-type/src/options/Emitter'\n\n/**\n * 触发异步变化时，用此函数过滤下，哪些 listener 应该执行\n *\n * @param item\n * @param data\n */\nexport default function (_: string, args: any[] | void, options: EmitterOptions): boolean | void {\n\n  if (options.count && args) {\n\n    // 采用计数器的原因是，同一个 options 可能执行多次\n    // 比如监听 user.*，如果同批次修改了 user.name 和 user.age\n    // 这个监听器会调用多次，如果第一次执行就把 count 干掉了，第二次就无法执行了\n\n    options.count--\n\n    // 新旧值不相等\n    return args[0] !== args[1]\n\n  }\n\n}","import * as is from '../../../yox-common/src/util/is'\nimport * as env from '../../../yox-common/src/util/env'\nimport * as logger from '../../../yox-common/src/util/logger'\n\nimport * as type from '../../../yox-type/src/type'\nimport WatcherOptions from '../../../yox-type/src/options/Watcher'\n\n// 避免频繁创建对象\nconst optionsHolder: WatcherOptions = {\n  watcher: env.EMPTY_FUNCTION\n}\n\n/**\n * 格式化 watch options\n *\n * @param options\n */\nexport default function (options: type.watcher | WatcherOptions | void, immediate: boolean | void): WatcherOptions | void {\n\n  if (is.func(options)) {\n    optionsHolder.watcher = options as type.watcher\n    optionsHolder.immediate = immediate === env.TRUE\n    return optionsHolder\n  }\n\n  if (options && (options as WatcherOptions).watcher) {\n    return options as WatcherOptions\n  }\n\n  if (process.env.NODE_ENV === 'development') {\n    logger.fatal(`watcher should be a function or object.`)\n  }\n\n}","import * as is from '../../yox-common/src/util/is'\nimport * as env from '../../yox-common/src/util/env'\nimport * as array from '../../yox-common/src/util/array'\nimport * as object from '../../yox-common/src/util/object'\nimport * as string from '../../yox-common/src/util/string'\n\nimport toNumber from '../../yox-common/src/function/toNumber'\nimport execute from '../../yox-common/src/function/execute'\nimport Emitter from '../../yox-common/src/util/Emitter'\nimport NextTask from '../../yox-common/src/util/NextTask'\n\nimport * as type from '../../yox-type/src/type'\nimport ValueHolder from '../../yox-type/src/interface/ValueHolder'\nimport ComputedOptions from '../../yox-type/src/options/Computed'\nimport WatcherOptions from '../../yox-type/src/options/Watcher'\nimport EmitterOptions from '../../yox-type/src/options/Emitter'\nimport ObserverInterface from '../../yox-type/src/watcher/Observer'\n\nimport Computed from './Computed'\nimport matchBest from './function/matchBest'\nimport diffWatcher from './function/diffWatcher'\nimport filterWatcher from './function/filterWatcher'\nimport formatWatcherOptions from './function/formatWatcherOptions'\n\ninterface AsyncChange {\n\n  // 旧值\n  value: any\n\n  // 监听的 keypath\n  keypaths: string[]\n\n}\n\n/**\n * 观察者有两种观察模式：\n *\n * 1. 同步监听\n * 2. 异步监听\n *\n * 对于`计算属性`这种需要实时变化的对象，即它的依赖变了，它需要立即跟着变，否则会出现不一致的问题\n * 这种属于同步监听\n *\n * 对于外部调用 observer.watch('keypath', listener)，属于异步监听，它只关心是否变了，而不关心是否是立即触发的\n */\nexport default class Observer implements ObserverInterface {\n\n  data: type.data\n\n  context: any\n\n  nextTask: NextTask\n\n  computed?: Record<string, Computed>\n\n  reversedComputedKeys?: string[]\n\n  syncEmitter: Emitter\n\n  asyncEmitter: Emitter\n\n  asyncChanges: Record<string, AsyncChange>\n\n  pending?: boolean\n\n  constructor(data?: type.data, context?: any) {\n\n    const instance = this\n\n    instance.data = data || {}\n    instance.context = context || instance\n    instance.nextTask = new NextTask()\n\n    instance.syncEmitter = new Emitter()\n    instance.asyncEmitter = new Emitter()\n    instance.asyncChanges = {}\n\n  }\n\n  /**\n   * 获取数据\n   *\n   * @param keypath\n   * @param defaultValue\n   * @param depIgnore\n   * @return\n   */\n  get(\n    keypath: string,\n    defaultValue?: any,\n    depIgnore?: boolean\n  ): any {\n\n    const instance = this,\n\n    currentComputed = Computed.current,\n\n    { data, computed, reversedComputedKeys } = instance\n\n    // 传入 '' 获取整个 data\n    if (keypath === env.EMPTY_STRING) {\n      return data\n    }\n\n    // 调用 get 时，外面想要获取依赖必须设置是谁在收集依赖\n    // 如果没设置，则跳过依赖收集\n    if (currentComputed && !depIgnore) {\n      currentComputed.add(keypath)\n    }\n\n    let result: ValueHolder | void, target: Computed | void\n\n    if (computed) {\n      target = computed[keypath]\n      if (target) {\n        return target.get()\n      }\n      if (reversedComputedKeys) {\n        const match = matchBest(reversedComputedKeys, keypath)\n        if (match && match.prop) {\n          result = object.get(\n            computed[match.name].get(),\n            match.prop\n          )\n        }\n      }\n    }\n\n    if (!result) {\n      result = object.get(data, keypath)\n    }\n\n    return result ? result.value : defaultValue\n\n  }\n\n  /**\n   * 更新数据\n   *\n   * @param keypath\n   * @param value\n   */\n  set(\n    keypath: string | type.data,\n    value?: any\n  ) {\n\n    const instance = this,\n\n    { data, computed, reversedComputedKeys } = instance,\n\n    setValue = function (newValue: any, keypath: string) {\n\n      const oldValue = instance.get(keypath)\n      if (newValue === oldValue) {\n        return\n      }\n\n      let target: Computed | void\n\n      if (computed) {\n        target = computed[keypath]\n        if (target) {\n          target.set(newValue)\n        }\n        if (reversedComputedKeys) {\n          const match = matchBest(reversedComputedKeys, keypath)\n          if (match && match.prop) {\n            target = computed[match.name]\n            if (target) {\n              const targetValue = target.get()\n              if (is.object(targetValue)) {\n                object.set(targetValue, match.prop, newValue)\n              }\n            }\n          }\n        }\n      }\n\n      if (!target) {\n        object.set(data, keypath, newValue)\n      }\n\n      instance.diff(keypath, newValue, oldValue)\n\n    }\n\n    if (is.string(keypath)) {\n      setValue(value, keypath as string)\n    }\n    else if (is.object(keypath)) {\n      object.each(keypath as type.data, setValue)\n    }\n\n  }\n\n  /**\n   * 同步调用的 diff，用于触发 syncEmitter，以及唤醒 asyncEmitter\n   *\n   * @param keypath\n   * @param newValue\n   * @param oldValue\n   */\n  diff(\n    keypath: string,\n    newValue: any,\n    oldValue: any\n  ): void {\n\n    const instance = this,\n\n    { syncEmitter, asyncEmitter, asyncChanges } = instance,\n\n    /**\n     * 我们认为 $ 开头的变量是不可递归的\n     * 比如浏览器中常见的 $0 表示当前选中元素\n     * DOM 元素是不能递归的\n     */\n    isRecursive = string.codeAt(keypath) !== 36\n\n    diffWatcher(\n      keypath, newValue, oldValue,\n      syncEmitter.listeners, isRecursive,\n      function (watchKeypath: string, keypath: string, newValue: any, oldValue: any) {\n        syncEmitter.fire(watchKeypath, [newValue, oldValue, keypath])\n      }\n    )\n\n    /**\n     * 此处有坑，举个例子\n     *\n     * observer.watch('a', function () {})\n     *\n     * observer.set('a', 1)\n     *\n     * observer.watch('a', function () {})\n     *\n     * 这里，第一个 watcher 应该触发，但第二个不应该，因为它绑定监听时，值已经是最新的了\n     */\n\n    diffWatcher(\n      keypath, newValue, oldValue,\n      asyncEmitter.listeners, isRecursive,\n      function (watchKeypath: string, keypath: string, newValue: any, oldValue: any) {\n\n        array.each(\n          asyncEmitter.listeners[watchKeypath],\n          function (item: EmitterOptions) {\n            (item.count as number)++\n          }\n        )\n\n        const { keypaths } = asyncChanges[keypath] || (asyncChanges[keypath] = { value: oldValue, keypaths: [] })\n        if (!array.has(keypaths, watchKeypath)) {\n          array.push(keypaths, watchKeypath)\n        }\n\n        if (!instance.pending) {\n          instance.pending = env.TRUE\n          instance.nextTask.append(\n            function () {\n              if (instance.pending) {\n                instance.pending = env.UNDEFINED\n                instance.diffAsync()\n              }\n            }\n          )\n        }\n      }\n    )\n\n  }\n\n  /**\n   * 异步触发的 diff\n   */\n  diffAsync(): void {\n\n    const instance = this,\n\n    { asyncEmitter, asyncChanges } = instance\n\n    instance.asyncChanges = {}\n\n    object.each(\n      asyncChanges,\n      function (change: AsyncChange, keypath: string) {\n\n        const args = [instance.get(keypath), change.value, keypath]\n\n        // 不能在这判断新旧值是否相同，相同就不 fire\n        // 因为前面标记了 count，在这中断会导致 count 无法清除\n\n        array.each(\n          change.keypaths,\n          function (watchKeypath: string) {\n            asyncEmitter.fire(watchKeypath, args, filterWatcher)\n          }\n        )\n\n      }\n    )\n\n  }\n\n  /**\n   * 添加计算属性\n   *\n   * @param keypath\n   * @param computed\n   */\n  addComputed(\n    keypath: string,\n    options: type.getter | ComputedOptions\n  ): Computed | void {\n\n    const instance = this,\n\n    computed = Computed.build(keypath, instance, options)\n\n    if (computed) {\n\n      if (!instance.computed) {\n        instance.computed = {}\n      }\n\n      instance.computed[keypath] = computed\n      instance.reversedComputedKeys = object.sort(instance.computed, env.TRUE)\n\n      return computed\n\n    }\n\n  }\n\n  /**\n   * 移除计算属性\n   *\n   * @param keypath\n   */\n  removeComputed(\n    keypath: string\n  ): void {\n\n    const instance = this,\n\n    { computed } = instance\n\n    if (computed && object.has(computed, keypath)) {\n      delete computed[keypath]\n      instance.reversedComputedKeys = object.sort(computed, env.TRUE)\n    }\n\n  }\n\n  /**\n   * 监听数据变化\n   *\n   * @param keypath\n   * @param watcher\n   * @param immediate\n   */\n  watch(\n    keypath: string | Record<string, type.watcher | WatcherOptions>,\n    watcher?: type.watcher | WatcherOptions,\n    immediate?: boolean\n  ) {\n\n    const instance = this,\n\n    { context, syncEmitter, asyncEmitter } = instance,\n\n    bind = function (keypath: string, options: WatcherOptions) {\n\n      const emitter = options.sync ? syncEmitter : asyncEmitter,\n\n      // formatWatcherOptions 保证了 options.watcher 一定存在\n      listener: EmitterOptions = {\n        fn: options.watcher,\n        ctx: context,\n        count: 0,\n      }\n\n      if (options.once) {\n        listener.max = 1\n      }\n\n      emitter.on(keypath, listener)\n\n      if (options.immediate) {\n        execute(\n          options.watcher,\n          context,\n          [\n            instance.get(keypath),\n            env.UNDEFINED,\n            keypath\n          ]\n        )\n      }\n\n    }\n\n    if (is.string(keypath)) {\n      bind(\n        keypath as string,\n        formatWatcherOptions(watcher, immediate) as WatcherOptions\n      )\n      return\n    }\n\n    object.each(\n      keypath as type.data,\n      function (options: type.watcher | WatcherOptions, keypath: string) {\n        bind(keypath, formatWatcherOptions(options) as WatcherOptions)\n      }\n    )\n\n  }\n\n  /**\n   * 取消监听数据变化\n   *\n   * @param keypath\n   * @param watcher\n   */\n  unwatch(\n    keypath?: string,\n    watcher?: type.watcher\n  ) {\n    this.syncEmitter.off(keypath, watcher)\n    this.asyncEmitter.off(keypath, watcher)\n  }\n\n  /**\n   * 取反 keypath 对应的数据\n   *\n   * 不管 keypath 对应的数据是什么类型，操作后都是布尔型\n   *\n   * @param keypath\n   * @return 取反后的布尔值\n   */\n  toggle(keypath: string): boolean {\n    const value = !this.get(keypath)\n    this.set(keypath, value)\n    return value\n  }\n\n  /**\n   * 递增 keypath 对应的数据\n   *\n   * 注意，最好是整型的加法，如果涉及浮点型，不保证计算正确\n   *\n   * @param keypath 值必须能转型成数字，如果不能，则默认从 0 开始递增\n   * @param step 步进值，默认是 1\n   * @param max 可以递增到的最大值，默认不限制\n   */\n  increase(keypath: string, step?: number, max?: number): number | void {\n    const value = toNumber(this.get(keypath), 0) + (step || 1)\n    if (!is.number(max) || value <= (max as number)) {\n      this.set(keypath, value)\n      return value\n    }\n  }\n\n  /**\n   * 递减 keypath 对应的数据\n   *\n   * 注意，最好是整型的减法，如果涉及浮点型，不保证计算正确\n   *\n   * @param keypath 值必须能转型成数字，如果不能，则默认从 0 开始递减\n   * @param step 步进值，默认是 1\n   * @param min 可以递减到的最小值，默认不限制\n   */\n  decrease(keypath: string, step?: number, min?: number): number | void {\n    const value = toNumber(this.get(keypath), 0) - (step || 1)\n    if (!is.number(min) || value >= (min as number)) {\n      this.set(keypath, value)\n      return value\n    }\n  }\n\n  /**\n   * 在数组指定位置插入元素\n   *\n   * @param keypath\n   * @param item\n   * @param index\n   */\n  insert(keypath: string, item: any, index: number | boolean): true | void {\n\n    let list = this.get(keypath)\n    list = !is.array(list) ? [] : object.copy(list)\n\n    const { length } = list\n    if (index === env.TRUE || index === length) {\n      list.push(item)\n    }\n    else if (index === env.FALSE || index === 0) {\n      list.unshift(item)\n    }\n    else if (index > 0 && index < length) {\n      list.splice(index, 0, item)\n    }\n    else {\n      return\n    }\n\n    this.set(keypath, list)\n\n    return env.TRUE\n\n  }\n\n  /**\n   * 在数组尾部添加元素\n   *\n   * @param keypath\n   * @param item\n   */\n  append(keypath: string, item: any): true | void {\n    return this.insert(keypath, item, env.TRUE)\n  }\n\n  /**\n   * 在数组首部添加元素\n   *\n   * @param keypath\n   * @param item\n   */\n  prepend(keypath: string, item: any): true | void {\n    return this.insert(keypath, item, env.FALSE)\n  }\n\n  /**\n   * 通过索引移除数组中的元素\n   *\n   * @param keypath\n   * @param index\n   */\n  removeAt(keypath: string, index: number): true | void {\n    let list = this.get(keypath)\n    if (is.array(list)\n      && index >= 0\n      && index < list.length\n    ) {\n      list = object.copy(list)\n      list.splice(index, 1)\n      this.set(keypath, list)\n      return env.TRUE\n    }\n  }\n\n  /**\n   * 直接移除数组中的元素\n   *\n   * @param keypath\n   * @param item\n   */\n  remove(keypath: string, item: any): true | void {\n    let list = this.get(keypath)\n    if (is.array(list)) {\n      list = object.copy(list)\n      if (array.remove(list, item)) {\n        this.set(keypath, list)\n        return env.TRUE\n      }\n    }\n  }\n\n  /**\n   * 拷贝任意数据，支持深拷贝\n   *\n   * @param data\n   * @param deep\n   */\n  copy<T>(data: T, deep?: boolean): T {\n    return object.copy(data, deep)\n  }\n\n  /**\n   * 销毁\n   */\n  destroy() {\n    const instance = this\n    instance.syncEmitter.off()\n    instance.asyncEmitter.off()\n    instance.nextTask.clear()\n    object.clear(instance)\n  }\n\n}\n","import * as type from '../../yox-type/src/type'\nimport * as config from '../../yox-config/src/config'\n\nimport isDef from '../../yox-common/src/function/isDef'\nimport execute from '../../yox-common/src/function/execute'\n\nimport * as env from '../../yox-common/src/util/env'\nimport * as array from '../../yox-common/src/util/array'\nimport * as string from '../../yox-common/src/util/string'\nimport * as object from '../../yox-common/src/util/object'\nimport * as logger from '../../yox-common/src/util/logger'\n\nimport Emitter from '../../yox-common/src/util/Emitter'\nimport CustomEvent from '../../yox-common/src/util/CustomEvent'\n\nimport API from '../../yox-type/src/interface/API'\nimport SpecialEventHooks from '../../yox-type/src/hooks/SpecialEvent'\n\n// 这里先写 IE9 支持的接口\nlet innerText = 'textContent',\n\ninnerHTML = 'innerHTML',\n\nfindElement = function (selector: string): Element | void {\n  const node = (env.DOCUMENT as Document).querySelector(selector)\n  if (node) {\n    return node\n  }\n},\n\naddEventListener = function (node: HTMLElement | Window | Document, type: string, listener: (event: Event) => void) {\n  node.addEventListener(type, listener, env.FALSE)\n},\n\nremoveEventListener = function (node: HTMLElement | Window | Document, type: string, listener: (event: Event) => void) {\n  node.removeEventListener(type, listener, env.FALSE)\n},\n\n// IE9 不支持 classList\naddClass = function (node: HTMLElement, className: string) {\n  node.classList.add(className)\n},\n\nremoveClass = function (node: HTMLElement, className: string) {\n  node.classList.remove(className)\n},\n\ncreateEvent = function (event: any, node: HTMLElement | Window | Document): any {\n  return event\n}\n\nif (process.env.NODE_ENV !== 'pure') {\n  if (env.DOCUMENT) {\n\n    // 此时 document.body 不一定有值，比如 script 放在 head 里\n    if (!env.DOCUMENT.documentElement.classList) {\n      addClass = function (node: HTMLElement, className: string) {\n        const classes = node.className.split(CHAR_WHITESPACE)\n        if (!array.has(classes, className)) {\n          array.push(classes, className)\n          node.className = array.join(classes, CHAR_WHITESPACE)\n        }\n      }\n      removeClass = function (node: HTMLElement, className: string) {\n        const classes = node.className.split(CHAR_WHITESPACE)\n        if (array.remove(classes, className)) {\n          node.className = array.join(classes, CHAR_WHITESPACE)\n        }\n      }\n    }\n\n    // 为 IE9 以下浏览器打补丁\n    if (process.env.NODE_LEGACY) {\n\n      if (!env.DOCUMENT.addEventListener) {\n\n        const PROPERTY_CHANGE = 'propertychange'\n\n        addEventListener = function (node: any, type: string, listener: (event: Event) => void) {\n          if (type === env.EVENT_INPUT) {\n            addEventListener(\n              node,\n              PROPERTY_CHANGE,\n              // 借用 EMITTER，反正只是内部临时用一下...\n              listener[EMITTER] = function (event: any) {\n                if (event.propertyName === env.RAW_VALUE) {\n                  event = new CustomEvent(event)\n                  event.type = env.EVENT_INPUT\n                  execute(listener, this, event)\n                }\n              }\n            )\n          }\n          else if (type === env.EVENT_CHANGE && isBoxElement(node)) {\n            addEventListener(\n              node,\n              env.EVENT_CLICK,\n              listener[EMITTER] = function (event: any) {\n                event = new CustomEvent(event)\n                event.type = env.EVENT_CHANGE\n                execute(listener, this, event)\n              }\n            )\n          }\n          else {\n            node.attachEvent(`on${type}`, listener)\n          }\n        }\n\n        removeEventListener = function (node: any, type: string, listener: (event: Event) => void) {\n          if (type === env.EVENT_INPUT) {\n            removeEventListener(node, PROPERTY_CHANGE, listener[EMITTER])\n            delete listener[EMITTER]\n          }\n          else if (type === env.EVENT_CHANGE && isBoxElement(node)) {\n            removeEventListener(node, env.EVENT_CLICK, listener[EMITTER])\n            delete listener[EMITTER]\n          }\n          else {\n            node.detachEvent(`on${type}`, listener)\n          }\n        }\n\n        const isBoxElement = function (node: HTMLInputElement) {\n          return node.tagName === 'INPUT'\n            && (node.type === 'radio' || node.type === 'checkbox')\n        }\n\n        class IEEvent {\n\n          currentTarget: HTMLElement | Window | Document\n\n          target: HTMLElement | EventTarget\n\n          originalEvent: Event\n\n          constructor(event: Event, element: HTMLElement | Window | Document) {\n\n            object.extend(this, event)\n\n            this.currentTarget = element\n            this.target = event.srcElement || element\n            this.originalEvent = event\n\n          }\n\n          preventDefault() {\n            this.originalEvent.returnValue = env.FALSE\n          }\n\n          stopPropagation() {\n            this.originalEvent.cancelBubble = env.TRUE\n          }\n\n        }\n\n        // textContent 不兼容 IE 678\n        innerText = 'innerText'\n\n        createEvent = function (event, element) {\n          return new IEEvent(event, element)\n        }\n\n        findElement = function (selector: string): Element | void {\n          // 去掉 #\n          if (string.codeAt(selector, 0) === 35) {\n            selector = string.slice(selector, 1)\n          }\n          else if (process.env.NODE_ENV === 'development') {\n            logger.fatal(`\"#id\" is the only supported selector for legacy version.`)\n          }\n          const node = (env.DOCUMENT as Document).getElementById(selector)\n          if (node) {\n            return node\n          }\n        }\n\n      }\n\n    }\n\n  }\n}\n\nconst CHAR_WHITESPACE = ' ',\n\n/**\n * 绑定在 HTML 元素上的事件发射器\n */\nEMITTER = '$emitter',\n\n/**\n * 低版本 IE 上 style 标签的专有属性\n */\nSTYLE_SHEET = 'styleSheet',\n\n/**\n * 跟输入事件配套使用的事件\n */\nCOMPOSITION_START = 'compositionstart',\n\n/**\n * 跟输入事件配套使用的事件\n */\nCOMPOSITION_END = 'compositionend',\n\ndomain = 'http://www.w3.org/',\n\nnamespaces = {\n  svg: domain + '2000/svg',\n  // xml: domain + 'XML/1998/namespace',\n  // xlink: domain + '1999/xlink',\n},\n\nspecialEvents: Record<string, SpecialEventHooks> = {},\n\ndomApi: API = {\n\n  createElement(tag: string, isSvg?: boolean): Element {\n    return isSvg\n      ? (env.DOCUMENT as Document).createElementNS(namespaces.svg, tag)\n      : (env.DOCUMENT as Document).createElement(tag)\n  },\n\n  createText(text: string): Text {\n    return (env.DOCUMENT as Document).createTextNode(text)\n  },\n\n  createComment(text: string): Comment {\n    return (env.DOCUMENT as Document).createComment(text)\n  },\n\n  prop(node: HTMLElement, name: string, value?: string | number | boolean): string | number | boolean | void {\n    if (isDef(value)) {\n      object.set(node, name, value, env.FALSE)\n    }\n    else {\n      const holder = object.get(node, name)\n      if (holder) {\n        return holder.value\n      }\n    }\n  },\n\n  removeProp(node: HTMLElement, name: string, hint?: number): void {\n    object.set(\n      node,\n      name,\n      hint === config.HINT_BOOLEAN\n        ? env.FALSE\n        : env.EMPTY_STRING,\n      env.FALSE\n    )\n  },\n\n  attr(node: HTMLElement, name: string, value?: string): string | void {\n    if (isDef(value)) {\n      node.setAttribute(name, value as string)\n    }\n    else {\n      // value 还可能是 null\n      const value = node.getAttribute(name)\n      if (value != env.NULL) {\n        return value as string\n      }\n    }\n  },\n\n  removeAttr(node: HTMLElement, name: string): void {\n    node.removeAttribute(name)\n  },\n\n  before(parentNode: Node, node: Node, beforeNode: Node): void {\n    parentNode.insertBefore(node, beforeNode)\n  },\n\n  append(parentNode: Node, node: Node): void {\n    parentNode.appendChild(node)\n  },\n\n  replace(parentNode: Node, node: Node, oldNode: Node): void {\n    parentNode.replaceChild(node, oldNode)\n  },\n\n  remove(parentNode: Node, node: Node): void {\n    parentNode.removeChild(node)\n  },\n\n  parent(node: Node): Node | void {\n    const { parentNode } = node\n    if (parentNode) {\n      return parentNode\n    }\n  },\n\n  next(node: Node): Node | void {\n    const { nextSibling } = node\n    if (nextSibling) {\n      return nextSibling\n    }\n  },\n\n  find: findElement,\n\n  tag(node: Node): string | void {\n    if (node.nodeType === 1) {\n      return string.lower((node as HTMLElement).tagName)\n    }\n  },\n\n  text(node: Node, text?: string, isStyle?: boolean, isOption?: boolean): string | void {\n    if (isDef(text)) {\n      if (process.env.NODE_LEGACY) {\n        if (isStyle && object.has(node, STYLE_SHEET)) {\n          node[STYLE_SHEET].cssText = text\n        }\n        else {\n          if (isOption) {\n            (node as HTMLOptionElement).value = text as string\n          }\n          node[innerText] = text as string\n        }\n      }\n      else {\n        node[innerText] = text as string\n      }\n    }\n    else {\n      return node[innerText]\n    }\n  },\n\n  html(node: Element, html?: string, isStyle?: boolean, isOption?: boolean): string | void {\n    if (isDef(html)) {\n      if (process.env.NODE_LEGACY) {\n        if (isStyle && object.has(node, STYLE_SHEET)) {\n          node[STYLE_SHEET].cssText = html\n        }\n        else {\n          if (isOption) {\n            (node as HTMLOptionElement).value = html as string\n          }\n          node[innerHTML] = html as string\n        }\n      }\n      else {\n        node[innerHTML] = html as string\n      }\n    }\n    else {\n      return node[innerHTML]\n    }\n  },\n\n  addClass,\n\n  removeClass,\n\n  on(node: HTMLElement | Window | Document, type: string, listener: type.listener): void {\n\n    const emitter: Emitter = node[EMITTER] || (node[EMITTER] = new Emitter()),\n\n    nativeListeners = emitter.nativeListeners || (emitter.nativeListeners = {})\n\n    // 一个元素，相同的事件，只注册一个 native listener\n    if (!nativeListeners[type]) {\n\n      // 特殊事件\n      const special = specialEvents[type],\n\n      // 唯一的原生监听器\n      nativeListener = function (event: Event | CustomEvent) {\n\n        const customEvent = event instanceof CustomEvent\n          ? event\n          : new CustomEvent(event.type, createEvent(event, node))\n\n        if (customEvent.type !== type) {\n          customEvent.type = type\n        }\n\n        emitter.fire(type, [customEvent])\n\n      }\n\n      nativeListeners[type] = nativeListener\n\n      if (special) {\n        special.on(node, nativeListener)\n      }\n      else {\n        addEventListener(node, type, nativeListener)\n      }\n\n    }\n\n    emitter.on(type, listener)\n  },\n\n  off(node: HTMLElement | Window | Document, type: string, listener: type.listener): void {\n\n    const emitter: Emitter = node[EMITTER],\n\n    { listeners, nativeListeners } = emitter\n\n    // emitter 会根据 type 和 listener 参数进行适当的删除\n    emitter.off(type, listener)\n\n    // 如果注册的 type 事件都解绑了，则去掉原生监听器\n    if (nativeListeners && !emitter.has(type)) {\n\n      const special = specialEvents[type],\n\n      nativeListener = nativeListeners[type]\n\n      if (special) {\n        special.off(node, nativeListener)\n      }\n      else {\n        removeEventListener(node, type, nativeListener)\n      }\n\n      delete nativeListeners[type]\n\n    }\n\n    if (object.falsy(listeners)) {\n      node[EMITTER] = env.UNDEFINED\n    }\n\n  },\n\n  addSpecialEvent(type: string, hooks: SpecialEventHooks): void {\n    if (process.env.NODE_ENV === 'development') {\n      if (specialEvents[type]) {\n        logger.error(`Special event \"${type}\" is existed.`)\n      }\n      logger.info(`Special event \"${type}\" add success.`)\n    }\n    specialEvents[type] = hooks\n  },\n\n}\n\nspecialEvents[env.EVENT_MODEL] = {\n  on(node: HTMLElement | Window | Document, listener: type.nativeListener) {\n    let locked = env.FALSE\n    domApi.on(node, COMPOSITION_START, listener[COMPOSITION_START] = function () {\n      locked = env.TRUE\n    })\n    domApi.on(node, COMPOSITION_END, listener[COMPOSITION_END] = function (event: Event | CustomEvent) {\n      locked = env.FALSE\n      listener(event)\n    })\n    addEventListener(node, env.EVENT_INPUT, listener[env.EVENT_INPUT] = function (event: Event | CustomEvent) {\n      if (!locked) {\n        listener(event)\n      }\n    })\n  },\n  off(node: HTMLElement | Window | Document, listener: type.nativeListener) {\n    domApi.off(node, COMPOSITION_START, listener[COMPOSITION_START])\n    domApi.off(node, COMPOSITION_END, listener[COMPOSITION_END])\n    removeEventListener(node, env.EVENT_INPUT, listener[env.EVENT_INPUT])\n    listener[COMPOSITION_START] =\n    listener[COMPOSITION_END] =\n    listener[env.EVENT_INPUT] = env.UNDEFINED\n  }\n}\n\nexport default domApi","import execute from './execute'\n\nimport * as env from '../util/env'\nimport * as array from '../util/array'\n\n/**\n * 节流调用\n *\n * @param fn 需要节制调用的函数\n * @param delay 调用的时间间隔，单位毫秒\n * @param immediate 是否立即触发\n * @return 节流函数\n */\nexport default function (fn: Function, delay: number, immediate?: boolean) {\n\n  let timer: any\n\n  return function () {\n\n    if (!timer) {\n\n      const args = array.toArray(arguments)\n      if (immediate) {\n        execute(fn, env.UNDEFINED, args)\n      }\n\n      timer = setTimeout(\n        function () {\n          timer = env.UNDEFINED\n          if (!immediate) {\n            execute(fn, env.UNDEFINED, args)\n          }\n        },\n        delay\n      )\n\n    }\n\n  }\n}\n","import execute from '../../../yox-common/src/function/execute'\nimport debounce from '../../../yox-common/src/function/debounce'\n\nimport * as env from '../../../yox-common/src/util/env'\n\nimport api from '../../../yox-dom/src/dom'\n\nimport * as type from '../../../yox-type/src/type'\n\nimport Yox from '../../../yox-type/src/interface/Yox'\nimport VNode from '../../../yox-type/src/vnode/VNode'\nimport Directive from '../../../yox-type/src/vnode/Directive'\nimport DirectiveHooks from '../../../yox-type/src/hooks/Directive'\n\nconst directive: DirectiveHooks = {\n  bind(node: HTMLElement | Yox, directive: Directive, vnode: VNode) {\n\n    let { name, handler } = directive, { lazy } = vnode\n\n    if (!handler) {\n      return\n    }\n\n    if (lazy) {\n\n      const value = lazy[name] || lazy[env.EMPTY_STRING]\n\n      if (value === env.TRUE) {\n        name = env.EVENT_CHANGE\n      }\n      else if (value > 0) {\n        handler = debounce(\n          handler,\n          value,\n          // 避免连续多次点击，主要用于提交表单场景\n          // 移动端的 tap 事件可自行在业务层打补丁实现\n          name === env.EVENT_CLICK || name === env.EVENT_TAP\n        )\n      }\n\n    }\n\n    if (vnode.isComponent) {\n\n      (node as Yox).on(name, handler)\n      vnode.data[directive.key] = function () {\n        (node as Yox).off(name, handler as type.listener)\n      }\n\n    }\n    else {\n\n      api.on(node as HTMLElement, name, handler)\n      vnode.data[directive.key] = function () {\n        api.off(node as HTMLElement, name, handler as type.listener)\n      }\n\n    }\n\n  },\n\n  unbind(node: HTMLElement | Yox, directive: Directive, vnode: VNode) {\n    execute(vnode.data[directive.key])\n  }\n}\n\nexport default directive\n","import debounce from '../../../yox-common/src/function/debounce'\nimport execute from '../../../yox-common/src/function/execute'\nimport toString from '../../../yox-common/src/function/toString'\n\nimport * as is from '../../../yox-common/src/util/is'\nimport * as env from '../../../yox-common/src/util/env'\nimport * as array from '../../../yox-common/src/util/array'\n\nimport api from '../../../yox-dom/src/dom'\n\nimport * as config from '../../../yox-config/src/config'\nimport * as type from '../../../yox-type/src/type'\n\nimport Yox from '../../../yox-type/src/interface/Yox'\nimport VNode from '../../../yox-type/src/vnode/VNode'\nimport Directive from '../../../yox-type/src/vnode/Directive'\nimport DirectiveHooks from '../../../yox-type/src/hooks/Directive'\n\ninterface NativeControl {\n\n  set(node: HTMLElement, value: any): void\n\n  sync(node: HTMLElement, keypath: string, context: Yox): void\n\n  name: string\n\n}\n\nfunction debounceIfNeeded(fn: Function, lazy: type.lazy | void): any {\n  // 应用 lazy\n  return lazy && lazy !== env.TRUE\n    ? debounce(fn, lazy)\n    : fn\n}\n\nconst inputControl: NativeControl = {\n  set(node: HTMLInputElement, value: any) {\n    node.value = toString(value)\n  },\n  sync(node: HTMLInputElement, keypath: string, context: Yox) {\n    context.set(keypath, node.value)\n  },\n  name: env.RAW_VALUE\n},\n\nradioControl: NativeControl = {\n  set(node: HTMLInputElement, value: any) {\n    node.checked = node.value === toString(value)\n  },\n  sync(node: HTMLInputElement, keypath: string, context: Yox) {\n    if (node.checked) {\n      context.set(keypath, node.value)\n    }\n  },\n  name: 'checked'\n},\n\ncheckboxControl: NativeControl = {\n  set(node: HTMLInputElement, value: any) {\n    node.checked = is.array(value)\n      ? array.has(value, node.value, env.FALSE)\n      : !!value\n  },\n  sync(node: HTMLInputElement, keypath: string, context: Yox) {\n    const value = context.get(keypath)\n    if (is.array(value)) {\n      if (node.checked) {\n        context.append(keypath, node.value)\n      }\n      else {\n        context.removeAt(\n          keypath,\n          array.indexOf(value, node.value, env.FALSE)\n        )\n      }\n    }\n    else {\n      context.set(keypath, node.checked)\n    }\n  },\n  name: 'checked'\n},\n\nselectControl: NativeControl = {\n  set(node: HTMLSelectElement, value: any) {\n    array.each(\n      array.toArray(node.options),\n      node.multiple\n        ? function (option: HTMLOptionElement) {\n          option.selected = array.has(value, option.value, env.FALSE)\n        }\n        : function (option: HTMLOptionElement, index: number) {\n          if (option.value == value) {\n            node.selectedIndex = index\n            return env.FALSE\n          }\n        }\n    )\n  },\n  sync(node: HTMLSelectElement, keypath: string, context: Yox) {\n    const { options } = node\n    if (node.multiple) {\n      const values: string[] = []\n      array.each(\n        array.toArray(options),\n        function (option: HTMLOptionElement) {\n          if (option.selected) {\n            array.push(\n              values,\n              option.value\n            )\n          }\n        }\n      )\n      context.set(keypath, values)\n    }\n    else {\n      context.set(\n        keypath,\n        options[node.selectedIndex].value\n      )\n    }\n  },\n  name: env.RAW_VALUE\n},\n\ninputTypes = {\n  radio: radioControl,\n  checkbox: checkboxControl,\n},\n\ndirective: DirectiveHooks = {\n\n  once: env.TRUE,\n\n  bind(node: HTMLElement | Yox, directive: Directive, vnode: VNode) {\n\n    let { context, lazy, isComponent } = vnode,\n\n    dataBinding = directive.binding as string,\n\n    lazyValue = lazy && (lazy[config.DIRECTIVE_MODEL] || lazy[env.EMPTY_STRING]),\n\n    set: type.watcher | void,\n\n    sync: type.watcher,\n\n    unbind: Function\n\n    if (isComponent) {\n\n      let component = node as Yox,\n\n      viewBinding = component.$model as string\n\n      set = function (newValue: any) {\n        if (set) {\n          component.set(viewBinding, newValue)\n        }\n      }\n\n      sync = debounceIfNeeded(\n        function (newValue: any) {\n          context.set(dataBinding, newValue)\n        },\n        lazyValue\n      )\n\n      unbind = function () {\n        component.unwatch(viewBinding, sync)\n      }\n\n      component.watch(viewBinding, sync)\n\n    }\n    else {\n\n      let element = node as HTMLElement,\n\n      control = vnode.tag === 'select'\n        ? selectControl\n        : inputControl,\n\n      // checkbox,radio,select 监听的是 change 事件\n      eventName = env.EVENT_CHANGE\n\n      if (control === inputControl) {\n        const type = (node as HTMLInputElement).type\n        if (inputTypes[type]) {\n          control = inputTypes[type]\n        }\n        // 如果是输入框，则切换成 model 事件\n        // model 事件是个 yox-dom 实现的特殊事件\n        // 不会在输入法组合文字过程中得到触发事件\n        else if (lazyValue !== env.TRUE) {\n          eventName = env.EVENT_MODEL\n        }\n      }\n\n      set = function (newValue: any) {\n        if (set) {\n          control.set(element, newValue)\n        }\n      }\n\n      sync = debounceIfNeeded(\n        function () {\n          control.sync(element, dataBinding, context)\n        },\n        lazyValue\n      )\n\n      unbind = function () {\n        api.off(element, eventName, sync as type.listener)\n      }\n\n      api.on(element, eventName, sync as type.listener)\n\n      control.set(element, vnode.model)\n\n    }\n\n    // 监听数据，修改界面\n    context.watch(dataBinding, set as type.watcher)\n\n    vnode.data[directive.key] = function () {\n      context.unwatch(dataBinding, set as type.watcher)\n      set = env.UNDEFINED\n      unbind()\n    }\n\n  },\n\n  unbind(node: HTMLElement | Yox, directive: Directive, vnode: VNode) {\n    execute(vnode.data[directive.key])\n  }\n}\n\nexport default directive\n","import isDef from '../../../yox-common/src/function/isDef'\nimport execute from '../../../yox-common/src/function/execute'\n\nimport * as env from '../../../yox-common/src/util/env'\nimport * as keypathUtil from '../../../yox-common/src/util/keypath'\n\nimport * as type from '../../../yox-type/src/type'\nimport Yox from '../../../yox-type/src/interface/Yox'\nimport VNode from '../../../yox-type/src/vnode/VNode'\nimport Directive from '../../../yox-type/src/vnode/Directive'\nimport DirectiveHooks from '../../../yox-type/src/hooks/Directive'\n\nimport api from '../../../yox-dom/src/dom'\n\nconst directive: DirectiveHooks = {\n\n  once: env.TRUE,\n\n  bind(node: HTMLElement | Yox, directive: Directive, vnode: VNode) {\n\n    // binding 可能是模糊匹配\n    // 比如延展属性 {{...obj}}，这里 binding 会是 `obj.*`\n    let binding = directive.binding as string,\n\n    isFuzzy = keypathUtil.isFuzzy(binding),\n\n    watcher: type.watcher | void = function (newValue: any, _: any, keypath: string) {\n\n      if (watcher) {\n        const name = isFuzzy\n          ? keypathUtil.matchFuzzy(keypath, binding) as string\n          : directive.name\n\n        if (vnode.isComponent) {\n          const component = node as Yox\n          component.set(name, component.checkProp(name, newValue))\n        }\n        else if (isDef(directive.hint)) {\n          api.prop(node as HTMLElement, name, newValue)\n        }\n        else {\n          api.attr(node as HTMLElement, name, newValue)\n        }\n      }\n\n    }\n\n    vnode.context.watch(binding, watcher as type.watcher)\n\n    vnode.data[directive.key] = function () {\n      vnode.context.unwatch(binding, watcher as type.watcher)\n      watcher = env.UNDEFINED\n    }\n\n  },\n\n  unbind(node: HTMLElement | Yox, directive: Directive, vnode: VNode) {\n    execute(vnode.data[directive.key])\n  }\n\n}\n\nexport default directive\n","import * as config from '../../../yox-config/src/config'\nimport isDef from '../../../yox-common/src/function/isDef'\n\n// this type https://jkchao.github.io/typescript-book-chinese/typings/thisType.html\n\n/**\n * 组件是否存在某个 slot\n *\n * @param name\n */\nexport default function (name: string): boolean {\n  return isDef(this.get(config.SLOT_DATA_PREFIX + name))\n}\n","import isDef from '../../yox-common/src/function/isDef'\nimport execute from '../../yox-common/src/function/execute'\n\nimport CustomEvent from '../../yox-common/src/util/CustomEvent'\nimport Emitter from '../../yox-common/src/util/Emitter'\nimport NextTask from '../../yox-common/src/util/NextTask'\n\nimport * as is from '../../yox-common/src/util/is'\nimport * as env from '../../yox-common/src/util/env'\nimport * as array from '../../yox-common/src/util/array'\nimport * as string from '../../yox-common/src/util/string'\nimport * as object from '../../yox-common/src/util/object'\nimport * as logger from '../../yox-common/src/util/logger'\n\nimport * as config from '../../yox-config/src/config'\nimport * as snabbdom from '../../yox-snabbdom/src/snabbdom'\n\nimport * as templateCompiler from '../../yox-template-compiler/src/compiler'\nimport * as templateStringify from '../../yox-template-compiler/src/stringify'\nimport * as templateRender from '../../yox-template-compiler/src/renderer'\n\nimport * as type from '../../yox-type/src/type'\n\nimport VNode from '../../yox-type/src/vnode/VNode'\nimport YoxInterface from '../../yox-type/src/interface/Yox'\nimport YoxPluginInterface from '../../yox-type/src/interface/YoxPlugin'\nimport YoxOptions from '../../yox-type/src/options/Yox'\nimport ComputedOptions from '../../yox-type/src/options/Computed'\nimport WatcherOptions from '../../yox-type/src/options/Watcher'\nimport EmitterOptions from '../../yox-type/src/options/Emitter'\nimport DirectiveHooks from '../../yox-type/src/hooks/Directive'\nimport TransitionHooks from '../../yox-type/src/hooks/Transition'\nimport PropRule from '../../yox-type/src/interface/PropRule'\n\nimport Computed from '../../yox-observer/src/Computed'\nimport Observer from '../../yox-observer/src/Observer'\n\nimport domApi from '../../yox-dom/src/dom'\n\nimport event from './directive/event'\nimport model from './directive/model'\nimport binding from './directive/binding'\nimport hasSlot from './filter/hasSlot'\n\n\nconst globalDirectives = {},\n\nglobalTransitions = {},\n\nglobalComponents = {},\n\nglobalPartials = {},\n\nglobalFilters = {},\n\ncompileCache = {},\n\nLOADER_QUEUE = '$queue',\n\nTEMPLATE_COMPUTED = '$' + env.RAW_TEMPLATE,\n\nselectorPattern = /^[#.][-\\w+]+$/\n\nexport default class Yox implements YoxInterface {\n\n  $options: YoxOptions\n\n  $observer: Observer\n\n  $emitter: Emitter\n\n  $el?: HTMLElement\n\n  $template?: Function\n\n  $refs?: Record<string, YoxInterface | HTMLElement>\n\n  $model?: string\n\n  $root?: YoxInterface\n\n  $parent?: YoxInterface\n\n  $children?: YoxInterface[]\n\n  $vnode: VNode | undefined\n\n  $directives?: Record<string, DirectiveHooks>\n\n  $components?: Record<string, YoxOptions>\n\n  $transitions?: Record<string, TransitionHooks>\n\n  $partials?: Record<string, Function>\n\n  $filters?: Record<string, type.filter>\n\n  /**\n   * core 版本\n   */\n  public static version = process.env.NODE_VERSION\n\n  /**\n   * 方便外部共用的通用逻辑，特别是写插件，减少重复代码\n   */\n  public static is = is\n  public static array = array\n  public static object = object\n  public static string = string\n  public static logger = logger\n  public static Event = CustomEvent\n  public static Emitter = Emitter\n\n  /**\n   * 安装插件\n   *\n   * 插件必须暴露 install 方法\n   */\n  public static use(plugin: YoxPluginInterface): void {\n    plugin.install(Yox)\n  }\n\n  /**\n   * 因为组件采用的是异步更新机制，为了在更新之后进行一些操作，可使用 nextTick\n   */\n  public static nextTick(task: Function, context?: any): void {\n    NextTask.shared().append(task, context)\n  }\n\n  /**\n   * 编译模板，暴露出来是为了打包阶段的模板预编译\n   */\n  public static compile(template: string, stringify?: boolean): Function | string {\n    if (process.env.NODE_ENV !== 'pure') {\n      if (process.env.NODE_ENV !== 'runtime') {\n        if (!templateStringify.hasStringify(template)) {\n          // 未编译，常出现在开发阶段\n          if (!compileCache[template]) {\n            const nodes = templateCompiler.compile(template)\n            if (process.env.NODE_ENV === 'development') {\n              if (nodes.length !== 1) {\n                logger.fatal(`\"template\" should have just one root element.`)\n              }\n            }\n            compileCache[template] = templateStringify.stringify(nodes[0])\n          }\n          template = compileCache[template]\n          if (stringify) {\n            return template\n          }\n        }\n      }\n      return new Function(`return ${template}`)()\n    }\n    else {\n      return env.EMPTY_STRING\n    }\n  }\n\n  public static checkProp(key: string, value: any, rule: PropRule): any {\n    if (process.env.NODE_ENV !== 'pure') {\n      // 类型\n      const type = rule.type,\n\n      // 默认值\n      defaultValue = rule.value\n\n      // 传了数据\n      if (isDef(value)) {\n\n        if (process.env.NODE_ENV === 'development') {\n\n          // 如果不写 type 或 type 不是 字符串 或 数组\n          // 就当做此规则无效，和没写一样\n          if (type) {\n\n            // 自定义函数判断是否匹配类型\n            // 自己打印警告信息吧\n            if (is.func(type)) {\n              (type as type.propType)(key, value)\n            }\n            else {\n\n              let matched = env.FALSE\n\n              // type: 'string'\n              if (!string.falsy(type)) {\n                matched = matchType(value, type as string)\n              }\n              // type: ['string', 'number']\n              else if (!array.falsy(type)) {\n                array.each(\n                  type as string[],\n                  function (item: string) {\n                    if (matchType(value, item)) {\n                      matched = env.TRUE\n                      return env.FALSE\n                    }\n                  }\n                )\n              }\n\n              if (!matched) {\n                logger.warn(`The type of prop \"${key}\" expected to be \"${type}\", but is \"${value}\".`)\n              }\n\n            }\n\n          }\n          else {\n            logger.warn(`The prop \"${key}\" in propTypes has no type.`)\n          }\n        }\n\n      }\n      else {\n\n        if (process.env.NODE_ENV === 'development') {\n          // 没传值但此项是必传项\n          if (rule.required) {\n            logger.warn(`The prop \"${key}\" is marked as required, but its value is not found.`)\n          }\n        }\n\n        // 没传值但是配置了默认值\n        if (isDef(defaultValue)) {\n          value = type === env.RAW_FUNCTION\n            ? defaultValue\n            : is.func(defaultValue)\n              ? (defaultValue as type.propValue)()\n              : defaultValue\n        }\n\n      }\n    }\n\n    return value\n\n  }\n\n  public static directive(\n    name: string | Record<string, DirectiveHooks>,\n    directive?: DirectiveHooks\n  ): DirectiveHooks | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      if (is.string(name) && !directive) {\n        return getResource(globalDirectives, name as string)\n      }\n      setResource(globalDirectives, name, directive)\n    }\n  }\n\n  public static transition(\n    name: string | Record<string, TransitionHooks>,\n    transition?: TransitionHooks\n  ): TransitionHooks | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      if (is.string(name) && !transition) {\n        return getResource(globalTransitions, name as string)\n      }\n      setResource(globalTransitions, name, transition)\n    }\n  }\n\n  public static component(\n    name: string | Record<string, type.component>,\n    component?: type.component\n  ): type.component | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      if (is.string(name) && !component) {\n        return getResource(globalComponents, name as string)\n      }\n      setResource(globalComponents, name, component)\n    }\n  }\n\n  public static partial(\n    name: string | Record<string, string>,\n    partial?: string\n  ): Function | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      if (is.string(name) && !partial) {\n        return getResource(globalPartials, name as string)\n      }\n      setResource(globalPartials, name, partial, Yox.compile)\n    }\n  }\n\n  public static filter(\n    name: string | Record<string, type.filter>,\n    filter?: type.filter\n  ): type.filter | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      if (is.string(name) && !filter) {\n        return getResource(globalFilters, name as string)\n      }\n      setResource(globalFilters, name, filter)\n    }\n  }\n\n  constructor(options: YoxOptions | void) {\n\n    const instance = this, $options: YoxOptions = options || env.EMPTY_OBJECT\n\n    // 一进来就执行 before create\n    execute($options[config.HOOK_BEFORE_CREATE], instance, $options)\n    execute(Yox[config.HOOK_BEFORE_CREATE], env.UNDEFINED, $options)\n\n    instance.$options = $options\n\n    let {\n      data,\n      props,\n      computed,\n      events,\n      methods,\n      watchers,\n      extensions,\n    } = $options\n\n    // 如果传了 props，则 data 应该是个 function\n    if (process.env.NODE_ENV === 'development') {\n      if (props && is.object(data)) {\n        logger.fatal('\"data\" option should be a function.')\n      }\n    }\n\n    if (extensions) {\n      object.extend(instance, extensions)\n    }\n\n    // 数据源\n    const source = instance.checkProps(props || {})\n\n    // 先放 props\n    // 当 data 是函数时，可以通过 this.get() 获取到外部数据\n    const observer = instance.$observer = new Observer(source, instance)\n\n    if (computed) {\n      object.each(\n        computed,\n        function (options: type.getter | ComputedOptions, keypath: string) {\n          observer.addComputed(keypath, options)\n        }\n      )\n    }\n\n    // 后放 data\n    const extend = is.func(data) ? execute(data, instance, options) : data\n    if (is.object(extend)) {\n      object.each(\n        extend,\n        function (value, key) {\n          if (process.env.NODE_ENV === 'development') {\n            if (object.has(source, key)) {\n              logger.warn(`\"${key}\" is already defined as a prop. Use prop default value instead.`)\n            }\n          }\n          source[key] = value\n        }\n      )\n    }\n\n    if (methods) {\n      object.each(\n        methods,\n        function (method: Function, name: string) {\n          if (process.env.NODE_ENV === 'development') {\n            if (instance[name]) {\n              logger.fatal(`method [${name}] is conflicted with built-in methods.`)\n            }\n          }\n          instance[name] = method\n        }\n      )\n    }\n\n    // 监听各种事件\n    // 支持命名空间\n    instance.$emitter = new Emitter(env.TRUE)\n\n    if (events) {\n      instance.on(events)\n    }\n\n    if (process.env.NODE_ENV !== 'pure') {\n\n      let placeholder: Node | void = env.UNDEFINED,\n\n      {\n        el,\n        vnode,\n        root,\n        model,\n        parent,\n        replace,\n        template,\n        transitions,\n        components,\n        directives,\n        partials,\n        filters,\n        slots,\n      } = $options\n\n      if (model) {\n        instance.$model = model\n      }\n\n      // 把 slots 放进数据里，方便 get\n      if (slots) {\n        object.extend(source, slots)\n      }\n\n      // 检查 template\n      if (is.string(template)) {\n        // 传了选择器，则取对应元素的 html\n        if (selectorPattern.test(template as string)) {\n          placeholder = domApi.find(template as string)\n          if (placeholder) {\n            template = domApi.html(placeholder as Element) as string\n            placeholder = env.UNDEFINED\n          }\n          else if (process.env.NODE_ENV === 'development') {\n            logger.fatal(`\"${template}\" 选择器找不到对应的元素`)\n          }\n        }\n      }\n      else {\n        template = env.UNDEFINED\n      }\n\n      // 检查 el\n      if (el) {\n\n        if (is.string(el)) {\n          const selector = el as string\n          if (selectorPattern.test(selector)) {\n            placeholder = domApi.find(selector)\n            if (process.env.NODE_ENV === 'development') {\n              if (!placeholder) {\n                logger.fatal(`\"${selector}\" 选择器找不到对应的元素`)\n              }\n            }\n          }\n          else if (process.env.NODE_ENV === 'development') {\n            logger.fatal(`\"el\" option should be a selector.`)\n          }\n        }\n        else {\n          placeholder = el as Node\n        }\n\n        if (!replace) {\n          domApi.append(\n            placeholder as Node,\n            placeholder = domApi.createComment(env.EMPTY_STRING)\n          )\n        }\n\n      }\n\n      if (root) {\n        instance.$root = root\n      }\n      if (parent) {\n        instance.$parent = parent\n      }\n\n      setFlexibleOptions(instance, env.RAW_TRANSITION, transitions)\n      setFlexibleOptions(instance, env.RAW_COMPONENT, components)\n      setFlexibleOptions(instance, env.RAW_DIRECTIVE, directives)\n      setFlexibleOptions(instance, env.RAW_PARTIAL, partials)\n      setFlexibleOptions(instance, env.RAW_FILTER, filters)\n\n      // 当存在模板和计算属性时\n      // 因为这里把模板当做一种特殊的计算属性\n      // 因此模板这个计算属性的优先级应该最高\n      if (template) {\n\n        // 拷贝一份，避免影响外部定义的 watchers\n        const newWatchers = watchers\n          ? object.copy(watchers)\n          : {}\n\n        newWatchers[TEMPLATE_COMPUTED] = {\n          // 模板一旦变化，立即刷新\n          sync: env.TRUE,\n          watcher: function (vnode: VNode) {\n            instance.update(vnode, instance.$vnode as VNode)\n          }\n        }\n\n        // 当模板的依赖变了，则重新创建 virtual dom\n        observer.addComputed(\n          TEMPLATE_COMPUTED,\n          {\n            // 当模板依赖变化时，异步通知模板更新\n            sync: env.FALSE,\n            get: function () {\n              return instance.render()\n            }\n          }\n        )\n\n        afterCreateHook(instance, newWatchers)\n\n        // 编译模板\n        // 在开发阶段，template 是原始的 html 模板\n        // 在产品阶段，template 是编译后且经过 stringify 的字符串\n        // 当然，这个需要外部自己控制传入的 template 是什么\n        // Yox.compile 会自动判断 template 是否经过编译\n        instance.$template = Yox.compile(template) as Function\n\n        if (!vnode) {\n\n          if (process.env.NODE_ENV === 'development') {\n            if (!placeholder) {\n              logger.fatal('根组件不传 el 是几个意思？')\n            }\n          }\n\n          vnode = snabbdom.create(\n            domApi,\n            placeholder as Node,\n            instance,\n            env.EMPTY_STRING\n          )\n\n        }\n\n        instance.update(\n          instance.get(TEMPLATE_COMPUTED),\n          vnode\n        )\n\n        return\n\n      }\n      else if (process.env.NODE_ENV === 'development') {\n        if (placeholder || vnode) {\n          logger.fatal('组件不写 template 是几个意思？')\n        }\n      }\n\n    }\n\n    afterCreateHook(instance, watchers)\n\n  }\n\n  /**\n   * 添加计算属性\n   */\n  addComputed(\n    keypath: string,\n    computed: type.getter | ComputedOptions\n  ): Computed | void {\n    return this.$observer.addComputed(keypath, computed)\n  }\n\n  /**\n   * 删除计算属性\n   */\n  removeComputed(\n    keypath: string\n  ): void {\n    this.$observer.removeComputed(keypath)\n  }\n\n  /**\n   * 取值\n   */\n  get(\n    keypath: string,\n    defaultValue?: any,\n    depIgnore?: boolean\n  ): any {\n    return this.$observer.get(keypath, defaultValue, depIgnore)\n  }\n\n  /**\n   * 设值\n   */\n  set(\n    keypath: string | type.data,\n    value?: any\n  ): void {\n    // 组件经常有各种异步改值，为了避免组件销毁后依然调用 set\n    // 这里判断一下，至于其他方法的异步调用就算了，业务自己控制吧\n    const { $observer } = this\n    if ($observer) {\n      $observer.set(keypath, value)\n    }\n  }\n\n  /**\n   * 监听事件\n   */\n  on(\n    type: string | Record<string, type.listener>,\n    listener?: type.listener\n  ): YoxInterface {\n    return addEvents(this, type, listener)\n  }\n\n  /**\n   * 监听一次事件\n   */\n  once(\n    type: string | Record<string, type.listener>,\n    listener?: type.listener\n  ): YoxInterface {\n    return addEvents(this, type, listener, env.TRUE)\n  }\n\n  /**\n   * 取消监听事件\n   */\n  off(\n    type?: string,\n    listener?: type.listener\n  ): YoxInterface {\n    this.$emitter.off(type, listener)\n    return this\n  }\n\n  /**\n   * 发射事件\n   */\n  fire(\n    type: string | CustomEvent,\n    data?: type.data | boolean,\n    downward?: boolean\n  ): boolean {\n\n    // 外部为了使用方便，fire(type) 或 fire(type, data) 就行了\n    // 内部为了保持格式统一\n    // 需要转成 Event，这样还能知道 target 是哪个组件\n\n    let instance = this,\n\n    event = type instanceof CustomEvent ? type : new CustomEvent(type),\n\n    args: any[] = [event],\n\n    isComplete: boolean\n\n    // 告诉外部是谁发出的事件\n    if (!event.target) {\n      event.target = instance\n    }\n\n    // 比如 fire('name', true) 直接向下发事件\n    if (is.object(data)) {\n      array.push(args, data as type.data)\n    }\n    else if (data === env.TRUE) {\n      downward = env.TRUE\n    }\n\n    isComplete = instance.$emitter.fire(event.type, args)\n    if (isComplete) {\n      const { $parent, $children } = instance\n      if (downward) {\n        if ($children) {\n          event.phase = CustomEvent.PHASE_DOWNWARD\n          array.each(\n            $children,\n            function (child) {\n              return isComplete = child.fire(event, data, env.TRUE)\n            }\n          )\n        }\n      }\n      else if ($parent) {\n        event.phase = CustomEvent.PHASE_UPWARD\n        isComplete = $parent.fire(event, data)\n      }\n    }\n\n    return isComplete\n\n  }\n\n  /**\n   * 监听数据变化\n   */\n  watch(\n    keypath: string | Record<string, type.watcher | WatcherOptions>,\n    watcher?: type.watcher | WatcherOptions,\n    immediate?: boolean\n  ): YoxInterface {\n    this.$observer.watch(keypath, watcher, immediate)\n    return this\n  }\n\n  /**\n   * 取消监听数据变化\n   */\n  unwatch(\n    keypath?: string,\n    watcher?: type.watcher\n  ): YoxInterface {\n    this.$observer.unwatch(keypath, watcher)\n    return this\n  }\n\n  /**\n   * 加载组件，组件可以是同步或异步，最后会调用 callback\n   *\n   * @param name 组件名称\n   * @param callback 组件加载成功后的回调\n   */\n  loadComponent(name: string, callback: type.componentCallback): void {\n    if (process.env.NODE_ENV !== 'pure') {\n      if (!loadComponent(this.$components, name, callback)) {\n        const hasComponent = loadComponent(globalComponents, name, callback)\n        if (process.env.NODE_ENV === 'development') {\n          if (!hasComponent) {\n            logger.error(`Component [${name}] is not found.`)\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * 创建子组件\n   *\n   * @param options 组件配置\n   * @param vnode 虚拟节点\n   */\n  createComponent(options: YoxOptions, vnode: VNode): YoxInterface {\n    if (process.env.NODE_ENV !== 'pure') {\n\n      const instance = this\n\n      options = object.copy(options)\n      options.root = instance.$root || instance\n      options.parent = instance\n      options.vnode = vnode\n      options.replace = env.TRUE\n\n      let { props, slots } = vnode,\n\n      modelKey = options.model || env.RAW_VALUE,\n\n      modelValue = vnode.model\n\n      options.model = modelKey\n\n      if (isDef(modelValue)) {\n        if (!props) {\n          props = {}\n        }\n        props[modelKey] = modelValue\n      }\n\n      if (props) {\n        options.props = props\n      }\n\n      if (slots) {\n        options.slots = slots\n      }\n\n      const child = new Yox(options)\n\n      array.push(\n        instance.$children || (instance.$children = []),\n        child\n      )\n\n      const node = child.$el\n      if (node) {\n        vnode.node = node\n      }\n      else if (process.env.NODE_ENV === 'development') {\n        logger.fatal(`The root element of [Component ${vnode.tag}] is not found.`)\n      }\n\n      return child\n    }\n    else {\n      return this\n    }\n  }\n\n  directive(\n    name: string | Record<string, DirectiveHooks>,\n    directive?: DirectiveHooks\n  ): DirectiveHooks | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      const instance = this, { $directives } = instance\n      if (is.string(name) && !directive) {\n        return getResource($directives, name as string, Yox.directive)\n      }\n      setResource(\n        $directives || (instance.$directives = {}),\n        name,\n        directive\n      )\n    }\n  }\n\n  transition(\n    name: string | Record<string, TransitionHooks>,\n    transition?: TransitionHooks\n  ): TransitionHooks | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      const instance = this, { $transitions } = instance\n      if (is.string(name) && !transition) {\n        return getResource($transitions, name as string, Yox.transition)\n      }\n      setResource(\n        $transitions || (instance.$transitions = {}),\n        name,\n        transition\n      )\n    }\n  }\n\n  component(\n    name: string | Record<string, type.component>,\n    component?: type.component\n  ): type.component | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      const instance = this, { $components } = instance\n      if (is.string(name) && !component) {\n        return getResource($components, name as string, Yox.component)\n      }\n      setResource(\n        $components || (instance.$components = {}),\n        name,\n        component\n      )\n    }\n  }\n\n  partial(\n    name: string | Record<string, string>,\n    partial?: string\n  ): Function | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      const instance = this, { $partials } = instance\n      if (is.string(name) && !partial) {\n        return getResource($partials, name as string, Yox.partial)\n      }\n      setResource(\n        $partials || (instance.$partials = {}),\n        name,\n        partial,\n        Yox.compile\n      )\n    }\n  }\n\n  filter(\n    name: string | Record<string, type.filter>,\n    filter?: type.filter\n  ): type.filter | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      const instance = this, { $filters } = instance\n      if (is.string(name) && !filter) {\n        return getResource($filters, name as string, Yox.filter)\n      }\n      setResource(\n        $filters || (instance.$filters = {}),\n        name,\n        filter\n      )\n    }\n  }\n\n  /**\n   * 对于某些特殊场景，修改了数据，但是模板的依赖中并没有这一项\n   * 而你非常确定需要更新模板，强制刷新正是你需要的\n   */\n  forceUpdate(data?: type.data): void {\n    if (process.env.NODE_ENV !== 'pure') {\n\n      const instance = this,\n\n      { $vnode, $observer } = instance,\n\n      { computed } = $observer\n\n      if ($vnode && computed) {\n\n        const template = computed[TEMPLATE_COMPUTED],\n\n        oldValue = template.get()\n\n        if (data) {\n          instance.set(data)\n        }\n\n        // 当前可能正在进行下一轮更新\n        $observer.nextTask.run()\n\n        // 没有更新模板，强制刷新\n        if (!data && oldValue === template.get()) {\n          instance.update(\n            template.get(env.TRUE),\n            $vnode\n          )\n        }\n      }\n    }\n  }\n\n  /**\n   * 把模板抽象语法树渲染成 virtual dom\n   */\n  render() {\n    if (process.env.NODE_ENV !== 'pure') {\n      const instance = this\n      return templateRender.render(\n        instance,\n        instance.$template as Function,\n        object.merge(instance.$filters, globalFilters) as Record<string, Function>,\n        object.merge(instance.$partials, globalPartials) as Record<string, Function>,\n        object.merge(instance.$directives, globalDirectives) as Record<string, DirectiveHooks>,\n        object.merge(instance.$transitions, globalTransitions) as Record<string, TransitionHooks>\n      )\n    }\n  }\n\n  /**\n   * 更新 virtual dom\n   *\n   * @param vnode\n   * @param oldVnode\n   */\n  update(vnode: VNode, oldVnode: VNode) {\n    if (process.env.NODE_ENV !== 'pure') {\n      let instance = this,\n\n      { $vnode, $options } = instance,\n\n      afterHook: string\n\n      // 每次渲染重置 refs\n      // 在渲染过程中收集最新的 ref\n      // 这样可避免更新时，新的 ref，在前面创建，老的 ref 却在后面删除的情况\n      instance.$refs = {}\n\n      if ($vnode) {\n        execute($options[config.HOOK_BEFORE_UPDATE], instance)\n        execute(Yox[config.HOOK_BEFORE_UPDATE], env.UNDEFINED, instance)\n        snabbdom.patch(domApi, vnode, oldVnode)\n        afterHook = config.HOOK_AFTER_UPDATE\n      }\n      else {\n        execute($options[config.HOOK_BEFORE_MOUNT], instance)\n        execute(Yox[config.HOOK_BEFORE_MOUNT], env.UNDEFINED, instance)\n        snabbdom.patch(domApi, vnode, oldVnode)\n        instance.$el = vnode.node as HTMLElement\n        afterHook = config.HOOK_AFTER_MOUNT\n      }\n\n      instance.$vnode = vnode\n\n      // 跟 nextTask 保持一个节奏\n      // 这样可以预留一些优化的余地\n      Yox.nextTick(\n        function () {\n          if (instance.$vnode) {\n            execute($options[afterHook], instance)\n            execute(Yox[afterHook], env.UNDEFINED, instance)\n          }\n        }\n      )\n    }\n  }\n\n  /**\n   * 校验组件参数\n   *\n   * @param props\n   */\n  checkProps(props: type.data): type.data {\n    if (process.env.NODE_ENV !== 'pure') {\n      const { propTypes } = this.$options\n      if (propTypes) {\n        const result = object.copy(props)\n        object.each(\n          propTypes,\n          function (rule: PropRule, key: string) {\n            result[key] = Yox.checkProp(key, props[key], rule)\n          }\n        )\n        return result\n      }\n    }\n    return props\n  }\n\n  checkProp(key: string, value: any): any {\n    if (process.env.NODE_ENV !== 'pure') {\n      const { propTypes } = this.$options\n      if (propTypes) {\n        const rule = propTypes[key]\n        if (rule) {\n          value = Yox.checkProp(key, value, rule)\n        }\n      }\n    }\n    return value\n  }\n\n  /**\n   * 销毁组件\n   */\n  destroy(): void {\n\n    const instance = this,\n\n    { $parent, $options, $emitter, $observer } = instance\n\n    execute($options[config.HOOK_BEFORE_DESTROY], instance)\n    execute(Yox[config.HOOK_BEFORE_DESTROY], env.UNDEFINED, instance)\n\n    if (process.env.NODE_ENV !== 'pure') {\n\n      const { $vnode } = instance\n\n      if ($parent && $parent.$children) {\n        array.remove($parent.$children, instance)\n      }\n\n      if ($vnode) {\n        // virtual dom 通过判断 parent.$vnode 知道宿主组件是否正在销毁\n        instance.$vnode = env.UNDEFINED\n        snabbdom.destroy(domApi, $vnode, !$parent)\n      }\n\n    }\n\n    $emitter.off()\n    $observer.destroy()\n\n    execute($options[config.HOOK_AFTER_DESTROY], instance)\n    execute(Yox[config.HOOK_AFTER_DESTROY], env.UNDEFINED, instance)\n\n    object.clear(instance)\n\n  }\n\n  /**\n   * 因为组件采用的是异步更新机制，为了在更新之后进行一些操作，可使用 nextTick\n   */\n  nextTick(task: Function): void {\n    this.$observer.nextTask.append(task, this)\n  }\n\n  /**\n   * 取反 keypath 对应的数据\n   *\n   * 不管 keypath 对应的数据是什么类型，操作后都是布尔型\n   */\n  toggle(keypath: string): boolean {\n    return this.$observer.toggle(keypath)\n  }\n\n  /**\n   * 递增 keypath 对应的数据\n   *\n   * 注意，最好是整型的加法，如果涉及浮点型，不保证计算正确\n   *\n   * @param keypath 值必须能转型成数字，如果不能，则默认从 0 开始递增\n   * @param step 步进值，默认是 1\n   * @param max 可以递增到的最大值，默认不限制\n   */\n  increase(keypath: string, step?: number, max?: number): number | void {\n    return this.$observer.increase(keypath, step, max)\n  }\n\n  /**\n   * 递减 keypath 对应的数据\n   *\n   * 注意，最好是整型的减法，如果涉及浮点型，不保证计算正确\n   *\n   * @param keypath 值必须能转型成数字，如果不能，则默认从 0 开始递减\n   * @param step 步进值，默认是 1\n   * @param min 可以递减到的最小值，默认不限制\n   */\n  decrease(keypath: string, step?: number, min?: number): number | void {\n    return this.$observer.decrease(keypath, step, min)\n  }\n\n  /**\n   * 在数组指定位置插入元素\n   *\n   * @param keypath\n   * @param item\n   * @param index\n   */\n  insert(keypath: string, item: any, index: number | boolean): true | void {\n    return this.$observer.insert(keypath, item, index)\n  }\n\n  /**\n   * 在数组尾部添加元素\n   *\n   * @param keypath\n   * @param item\n   */\n  append(keypath: string, item: any): true | void {\n    return this.$observer.append(keypath, item)\n  }\n\n  /**\n   * 在数组首部添加元素\n   *\n   * @param keypath\n   * @param item\n   */\n  prepend(keypath: string, item: any): true | void {\n    return this.$observer.prepend(keypath, item)\n  }\n\n  /**\n   * 通过索引移除数组中的元素\n   *\n   * @param keypath\n   * @param index\n   */\n  removeAt(keypath: string, index: number): true | void {\n    return this.$observer.removeAt(keypath, index)\n  }\n\n  /**\n   * 直接移除数组中的元素\n   *\n   * @param keypath\n   * @param item\n   */\n  remove(keypath: string, item: any): true | void {\n    return this.$observer.remove(keypath, item)\n  }\n\n  /**\n   * 拷贝任意数据，支持深拷贝\n   *\n   * @param data\n   * @param deep\n   */\n  copy<T>(data: T, deep?: boolean): T {\n    return this.$observer.copy(data, deep)\n  }\n\n}\n\nconst toString = Object.prototype.toString\n\nfunction matchType(value: any, type: string) {\n  return type === 'numeric'\n    ? is.numeric(value)\n    : string.lower(toString.call(value)) === `[object ${type}]`\n}\n\nfunction afterCreateHook(instance: Yox, watchers: Record<string, type.watcher | WatcherOptions> | void) {\n\n  if (watchers) {\n    instance.watch(watchers)\n  }\n\n  execute(instance.$options[config.HOOK_AFTER_CREATE], instance)\n  execute(Yox[config.HOOK_AFTER_CREATE], env.UNDEFINED, instance)\n\n}\n\nfunction setFlexibleOptions(instance: Yox, key: string, value: Function | type.data | void) {\n  if (is.func(value)) {\n    instance[key](execute(value, instance))\n  }\n  else if (is.object(value)) {\n    instance[key](value)\n  }\n}\n\nfunction addEvent(instance: Yox, type: string, listener: type.listener, once?: true) {\n  const options: EmitterOptions = {\n    fn: listener,\n    ctx: instance\n  }\n  if (once) {\n    options.max = 1\n  }\n  instance.$emitter.on(type, options)\n}\n\nfunction addEvents(\n  instance: Yox,\n  type: string | Record<string, type.listener>,\n  listener?: type.listener,\n  once?: true\n): Yox {\n  if (is.string(type)) {\n    addEvent(instance, type as string, listener as type.listener, once)\n  }\n  else {\n    object.each(\n      type as type.data,\n      function (value: type.listener, key: string) {\n        addEvent(instance, key, value, once)\n      }\n    )\n  }\n  return instance\n}\n\nfunction loadComponent(data: Record<string, type.component> | void, name: string, callback: type.componentCallback): true | void {\n  if (data && data[name]) {\n    const component = data[name]\n    // 注册的是异步加载函数\n    if (is.func(component)) {\n\n      let loader = component as type.componentLoader,\n\n      queue: type.componentCallback[] = loader[LOADER_QUEUE]\n\n      if (queue) {\n        array.push(queue, callback)\n      }\n      else {\n        queue = component[LOADER_QUEUE] = [callback]\n\n        loader(\n          function (options: YoxOptions) {\n\n            loader[LOADER_QUEUE] = env.UNDEFINED\n\n            data[name] = options\n\n            array.each(\n              queue,\n              function (callback) {\n                callback(options)\n              }\n            )\n\n          }\n        )\n      }\n\n    }\n    // 不是异步加载函数，直接同步返回\n    else {\n      callback(component as YoxOptions)\n    }\n    return env.TRUE\n  }\n}\n\nfunction getResource(data: type.data | void, name: string, lookup?: Function) {\n  if (data && data[name]) {\n    return data[name]\n  }\n  else if (lookup) {\n    return lookup(name)\n  }\n}\n\nfunction setResource(data: type.data, name: string | type.data, value?: any, formatValue?: (value: any) => any) {\n  if (is.string(name)) {\n    data[name as string] = formatValue ? formatValue(value) : value\n  }\n  else {\n    object.each(\n      name as type.data,\n      function (value, key) {\n        data[key] = formatValue ? formatValue(value) : value\n      }\n    )\n  }\n}\n\nif (process.env.NODE_ENV !== 'pure') {\n  Yox['dom'] = domApi\n  // 全局注册内置指令\n  Yox.directive({ event, model, binding })\n  // 全局注册内置过滤器\n  Yox.filter({ hasSlot })\n}\n\n"],"names":["TRUE","FALSE","NULL","UNDEFINED","RAW_UNDEFINED","RAW_FILTER","RAW_PARTIAL","RAW_COMPONENT","RAW_DIRECTIVE","RAW_TRANSITION","RAW_VALUE","RAW_LENGTH","RAW_FUNCTION","RAW_TEMPLATE","RAW_WILDCARD","RAW_MINUS_ONE","WINDOW","window","DOCUMENT","document","EVENT_TAP","EVENT_CLICK","EVENT_INPUT","EVENT_CHANGE","EVENT_MODEL","EMPTY_FUNCTION","EMPTY_OBJECT","Object","freeze","EMPTY_ARRAY","EMPTY_STRING","target","env.UNDEFINED","func","value","env.RAW_FUNCTION","array","Array","isArray","object","env.NULL","string","number","boolean","numeric","isNaN","parseFloat","isFinite","fn","context","args","is.func","is.array","apply","isDef","call","type","originalEvent","this","phase","CustomEvent","PHASE_CURRENT","isPrevented","preventDefault","env.TRUE","isStoped","stopPropagation","env.RAW_MINUS_ONE","each","callback","reversed","length","i","env.FALSE","nativePush","item","nativeUnshift","unshift","addItem","action","push","indexOf","strict","result","index","last","pop","remove","splice","has","toArray","execute","env.EMPTY_ARRAY","slice","toObject","key","join","separator","falsy","camelizePattern","hyphenatePattern","capitalizePattern","camelizeCache","hyphenateCache","capitalizeCache","camelize","str","replace","$0","$1","upper","hyphenate","lower","capitalize","trim","env.EMPTY_STRING","start","end","is.number","part","lastIndexOf","startsWith","endsWith","offset","charAt","codeAt","charCodeAt","toUpperCase","toLowerCase","is.string","SEP_DOT","dotPattern","asteriskPattern","doubleAsteriskPattern","splitCache","patternCache","match","keypath","prefix","string.startsWith","list","split","lastIndex","keypath1","keypath2","isFuzzy","string.has","env.RAW_WILDCARD","matchFuzzy","pattern","cache","RegExp","keys","sortKeyByAsc","a","b","sortKeyByDesc","sort","desc","clear","_","extend","original","merge","object1","object2","copy","deep","array.each","is.object","valueHolder","get","keypathUtil.each","isLast","hasValue","set","autofill","defaultValue","toString","DEBUG","INFO","WARN","ERROR","FATAL","nativeConsole","console","env.RAW_UNDEFINED","level","test","env.EMPTY_FUNCTION","stylePrefix","getLevel","env.WINDOW","logLevel","getStyle","backgroundColor","debug","msg","tag","log","info","warn","error","fatal","Error","nextTick","ns","listeners","Emitter","filter","instance","_a","name","isComplete","object.copy","event_1","options","matchNamespace","array.has","listener","ctx","num","max","off","prevent","stop","array.push","ns_1","matchListener_1","createMatchListener","object.each","matchListener","parseNamespace","string.indexOf","string.slice","matchTrue","namespace","setImmediate","isNative","shared","MessageChannel","channel","port1","onmessage","port2","postMessage","setTimeout","tasks","NextTask","run","array.unshift","task","SLOT_DATA_PREFIX","HINT_BOOLEAN","DIRECTIVE_MODEL","DIRECTIVE_EVENT","DIRECTIVE_BINDING","DIRECTIVE_CUSTOM","HOOK_BEFORE_CREATE","HOOK_AFTER_CREATE","HOOK_BEFORE_MOUNT","HOOK_AFTER_MOUNT","HOOK_BEFORE_UPDATE","HOOK_AFTER_UPDATE","HOOK_BEFORE_DESTROY","HOOK_AFTER_DESTROY","guid","ID","VNODE","LOADING","COMPONENT","LEAVING","update","api","vnode","oldVnode","node","nativeAttrs","oldNativeAttrs","newValue_1","env.EMPTY_OBJECT","oldValue_1","attr","removeAttr","nativeProps","oldNativeProps","prop","removeProp","hint","data","directives","oldDirectives","node_1","field.COMPONENT","isKeypathChange_1","directive","once","bind","unbind","node_2","ref","props","slots","model","isComponent","$model","object.merge","checkProps","forceUpdate","refs","$refs","isPatchable","createKeyToIndex","vnodes","startIndex","endIndex","insertBefore","parentNode","referenceNode","before","append","createComponent","child","parent","field.LOADING","component.update","directive.update","createData","field.ID","createVnode","isComment","isText","isStyle","isOption","children","text","html","createText","createComment","componentOptions_1","loadComponent","object.has","field.VNODE","enterVnode","env.RAW_COMPONENT","createElement","isSvg","addVnodes","nativeAttr.update","nativeProp.update","insertVnode","hasParent","enter","component_1","isStatic","$observer","nextTask","prepend","removeVnodes","removeVnode","component_2","done","destroyVnode","leaveVnode","slot","$vnode","component_3","directive.remove","destroy","component","transition","field.LEAVING","leave","updateChildren","oldChildren","oldKeyToIndex","oldIndex","startVnode","endVnode","oldStartIndex","oldEndIndex","oldStartVnode","oldEndVnode","patch","next","oldText","oldHtml","create","isRemove","is.numeric","LITERAL","IDENTIFIER","MEMBER","UNARY","BINARY","TERNARY","ARRAY","OBJECT","CALL","unary","+","x","-","~","!","!!","binary","*","p","/","%","<<",">>",">>>","<","<=",">",">=","==","!=","===","!==","&","^","|","&&","||","JSON","stringify","STRING_EMPTY","toJSON","getter","nodeType.LITERAL","nodeType.IDENTIFIER","nodeType.UNARY","interpreter.unary","op","nodeType.BINARY","interpreter.binary","nodeType.TERNARY","yes","no","nodeType.ARRAY","nodes","map","nodeType.OBJECT","result_1","values","nodeType.CALL","invoke","nodeType.MEMBER","staticKeypath","sk","first","isUndef","len","keypathUtil.join","object.get","setPair","render","template","filters","partials","transitions","$scope","$keypath","$stack","vnodeStack","localPartials","lookup","stack","depIgnore","defaultKeypath","scope","ak","$item","holder","getValue","expr","renderStack","exprExecutor.execute","addBinding","config.DIRECTIVE_BINDING","hooks","binding","createMethodListener","event","method","array.last","$event","$data","createGetter","renderExpression","stringRequired","renderExpressionArg","renderExpressionVnode","renderTextVnode","vnodeList","lastVnode","renderAttributeVnode","renderPropertyVnode","renderLazyVnode","renderTransitionVnode","renderModelVnode","config.DIRECTIVE_MODEL","renderEventMethodVnode","config.DIRECTIVE_EVENT","handler","renderEventNameVnode","fire","renderDirectiveVnode","config.DIRECTIVE_CUSTOM","renderSpreadVnode","absoluteKeypath","renderElementVnode","attrs","childs","componentName","array.pop","renderSlots_1","renderSlot","defaultRender","renderPartial","renderImport","partial","renderEach","eachHandler","generate","lastScope","lastStack","concat","$length","from","to","equal","fromValue","toValue","count","eachKeypath","sync","deps","observer","setter","unique","watcher","$2","oldValue","newValue","diff","watcherOptions","fixed","array.falsy","dep","watch","Computed","is.boolean","force","env.RAW_VALUE","lastComputed","current","unwatch","sorted","keypathUtil.match","source","newIsString","oldIsString","env.RAW_LENGTH","newIsArray","oldIsArray","newLength","oldLength","Math","newIsObject","oldIsObject","diffRecursion","watchFuzzyKeypaths","subKeypath","subNewValue","subOldValue","newKeypath_1","fuzzyKeypath","keypathUtil.matchFuzzy","diffString","diffArray","diffObject","isRecursive","fuzzyKeypaths","watchKeypath","keypathUtil.isFuzzy","readValue","optionsHolder","immediate","syncEmitter","asyncEmitter","asyncChanges","Observer","currentComputed","computed","reversedComputedKeys","add","matchBest","setValue","targetValue","object.set","string.codeAt","diffWatcher","keypaths","pending","diffAsync","change","filterWatcher","build","object.sort","emitter","on","formatWatcherOptions","step","toNumber","min","insert","array.remove","object.clear","innerText","innerHTML","findElement","selector","env.DOCUMENT","querySelector","addEventListener","removeEventListener","addClass","className","classList","removeClass","createEvent","documentElement","classes","CHAR_WHITESPACE","array.join","PROPERTY_CHANGE_1","env.EVENT_INPUT","EMITTER","propertyName","env.EVENT_CHANGE","isBoxElement_1","env.EVENT_CLICK","attachEvent","detachEvent","tagName","IEEvent_1","element","object.extend","currentTarget","srcElement","IEEvent","returnValue","cancelBubble","getElementById","STYLE_SHEET","COMPOSITION_START","COMPOSITION_END","domain","namespaces","svg","specialEvents","domApi","createElementNS","createTextNode","config.HINT_BOOLEAN","setAttribute","value_1","getAttribute","removeAttribute","beforeNode","appendChild","oldNode","replaceChild","removeChild","nextSibling","find","nodeType","string.lower","cssText","nativeListeners","special","nativeListener","customEvent","object.falsy","addSpecialEvent","delay","timer","args_1","array.toArray","arguments","env.EVENT_MODEL","locked","lazy","debounce","env.EVENT_TAP","debounceIfNeeded","inputControl","radioControl","checked","checkboxControl","removeAt","array.indexOf","selectControl","multiple","option","selected","selectedIndex","values_1","inputTypes","radio","checkbox","dataBinding","lazyValue","viewBinding_1","element_1","control_1","eventName_1","type_1","checkProp","config.SLOT_DATA_PREFIX","globalDirectives","globalTransitions","globalComponents","globalPartials","globalFilters","LOADER_QUEUE","TEMPLATE_COMPUTED","env.RAW_TEMPLATE","selectorPattern","$options","config.HOOK_BEFORE_CREATE","Yox","events","methods","watchers","extensions","addComputed","$emitter","placeholder","el","root","model_1","components","$root","$parent","setFlexibleOptions","env.RAW_TRANSITION","env.RAW_DIRECTIVE","env.RAW_PARTIAL","env.RAW_FILTER","newWatchers","afterCreateHook","$template","compile","snabbdom.create","plugin","install","Function","rule","getResource","setResource","removeComputed","addEvents","downward","$children","PHASE_DOWNWARD","PHASE_UPWARD","$components","modelKey","modelValue","$el","$directives","$transitions","$partials","$filters","templateRender.render","afterHook_1","instance_1","$options_1","config.HOOK_BEFORE_UPDATE","snabbdom.patch","config.HOOK_AFTER_UPDATE","config.HOOK_BEFORE_MOUNT","config.HOOK_AFTER_MOUNT","propTypes","config.HOOK_BEFORE_DESTROY","snabbdom.destroy","config.HOOK_AFTER_DESTROY","toggle","increase","decrease","is","logger","config.HOOK_AFTER_CREATE","addEvent","loader_1","queue_1","formatValue","hasSlot"],"mappings":"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"}