{"version":3,"file":"yox.js","sources":["../../../../yox-common/src/util/env.ts","../../../../yox-common/src/function/isDef.ts","../../../../yox-common/src/util/is.ts","../../../../yox-common/src/function/execute.ts","../../../../yox-common/src/util/CustomEvent.ts","../../../../yox-common/src/util/array.ts","../../../../yox-common/src/util/string.ts","../../../../yox-common/src/util/keypath.ts","../../../../yox-common/src/util/object.ts","../../../../yox-common/src/function/toString.ts","../../../../yox-common/src/util/logger.ts","../../../../yox-common/src/util/Emitter.ts","../../../../yox-common/src/function/isNative.ts","../../../../yox-common/src/function/nextTick.ts","../../../../yox-common/src/util/NextTask.ts","../../../../yox-config/src/config.ts","../../../../yox-common/src/function/guid.ts","../../../../yox-snabbdom/src/field.ts","../../../../yox-snabbdom/src/nativeAttr.ts","../../../../yox-snabbdom/src/nativeProp.ts","../../../../yox-snabbdom/src/directive.ts","../../../../yox-snabbdom/src/component.ts","../../../../yox-snabbdom/src/snabbdom.ts","../../../../yox-common/src/function/toNumber.ts","../../../../yox-expression-compiler/src/nodeType.ts","../../../../yox-expression-compiler/src/creator.ts","../../../../yox-expression-compiler/src/interpreter.ts","../../../../yox-expression-compiler/src/compiler.ts","../../../../yox-template-compiler/src/nodeType.ts","../../../../yox-template-compiler/src/helper.ts","../../../../yox-template-compiler/src/creator.ts","../../../../yox-template-compiler/src/compiler.ts","../../../../yox-common/src/function/toJSON.ts","../../../../yox-template-compiler/src/stringify.ts","../../../../yox-common/src/function/isUndef.ts","../../../../yox-expression-compiler/src/executor.ts","../../../../yox-template-compiler/src/renderer.ts","../../../../yox-observer/src/Computed.ts","../../../../yox-observer/src/function/matchBest.ts","../../../../yox-observer/src/function/readValue.ts","../../../../yox-observer/src/function/diffString.ts","../../../../yox-observer/src/function/diffArray.ts","../../../../yox-observer/src/function/diffObject.ts","../../../../yox-observer/src/function/diffRecursion.ts","../../../../yox-observer/src/function/diffWatcher.ts","../../../../yox-observer/src/function/filterWatcher.ts","../../../../yox-observer/src/function/formatWatcherOptions.ts","../../../../yox-observer/src/Observer.ts","../../../../yox-dom/src/dom.ts","../../../../yox-common/src/function/debounce.ts","../../../src/directive/event.ts","../../../src/directive/model.ts","../../../src/directive/binding.ts","../../../src/filter/hasSlot.ts","../../../src/Yox.ts"],"sourcesContent":["/**\n * 为了压缩，定义的常量\n */\nexport const TRUE = true\nexport const FALSE = false\nexport const NULL = null\nexport const UNDEFINED = void 0\n\nexport const RAW_TRUE = 'true'\nexport const RAW_FALSE = 'false'\nexport const RAW_NULL = 'null'\nexport const RAW_UNDEFINED = 'undefined'\n\nexport const RAW_KEY = 'key'\nexport const RAW_REF = 'ref'\nexport const RAW_SLOT = 'slot'\nexport const RAW_NAME = 'name'\n\nexport const RAW_FILTER = 'filter'\nexport const RAW_PARTIAL = 'partial'\nexport const RAW_COMPONENT = 'component'\nexport const RAW_DIRECTIVE = 'directive'\nexport const RAW_TRANSITION = 'transition'\n\nexport const RAW_THIS = 'this'\nexport const RAW_VALUE = 'value'\nexport const RAW_LENGTH = 'length'\nexport const RAW_FUNCTION = 'function'\nexport const RAW_TEMPLATE = 'template'\nexport const RAW_WILDCARD = '*'\n\nexport const KEYPATH_PARENT = '..'\nexport const KEYPATH_CURRENT = RAW_THIS\n\n/**\n * Single instance for window in browser\n */\nexport const WINDOW = typeof window !== RAW_UNDEFINED ? window : UNDEFINED\n\n/**\n * Single instance for document in browser\n */\nexport const DOCUMENT = typeof document !== RAW_UNDEFINED ? document : UNDEFINED\n\n/**\n * tap 事件\n *\n * 非常有用的抽象事件，比如 pc 端是 click 事件，移动端是 touchend 事件\n *\n * 这样只需 on-tap=\"handler\" 就可以完美兼容各端\n *\n * 框架未实现此事件，通过 Yox.dom.specialEvents 提供给外部扩展\n *\n */\nexport const EVENT_TAP = 'tap'\n\n/**\n * 点击事件\n */\nexport const EVENT_CLICK = 'click'\n\n/**\n * 输入事件\n */\nexport const EVENT_INPUT = 'input'\n\n/**\n * 变化事件\n */\nexport const EVENT_CHANGE = 'change'\n\n/**\n * 唯一内置的特殊事件：model\n */\nexport const EVENT_MODEL = 'model'\n\n/**\n * Single instance for noop function\n */\nexport const EMPTY_FUNCTION = function () {\n  /** yox */\n}\n\n/**\n * 空对象，很多地方会用到，比如 `a || EMPTY_OBJECT` 确保是个对象\n */\nexport const EMPTY_OBJECT = Object.freeze({})\n\n/**\n * 空数组\n */\nexport const EMPTY_ARRAY = Object.freeze([])\n\n/**\n * 空字符串\n */\nexport const EMPTY_STRING = ''","import * as env from '../util/env'\n\nexport default function (target: any): boolean {\n  return target !== env.UNDEFINED\n}\n","import * as env from './env'\n\n/**\n * Check if value is a function.\n *\n * @param value\n * @return\n */\nexport function func(value: any): boolean {\n  return typeof value === env.RAW_FUNCTION\n}\n\n/**\n * Check if value is an array.\n *\n * @param value\n * @return\n */\nexport function array(value: any): boolean {\n  return Array.isArray(value)\n}\n\n/**\n * Check if value is an object.\n *\n * @param value\n * @return\n */\nexport function object(value: any): boolean {\n  // 低版本 IE 会把 null 和 undefined 当作 object\n  return value !== env.NULL && typeof value === 'object'\n}\n\n/**\n * Check if value is a string.\n *\n * @param value\n * @return\n */\nexport function string(value: any): boolean {\n  return typeof value === 'string'\n}\n\n/**\n * Check if value is a number.\n *\n * @param value\n * @return\n */\nexport function number(value: any): boolean {\n  return typeof value === 'number'\n}\n\n/**\n * Check if value is boolean.\n *\n * @param value\n * @return\n */\nexport function boolean(value: any): boolean {\n  return typeof value === 'boolean'\n}\n\n/**\n * Check if value is numeric.\n *\n * @param value\n * @return\n */\nexport function numeric(value: any): boolean {\n  return number(value)\n    || (string(value) && !isNaN(parseFloat(value)) && isFinite(value))\n}\n","import isDef from './isDef'\nimport * as is from '../util/is'\n\n/**\n * 任性地执行一个函数，不管它有没有、是不是\n *\n * @param fn 调用的函数\n * @param context 执行函数时的 this 指向\n * @param args 调用函数的参数，多参数时传入数组\n * @return 调用函数的返回值\n */\nexport default function (fn: any, context?: any, args?: any): any {\n  if (is.func(fn)) {\n    return is.array(args)\n      ? fn.apply(context, args)\n      : isDef(context)\n        ? fn.call(context, args)\n        : isDef(args)\n          ? fn(args)\n          : fn()\n  }\n}\n","import CustomEventInterface from '../../../yox-type/src/event/CustomEvent'\nimport Yox from '../../../yox-type/src/interface/Yox'\n\nimport * as env from './env'\n\nexport default class CustomEvent implements CustomEventInterface {\n\n  public static PHASE_CURRENT = 0\n\n  public static PHASE_UPWARD = 1\n\n  public static PHASE_DOWNWARD = -1\n\n  // 事件名称\n  type: string\n\n  // 事件当前阶段\n  phase: number\n\n  // 哪个组件发出的事件\n  target?: Yox\n\n  // 原始事件，比如 DOM 事件\n  originalEvent?: CustomEventInterface | Event\n\n  // 是否已阻止事件的默认行为\n  isPrevented?: true\n\n  // 是否已停止事件冒泡\n  isStoped?: true\n\n  // 处理当前事件的监听器，方便外部获取 listener 进行解绑\n  listener?: Function\n\n  /**\n   * 构造函数\n   *\n   * 可以传事件名称，也可以传原生事件对象\n   */\n  constructor(type: string, originalEvent?: CustomEventInterface | Event) {\n    this.type = type\n    this.phase = CustomEvent.PHASE_CURRENT\n    if (originalEvent) {\n      this.originalEvent = originalEvent\n    }\n  }\n\n  /**\n   * 阻止事件的默认行为\n   */\n  preventDefault(): CustomEventInterface {\n    const instance = this\n    if (!instance.isPrevented) {\n      const { originalEvent } = instance\n      if (originalEvent) {\n        originalEvent.preventDefault()\n      }\n      instance.isPrevented = env.TRUE\n    }\n    return instance\n  }\n\n  /**\n   * 停止事件广播\n   */\n  stopPropagation(): CustomEventInterface {\n    const instance = this\n    if (!instance.isStoped) {\n      const { originalEvent } = instance\n      if (originalEvent) {\n        originalEvent.stopPropagation()\n      }\n      instance.isStoped = env.TRUE\n    }\n    return instance\n  }\n\n  prevent(): CustomEventInterface {\n    return this.preventDefault()\n  }\n\n  stop(): CustomEventInterface {\n    return this.stopPropagation()\n  }\n\n}\n","import * as is from './is'\nimport * as env from './env'\nimport execute from '../function/execute'\n\n/**\n * 遍历数组\n *\n * @param array\n * @param callback 返回 false 可停止遍历\n * @param reversed 是否逆序遍历\n */\nexport function each<T>(\n  array: T[],\n  callback: (item: T, index: number, length: number) => boolean | void,\n  reversed?: boolean\n): void {\n  const { length } = array\n  if (length) {\n    if (reversed) {\n      for (let i = length - 1; i >= 0; i--) {\n        if (callback(array[i], i, length) === env.FALSE) {\n          break\n        }\n      }\n    }\n    else {\n      for (let i = 0; i < length; i++) {\n        if (callback(array[i], i, length) === env.FALSE) {\n          break\n        }\n      }\n    }\n  }\n}\n\nfunction nativePush<T>(array: T[], item: T) {\n  array[array.length] = item\n}\n\nfunction nativeUnshift<T>(array: T[], item: T) {\n  array.unshift(item)\n}\n\n/**\n * 添加\n *\n * @param array\n * @param value\n * @param action\n */\nfunction addItem<T>(array: T[], value: T | T[], action: Function) {\n  if (is.array(value)) {\n    each(\n      value as T[],\n      function (item: T) {\n        action(array, item)\n      }\n    )\n  }\n  else {\n    action(array, value)\n  }\n}\n\n/**\n * 往后加\n *\n * @param array\n * @param target\n */\nexport function push<T>(array: T[], target: T | T[]): void {\n  addItem(array, target, nativePush)\n}\n\n/**\n * 往前加\n *\n * @param array\n * @param target\n */\nexport function unshift<T>(array: T[], target: T | T[]): void {\n  addItem(array, target, nativeUnshift)\n}\n\n/**\n * 数组项在数组中的位置\n *\n * @param array 数组\n * @param target 数组项\n * @param strict 是否全等判断，默认是全等\n * @return 如果未找到，返回 -1\n */\nexport function indexOf<T>(array: T[], target: T, strict?: boolean): number {\n  let result = -1\n  each(\n    array,\n    function (item: any, index: number) {\n      if (strict === env.FALSE ? item == target : item === target) {\n        result = index\n        return env.FALSE\n      }\n    }\n  )\n  return result\n}\n\n/**\n * 获取数组最后一项\n *\n * @param array 数组\n * @return\n */\nexport function last<T>(array: T[]): T | void {\n  const { length } = array\n  if (length > 0) {\n    return array[length - 1]\n  }\n}\n\n/**\n * 弹出数组最后一项\n *\n * 项目里用的太多，仅用于节省字符...\n *\n * @param array 数组\n * @return 弹出的数组项\n */\nexport function pop<T>(array: T[]): T | void {\n  const { length } = array\n  if (length > 0) {\n    return array.pop()\n  }\n}\n\n/**\n * 删除数组项\n *\n * @param array 数组\n * @param item 待删除项\n * @param strict 是否全等判断，默认是全等\n * @return 删除的数量\n */\nexport function remove<T>(array: T[], target: T, strict?: boolean): number {\n  let result = 0\n  each(\n    array,\n    function (item: T, index: number) {\n      if (strict === env.FALSE ? item == target : item === target) {\n        array.splice(index, 1)\n        result++\n      }\n    },\n    env.TRUE\n  )\n  return result\n}\n\n/**\n * 数组是否包含 item\n *\n * @param array 数组\n * @param target 可能包含的数组项\n * @param strict 是否全等判断，默认是全等\n * @return\n */\nexport function has<T>(array: T[], target: T, strict?: boolean): boolean {\n  return indexOf(array, target, strict) >= 0\n}\n\n/**\n * 把类数组转成数组\n *\n * @param array 类数组\n * @return\n */\nexport function toArray<T>(array: T[] | ArrayLike<T>): T[] {\n  return is.array(array)\n    ? array\n    : execute(env.EMPTY_ARRAY.slice, array)\n}\n\n/**\n * 把数组转成对象\n *\n * @param array 数组\n * @param key 数组项包含的字段名称，如果数组项是基本类型，可不传\n * @param value\n * @return\n */\nexport function toObject(array: any[], key?: string | null, value?: any): Object {\n  let result = {}\n  each(\n    array,\n    function (item: any) {\n      result[key ? item[key] : item] = value || item\n    }\n  )\n  return result\n}\n\n/**\n * 把数组合并成字符串\n *\n * @param array\n * @param separator\n * @return\n */\nexport function join(array: string[], separator: string): string {\n  return array.join(separator)\n}\n\n/**\n * 用于判断长度大于 0 的数组\n *\n * @param array\n * @return\n */\nexport function falsy(array: any): boolean {\n  return !is.array(array) || !array.length\n}\n","import * as is from './is'\nimport * as env from './env'\n\nimport isDef from '../function/isDef'\n\nconst camelizePattern = /-([a-z])/gi,\n\nhyphenatePattern = /\\B([A-Z])/g,\n\ncapitalizePattern = /^[a-z]/,\n\ncamelizeCache: Record<string, string> = {},\n\nhyphenateCache: Record<string, string> = {},\n\ncapitalizeCache: Record<string, string> = {}\n\n/**\n * 连字符转成驼峰\n *\n * @param str\n * @return 驼峰格式的字符串\n */\nexport function camelize(str: string): string {\n  if (!camelizeCache[str]) {\n    camelizeCache[str] = str.replace(\n      camelizePattern,\n      function ($0, $1) {\n        return upper($1)\n      }\n    )\n  }\n  return camelizeCache[str]\n}\n\n/**\n * 驼峰转成连字符\n *\n * @param str\n * @return 连字符格式的字符串\n */\nexport function hyphenate(str: string): string {\n  if (!hyphenateCache[str]) {\n    hyphenateCache[str] = str.replace(\n      hyphenatePattern,\n      function ($0, $1) {\n        return '-' + lower($1)\n      }\n    )\n  }\n  return hyphenateCache[str]\n}\n\n/**\n * 首字母大写\n *\n * @param str\n * @return\n */\nexport function capitalize(str: string): string {\n  if (!capitalizeCache[str]) {\n    capitalizeCache[str] = str.replace(\n      capitalizePattern,\n      upper\n    )\n  }\n  return capitalizeCache[str]\n}\n\n/**\n * 清除两侧空白符\n *\n * @param str\n * @return 清除两侧空白符的字符串\n */\nexport function trim(str: any): string {\n  return falsy(str)\n    ? env.EMPTY_STRING\n    : str.trim()\n}\n\n/**\n * 截取字符串\n *\n * @param str\n * @param start\n * @param end\n * @return\n */\nexport function slice(str: string, start: number, end?: number): string {\n  return is.number(end)\n    ? start === end\n      ? env.EMPTY_STRING\n      : str.slice(start, end)\n    : str.slice(start)\n}\n\n/**\n * 获取子串的起始位置\n *\n * @param str\n * @param part\n * @param start\n * @return\n */\nexport function indexOf(str: string, part: string, start?: number): number {\n  return str.indexOf(part, isDef(start) ? start : 0)\n}\n\n/**\n * 获取子串的起始位置\n *\n * @param str\n * @param part\n * @param end\n * @return\n */\nexport function lastIndexOf(str: string, part: string, end?: number): number {\n  return str.lastIndexOf(part, isDef(end) ? end : str.length)\n}\n\n/**\n * str 是否以 part 开头\n *\n * @param str\n * @param part\n * @return\n */\nexport function startsWith(str: string, part: string): boolean {\n  return indexOf(str, part) === 0\n}\n\n/**\n * str 是否以 part 结束\n *\n * @param str\n * @param part\n * @return\n */\nexport function endsWith(str: string, part: string): boolean {\n  const offset = str.length - part.length\n  return offset >= 0 && lastIndexOf(str, part) === offset\n}\n\n/**\n * 获取某个位置的字符\n */\nexport function charAt(str: string, index?: number): string {\n  return str.charAt(index || 0)\n}\n\n/**\n * 获取某个位置的字符编码\n */\nexport function codeAt(str: string, index?: number): number {\n  return str.charCodeAt(index || 0)\n}\n\n/**\n * 大写格式\n */\nexport function upper(str: string): string {\n  return str.toUpperCase()\n}\n\n/**\n * 小写格式\n */\nexport function lower(str: string): string {\n  return str.toLowerCase()\n}\n\n/**\n * str 是否包含 part\n *\n * @param str\n * @param part\n * @return 是否包含\n */\nexport function has(str: string, part: string): boolean {\n  return indexOf(str, part) >= 0\n}\n\n/**\n * 判断长度大于 0 的字符串\n *\n * @param str\n * @return\n */\nexport function falsy(str: any): boolean {\n  return !is.string(str) || !str.length\n}\n","import * as env from './env'\nimport * as string from './string'\n\nimport isDef from '../function/isDef'\n\nconst SEP_DOT = '.',\n\ndotPattern = /\\./g,\n\nasteriskPattern = /\\*/g,\n\ndoubleAsteriskPattern = /\\*\\*/g,\n\nsplitCache: Record<string, string[]> = {},\n\npatternCache: Record<string, RegExp> = {}\n\n/**\n * 判断 keypath 是否以 prefix 开头，如果是，返回匹配上的前缀长度，否则返回 -1\n *\n * @param keypath\n * @param prefix\n * @return\n */\nexport function match(keypath: string, prefix: string): number {\n  if (keypath === prefix) {\n    return prefix.length\n  }\n  prefix += SEP_DOT\n  return string.startsWith(keypath, prefix)\n    ? prefix.length\n    : -1\n}\n\n/**\n * 遍历 keypath 的每个部分\n *\n * @param keypath\n * @param callback 返回 false 可中断遍历\n */\nexport function each(keypath: string, callback: (key: string, isLast: boolean) => boolean | void) {\n  // 判断字符串是因为 keypath 有可能是 toString\n  // 而 splitCache.toString 是个函数\n  const list = isDef(splitCache[keypath])\n    ? splitCache[keypath]\n    : (splitCache[keypath] = keypath.split(SEP_DOT))\n\n  for (let i = 0, lastIndex = list.length - 1; i <= lastIndex; i++) {\n    if (callback(list[i], i === lastIndex) === env.FALSE) {\n      break\n    }\n  }\n}\n\n/**\n * 遍历 keypath 的每个部分\n *\n * @param keypath1\n * @param keypath2\n */\nexport function join(keypath1: string, keypath2: string): string {\n  return keypath1 && keypath2\n    ? keypath1 + SEP_DOT + keypath2\n    : keypath1 || keypath2\n}\n\n/**\n * 是否模糊匹配\n *\n * @param keypath\n */\nexport function isFuzzy(keypath: string): boolean {\n  return string.has(keypath, env.RAW_WILDCARD)\n}\n\n/**\n * 模糊匹配 keypath\n *\n * @param keypath\n * @param pattern\n */\nexport function matchFuzzy(keypath: string, pattern: string): string | void {\n  let cache = patternCache[pattern]\n  if (!cache) {\n    const str = pattern\n      .replace(dotPattern, '\\\\.')\n      .replace(asteriskPattern, '(\\\\w+)')\n      .replace(doubleAsteriskPattern, '([\\.\\\\w]+?)')\n    cache = patternCache[pattern] = new RegExp(`^${str}$`)\n  }\n  const result = keypath.match(cache)\n  if (result) {\n    return result[1]\n  }\n}","import * as is from './is'\nimport * as env from './env'\nimport * as array from './array'\nimport * as keypathUtil from './keypath'\n\nimport isDef from '../function/isDef'\n\nimport ValueHolder from '../../../yox-type/src/interface/ValueHolder'\n\n/**\n * 获取对象的 key 的数组\n *\n * @param object\n * @return\n */\nexport function keys(object: Object): string[] {\n  return Object.keys(object)\n}\n\nfunction sortKeyByAsc(a: string, b: string): number {\n  return a.length - b.length\n}\n\nfunction sortKeyByDesc(a: string, b: string): number {\n  return b.length - a.length\n}\n\n/**\n * 排序对象的 key\n *\n * @param object\n * @param desc 是否逆序，默认从小到大排序\n * @return\n */\nexport function sort(object: Object, desc?: boolean): string[] {\n  return keys(object).sort(\n    desc ? sortKeyByDesc : sortKeyByAsc\n  )\n}\n\n/**\n * 遍历对象\n *\n * @param object\n * @param callback 返回 false 可停止遍历\n */\nexport function each(object: Object, callback: (value: any, key: string) => boolean | void): void {\n  for (let key in object) {\n    if (callback(object[key], key) === env.FALSE) {\n      break\n    }\n  }\n}\n\n/**\n * 清空对象所有的键值对\n *\n * @param object\n */\nexport function clear(object: Object): void {\n  each(\n    object,\n    function (_, key) {\n      delete object[key]\n    }\n  )\n}\n\n/**\n * 扩展对象\n *\n * @return\n */\nexport function extend(original: Object, ...objects: Object[]): Object {\n  array.each(\n    objects,\n    function (object) {\n      each(\n        object,\n        function (value, key) {\n          original[key] = value\n        }\n      )\n    }\n  )\n  return original\n}\n\n/**\n * 拷贝对象\n *\n * @param object\n * @param deep 是否需要深拷贝\n * @return\n */\nexport function copy(object: any, deep?: boolean): any {\n  let result = object\n  if (is.array(object)) {\n    if (deep) {\n      result = []\n      array.each(\n        object,\n        function (item, index) {\n          result[index] = copy(item, deep)\n        }\n      )\n    }\n    else {\n      result = object.slice()\n    }\n  }\n  else if (is.object(object)) {\n    result = {}\n    each(\n      object,\n      function (value, key) {\n        result[key] = deep ? copy(value, deep) : value\n      }\n    )\n  }\n  return result\n}\n\n/**\n * 辅助 get 函数，持有最后找到的值，避免频繁的创建临时对象\n */\nconst valueHolder: ValueHolder = {\n  value: env.UNDEFINED\n}\n\n/**\n * 从对象中查找一个 keypath\n *\n * 返回值是空时，表示没找到值\n *\n * @param object\n * @param keypath\n * @return\n */\nexport function get(object: any, keypath: string): ValueHolder | undefined {\n\n  /**\n   * 考虑以下情况:\n   *\n   * {\n   *   'a.b.c.d': 1,\n   *   'a.b.c': {\n   *      d: 2\n   *   }\n   * }\n   *\n   * 此时 keypath 是 `a.b.c.d`，可以获取到 1\n   * 如果没有这个 key，按 keypath 推进是取不到值的，因为没有 a.b.c 对象\n   * 个人觉得没有必要支持字面量，情况实在太多，会把这个函数搞的性能很差\n   */\n\n  keypathUtil.each(\n    keypath,\n    function (key, isLast) {\n\n      if (object != env.NULL) {\n\n        // 先直接取值\n        let value = object[key],\n\n        // 紧接着判断值是否存在\n        // 下面会处理计算属性的值，不能在它后面设置 hasValue\n        hasValue = isDef(value)\n\n        // 如果是计算属性，取计算属性的值\n        if (value && is.func(value.get)) {\n          value = value.get()\n        }\n\n        if (isLast) {\n          if (hasValue) {\n            valueHolder.value = value\n            object = valueHolder\n          }\n          else {\n            object = env.UNDEFINED\n          }\n        }\n        else {\n          object = value\n        }\n      }\n      else {\n        object = env.UNDEFINED\n        return env.FALSE\n      }\n\n    }\n  )\n\n  return object\n\n}\n\n/**\n * 为对象设置一个键值对\n *\n * @param object\n * @param keypath\n * @param value\n * @param autofill 是否自动填充不存在的对象，默认自动填充\n */\nexport function set(object: Object, keypath: string, value: any, autofill?: boolean): void {\n  keypathUtil.each(\n    keypath,\n    function (key, isLast) {\n      if (isLast) {\n        object[key] = value\n      }\n      else if (object[key]) {\n        object = object[key]\n      }\n      else if (autofill) {\n        object = object[key] = {}\n      }\n      else {\n        return env.FALSE\n      }\n    }\n  )\n}\n\n/**\n * 对象是否包含某个 key\n *\n * @param object\n * @param key\n * @return\n */\nexport function has(object: Object, key: string | number): boolean {\n  // 不用 hasOwnProperty，性能差\n  return isDef(object[key])\n}\n\n/**\n * 是否是空对象\n *\n * @param object\n * @return\n */\nexport function falsy(object: any): boolean {\n  return !is.object(object)\n    || is.array(object)\n    || !keys(object).length\n}","import * as env from '../util/env'\nimport isDef from './isDef'\n\nexport default function (target: any, defaultValue?: string): string {\n  return target != env.NULL && target.toString\n    ? target.toString()\n    : isDef(defaultValue)\n      ? defaultValue as string\n      : env.EMPTY_STRING\n}\n","import * as is from './is'\nimport * as env from './env'\nimport toString from '../function/toString'\n\n/**\n * 是否有原生的日志特性，没有必要单独实现\n */\nconst nativeConsole: Console | null = typeof console !== env.RAW_UNDEFINED ? console : env.NULL,\n\n/**\n * 当前是否是源码调试，如果开启了代码压缩，empty function 里的注释会被干掉\n */\nuseSource = /yox/.test(toString(env.EMPTY_FUNCTION)),\n\n/**\n * console 样式前缀\n */\nstylePrefix = '%c'\n\n/**\n * 全局调试开关\n *\n * 比如开发环境，开了 debug 模式，但是有时候觉得看着一堆日志特烦，想强制关掉\n * 比如线上环境，关了 debug 模式，为了调试，想强制打开\n */\nfunction isDebug() {\n  if (env.WINDOW) {\n    let debug = env.WINDOW['DEBUG']\n    if (is.boolean(debug)) {\n      return debug\n    }\n  }\n  return useSource\n}\n\nfunction getStyle(backgroundColor: string) {\n  return `background-color:${backgroundColor};border-radius:20px;color:#fff;font-size:10px;padding:3px 6px;`\n}\n\n/**\n * 打印 debug 日志\n *\n * @param msg\n */\nexport function debug(msg: string, tag?: string): void {\n  if (nativeConsole && isDebug()) {\n    nativeConsole.log(stylePrefix + (tag || 'Yox debug'), getStyle('#888'), msg)\n  }\n}\n\n/**\n * 打印 info 日志\n *\n * @param msg\n */\nexport function info(msg: string, tag?: string): void {\n  if (nativeConsole && isDebug()) {\n    nativeConsole.log(stylePrefix + (tag || 'Yox info'), getStyle('#2db7f5'), msg)\n  }\n}\n\n/**\n * 打印 success 日志\n *\n * @param msg\n */\nexport function success(msg: string, tag?: string): void {\n  if (nativeConsole && isDebug()) {\n    nativeConsole.log(stylePrefix + (tag || 'Yox success'), getStyle('#19be6b'), msg)\n  }\n}\n\n/**\n * 打印 warn 日志\n *\n * @param msg\n */\nexport function warn(msg: string, tag?: string): void {\n  if (nativeConsole && isDebug()) {\n    nativeConsole.warn(stylePrefix + (tag || 'Yox warn'), getStyle('#f90'), msg)\n  }\n}\n\n/**\n * 打印 error 日志\n *\n * @param msg\n */\nexport function error(msg: string, tag?: string): void {\n  if (nativeConsole) {\n    nativeConsole.error(stylePrefix + (tag || 'Yox error'), getStyle('#ed4014'), msg)\n  }\n}\n\n/**\n * 致命错误，中断程序\n *\n * @param msg\n */\nexport function fatal(msg: string, tag?: string): never {\n  throw new Error(`[${tag || 'Yox fatal'}]: ${msg}`)\n}\n","import execute from '../function/execute'\n\nimport * as is from './is'\nimport * as env from './env'\nimport * as array from './array'\nimport * as object from './object'\nimport * as string from './string'\nimport * as logger from './logger'\n\nimport CustomEvent from './CustomEvent'\n\nimport * as type from '../../../yox-type/src/type'\nimport EmitterOptions from '../../../yox-type/src/options/Emitter'\nimport EmitterInterface from '../../../yox-type/src/event/Emitter'\n\ninterface Namespace {\n  name: string\n  ns: string\n}\n\nexport default class Emitter implements EmitterInterface {\n\n  /**\n   * 是否开启命名空间\n   */\n  ns: boolean\n\n  /**\n   * 已注册的事件监听\n   */\n  listeners: Record<string, EmitterOptions[]>\n\n  /**\n   * 原生事件监听，一个事件对应一个 listener\n   */\n  nativeListeners?: Record<string, type.nativeListener>\n\n  constructor(ns?: boolean) {\n    this.ns = ns || env.FALSE\n    this.listeners = {}\n  }\n\n  /**\n   * 发射事件\n   *\n   * @param bullet 事件或事件名称\n   * @param data 事件数据\n   */\n  fire(\n    type: string,\n    args: any[] | void,\n    filter?: (type: string, args: any[] | void, options: EmitterOptions) => boolean | void\n  ): boolean {\n\n    let instance = this,\n\n    { name, ns } = parseNamespace(instance.ns, type),\n\n    list = instance.listeners[name],\n\n    isComplete = env.TRUE\n\n    if (list) {\n\n      // 避免遍历过程中，数组发生变化，比如增删了\n      list = object.copy(list)\n\n      // 判断是否是发射事件\n      // 如果 args 的第一个参数是 CustomEvent 类型，表示发射事件\n      // 因为事件处理函数的参数列表是 (event, data)\n      const event = args && args[0] instanceof CustomEvent\n        ? args[0] as CustomEvent\n        : env.UNDEFINED\n\n      array.each(\n        list,\n        function (options: EmitterOptions, _: number) {\n\n          // 命名空间不匹配\n          if (!matchNamespace(ns, options)\n            // 在 fire 过程中被移除了\n            || !array.has(list, options)\n            // 传了 filter，则用 filter 判断是否过滤此 options\n            || (filter && !filter(type, args, options))\n          ) {\n            return\n          }\n\n          // 为 event 对象加上当前正在处理的 listener\n          // 这样方便业务层移除事件绑定\n          // 比如 on('xx', function) 这样定义了匿名 listener\n          // 在这个 listener 里面获取不到当前 listener 的引用\n          // 为了能引用到，有时候会先定义 var listener = function,\n          // 然后再 on('xx', listener) 这样其实是没有必要的\n          if (event) {\n            event.listener = options.fn\n          }\n\n          let result = execute(options.fn, options.ctx, args)\n\n          if (event) {\n            event.listener = env.UNDEFINED\n          }\n\n          // 执行次数\n          options.num = options.num ? (options.num + 1) : 1\n\n          // 注册的 listener 可以指定最大执行次数\n          if (options.num === options.max) {\n            instance.off(type, options.fn)\n          }\n\n          // 如果没有返回 false，而是调用了 event.stop 也算是返回 false\n          if (event) {\n            if (result === env.FALSE) {\n              event.prevent().stop()\n            }\n            else if (event.isStoped) {\n              result = env.FALSE\n            }\n          }\n\n          if (result === env.FALSE) {\n            return isComplete = env.FALSE\n          }\n        }\n      )\n\n    }\n\n    return isComplete\n\n  }\n\n  /**\n   * 注册监听\n   *\n   * @param type\n   * @param listener\n   */\n  on(\n    type: string,\n    listener?: Function | EmitterOptions\n  ): void {\n\n    const instance = this,\n\n    { listeners } = instance,\n\n    options: EmitterOptions = is.func(listener)\n      ? { fn: listener as Function }\n      : listener as EmitterOptions\n\n    if (is.object(options) && is.func(options.fn)) {\n      const { name, ns } = parseNamespace(instance.ns, type)\n      options.ns = ns\n      array.push(\n        listeners[name] || (listeners[name] = []),\n        options\n      )\n    }\n    else if (process.env.NODE_ENV === 'dev') {\n      logger.fatal(`Invoke emitter.on(type, listener) failed.`)\n    }\n\n  }\n\n  /**\n   * 取消监听\n   *\n   * @param type\n   * @param listener\n   */\n  off(\n    type?: string,\n    listener?: Function\n  ): void {\n\n    const instance = this,\n\n    { listeners } = instance\n\n    if (type) {\n\n      const { name, ns } = parseNamespace(instance.ns, type),\n\n      matchListener = createMatchListener(listener),\n\n      each = function (list: EmitterOptions[], name: string) {\n        array.each(\n          list,\n          function (options: EmitterOptions, index: number) {\n            if (matchListener(options) && matchNamespace(ns, options)) {\n              list.splice(index, 1)\n            }\n          },\n          env.TRUE\n        )\n        if (!list.length) {\n          delete listeners[name]\n        }\n      }\n\n      if (name) {\n        if (listeners[name]) {\n          each(listeners[name], name)\n        }\n      }\n      else if (ns) {\n        object.each(listeners, each)\n      }\n\n    }\n    else {\n      // 清空\n      instance.listeners = {}\n      // 在开发阶段进行警告，比如传了 type 进来，type 是个空值\n      // 但你不知道它是空值\n      if (process.env.NODE_ENV === 'dev') {\n        if (arguments.length > 0) {\n          logger.warn(`emitter.off(type) is invoked, but the \"type\" argument is undefined or null.`)\n        }\n      }\n    }\n\n  }\n\n  /**\n   * 是否已监听某个事件\n   *\n   * @param type\n   * @param listener\n   */\n  has(\n    type: string,\n    listener?: Function\n  ): boolean {\n\n    let instance = this,\n\n    { listeners } = instance,\n\n    { name, ns } = parseNamespace(instance.ns, type),\n\n    result = env.TRUE,\n\n    matchListener = createMatchListener(listener),\n\n    each = function (list: EmitterOptions[]) {\n      array.each(\n        list,\n        function (options: EmitterOptions) {\n          if (matchListener(options) && matchNamespace(ns, options)) {\n            return result = env.FALSE\n          }\n        }\n      )\n      return result\n    }\n\n    if (name) {\n      if (listeners[name]) {\n        each(listeners[name])\n      }\n    }\n    else if (ns) {\n      object.each(listeners, each)\n    }\n\n    return !result\n\n  }\n\n}\n\n/**\n * 把事件类型解析成命名空间格式\n *\n * @param ns\n * @param type\n */\nfunction parseNamespace(ns: boolean, type: string): Namespace {\n\n  const result = {\n    name: type,\n    ns: env.EMPTY_STRING,\n  }\n\n  if (ns) {\n    const index = string.indexOf(type, '.')\n    if (index >= 0) {\n      result.name = string.slice(type, 0, index)\n      result.ns = string.slice(type, index + 1)\n    }\n  }\n\n  return result\n\n}\n\n\nfunction matchTrue(options: EmitterOptions) {\n  return env.TRUE\n}\n\n/**\n * 外部会传入 Function 或 EmitterOptions 或 空\n *\n * 这里根据传入值的不同类型，创建不同的判断函数\n *\n * 如果传入的是 EmitterOptions，则全等判断\n *\n * 如果传入的是 Function，则判断函数是否全等\n *\n * 如果传入的是空，则直接返回 true\n *\n * @param listener\n */\nfunction createMatchListener(listener: Function | void): (options: EmitterOptions) => boolean {\n  return is.func(listener)\n      ? function (options: EmitterOptions) {\n          return listener === options.fn\n        }\n      : matchTrue\n}\n\n/**\n * 判断 options 是否能匹配命名空间\n *\n * 如果 namespace 和 options.ns 都不为空，则需完全匹配\n *\n * 如果他们两个其中任何一个为空，则不判断命名空间\n *\n * @param namespace\n * @param options\n */\nfunction matchNamespace(namespace: string, options: EmitterOptions): boolean {\n  const { ns } = options\n  return ns && namespace\n    ? ns === namespace\n    : env.TRUE\n}","import * as is from '../util/is'\nimport toString from './toString'\n\nexport default function (target: any): boolean {\n  return is.func(target) && /native code/.test(toString(target))\n}","import * as env from '../util/env'\nimport isNative from './isNative'\n\ndeclare const setImmediate: Function\n\nlet nextTick: Function\n\n// IE (10+) 和 node\nif (typeof setImmediate === env.RAW_FUNCTION && isNative(setImmediate)) {\n  nextTick = setImmediate\n}\n// 用 MessageChannel 去做 setImmediate 的 polyfill\n// 原理是将新的 message 事件加入到原有的 dom events 之后\n// 兼容性 IE10+ 和其他标准浏览器\nif (typeof MessageChannel === env.RAW_FUNCTION && isNative(MessageChannel)) {\n  nextTick = function (fn: any) {\n    const channel = new MessageChannel()\n    channel.port1.onmessage = fn\n    channel.port2.postMessage(1)\n  }\n}\nelse {\n  nextTick = setTimeout\n}\n\nexport default nextTick\n","import NextTaskInterface from '../../../yox-type/src/interface/NextTask'\nimport TaskInterface from '../../../yox-type/src/interface/Task'\n\nimport * as array from './array'\nimport execute from '../function/execute'\nimport nextTick from '../function/nextTick'\n\nlet shared: NextTask | void\n\nexport default class NextTask implements NextTaskInterface {\n\n  /**\n   * 全局单例\n   */\n  public static shared(): NextTask {\n    return shared || (shared = new NextTask())\n  }\n\n  /**\n   * 异步队列\n   */\n  tasks: TaskInterface[]\n\n  constructor() {\n    this.tasks = []\n  }\n\n  /**\n   * 在队尾添加异步任务\n   */\n  append(func: Function, context?: any): void {\n    const instance = this, { tasks } = instance\n    array.push(\n      tasks,\n      {\n        fn: func,\n        ctx: context\n      }\n    )\n    if (tasks.length === 1) {\n      nextTick(\n        function () {\n          instance.run()\n        }\n      )\n    }\n  }\n\n  /**\n   * 在队首添加异步任务\n   */\n  prepend(func: Function, context?: any): void {\n    const instance = this, { tasks } = instance\n    array.unshift(\n      tasks,\n      {\n        fn: func,\n        ctx: context\n      }\n    )\n    if (tasks.length === 1) {\n      nextTick(\n        function () {\n          instance.run()\n        }\n      )\n    }\n  }\n\n  /**\n   * 清空异步队列\n   */\n  clear(): void {\n    this.tasks.length = 0\n  }\n\n  /**\n   * 立即执行异步任务，并清空队列\n   */\n  run(): void {\n    const { tasks } = this\n    if (tasks.length) {\n      this.tasks = []\n      array.each(\n        tasks,\n        function (task) {\n          execute(task.fn, task.ctx)\n        }\n      )\n    }\n  }\n\n}\n","export const SYNTAX_IF = '#if'\nexport const SYNTAX_ELSE = 'else'\nexport const SYNTAX_ELSE_IF = 'else if'\nexport const SYNTAX_EACH = '#each'\nexport const SYNTAX_PARTIAL = '#partial'\nexport const SYNTAX_IMPORT = '>'\nexport const SYNTAX_SPREAD = '...'\nexport const SYNTAX_COMMENT = /^!\\s/\n\nexport const SLOT_DATA_PREFIX = '$slot_'\nexport const SLOT_NAME_DEFAULT = 'children'\n\nexport const HINT_STRING = 1\nexport const HINT_NUMBER = 2\nexport const HINT_BOOLEAN = 3\n\nexport const DIRECTIVE_ON = 'on'\nexport const DIRECTIVE_LAZY = 'lazy'\nexport const DIRECTIVE_MODEL = 'model'\nexport const DIRECTIVE_EVENT = 'event'\nexport const DIRECTIVE_BINDING = 'binding'\nexport const DIRECTIVE_CUSTOM = 'o'\n\nexport const HOOK_BEFORE_CREATE = 'beforeCreate'\nexport const HOOK_AFTER_CREATE = 'afterCreate'\nexport const HOOK_BEFORE_MOUNT = 'beforeMount'\nexport const HOOK_AFTER_MOUNT = 'afterMount'\nexport const HOOK_BEFORE_UPDATE = 'beforeUpdate'\nexport const HOOK_AFTER_UPDATE = 'afterUpdate'\nexport const HOOK_BEFORE_DESTROY = 'beforeDestroy'\nexport const HOOK_AFTER_DESTROY = 'afterDestroy'\n","let guid = 0\n\nexport default function (): number {\n  return ++guid\n}\n","// vnode.data 内部使用的几个字段\n\nexport const ID = '$id'\n\nexport const VNODE = '$vnode'\n\nexport const LOADING = '$loading'\n\nexport const COMPONENT = '$component'\n\nexport const LEAVING = '$leaving'","import * as env from '../../yox-common/src/util/env'\nimport * as object from '../../yox-common/src/util/object'\n\nimport VNode from '../../yox-type/src/vnode/VNode'\nimport Attribute from '../../yox-type/src/vnode/Attribute'\n\nexport function update(api: any, vnode: VNode, oldVnode?: VNode) {\n\n  const { node, nativeAttrs } = vnode,\n\n  oldNativeAttrs = oldVnode && oldVnode.nativeAttrs\n\n  if (nativeAttrs || oldNativeAttrs) {\n\n    const newValue = nativeAttrs || env.EMPTY_OBJECT,\n\n    oldValue = oldNativeAttrs || env.EMPTY_OBJECT\n\n    object.each(\n      newValue,\n      function (attr: Attribute, name: string) {\n        if (!oldValue[name]\n          || attr.value !== oldValue[name].value\n        ) {\n          api.attr(node, name, attr.value)\n        }\n      }\n    )\n\n    object.each(\n      oldValue,\n      function (_: Attribute, name: string) {\n        if (!newValue[name]) {\n          api.removeAttr(node, name)\n        }\n      }\n    )\n\n  }\n\n}\n","import * as env from '../../yox-common/src/util/env'\nimport * as object from '../../yox-common/src/util/object'\n\nimport VNode from '../../yox-type/src/vnode/VNode'\nimport Property from '../../yox-type/src/vnode/Property'\n\nexport function update(api: any, vnode: VNode, oldVnode?: VNode) {\n\n  const { node, nativeProps } = vnode,\n\n  oldNativeProps = oldVnode && oldVnode.nativeProps\n\n  if (nativeProps || oldNativeProps) {\n\n    const newValue = nativeProps || env.EMPTY_OBJECT,\n\n    oldValue = oldNativeProps || env.EMPTY_OBJECT\n\n    object.each(\n      newValue,\n      function (prop: Property, name: string) {\n        if (!oldValue[name]\n          || prop.value !== oldValue[name].value\n        ) {\n          api.prop(node, name, prop.value)\n        }\n      }\n    )\n\n    object.each(\n      oldValue,\n      function (prop: Property, name: string) {\n        if (!newValue[name]) {\n          api.removeProp(node, name, prop.hint)\n        }\n      }\n    )\n\n  }\n\n}","import * as env from '../../yox-common/src/util/env'\nimport * as object from '../../yox-common/src/util/object'\n\nimport VNode from '../../yox-type/src/vnode/VNode'\nimport Directive from '../../yox-type/src/vnode/Directive'\n\nimport * as field from './field'\n\nexport function update(vnode: VNode, oldVnode?: VNode) {\n\n  const { data, directives } = vnode,\n\n  oldDirectives = oldVnode && oldVnode.directives\n\n  if (directives || oldDirectives) {\n\n    const node = data[field.COMPONENT] || vnode.node,\n\n    isKeypathChange = oldVnode && vnode.keypath !== oldVnode.keypath,\n\n    newValue = directives || env.EMPTY_OBJECT,\n\n    oldValue = oldDirectives || env.EMPTY_OBJECT\n\n    object.each(\n      newValue,\n      function (directive: Directive, name: string) {\n        const { bind, unbind } = directive.hooks\n        if (!oldValue[name]) {\n          bind(node, directive, vnode)\n        }\n        else if (directive.value !== oldValue[name].value\n          || isKeypathChange\n        ) {\n          if (unbind) {\n            unbind(node, oldValue[name], oldVnode as VNode)\n          }\n          bind(node, directive, vnode)\n        }\n      }\n    )\n\n    object.each(\n      oldValue,\n      function (directive: Directive, name: string) {\n        if (!newValue[name]) {\n          const { unbind } = directive.hooks\n          if (unbind) {\n            unbind(node, directive, oldVnode as VNode)\n          }\n        }\n      }\n    )\n\n  }\n\n}\n\nexport function remove(vnode: VNode) {\n  const { directives } = vnode\n  if (directives) {\n    const node = vnode.data[field.COMPONENT] || vnode.node\n    object.each(\n      directives,\n      function (directive: Directive) {\n        const { unbind } = directive.hooks\n        if (unbind) {\n          unbind(node, directive, vnode)\n        }\n      }\n    )\n  }\n}\n","import VNode from '../../yox-type/src/vnode/VNode'\n\nimport * as field from './field'\n\nexport function update(vnode: VNode, oldVnode?: VNode) {\n\n  let { data, ref, props, slots, context } = vnode, node: any\n\n  if (vnode.isComponent) {\n    node = data[field.COMPONENT]\n    // 更新时才要 set\n    // 因为初始化时，所有这些都经过构造函数完成了\n    if (oldVnode) {\n      if (props) {\n        node.set(node.checkPropTypes(props))\n      }\n      if (slots) {\n        node.set(slots)\n      }\n    }\n  }\n  else {\n    node = vnode.node\n  }\n\n  if (ref) {\n    const refs = context.$refs\n    if (refs) {\n      refs[ref] = node\n    }\n  }\n\n}\n","import * as is from '../../yox-common/src/util/is'\nimport * as env from '../../yox-common/src/util/env'\nimport * as array from '../../yox-common/src/util/array'\nimport * as object from '../../yox-common/src/util/object'\nimport * as logger from '../../yox-common/src/util/logger'\n\nimport guid from '../../yox-common/src/function/guid'\nimport isDef from '../../yox-common/src/function/isDef'\nimport execute from '../../yox-common/src/function/execute'\n\nimport * as type from '../../yox-type/src/type'\nimport API from '../../yox-type/src/interface/API'\nimport Yox from '../../yox-type/src/interface/Yox'\nimport VNode from '../../yox-type/src/vnode/VNode'\nimport YoxOptions from '../../yox-type/src/options/Yox'\n\nimport * as field from './field'\n\nimport * as nativeAttr from './nativeAttr'\nimport * as nativeProp from './nativeProp'\nimport * as directive from './directive'\nimport * as component from './component'\n\nfunction isPatchable(vnode: VNode, oldVnode: VNode): boolean {\n  return vnode.tag === oldVnode.tag\n    && vnode.key === oldVnode.key\n}\n\nfunction createKeyToIndex(vnodes: (VNode | void)[], startIndex: number, endIndex: number): Record<string, number> {\n\n  let result: Record<string, number> | void,\n\n  vnode: VNode | void,\n\n  key: string | void\n\n  while (startIndex <= endIndex) {\n    vnode = vnodes[startIndex]\n    if (vnode && (key = vnode.key)) {\n      if (!result) {\n        result = {}\n      }\n      result[key] = startIndex\n    }\n    startIndex++\n  }\n\n  return result || env.EMPTY_OBJECT\n\n}\n\nfunction insertBefore(api: API, parentNode: Node, node: Node, referenceNode: Node | void) {\n  if (referenceNode) {\n    api.before(parentNode, node, referenceNode)\n  }\n  else {\n    api.append(parentNode, node)\n  }\n}\n\nfunction createComponent(vnode: VNode, options: YoxOptions) {\n\n  // 渲染同步加载的组件时，vnode.node 为空\n  // 渲染异步加载的组件时，vnode.node 不为空，因为初始化用了占位节点\n  const child = (vnode.parent || vnode.context).create(options, vnode, vnode.node),\n\n  // 组件初始化创建的元素\n  node = child.$el as Node\n\n  if (node) {\n    vnode.node = node\n  }\n  else if (process.env.NODE_ENV === 'dev') {\n    logger.fatal(`The root element of component [${vnode.tag}] is not found.`)\n  }\n\n  vnode.data[field.COMPONENT] = child\n  vnode.data[field.LOADING] = env.FALSE\n\n  component.update(vnode)\n  directive.update(vnode)\n\n  return child\n\n}\n\nfunction createData(): type.data {\n  const data = {}\n  data[field.ID] = guid()\n  return data\n}\n\nfunction createVnode(api: API, vnode: VNode) {\n\n  let { tag, node, data, isComponent, isComment, isText, isStyle, children, text, html, context } = vnode\n\n  if (node && data) {\n    return\n  }\n\n  data = createData()\n\n  vnode.data = data\n\n  if (isText) {\n    vnode.node = api.createText(text as string)\n    return\n  }\n\n  if (isComment) {\n    vnode.node = api.createComment(text as string)\n    return\n  }\n\n  if (isComponent) {\n\n    let isAsync = env.TRUE\n\n    context.loadComponent(\n      tag as string,\n      function (options: YoxOptions) {\n        if (object.has(data, field.LOADING)) {\n          // 异步组件\n          if (data[field.LOADING]) {\n            // 尝试使用最新的 vnode\n            if (data[field.VNODE]) {\n              vnode = data[field.VNODE]\n              // 用完就删掉\n              delete data[field.VNODE]\n            }\n            enterVnode(\n              vnode,\n              createComponent(vnode, options)\n            )\n          }\n        }\n        // 同步组件\n        else {\n          createComponent(vnode, options)\n          isAsync = env.FALSE\n        }\n      }\n    )\n\n    if (isAsync) {\n      vnode.node = api.createComment(env.RAW_COMPONENT)\n      data[field.LOADING] = env.TRUE\n    }\n\n  }\n  else {\n\n    node = vnode.node = api.createElement(vnode.tag as string, vnode.isSvg)\n\n    if (children) {\n      addVnodes(api, node, children)\n    }\n    else if (text) {\n      api.text(node as Element, text, isStyle)\n    }\n    else if (html) {\n      api.html(node as Element, html, isStyle)\n    }\n\n    nativeAttr.update(api, vnode)\n    nativeProp.update(api, vnode)\n    component.update(vnode)\n    directive.update(vnode)\n\n  }\n}\n\nfunction addVnodes(api: API, parentNode: Node, vnodes: VNode[], startIndex?: number, endIndex?: number, before?: VNode) {\n  let vnode: VNode, start = startIndex || 0, end = isDef(endIndex) ? endIndex as number : vnodes.length - 1\n  while (start <= end) {\n    vnode = vnodes[start]\n    createVnode(api, vnode)\n    insertVnode(api, parentNode, vnode, before)\n    start++\n  }\n}\n\nfunction insertVnode(api: API, parentNode: Node, vnode: VNode, before?: VNode) {\n\n  const { node, data, context } = vnode,\n\n  hasParent = api.parent(node)\n\n  // 这里不调用 insertBefore，避免判断两次\n  if (before) {\n    api.before(parentNode, node, before.node)\n  }\n  else {\n    api.append(parentNode, node)\n  }\n\n  // 普通元素和组件的占位节点都会走到这里\n  // 但是占位节点不用 enter，而是等组件加载回来之后再调 enter\n  if (!hasParent) {\n    let enter: Function | void\n    if (vnode.isComponent) {\n      const component = data[field.COMPONENT]\n      if (component) {\n        enter = function () {\n          enterVnode(vnode, component)\n        }\n      }\n    }\n    else if (!vnode.isStatic && !vnode.isText && !vnode.isComment) {\n      enter = function () {\n        enterVnode(vnode)\n      }\n    }\n    if (enter) {\n      // 执行到这时，组件还没有挂载到 DOM 树\n      // 如果此时直接触发 enter，外部还需要做多余的工作，比如 setTimeout\n      // 索性这里直接等挂载到 DOM 数之后再触发\n      context.$observer.nextTask.prepend(enter)\n    }\n  }\n\n}\n\nfunction removeVnodes(api: API, parentNode: Node, vnodes: (VNode | void)[], startIndex?: number, endIndex?: number) {\n  let vnode: VNode | void, start = startIndex || 0, end = isDef(endIndex) ? endIndex as number : vnodes.length - 1\n  while (start <= end) {\n    vnode = vnodes[start]\n    if (vnode) {\n      removeVnode(api, parentNode, vnode)\n    }\n    start++\n  }\n}\n\nfunction removeVnode(api: API, parentNode: Node, vnode: VNode) {\n  const { node } = vnode\n  if (vnode.isStatic || vnode.isText || vnode.isComment) {\n    api.remove(parentNode, node)\n  }\n  else {\n\n    let done = function () {\n      destroyVnode(api, vnode)\n      api.remove(parentNode, node)\n    },\n\n    component: Yox | void\n\n    if (vnode.isComponent) {\n      component = vnode.data[field.COMPONENT]\n      // 异步组件，还没加载成功就被删除了\n      if (!component) {\n        done()\n        return\n      }\n    }\n\n    leaveVnode(vnode, component, done)\n\n  }\n}\n\nfunction destroyVnode(api: API, vnode: VNode) {\n\n  /**\n   * 如果一个子组件的模板是这样写的：\n   *\n   * <div>\n   *   {{#if visible}}\n   *      <slot name=\"children\"/>\n   *   {{/if}}\n   * </div>\n   *\n   * 当 visible 从 true 变为 false 时，不能销毁 slot 导入的任何 vnode\n   * 不论是组件或是元素，都不能销毁，只能简单的 remove，\n   * 否则子组件下一次展现它们时，会出问题\n   */\n\n  const { data, children, parent } = vnode\n\n  if (parent\n    // 如果宿主组件正在销毁，$vnode 属性会在调 destroy() 之前被删除\n    // 这里表示的是宿主组件还没被销毁\n    // 如果宿主组件被销毁了，则它的一切都要进行销毁\n    && parent.$vnode\n    // 是从外部传入到组件内的\n    && parent !== vnode.context\n  ) {\n    return\n  }\n\n  if (vnode.isComponent) {\n    const component = data[field.COMPONENT]\n    if (component) {\n      directive.remove(vnode)\n      component.destroy()\n    }\n    else [\n      data[field.LOADING] = env.FALSE\n    ]\n  }\n  else {\n    directive.remove(vnode)\n    if (children) {\n      array.each(\n        children,\n        function (child: VNode) {\n          destroyVnode(api, child)\n        }\n      )\n    }\n  }\n\n}\n\n/**\n * vnode 触发 enter hook 时，外部一般会做一些淡入动画\n */\nfunction enterVnode(vnode: VNode, component: Yox | void) {\n  // 如果组件根元素和组件本身都写了 transition\n  // 优先用外面定义的\n  // 因为这明确是在覆盖配置\n  let { data, transition } = vnode\n  if (component && !transition) {\n    // 再看组件根元素是否有 transition\n    transition = (component.$vnode as VNode).transition\n  }\n  execute(data[field.LEAVING])\n  if (transition) {\n    const { enter } = transition\n    if (enter) {\n      enter(\n        vnode.node as HTMLElement\n      )\n      return\n    }\n  }\n}\n\n/**\n * vnode 触发 leave hook 时，外部一般会做一些淡出动画\n * 动画结束后才能移除节点，否则无法产生动画\n * 这里由外部调用 done 来通知内部动画结束\n */\nfunction leaveVnode(vnode: VNode, component: Yox | void, done: () => void) {\n  // 如果组件根元素和组件本身都写了 transition\n  // 优先用外面定义的\n  // 因为这明确是在覆盖配置\n  let { data, transition } = vnode\n  if (component && !transition) {\n    // 再看组件根元素是否有 transition\n    transition = (component.$vnode as VNode).transition\n  }\n  if (transition) {\n    const { leave } = transition\n    if (leave) {\n      leave(\n        vnode.node as HTMLElement,\n        data[field.LEAVING] = function () {\n          if (data[field.LEAVING]) {\n            done()\n            data[field.LEAVING] = env.UNDEFINED\n          }\n        }\n      )\n      return\n    }\n  }\n  // 如果没有淡出动画，直接结束\n  done()\n}\n\nfunction updateChildren(api: API, parentNode: Node, children: VNode[], oldChildren: (VNode | void)[]) {\n\n  let startIndex = 0,\n  endIndex = children.length - 1,\n  startVnode = children[startIndex],\n  endVnode = children[endIndex],\n\n  oldStartIndex = 0,\n  oldEndIndex = oldChildren.length - 1,\n  oldStartVnode = oldChildren[oldStartIndex],\n  oldEndVnode = oldChildren[oldEndIndex],\n\n  oldKeyToIndex: Record<string, number> | void,\n  oldIndex: number | void\n\n  while (oldStartIndex <= oldEndIndex && startIndex <= endIndex) {\n\n    // 下面有设为 UNDEFINED 的逻辑\n    if (!startVnode) {\n      startVnode = children[++startIndex];\n    }\n    else if (!endVnode) {\n      endVnode = children[--endIndex];\n    }\n    else if (!oldStartVnode) {\n      oldStartVnode = oldChildren[++oldStartIndex]\n    }\n    else if (!oldEndVnode) {\n      oldEndVnode = oldChildren[--oldEndIndex]\n    }\n\n    // 从头到尾比较，位置相同且值得 patch\n    else if (isPatchable(startVnode, oldStartVnode)) {\n      patch(api, startVnode, oldStartVnode)\n      startVnode = children[++startIndex]\n      oldStartVnode = oldChildren[++oldStartIndex]\n    }\n\n    // 从尾到头比较，位置相同且值得 patch\n    else if (isPatchable(endVnode, oldEndVnode)) {\n      patch(api, endVnode, oldEndVnode)\n      endVnode = children[--endIndex]\n      oldEndVnode = oldChildren[--oldEndIndex]\n    }\n\n    // 比较完两侧的节点，剩下就是 位置发生改变的节点 和 全新的节点\n\n    // 当 endVnode 和 oldStartVnode 值得 patch\n    // 说明元素被移到右边了\n    else if (isPatchable(endVnode, oldStartVnode)) {\n      patch(api, endVnode, oldStartVnode)\n      insertBefore(\n        api,\n        parentNode,\n        oldStartVnode.node,\n        api.next(oldEndVnode.node)\n      )\n      endVnode = children[--endIndex]\n      oldStartVnode = oldChildren[++oldStartIndex]\n    }\n\n    // 当 oldEndVnode 和 startVnode 值得 patch\n    // 说明元素被移到左边了\n    else if (isPatchable(startVnode, oldEndVnode)) {\n      patch(api, startVnode, oldEndVnode)\n      insertBefore(\n        api,\n        parentNode,\n        oldEndVnode.node,\n        oldStartVnode.node\n      )\n      startVnode = children[++startIndex]\n      oldEndVnode = oldChildren[--oldEndIndex]\n    }\n\n    // 尝试同级元素的 key\n    else {\n\n      if (!oldKeyToIndex) {\n        oldKeyToIndex = createKeyToIndex(oldChildren, oldStartIndex, oldEndIndex)\n      }\n\n      // 新节点之前的位置\n      oldIndex = startVnode.key\n        ? oldKeyToIndex[startVnode.key]\n        : env.UNDEFINED\n\n      // 移动元素\n      if (isDef(oldIndex)) {\n        patch(api, startVnode, oldChildren[oldIndex as number] as VNode)\n        oldChildren[oldIndex as number] = env.UNDEFINED\n      }\n      // 新元素\n      else {\n        createVnode(api, startVnode)\n      }\n\n      insertVnode(api, parentNode, startVnode, oldStartVnode)\n\n      startVnode = children[++startIndex]\n\n    }\n  }\n\n  if (oldStartIndex > oldEndIndex) {\n    addVnodes(\n      api,\n      parentNode,\n      children,\n      startIndex,\n      endIndex,\n      children[endIndex + 1]\n    )\n  }\n  else if (startIndex > endIndex) {\n    removeVnodes(\n      api,\n      parentNode,\n      oldChildren,\n      oldStartIndex,\n      oldEndIndex\n    )\n  }\n}\n\nexport function patch(api: API, vnode: VNode, oldVnode: VNode) {\n\n  if (vnode === oldVnode) {\n    return\n  }\n\n  const { node, data } = oldVnode\n\n  // 如果不能 patch，则删除重建\n  if (!isPatchable(vnode, oldVnode)) {\n    // 同步加载的组件，初始化时不会传入占位节点\n    // 它内部会自动生成一个注释节点，当它的根 vnode 和注释节点对比时，必然无法 patch\n    // 于是走进此分支，为新组件创建一个 DOM 节点，然后继续 createComponent 后面的流程\n    const parentNode = api.parent(node)\n    createVnode(api, vnode)\n    if (parentNode) {\n      insertVnode(api, parentNode, vnode, oldVnode)\n      removeVnode(api, parentNode, oldVnode)\n    }\n    return\n  }\n\n  vnode.node = node\n  vnode.data = data\n\n  // 组件正在异步加载，更新为最新的 vnode\n  // 当异步加载完成时才能用上最新的 vnode\n  if (oldVnode.isComponent && data[field.LOADING]) {\n    data[field.VNODE] = vnode\n    return\n  }\n\n  // 两棵静态子树就别折腾了\n  if (vnode.isStatic && oldVnode.isStatic) {\n    return\n  }\n\n  nativeAttr.update(api, vnode, oldVnode)\n  nativeProp.update(api, vnode, oldVnode)\n  component.update(vnode, oldVnode)\n  directive.update(vnode, oldVnode)\n\n  const { text, html, children, isStyle } = vnode,\n\n  oldText = oldVnode.text,\n  oldHtml = oldVnode.html,\n  oldChildren = oldVnode.children\n\n  if (is.string(text)) {\n    if (text !== oldText) {\n      api.text(node, text, isStyle)\n    }\n  }\n  else if (is.string(html)) {\n    if (html !== oldHtml) {\n      api.html(node as Element, html, isStyle)\n    }\n  }\n  // 两个都有需要 diff\n  else if (children && oldChildren) {\n    if (children !== oldChildren) {\n      updateChildren(api, node, children, oldChildren)\n    }\n  }\n  // 有新的没旧的 - 新增节点\n  else if (children) {\n    if (is.string(oldText) || is.string(oldHtml)) {\n      api.text(node, env.EMPTY_STRING, isStyle)\n    }\n    addVnodes(api, node, children)\n  }\n  // 有旧的没新的 - 删除节点\n  else if (oldChildren) {\n    removeVnodes(api, node, oldChildren)\n  }\n  // 有旧的 text 没有新的 text\n  else if (is.string(oldText) || is.string(oldHtml)) {\n    api.text(node, env.EMPTY_STRING, isStyle)\n  }\n\n}\n\nexport function create(api: API, node: Node, isComment: boolean, context: Yox, keypath: string): VNode {\n  return {\n    tag: api.tag(node),\n    data: createData(),\n    isComment,\n    node,\n    context,\n    keypath,\n  }\n}\n\nexport function destroy(api: API, vnode: VNode, isRemove?: boolean) {\n  if (isRemove) {\n    const parentNode = api.parent(vnode.node)\n    if (parentNode) {\n      removeVnode(api, parentNode, vnode)\n    }\n    else if (process.env.NODE_ENV === 'dev') {\n      logger.fatal(`Can't destroy vnode without parent node.`)\n    }\n  }\n  else {\n    destroyVnode(api, vnode)\n  }\n}\n","import * as is from '../util/is'\nimport isDef from './isDef'\n\nexport default function (target: any, defaultValue?: number): number {\n  return is.numeric(target)\n    ? +target\n    : isDef(defaultValue)\n      ? defaultValue as number\n      : 0\n}\n","/**\n * 字面量\n */\nexport const LITERAL = 1\n\n/**\n * 标识符\n */\nexport const IDENTIFIER = 2\n\n/**\n * 对象属性或数组下标\n */\nexport const MEMBER = 3\n\n/**\n * 一元表达式，如 - a\n */\nexport const UNARY = 4\n\n/**\n * 二元表达式，如 a + b\n */\nexport const BINARY = 5\n\n/**\n * 三元表达式，如 a ? b : c\n */\nexport const TERNARY = 6\n\n/**\n * 数组表达式，如 [ 1, 2, 3 ]\n */\nexport const ARRAY = 7\n\n/**\n * 对象表达式，如 { name: 'yox' }\n */\nexport const OBJECT = 8\n\n/**\n * 函数调用表达式，如 a()\n */\nexport const CALL = 9\n","import isDef from '../../yox-common/src/function/isDef'\nimport toString from '../../yox-common/src/function/toString'\n\nimport * as env from '../../yox-common/src/util/env'\nimport * as array from '../../yox-common/src/util/array'\nimport * as keypathUtil from '../../yox-common/src/util/keypath'\n\nimport * as nodeType from './nodeType'\n\nimport Node from './node/Node'\nimport Identifier from './node/Identifier'\nimport Literal from './node/Literal'\nimport Member from './node/Member'\nimport Ternary from './node/Ternary'\nimport Binary from './node/Binary'\nimport Unary from './node/Unary'\nimport Call from './node/Call'\n\nimport ArrayNode from './node/Array'\nimport ObjectNode from './node/Object'\n\nexport function createArray(nodes: Node[], raw: string): ArrayNode {\n  return {\n    type: nodeType.ARRAY,\n    raw,\n    nodes,\n  }\n}\n\nexport function createBinary(a: Node, op: string, b: Node, raw: string): Binary {\n  return {\n    type: nodeType.BINARY,\n    raw,\n    a,\n    op,\n    b,\n  }\n}\n\nexport function createCall(name: Node, args: Node[], raw: string): Call {\n  return {\n    type: nodeType.CALL,\n    raw,\n    name,\n    args,\n  }\n}\n\nfunction createIdentifierInner(raw: string, name: string, lookup: boolean | void, offset: number | void, sk: string | void): Identifier {\n  return {\n    type: nodeType.IDENTIFIER,\n    raw,\n    name,\n    lookup: lookup === env.FALSE ? lookup : env.UNDEFINED,\n    offset: offset > 0 ? offset : env.UNDEFINED,\n    sk: isDef(sk) ? sk as string : name,\n  }\n}\n\nfunction createMemberInner(raw: string, props: Node[], lookup: boolean | void, offset: number, sk: string | void) {\n  return {\n    type: nodeType.MEMBER,\n    raw,\n    props,\n    lookup: lookup === env.FALSE ? lookup : env.UNDEFINED,\n    offset: offset > 0 ? offset : env.UNDEFINED,\n    sk,\n  }\n}\n\nexport function createIdentifier(raw: string, name: string, isProp?: boolean): Identifier | Literal {\n\n  let lookup: boolean | void, offset: number | void\n\n  if (name === env.KEYPATH_CURRENT\n    || name === env.KEYPATH_PARENT\n  ) {\n    lookup = env.FALSE\n    if (name === env.KEYPATH_PARENT) {\n      offset = 1\n    }\n    name = env.EMPTY_STRING\n  }\n\n  // 对象属性需要区分 a.b 和 a[b]\n  // 如果不借用 Literal 无法实现这个判断\n  // 同理，如果用了这种方式，就无法区分 a.b 和 a['b']，但是无所谓，这两种表示法本就一个意思\n\n  return isProp\n    ? createLiteral(name, raw)\n    : createIdentifierInner(raw, name, lookup, offset)\n\n}\n\nexport function createLiteral(value: any, raw: string): Literal {\n  return {\n    type: nodeType.LITERAL,\n    raw,\n    value,\n  }\n}\n\nexport function createObject(keys: string[], values: Node[], raw: string): ObjectNode {\n  return {\n    type: nodeType.OBJECT,\n    raw,\n    keys,\n    values,\n  }\n}\n\nexport function createTernary(test: Node, yes: Node, no: Node, raw: string): Ternary {\n  return {\n    type: nodeType.TERNARY,\n    raw,\n    test,\n    yes,\n    no,\n  }\n}\n\nexport function createUnary(op: string, a: Node, raw: string): Unary {\n  return {\n    type: nodeType.UNARY,\n    raw,\n    op,\n    a,\n  }\n}\n\nfunction getLiteralNode(nodes: Node[], index: number): Literal | void {\n  if (nodes[index]\n    && nodes[index].type === nodeType.LITERAL\n  ) {\n    return nodes[index] as Literal\n  }\n}\n\n/**\n * 通过判断 nodes 来决定是否需要创建 Member\n *\n * 创建 Member 至少需要 nodes 有两个元素\n *\n * nodes 元素类型没有限制，可以是 Identifier、Literal、Call，或是别的完整表达式\n *\n * @param raw\n * @param nodes\n */\nexport function createMemberIfNeeded(raw: string, nodes: (Node | Identifier | Literal)[]): Node | Identifier | Member {\n\n  let { length } = nodes,\n\n  lookup: boolean | void,\n\n  offset = 0,\n\n  staticKeypath: string | void,\n\n  name = env.EMPTY_STRING,\n\n  list: (Node | Identifier | Literal)[] = [],\n\n  literal: Literal | void,\n\n  identifier: Identifier\n\n  if (length > 1) {\n\n    // lookup 要求第一位元素是 Identifier，且它的 lookup 是 true 才为 true\n    // 其他情况都为 false，如 \"11\".length 第一位元素是 Literal，不存在向上寻找的需求\n    if (nodes[0].type === nodeType.IDENTIFIER) {\n\n      identifier = nodes[0] as Identifier\n\n      name = identifier.name\n      lookup = identifier.lookup\n      staticKeypath = identifier.sk\n\n      if (identifier.offset > 0) {\n        offset += identifier.offset as number\n      }\n\n      if (name) {\n        array.push(list, identifier)\n      }\n\n      // 优化 1：计算 staticKeypath\n      //\n      // 计算 staticKeypath 的唯一方式是，第一位元素是 Identifier，后面都是 Literal\n      // 否则就表示中间包含动态元素，这会导致无法计算静态路径\n      // 如 a.b.c 可以算出 staticKeypath，而 a[b].c 则不行，因为 b 是动态的\n      // 下面这段属于性能优化，避免在运行时反复计算 Member 的 keypath\n\n      // 优化 2：计算 offset 并智能转成 Identifier\n      //\n      // 比如 ../../xx 这样的表达式，应优化成 offset = 2，并转成 Identifier\n\n      for (let i = 1; i < length; i++) {\n        literal = getLiteralNode(nodes, i)\n        if (literal) {\n          if (literal.raw === env.KEYPATH_PARENT) {\n            offset += 1\n            continue\n          }\n          if (isDef(staticKeypath)\n            && literal.raw !== env.KEYPATH_CURRENT\n          ) {\n            staticKeypath = keypathUtil.join(staticKeypath as string, toString(literal.value))\n          }\n        }\n        else {\n          staticKeypath = env.UNDEFINED\n        }\n        array.push(list, nodes[i])\n      }\n\n      // 表示 nodes 中包含路径，并且路径节点被干掉了\n      if (list.length < length) {\n        nodes = list\n        // 剩下的节点，第一个如果是 Literal，把它转成 Identifier\n        literal = getLiteralNode(nodes, 0)\n        if (literal) {\n          name = literal.value\n          nodes[0] = createIdentifierInner(literal.raw, name, lookup, offset)\n        }\n      }\n\n    }\n\n    // 如果全是路径节点，如 ../../this，nodes 为空数组\n    // 如果剩下一个节点，则可转成标识符\n    return nodes.length < 2\n      ? createIdentifierInner(raw, name, lookup, offset, staticKeypath)\n      : createMemberInner(raw, nodes, lookup, offset, staticKeypath)\n\n  }\n\n  return nodes[0]\n\n}\n","export const unary = {\n  '+': { exec(a: any) { return +a } },\n  '-': { exec(a: any) { return -a } },\n  '~': { exec(a: any) { return ~a } },\n  '!': { exec(a: any) { return !a } },\n  '!!': { exec(a: any) { return !!a } },\n}\n\n// 参考 https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence\nexport const binary = {\n  '*': { prec: 14, exec(a: any, b: any) { return a * b } },\n  '/': { prec: 14, exec(a: any, b: any) { return a / b } },\n  '%': { prec: 14, exec(a: any, b: any) { return a % b } },\n  '+': { prec: 13, exec(a: any, b: any) { return a + b } },\n  '-': { prec: 13, exec(a: any, b: any) { return a - b } },\n  '<<': { prec: 12, exec(a: any, b: any) { return a << b } },\n  '>>': { prec: 12, exec(a: any, b: any) { return a >> b } },\n  '>>>': { prec: 12, exec(a: any, b: any) { return a >>> b } },\n  '<': { prec: 11, exec(a: any, b: any) { return a < b } },\n  '<=': { prec: 11, exec(a: any, b: any) { return a <= b } },\n  '>': { prec: 11, exec(a: any, b: any) { return a > b } },\n  '>=': { prec: 11, exec(a: any, b: any) { return a >= b } },\n  '==': { prec: 10, exec(a: any, b: any) { return a == b } },\n  '!=': { prec: 10, exec(a: any, b: any) { return a != b } },\n  '===': { prec: 10, exec(a: any, b: any) { return a === b } },\n  '!==': { prec: 10, exec(a: any, b: any) { return a !== b } },\n  '&': { prec: 9, exec(a: any, b: any) { return a & b } },\n  '^': { prec: 8, exec(a: any, b: any) { return a ^ b } },\n  '|': { prec: 7, exec(a: any, b: any) { return a | b } },\n  '&&': { prec: 6, exec(a: any, b: any) { return a && b } },\n  '||': { prec: 5, exec(a: any, b: any) { return a || b } },\n\n  '->': {\n    prec: 0,\n    exec(a: number, b: number) {\n      return a > b\n        ? function (callback: (index: number, counter: number) => void) {\n          for (let i = a, index = 0; i > b; i--) {\n            callback(i, index++)\n          }\n        }\n        : function (callback: (index: number, counter: number) => void) {\n          for (let i = a, index = 0; i < b; i++) {\n            callback(i, index++)\n          }\n        }\n    }\n  },\n  '=>': {\n    prec: 0,\n    exec(a: number, b: number) {\n      return a > b\n        ? function (callback: (index: number, counter: number) => void) {\n          for (let i = a, index = 0; i >= b; i--) {\n            callback(i, index++)\n          }\n        }\n        : function (callback: (index: number, counter: number) => void) {\n          for (let i = a, index = 0; i <= b; i++) {\n            callback(i, index++)\n          }\n        }\n    }\n  }\n}\n","import isDef from '../../yox-common/src/function/isDef'\n\nimport * as is from '../../yox-common/src/util/is'\nimport * as env from '../../yox-common/src/util/env'\nimport * as array from '../../yox-common/src/util/array'\nimport * as string from '../../yox-common/src/util/string'\nimport * as object from '../../yox-common/src/util/object'\nimport * as logger from '../../yox-common/src/util/logger'\n\nimport * as creator from './creator'\nimport * as nodeType from './nodeType'\nimport * as interpreter from './interpreter'\n\nimport Node from './node/Node'\nimport Identifier from './node/Identifier'\nimport Literal from './node/Literal'\n\nimport ValueHolder from '../../yox-type/src/interface/ValueHolder'\n\nexport function compile(content: string): Node | void {\n  if (!cache[content]) {\n    const parser = new Parser(content)\n    cache[content] = parser.scanTernary(CODE_EOF)\n  }\n  return cache[content]\n}\n\nexport class Parser {\n\n  end: number\n\n  code: number\n\n  index: number\n\n  content: string\n\n  constructor(content: string) {\n    const instance = this, { length } = content\n    instance.index = -1\n    instance.end = length\n    instance.code = CODE_EOF\n    instance.content = content\n    instance.go()\n  }\n\n  /**\n   * 移动一个字符\n   */\n  go(step?: number) {\n\n    let instance = this, { index, end } = instance\n\n    index += step || 1\n\n    if (index >= 0 && index < end) {\n      instance.code = string.codeAt(instance.content, index)\n      instance.index = index\n    }\n    else {\n      instance.code = CODE_EOF\n      instance.index = index < 0 ? -1 : end\n    }\n\n  }\n\n  /**\n   * 跳过空白符\n   */\n  skip(step?: number) {\n\n    const instance = this\n\n    // 走一步\n    if (instance.code === CODE_EOF) {\n      instance.go(step)\n    }\n\n    // 如果是正向的，停在第一个非空白符左侧\n    // 如果是逆向的，停在第一个非空白符右侧\n    while (env.TRUE) {\n      if (isWhitespace(instance.code)) {\n        instance.go(step)\n      }\n      else {\n        if (step && step < 0) {\n          instance.go()\n        }\n        break\n      }\n    }\n\n  }\n\n  /**\n   * 判断当前字符\n   */\n  is(code: number): boolean {\n    return this.code === code\n  }\n\n  /**\n   * 截取一段字符串\n   *\n   * @param startIndex\n   */\n  pick(startIndex: number, endIndex?: number): string {\n    return string.slice(this.content, startIndex, isDef(endIndex) ? endIndex : this.index)\n  }\n\n  /**\n   * 尝试解析下一个 token\n   */\n  scanToken(): Node | void {\n\n    const instance = this, { code, index } = instance\n\n    if (isIdentifierStart(code)) {\n      return instance.scanTail(\n        index,\n        [\n          instance.scanIdentifier(index)\n        ]\n      )\n    }\n    if (isDigit(code)) {\n      return instance.scanNumber(index)\n    }\n\n    switch (code) {\n\n      case CODE_EOF:\n        return\n\n      // 'x' \"x\"\n      case CODE_SQUOTE:\n      case CODE_DQUOTE:\n        return instance.scanTail(\n          index,\n          [\n            instance.scanString(index, code)\n          ]\n        )\n\n      // .1  ./  ../\n      case CODE_DOT:\n        instance.go()\n        return isDigit(instance.code)\n          ? instance.scanNumber(index)\n          : instance.scanPath(index)\n\n      // (xx)\n      case CODE_OPAREN:\n        instance.go()\n        return instance.scanTernary(CODE_CPAREN)\n\n      // [xx, xx]\n      case CODE_OBRACK:\n        return instance.scanTail(\n          index,\n          [\n            creator.createArray(\n              instance.scanTuple(index, CODE_CBRACK),\n              instance.pick(index)\n            )\n          ]\n        )\n\n      // { a: 'x', b: 'x' }\n      case CODE_OBRACE:\n        return instance.scanObject(index)\n\n    }\n\n    // 因为 scanOperator 会导致 index 发生变化，只能放在最后尝试\n    const operator = instance.scanOperator(index)\n    if (operator && interpreter.unary[operator]) {\n      const node = instance.scanTernary()\n      if (node) {\n        if (node.type === nodeType.LITERAL) {\n          const value = (node as Literal).value\n          if (is.number(value)) {\n            // 类似 ' -1 ' 这样的右侧有空格，需要撤回来\n            instance.skip(-1)\n            return creator.createLiteral(\n              - value,\n              instance.pick(index)\n            )\n          }\n        }\n        // 类似 ' -a ' 这样的右侧有空格，需要撤回来\n        instance.skip(-1)\n        return creator.createUnary(\n          operator,\n          node,\n          instance.pick(index)\n        )\n      }\n      if (process.env.NODE_ENV === 'dev') {\n        instance.fatal(index, `一元运算只有操作符没有表达式？`)\n      }\n    }\n\n  }\n\n  /**\n   * 扫描数字\n   *\n   * 支持整数和小数\n   *\n   * @param startIndex\n   * @return\n   */\n  scanNumber(startIndex: number): Literal | void {\n\n    const instance = this\n\n    while (isNumber(instance.code)) {\n      instance.go()\n    }\n\n    const raw = instance.pick(startIndex)\n\n    // 尝试转型，如果转型失败，则确定是个错误的数字\n    if (is.numeric(raw)) {\n      return creator.createLiteral(+raw, raw)\n    }\n\n    if (process.env.NODE_ENV === 'dev') {\n      instance.fatal(startIndex, `数字写错了知道吗？`)\n    }\n\n  }\n\n  /**\n   * 扫描字符串\n   *\n   * 支持反斜线转义引号\n   *\n   * @param startIndex\n   * @param endCode\n   */\n  scanString(startIndex: number, endCode: number): Literal {\n\n    const instance = this\n\n    loop: while (env.TRUE) {\n\n      // 这句有两个作用：\n      // 1. 跳过开始的引号\n      // 2. 驱动 index 前进\n      instance.go()\n\n      switch (instance.code) {\n\n        // \\\" \\'\n        case CODE_BACKSLASH:\n          instance.go()\n          break\n\n        case endCode:\n          instance.go()\n          break loop\n\n        case CODE_EOF:\n          if (process.env.NODE_ENV === 'dev') {\n            instance.fatal(startIndex, `到头了，字符串还没解析完呢？`)\n          }\n          break loop\n\n      }\n\n    }\n\n    // new Function 处理字符转义\n    const raw = instance.pick(startIndex)\n    return creator.createLiteral(\n      new Function(`return ${raw}`)(),\n      raw\n    )\n\n  }\n\n  /**\n   * 扫描对象字面量\n   *\n   * @param startIndex\n   */\n  scanObject(startIndex: number): Node {\n\n    let instance = this, keys: string[] = [], values: Node[] = [], isKey = env.TRUE, node: Node | void\n\n    // 跳过 {\n    instance.go()\n\n    loop: while (env.TRUE) {\n\n      switch (instance.code) {\n\n        case CODE_CBRACE:\n          instance.go()\n          if (process.env.NODE_ENV === 'dev') {\n            if (keys.length !== values.length) {\n              instance.fatal(startIndex, `对象的 keys 和 values 的长度不一致`)\n            }\n          }\n          break loop\n\n        case CODE_EOF:\n          if (process.env.NODE_ENV === 'dev') {\n            instance.fatal(startIndex, `到头了，对象还没解析完呢？`)\n          }\n          break loop\n\n        // :\n        case CODE_COLON:\n          instance.go()\n          isKey = env.FALSE\n          break\n\n        // ,\n        case CODE_COMMA:\n          instance.go()\n          isKey = env.TRUE\n          break\n\n        default:\n          // 解析 key 的时候，node 可以为空，如 { } 或 { name: 'xx', }\n          // 解析 value 的时候，node 不能为空\n          node = instance.scanTernary()\n          if (isKey) {\n            if (node) {\n              // 处理 { key : value } key 后面的空格\n              instance.skip()\n              if (node.type === nodeType.IDENTIFIER) {\n                array.push(keys, (node as Identifier).name)\n              }\n              else if (node.type === nodeType.LITERAL) {\n                array.push(keys, (node as Literal).value)\n              }\n              else {\n                if (process.env.NODE_ENV === 'dev') {\n                  instance.fatal(startIndex, `对象的 key 必须是字面量或标识符`)\n                }\n                break loop\n              }\n            }\n          }\n          else if (node) {\n            // 处理 { key : value } value 后面的空格\n            instance.skip()\n            array.push(values, node)\n          }\n          else {\n            if (process.env.NODE_ENV === 'dev') {\n              instance.fatal(startIndex, `对象的值没找到`)\n            }\n            break loop\n          }\n      }\n    }\n\n    return creator.createObject(keys, values, instance.pick(startIndex))\n\n  }\n\n  /**\n   * 扫描元组，即 `a, b, c` 这种格式，可以是参数列表，也可以是数组\n   *\n   * @param startIndex\n   * @param endCode 元组的结束字符编码\n   */\n  scanTuple(startIndex: number, endCode: number): Node[] {\n\n    let instance = this, nodes: Node[] = [], node: Node | void\n\n    // 跳过开始字符，如 [ 和 (\n    instance.go()\n\n    loop: while (env.TRUE) {\n      switch (instance.code) {\n\n        case endCode:\n          instance.go()\n          break loop\n\n        case CODE_EOF:\n          if (process.env.NODE_ENV === 'dev') {\n            instance.fatal(startIndex, `到头了，tuple 还没解析完呢？`)\n          }\n          break loop\n\n        case CODE_COMMA:\n          instance.go()\n          break\n\n        default:\n          // 1. ( )\n          // 2. (1, 2, )\n          // 这三个例子都会出现 scanTernary 为空的情况\n          // 但是不用报错\n          node = instance.scanTernary()\n          if (node) {\n            // 为了解决 1 , 2 , 3 这样的写法\n            // 当解析出值后，先跳过后面的空格\n            instance.skip()\n            array.push(nodes, node)\n          }\n      }\n    }\n\n    return nodes\n\n  }\n\n  /**\n   * 扫描路径，如 `./` 和 `../`\n   *\n   * 路径必须位于开头，如 ./../ 或 ../../，不存在 a/../b/../c 这样的情况，因为路径是用来切换或指定 context 的\n   *\n   * @param startIndex\n   * @param prevNode\n   */\n  scanPath(startIndex: number): Node | void {\n\n    let instance = this, nodes: Node[] = [], name: string\n\n    // 进入此函数时，已确定前一个 code 是 CODE_DOT\n    // 此时只需判断接下来是 ./ 还是 / 就行了\n\n    while (env.TRUE) {\n\n      // 要么是 current 要么是 parent\n      name = env.KEYPATH_CURRENT\n\n      // ../\n      if (instance.is(CODE_DOT)) {\n        instance.go()\n        name = env.KEYPATH_PARENT\n      }\n\n      array.push(\n        nodes,\n        creator.createIdentifier(name, name, nodes.length > 0)\n      )\n\n      // 如果以 / 结尾，则命中 ./ 或 ../\n      if (instance.is(CODE_SLASH)) {\n        instance.go()\n\n        // 没写错，这里不必强调 isIdentifierStart，数字开头也可以吧\n        if (isIdentifierPart(instance.code)) {\n          array.push(\n            nodes,\n            instance.scanIdentifier(instance.index, env.TRUE)\n          )\n          return instance.scanTail(startIndex, nodes)\n        }\n        else if (instance.is(CODE_DOT)) {\n          // 先跳过第一个 .\n          instance.go()\n          // 继续循环\n        }\n        else {\n          // 类似 ./ 或 ../ 这样后面不跟标识符是想干嘛？报错可好？\n          if (process.env.NODE_ENV === 'dev') {\n            instance.fatal(startIndex, `path 写法错误`)\n          }\n          break\n        }\n\n      }\n      // 类似 . 或 ..，可能就是想读取层级对象\n      // 此处不用关心后面跟的具体是什么字符，那是其他函数的事情，就算报错也让别的函数去报\n      // 此处也不用关心延展操作符，即 ...object，因为表达式引擎管不了这事，它没法把对象变成 attr1=value1 attr2=value2 的格式\n      // 这应该是模板引擎该做的事\n      else {\n        break\n      }\n    }\n\n  }\n\n  /**\n   * 扫描变量\n   */\n  scanTail(startIndex: number, nodes: Node[]): Node | never {\n\n    let instance = this, node: Node | void\n\n    /**\n     * 标识符后面紧着的字符，可以是 ( . [，此外还存在各种组合，感受一下：\n     *\n     * a.b.c().length\n     * a[b].c()()\n     * a[b][c]()[d](e, f, g).length\n     * [].length\n     */\n\n    loop: while (env.TRUE) {\n\n      switch (instance.code) {\n\n        // a(x)\n        case CODE_OPAREN:\n          nodes = [\n            creator.createCall(\n              creator.createMemberIfNeeded(instance.pick(startIndex), nodes),\n              instance.scanTuple(instance.index, CODE_CPAREN),\n              instance.pick(startIndex)\n            )\n          ]\n          break\n\n        // a.x\n        case CODE_DOT:\n          instance.go()\n\n          // 接下来的字符，可能是数字，也可能是标识符，如果不是就报错\n          if (isIdentifierPart(instance.code)) {\n            // 无需识别关键字\n            array.push(\n              nodes,\n              instance.scanIdentifier(instance.index, env.TRUE)\n            )\n            break\n          }\n          else {\n            if (process.env.NODE_ENV === 'dev') {\n              instance.fatal(startIndex, `. 后面跟的都是啥玩意啊`)\n            }\n            break loop\n          }\n\n        // a[]\n        case CODE_OBRACK:\n\n          // 过掉 [\n          instance.go()\n\n          node = instance.scanTernary(CODE_CBRACK)\n\n          if (node) {\n            array.push(nodes, node)\n            break\n          }\n          else {\n            if (process.env.NODE_ENV === 'dev') {\n              instance.fatal(startIndex, `[] 内部不能为空`)\n            }\n            break loop\n          }\n\n        default:\n          break loop\n\n      }\n\n    }\n\n    return creator.createMemberIfNeeded(instance.pick(startIndex), nodes)\n\n  }\n\n  /**\n   * 扫描标识符\n   *\n   * @param startIndex\n   * @param isProp 是否是对象的属性\n   * @return\n   */\n  scanIdentifier(startIndex: number, isProp?: boolean): Identifier | Literal {\n\n    const instance = this\n\n    while (isIdentifierPart(instance.code)) {\n      instance.go()\n    }\n\n    const raw = instance.pick(startIndex)\n\n    return !isProp && object.has(keywordLiterals, raw)\n      ? creator.createLiteral(keywordLiterals[raw].value, raw)\n      : creator.createIdentifier(raw, raw, isProp)\n\n  }\n\n  /**\n   * 扫描运算符\n   *\n   * @param startIndex\n   */\n  scanOperator(startIndex: number): string | void {\n\n    const instance = this\n\n    switch (instance.code) {\n\n      // /、%、~、^\n      case CODE_DIVIDE:\n      case CODE_MODULO:\n      case CODE_WAVE:\n      case CODE_XOR:\n        instance.go()\n        break;\n\n      // *\n      case CODE_MULTIPLY:\n        instance.go()\n        break\n\n      // +\n      case CODE_PLUS:\n        instance.go()\n        if (process.env.NODE_ENV === 'dev') {\n          // ++\n          if (instance.is(CODE_PLUS)) {\n            instance.fatal(startIndex, `不支持该语法`)\n          }\n        }\n        break\n\n      // -、->\n      case CODE_MINUS:\n        instance.go()\n        if (instance.is(CODE_GREAT)) {\n          instance.go()\n        }\n        else if (process.env.NODE_ENV === 'dev') {\n          // --\n          if (instance.is(CODE_MINUS)) {\n            instance.fatal(startIndex, `不支持该语法`)\n          }\n        }\n        break\n\n      // !、!!、!=、!==\n      case CODE_NOT:\n        instance.go()\n        if (instance.is(CODE_NOT)) {\n          instance.go()\n        }\n        else if (instance.is(CODE_EQUAL)) {\n          instance.go()\n          if (instance.is(CODE_EQUAL)) {\n            instance.go()\n          }\n        }\n        break\n\n      // &、&&\n      case CODE_AND:\n        instance.go()\n        if (instance.is(CODE_AND)) {\n          instance.go()\n        }\n        break\n\n      // |、||\n      case CODE_OR:\n        instance.go()\n        if (instance.is(CODE_OR)) {\n          instance.go()\n        }\n        break\n\n      // ==、===、=>\n      case CODE_EQUAL:\n        instance.go()\n        if (instance.is(CODE_EQUAL)) {\n          instance.go()\n          if (instance.is(CODE_EQUAL)) {\n            instance.go()\n          }\n        }\n        else if (instance.is(CODE_GREAT)) {\n          instance.go()\n        }\n        // 一个等号要报错\n        else if (process.env.NODE_ENV === 'dev') {\n          instance.fatal(startIndex, `不支持一个等号这种赋值写法`)\n        }\n        break\n\n      // <、<=、<<\n      case CODE_LESS:\n        instance.go()\n        if (instance.is(CODE_EQUAL)\n          || instance.is(CODE_LESS)\n        ) {\n          instance.go()\n        }\n        break\n\n      // >、>=、>>、>>>\n      case CODE_GREAT:\n        instance.go()\n        if (instance.is(CODE_EQUAL)) {\n          instance.go()\n        }\n        else if (instance.is(CODE_GREAT)) {\n          instance.go()\n          if (instance.is(CODE_GREAT)) {\n            instance.go()\n          }\n        }\n        break\n    }\n\n    if (instance.code > startIndex) {\n      return instance.pick(startIndex)\n    }\n\n  }\n\n  /**\n   * 扫描二元运算\n   */\n  scanBinary(startIndex: number): Node | void {\n\n    // 二元运算，如 a + b * c / d，这里涉及运算符的优先级\n    // 算法参考 https://en.wikipedia.org/wiki/Shunting-yard_algorithm\n    let instance = this,\n\n    // 格式为 [ index1, node1, index2, node2, ... ]\n    output: any[] = [],\n\n    token: Node | void,\n\n    index: number | void,\n\n    operator: string | void,\n\n    operatorInfo: any | void,\n\n    lastOperator: string | void,\n\n    lastOperatorInfo: any | void\n\n    while (env.TRUE) {\n\n      instance.skip()\n\n      array.push(output, instance.index)\n\n      token = instance.scanToken()\n\n      if (token) {\n\n        array.push(output, token)\n\n        array.push(output, instance.index)\n\n        instance.skip()\n\n        operator = instance.scanOperator(instance.index)\n\n        // 必须是二元运算符，一元不行\n        if (operator && (operatorInfo = interpreter.binary[operator])) {\n\n          // 比较前一个运算符\n          index = output.length - 4\n\n          // 如果前一个运算符的优先级 >= 现在这个，则新建 Binary\n          // 如 a + b * c / d，当从左到右读取到 / 时，发现和前一个 * 优先级相同，则把 b * c 取出用于创建 Binary\n          if ((lastOperator = output[index])\n            && (lastOperatorInfo = interpreter.binary[lastOperator])\n            && lastOperatorInfo.prec >= operatorInfo.prec\n          ) {\n            output.splice(\n              index - 2,\n              5,\n              creator.createBinary(\n                output[index - 2],\n                lastOperator,\n                output[index + 2],\n                instance.pick(output[index - 3], output[index + 3])\n              )\n            )\n          }\n\n          array.push(output, operator)\n\n          continue\n\n        }\n        else {\n          operator = env.UNDEFINED\n        }\n\n      }\n      // 比如不支持的表达式，a++ 之类的\n      else if (process.env.NODE_ENV === 'dev') {\n        if (operator) {\n          instance.fatal(startIndex, '表达式错误')\n        }\n      }\n\n      // 没匹配到 token 或 operator 则跳出循环\n      break\n\n    }\n\n    // 类似 a + b * c 这种走到这会有 11 个\n    // 此时需要从后往前遍历，因为确定后面的优先级肯定大于前面的\n    while (env.TRUE) {\n      // 最少的情况是 a + b，它有 7 个元素\n      if (output.length >= 7) {\n        index = output.length - 4\n        output.splice(\n          index - 2,\n          5,\n          creator.createBinary(\n            output[index - 2],\n            output[index],\n            output[index + 2],\n            instance.pick(output[index - 3], output[index + 3])\n          )\n        )\n      }\n      else {\n        return output[1]\n      }\n    }\n\n  }\n\n  /**\n   * 扫描三元运算\n   *\n   * @param endCode\n   */\n  scanTernary(endCode?: number): Node | void {\n\n    /**\n     * https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Operator_Precedence\n     *\n     * ?: 运算符的优先级几乎是最低的，比它低的只有四种： 赋值、yield、延展、逗号\n     * 我们不支持这四种，因此可认为 ?: 优先级最低\n     */\n\n    const instance = this\n\n    instance.skip()\n\n    let index = instance.index,\n\n    test = instance.scanBinary(index),\n\n    yes: Node | void,\n\n    no: Node | void\n\n    if (instance.is(CODE_QUESTION)) {\n      // 跳过 ?\n      instance.go()\n      yes = instance.scanBinary(index)\n\n      if (instance.is(CODE_COLON)) {\n        // 跳过 :\n        instance.go()\n        no = instance.scanBinary(index)\n      }\n\n      if (test && yes && no) {\n        // 类似 ' a ? 1 : 0 ' 这样的右侧有空格，需要撤回来\n        instance.skip(-1)\n        test = creator.createTernary(\n          test, yes, no,\n          instance.pick(index)\n        )\n      }\n      else if (process.env.NODE_ENV === 'dev') {\n        instance.fatal(index, `三元表达式写法错误`)\n      }\n    }\n\n    // 过掉结束字符\n    if (isDef(endCode)) {\n      instance.skip()\n      if (instance.is(endCode as number)) {\n        instance.go()\n      }\n      // 没匹配到结束字符要报错\n      else if (process.env.NODE_ENV === 'dev') {\n        instance.fatal(\n          index,\n          `结束字符匹配错误，期待[${String.fromCharCode(endCode as number)}]，却发现[${String.fromCharCode(instance.code)}]`\n        )\n      }\n    }\n\n    return test\n\n  }\n\n  fatal(start: number, message: string) {\n    if (process.env.NODE_ENV === 'dev') {\n      logger.fatal(`Error compiling expression:\\n${this.content}\\n- ${message}`)\n    }\n  }\n\n}\n\nconst cache = {},\n\nCODE_EOF = 0,        //\nCODE_DOT = 46,       // .\nCODE_COMMA = 44,     // ,\nCODE_SLASH = 47,     // /\nCODE_BACKSLASH = 92, // \\\nCODE_SQUOTE = 39,    // '\nCODE_DQUOTE = 34,    // \"\nCODE_OPAREN = 40,    // (\nCODE_CPAREN = 41,    // )\nCODE_OBRACK = 91,    // [\nCODE_CBRACK = 93,    // ]\nCODE_OBRACE = 123,   // {\nCODE_CBRACE = 125,   // }\nCODE_QUESTION = 63,  // ?\nCODE_COLON = 58,     // :\n\nCODE_PLUS = 43,      // +\nCODE_MINUS = 45,     // -\nCODE_MULTIPLY = 42,  // *\nCODE_DIVIDE = 47,    // /\nCODE_MODULO = 37,    // %\nCODE_WAVE = 126,     // ~\nCODE_AND = 38,       // &\nCODE_OR = 124,       // |\nCODE_XOR = 94,       // ^\nCODE_NOT = 33,       // !\nCODE_LESS = 60,      // <\nCODE_EQUAL = 61,     // =\nCODE_GREAT = 62,     // >\n\n/**\n * 区分关键字和普通变量\n * 举个例子：a === true\n * 从解析器的角度来说，a 和 true 是一样的 token\n */\nkeywordLiterals: Record<string, ValueHolder> = {}\n\n// object.has 无法判断出 undefined，因此这里改成 ValueHolder 结构\nkeywordLiterals[env.RAW_TRUE] = { value: env.TRUE }\nkeywordLiterals[env.RAW_FALSE] = { value: env.FALSE }\nkeywordLiterals[env.RAW_NULL] = { value: env.NULL }\nkeywordLiterals[env.RAW_UNDEFINED] = { value: env.UNDEFINED }\n\n/**\n * 是否是空白符，用下面的代码在浏览器测试一下\n *\n * ```\n * for (var i = 0; i < 200; i++) {\n *   console.log(i, String.fromCharCode(i))\n * }\n * ```\n *\n * 从 0 到 32 全是空白符，100 往上分布比较散且较少用，唯一需要注意的是 160\n *\n * 160 表示 non-breaking space\n * http://www.adamkoch.com/2009/07/25/white-space-and-character-160/\n */\nfunction isWhitespace(code: number): boolean {\n  return (code > 0 && code < 33) || code === 160\n}\n\n/**\n * 是否是数字\n */\nfunction isDigit(code: number): boolean {\n  return code > 47 && code < 58 // 0...9\n}\n\n/**\n * 是否是数字\n */\nfunction isNumber(code: number): boolean {\n  return isDigit(code) || code === CODE_DOT\n}\n\n/**\n * 变量开始字符必须是 字母、下划线、$\n */\nfunction isIdentifierStart(code: number): boolean {\n  return code === 36 // $\n    || code === 95   // _\n    || (code > 96 && code < 123) // a...z\n    || (code > 64 && code < 91)  // A...Z\n}\n\n/**\n * 变量剩余的字符必须是 字母、下划线、$、数字\n */\nfunction isIdentifierPart(code: number): boolean {\n  return isIdentifierStart(code) || isDigit(code)\n}\n","/**\n * 元素 节点\n */\nexport const ELEMENT = 1\n\n/**\n * 属性 节点\n */\nexport const ATTRIBUTE = 2\n\n/**\n * 指令 节点\n */\nexport const DIRECTIVE = 3\n\n/**\n * 属性 节点\n */\nexport const PROPERTY = 4\n\n/**\n * 文本 节点\n */\nexport const TEXT = 5\n\n/**\n * if 节点\n */\nexport const IF = 6\n\n/**\n * else if 节点\n */\nexport const ELSE_IF = 7\n\n/**\n * else 节点\n */\nexport const ELSE = 8\n\n/**\n * each 节点\n */\nexport const EACH = 9\n\n/**\n * partial 节点\n */\nexport const PARTIAL = 10\n\n/**\n * import 节点\n */\nexport const IMPORT = 11\n\n/**\n * 表达式 节点\n */\nexport const EXPRESSION = 12\n\n/**\n * 延展操作 节点\n */\nexport const SPREAD = 13\n","import * as env from '../../yox-common/src/util/env'\n\nimport * as nodeType from './nodeType'\n\n// 特殊标签\nexport const specialTags = {}\n// 特殊属性\nexport const specialAttrs = {}\n// 名称 -> 类型的映射\nexport const name2Type = {}\n\nspecialTags[env.RAW_SLOT] =\nspecialTags[env.RAW_TEMPLATE] =\n\nspecialAttrs[env.RAW_KEY] =\nspecialAttrs[env.RAW_REF] =\nspecialAttrs[env.RAW_SLOT] = env.TRUE\n\nname2Type['if'] = nodeType.IF\nname2Type['each'] = nodeType.EACH\nname2Type['partial'] = nodeType.PARTIAL\n\n","import * as type from '../../yox-type/src/type'\n\nimport * as env from '../../yox-common/src/util/env'\nimport * as keypathUtil from '../../yox-common/src/util/keypath'\n\nimport ExpressionNode from '../../yox-expression-compiler/src/node/Node'\n\nimport * as nodeType from './nodeType'\n\nimport Node from './node/Node'\nimport Attribute from './node/Attribute'\nimport Directive from './node/Directive'\nimport Property from './node/Property'\nimport Each from './node/Each'\nimport Element from './node/Element'\nimport Else from './node/Else'\nimport ElseIf from './node/ElseIf'\nimport Expression from './node/Expression'\nimport If from './node/If'\nimport Import from './node/Import'\nimport Partial from './node/Partial'\nimport Spread from './node/Spread'\nimport Text from './node/Text'\n\nexport function createAttribute(name: string): Attribute {\n  return {\n    type: nodeType.ATTRIBUTE,\n    isStatic: env.TRUE,\n    name,\n  }\n}\n\nexport function createDirective(ns: string, name: string, value?: string | number | boolean, expr?: ExpressionNode, children?: Node[]): Directive {\n  return {\n    type: nodeType.DIRECTIVE,\n    ns,\n    name,\n    key: keypathUtil.join(ns, name),\n    value,\n    expr,\n    children,\n  }\n}\n\nexport function createProperty(name: string, hint: type.hint, value?: string | number | boolean, expr?: ExpressionNode, children?: Node[]): Property {\n  return {\n    type: nodeType.PROPERTY,\n    isStatic: env.TRUE,\n    name,\n    hint,\n    value,\n    expr,\n    children,\n  }\n}\n\nexport function createEach(expr: ExpressionNode, index: string): Each {\n  return {\n    type: nodeType.EACH,\n    expr,\n    index,\n    isComplex: env.TRUE,\n  }\n}\n\nexport function createElement(tag: string, isSvg: boolean, isComponent: boolean): Element {\n  // 是 svg 就不可能是组件\n  // 加这个判断的原因是，svg 某些标签含有 连字符 和 大写字母，比较蛋疼\n  if (isSvg) {\n    isComponent = env.FALSE\n  }\n  return {\n    type: nodeType.ELEMENT,\n    tag,\n    isSvg,\n    isStyle: tag === 'style',\n    isComponent,\n    isStatic: !isComponent && tag !== env.RAW_SLOT,\n  }\n}\n\nexport function createElse(): Else {\n  return {\n    type: nodeType.ELSE,\n  }\n}\n\nexport function createElseIf(expr: ExpressionNode): ElseIf {\n  return {\n    type: nodeType.ELSE_IF,\n    expr,\n  }\n}\n\nexport function createExpression(expr: ExpressionNode, safe: boolean): Expression {\n  return {\n    type: nodeType.EXPRESSION,\n    expr,\n    safe,\n    isLeaf: env.TRUE,\n  }\n}\n\nexport function createIf(expr: ExpressionNode): If {\n  return {\n    type: nodeType.IF,\n    expr,\n  }\n}\n\nexport function createImport(name: string): Import {\n  return {\n    type: nodeType.IMPORT,\n    name,\n    isComplex: env.TRUE,\n    isLeaf: env.TRUE,\n  }\n}\n\nexport function createPartial(name: string): Partial {\n  return {\n    type: nodeType.PARTIAL,\n    name,\n    isComplex: env.TRUE,\n  }\n}\n\nexport function createSpread(expr: ExpressionNode, binding: boolean): Spread {\n  return {\n    type: nodeType.SPREAD,\n    expr,\n    binding,\n    isLeaf: env.TRUE,\n  }\n}\n\nexport function createText(text: string): Text {\n  return {\n    type: nodeType.TEXT,\n    text,\n    isStatic: env.TRUE,\n    isLeaf: env.TRUE,\n  }\n}","import * as config from '../../yox-config/src/config'\n\nimport toNumber from '../../yox-common/src/function/toNumber'\n\nimport * as is from '../../yox-common/src/util/is'\nimport * as env from '../../yox-common/src/util/env'\nimport * as array from '../../yox-common/src/util/array'\nimport * as string from '../../yox-common/src/util/string'\nimport * as logger from '../../yox-common/src/util/logger'\n\nimport * as exprNodeType from '../../yox-expression-compiler/src/nodeType'\nimport * as exprCompiler from '../../yox-expression-compiler/src/compiler'\n\nimport ExpressionNode from '../../yox-expression-compiler/src/node/Node'\nimport ExpressionCall from '../../yox-expression-compiler/src/node/Call'\nimport ExpressionLiteral from '../../yox-expression-compiler/src/node/Literal'\n\nimport * as helper from './helper'\nimport * as creator from './creator'\nimport * as nodeType from './nodeType'\n\nimport If from './node/If'\nimport ElseIf from './node/ElseIf'\nimport Else from './node/Else'\nimport Node from './node/Node'\nimport Branch from './node/Branch'\nimport Text from './node/Text'\nimport Each from './node/Each'\nimport Partial from './node/Partial'\nimport Element from './node/Element'\nimport Attribute from './node/Attribute'\nimport Directive from './node/Directive'\nimport Property from './node/Property'\nimport Expression from './node/Expression'\n\n// 当前不位于 block 之间\nconst BLOCK_MODE_NONE = 1,\n\n// {{ x }}\nBLOCK_MODE_SAFE = 2,\n\n// {{{ x }}}\nBLOCK_MODE_UNSAFE = 3,\n\n// 表达式的静态 keypath\nSTATIC_KEYPATH = 'sk',\n\n// 缓存编译模板\ncompileCache = {},\n\n// 缓存编译正则\npatternCache = {},\n\n// 指令分隔符，如 on-click 和 lazy-click\ndirectiveSeparator = '-',\n\n// 没有命名空间的事件\neventPattern = /^[_$a-z]([\\w]+)?$/i,\n\n// 有命名空间的事件\neventNamespacePattern = /^[_$a-z]([\\w]+)?\\.[_$a-z]([\\w]+)?$/i,\n\n// 标签\ntagPattern = /<(\\/)?([$a-z][-a-z0-9]*)/i,\n\n// 注释\ncommentPattern = /<!--[\\s\\S]*?-->/g,\n\n// 属性的 name\n// 支持 on-click.namespace=\"\" 或 on-get-out=\"\" 或 xml:xx=\"\"\nattributePattern = /^\\s*([-.:\\w]+)(['\"])?(?:=(['\"]))?/,\n\n// 首字母大写，或中间包含 -\ncomponentNamePattern = /^[$A-Z]|-/,\n\n// 自闭合标签\nselfClosingTagPattern = /^\\s*(\\/)?>/,\n\n// 常见的自闭合标签\nselfClosingTagNames = 'area,base,embed,track,source,param,input,col,img,br,hr'.split(','),\n\n// 常见的 svg 标签\nsvgTagNames = 'svg,g,defs,desc,metadata,symbol,use,image,path,rect,circle,line,ellipse,polyline,polygon,text,tspan,tref,textpath,marker,pattern,clippath,mask,filter,cursor,view,animate,font,font-face,glyph,missing-glyph,foreignObject'.split(','),\n\n// 常见的字符串类型的属性\n// 注意：autocomplete,autocapitalize 不是布尔类型\nstringProperyNames = 'id,class,name,value,for,accesskey,title,style,src,type,href,target,alt,placeholder,preload,poster,wrap,accept,pattern,dir,autocomplete,autocapitalize'.split(','),\n\n// 常见的数字类型的属性\nnumberProperyNames = 'min,minlength,max,maxlength,step,width,height,size,rows,cols,tabindex'.split(','),\n\n// 常见的布尔类型的属性\nbooleanProperyNames = 'disabled,checked,required,multiple,readonly,autofocus,autoplay,controls,loop,muted,novalidate,draggable,hidden,spellcheck'.split(','),\n\n// 某些属性 attribute name 和 property name 不同\nattr2Prop = {}\n\n// 列举几个常见的\nattr2Prop['for'] = 'htmlFor'\nattr2Prop['class'] = 'className'\nattr2Prop['accesskey'] = 'accessKey'\nattr2Prop['style'] = 'style.cssText'\nattr2Prop['novalidate'] = 'noValidate'\nattr2Prop['readonly'] = 'readOnly'\nattr2Prop['tabindex'] = 'tabIndex'\nattr2Prop['minlength'] = 'minLength'\nattr2Prop['maxlength'] = 'maxLength'\n\n/**\n * 截取前缀之后的字符串\n */\nfunction slicePrefix(str: string, prefix: string): string {\n  return string.trim(string.slice(str, prefix.length))\n}\n\n/**\n * trim 文本开始和结束位置的换行符\n *\n * 换行符比较神奇，有时候你明明看不到换行符，却真的存在一个，那就是 \\r\n *\n */\nfunction trimBreakline(content: string): string {\n  return content.replace(\n    /^\\s*[\\n\\r]\\s*|\\s*[\\n\\r]\\s*$/g,\n    env.EMPTY_STRING\n  )\n}\n\nexport function compile(content: string): Branch[] {\n\n  let nodeList: Branch[] = compileCache[content]\n  if (nodeList) {\n    return nodeList\n  }\n\n  nodeList = []\n\n  let nodeStack: Branch[] = [],\n\n  // 持有 if/elseif/else 节点\n  ifStack: Node[] = [],\n\n  currentElement: Element | void,\n\n  currentAttribute: Attribute | Property | Directive | void,\n\n  length = content.length,\n\n  // 当前处理的位置\n  index = 0,\n\n  // 下一段开始的位置\n  nextIndex = 0,\n\n  // 开始定界符的位置，表示的是 {{ 的右侧位置\n  openBlockIndex = 0,\n\n  // 结束定界符的位置，表示的是 }} 的左侧位置\n  closeBlockIndex = 0,\n\n  // 当前正在处理或即将处理的 block 类型\n  blockMode = BLOCK_MODE_NONE,\n\n  code: string,\n\n  startQuote: string | void,\n\n  fatal = function (msg: string) {\n    if (process.env.NODE_ENV === 'dev') {\n      logger.fatal(`Error compiling ${env.RAW_TEMPLATE}:\\n${content}\\n- ${msg}`)\n    }\n  },\n\n  /**\n   * 常见的两种情况：\n   *\n   * <div>\n   *    <input>1\n   * </div>\n   *\n   * <div>\n   *    <input>\n   * </div>\n   */\n  popSelfClosingElementIfNeeded = function (popingTagName?: string) {\n    const lastNode = array.last(nodeStack)\n    if (lastNode && lastNode.type === nodeType.ELEMENT) {\n      const element = lastNode as Element\n      if (element.tag !== popingTagName\n        && array.has(selfClosingTagNames, element.tag)\n      ) {\n        popStack(element.type, element.tag)\n      }\n    }\n  },\n\n  popStack = function (type: number, tagName?: string) {\n\n    const node = array.pop(nodeStack)\n\n    if (node && node.type === type) {\n\n      const { children } = node,\n\n      // 优化单个子节点\n      child = children && children.length === 1 && children[0],\n\n      isElement = type === nodeType.ELEMENT,\n\n      isAttribute = type === nodeType.ATTRIBUTE,\n\n      isProperty = type === nodeType.PROPERTY,\n\n      isDirective = type === nodeType.DIRECTIVE\n\n      const currentBranch = array.last(nodeStack)\n\n      if (currentBranch) {\n        if (currentBranch.isStatic && !node.isStatic) {\n          currentBranch.isStatic = env.FALSE\n        }\n        if (!currentBranch.isComplex) {\n          if (node.isComplex || isElement) {\n            currentBranch.isComplex = env.TRUE\n          }\n          // <div {{#if xx}} xx{{/if}}>\n          else if (currentElement\n            && currentElement !== currentBranch\n            && (isAttribute || isProperty || isDirective)\n          ) {\n            currentBranch.isComplex = env.TRUE\n          }\n        }\n      }\n\n      if (process.env.NODE_ENV === 'dev') {\n        if (isElement) {\n          const element = node as Element\n          if (tagName && element.tag !== tagName) {\n            fatal(`结束标签是${tagName}，开始标签却是${element.tag}`)\n          }\n        }\n      }\n\n      // 除了 helper.specialAttrs 里指定的特殊属性，attrs 里的任何节点都不能单独拎出来赋给 element\n      // 因为 attrs 可能存在 if，所以每个 attr 最终都不一定会存在\n      if (child) {\n\n        switch (child.type) {\n\n          case nodeType.TEXT:\n            // 属性的值如果是纯文本，直接获取文本值\n            // 减少渲染时的遍历\n            if (isElement) {\n              processElementSingleText(node as Element, child as Text)\n            }\n            else if (isAttribute) {\n              processAttributeSingleText(node as Attribute, child as Text)\n            }\n            else if (isProperty) {\n              processPropertySingleText(node as Property, child as Text)\n            }\n            else if (isDirective) {\n              processDirectiveSingleText(node as Directive, child as Text)\n            }\n            break\n\n          case nodeType.EXPRESSION:\n            if (isElement) {\n              processElementSingleExpression(node as Element, child as Expression)\n            }\n            else if (isAttribute) {\n              processAttributeSingleExpression(node as Attribute, child as Expression)\n            }\n            else if (isProperty) {\n              processPropertySingleExpression(node as Property, child as Expression)\n            }\n            else if (isDirective) {\n              processDirectiveSingleExpression(node as Directive, child as Expression)\n            }\n            break\n\n        }\n      }\n      // 大于 1 个子节点，即有插值或 if 写法\n      else if (children) {\n        // 不支持 on-click=\"1{{xx}}2\" 或是 on-click=\"1{{#if x}}x{{else}}y{{/if}}2\"\n        // 1. 很难做性能优化\n        // 2. 全局搜索不到事件名，不利于代码维护\n        // 3. 不利于编译成静态函数\n        if (process.env.NODE_ENV === 'dev') {\n          if (isDirective) {\n            fatal(`指令的值不能用插值或 if 语法`)\n          }\n        }\n      }\n      // 0 个子节点\n      else if (currentElement) {\n        if (isAttribute) {\n          processAttributeEmptyChildren(currentElement, node as Attribute)\n        }\n        else if (isProperty) {\n          processPropertyEmptyChildren(currentElement, node as Property)\n        }\n        else if (isDirective) {\n          processDirectiveEmptyChildren(currentElement, node as Directive)\n        }\n      }\n\n      if (type === nodeType.EACH) {\n        checkEach(node as Each)\n      }\n      else if (type === nodeType.PARTIAL) {\n        checkPartial(node as Partial)\n      }\n      else if (isElement) {\n        checkElement(node as Element)\n      }\n      else if (currentElement && isAttribute && isSpecialAttr(currentElement, node as Attribute)) {\n        bindSpecialAttr(currentElement, node as Attribute)\n      }\n\n      return node\n\n    }\n\n    if (process.env.NODE_ENV === 'dev') {\n      fatal(`出栈节点类型不匹配`)\n    }\n  },\n\n  processElementSingleText = function (element: Element, child: Text) {\n\n    // processElementSingleText 和 processElementSingleExpression\n    // 不把元素子节点智能转换为 textContent property\n    // 因为子节点还有 <div>1{{a}}{{b}}</div> 这样的情况\n    // 还是在序列化的时候统一处理比较好\n\n  },\n\n  processElementSingleExpression = function (element: Element, child: Expression) {\n\n    if (!element.isComponent && !element.slot && !child.safe) {\n      element.html = child.expr\n      element.children = env.UNDEFINED\n    }\n\n  },\n\n  processPropertyEmptyChildren = function (element: Element, prop: Property) {\n\n    if (prop.hint === config.HINT_BOOLEAN) {\n      prop.value = env.TRUE\n    }\n    else {\n      // string 或 number 类型的属性，如果不写值，直接忽略\n      replaceChild(prop)\n    }\n\n  },\n\n  processPropertySingleText = function (prop: Property, child: Text) {\n\n    const { text } = child\n\n    if (prop.hint === config.HINT_NUMBER) {\n      prop.value = toNumber(text)\n    }\n    else if (prop.hint === config.HINT_BOOLEAN) {\n      prop.value = text === env.RAW_TRUE || text === prop.name\n    }\n    else {\n      prop.value = text\n    }\n\n    prop.children = env.UNDEFINED\n\n  },\n\n  processPropertySingleExpression = function (prop: Property, child: Expression) {\n\n    const { expr } = child\n\n    prop.expr = expr\n    prop.children = env.UNDEFINED\n\n    // 对于有静态路径的表达式，可转为单向绑定指令，可实现精确更新视图，如下\n    // <div class=\"{{className}}\">\n\n    if (expr[STATIC_KEYPATH]) {\n      prop.binding = env.TRUE\n    }\n\n  },\n\n  processAttributeEmptyChildren = function (element: Element, attr: Attribute) {\n\n    const { name } = attr\n\n    if (isSpecialAttr(element, attr)) {\n      if (process.env.NODE_ENV === 'dev') {\n        fatal(`${name} 忘了写值吧？`)\n      }\n    }\n    // 比如 <Dog isLive>\n    else if (element.isComponent) {\n      attr.value = env.TRUE\n    }\n    // <div data-name checked>\n    else {\n      attr.value = string.startsWith(name, 'data-')\n        ? env.EMPTY_STRING\n        : name\n    }\n\n  },\n\n  processAttributeSingleText = function (attr: Attribute, child: Text) {\n\n    attr.value = child.text\n    attr.children = env.UNDEFINED\n\n  },\n\n  processAttributeSingleExpression = function (attr: Attribute, child: Expression) {\n\n    const { expr } = child\n\n    attr.expr = expr\n    attr.children = env.UNDEFINED\n\n    // 对于有静态路径的表达式，可转为单向绑定指令，可实现精确更新视图，如下\n    // <div class=\"{{className}}\">\n\n    if (expr[STATIC_KEYPATH]) {\n      attr.binding = env.TRUE\n    }\n\n  },\n\n  processDirectiveEmptyChildren = function (element: Element, directive: Directive) {\n\n    directive.value = env.TRUE\n\n  },\n\n  processDirectiveSingleText = function (directive: Directive, child: Text) {\n\n    const { text } = child,\n\n    // model=\"xx\" model=\"this.x\" 值只能是标识符或 Member\n    isModel = directive.ns === config.DIRECTIVE_MODEL,\n\n    // lazy 的值必须是大于 0 的数字\n    isLazy = directive.ns === config.DIRECTIVE_LAZY,\n\n    // 校验事件名称\n    isEvent = directive.ns === config.DIRECTIVE_EVENT,\n\n    // 自定义指令运行不合法的表达式\n    isCustom = directive.ns === config.DIRECTIVE_CUSTOM\n\n    // 指令的值是纯文本，可以预编译表达式，提升性能\n    let expr: ExpressionNode | void\n\n    try {\n      expr = exprCompiler.compile(text)\n    }\n    catch {}\n\n    if (expr) {\n\n      if (process.env.NODE_ENV === 'dev') {\n\n        const { raw } = expr\n\n        if (isLazy) {\n          if (expr.type !== exprNodeType.LITERAL\n            || !is.number((expr as ExpressionLiteral).value)\n            || (expr as ExpressionLiteral).value <= 0\n          ) {\n            fatal(`lazy 指令的值 [${raw}] 必须是大于 0 的数字`)\n          }\n        }\n\n        // 如果指令表达式是函数调用，则只能调用方法（难道还有别的可以调用的吗？）\n        else if (expr.type === exprNodeType.CALL) {\n          if ((expr as ExpressionCall).name.type !== exprNodeType.IDENTIFIER) {\n            fatal('指令表达式的类型如果是函数调用，则只能调用方法')\n          }\n        }\n\n        // 上面检测过方法调用，接下来事件指令只需要判断是否以下两种格式：\n        // on-click=\"name\" 或 on-click=\"name.namespace\"\n        else if (isEvent) {\n          if (!eventPattern.test(raw) && !eventNamespacePattern.test(raw)) {\n            fatal('事件转换名称只能是 [name] 或 [name.namespace] 格式')\n          }\n          else if (currentElement\n            && currentElement.isComponent\n            && directive.name === raw\n          ) {\n            fatal('转换组件事件的名称不能相同')\n          }\n        }\n\n        if (isModel && !expr[STATIC_KEYPATH]) {\n          fatal(`${directive.ns} 指令的值格式错误: [${raw}]`)\n        }\n\n      }\n\n      directive.expr = expr\n\n      directive.value = expr.type === exprNodeType.LITERAL\n        ? (expr as ExpressionLiteral).value\n        : text\n\n    }\n    else {\n      if (process.env.NODE_ENV === 'dev') {\n        if (!isCustom) {\n          fatal(`${directive.ns} 指令的表达式错误: [${text}]`)\n        }\n      }\n      directive.value = text\n    }\n\n    directive.children = env.UNDEFINED\n\n  },\n\n  processDirectiveSingleExpression = function (directive: Directive, child: Expression) {\n\n    if (process.env.NODE_ENV === 'dev') {\n      fatal(`指令的表达式不能用插值语法`)\n    }\n\n  },\n\n  checkCondition = function (condition: If | ElseIf | Else) {\n\n    let currentNode: any = condition,\n\n    prevNode: any,\n\n    hasChildren: boolean | undefined,\n\n    hasNext: boolean | undefined\n\n    // 变成一维数组，方便遍历\n    while (env.TRUE) {\n      if (currentNode.children) {\n        if (!hasNext) {\n          if (currentNode.next) {\n            delete currentNode.next\n          }\n        }\n        hasChildren = hasNext = env.TRUE\n      }\n      prevNode = currentNode.prev\n      if (prevNode) {\n        // prev 仅仅用在 checkCondition 函数中\n        // 用完就可以删掉了\n        delete currentNode.prev\n        currentNode = prevNode\n      }\n      else {\n        break\n      }\n    }\n\n    // 每个条件都是空内容，则删掉整个 if\n    if (!hasChildren) {\n      replaceChild(currentNode)\n    }\n\n  },\n\n  checkEach = function (each: Each) {\n    // 没内容就干掉\n    if (!each.children) {\n      replaceChild(each)\n    }\n  },\n\n  checkPartial = function (partial: Partial) {\n    // 没内容就干掉\n    if (!partial.children) {\n      replaceChild(partial)\n    }\n  },\n\n  checkElement = function (element: Element) {\n\n    if (process.env.NODE_ENV === 'dev') {\n      const isTemplate = element.tag === env.RAW_TEMPLATE\n\n      if (element.slot) {\n        if (!isTemplate) {\n          fatal(`slot 属性只能用于 <template>`)\n        }\n        else if (element.key) {\n          fatal(`<template> 不支持 key`)\n        }\n        else if (element.ref) {\n          fatal(`<template> 不支持 ref`)\n        }\n        else if (element.attrs) {\n          fatal(`<template> 不支持属性或指令`)\n        }\n      }\n      else if (isTemplate) {\n        fatal(`<template> 不写 slot 属性是几个意思？`)\n      }\n      else if (element.tag === env.RAW_SLOT && !element.name) {\n        fatal(`<slot> 不写 name 属性是几个意思？`)\n      }\n    }\n\n    // style 如果啥都没写，就默认加一个 type=\"text/css\"\n    // 因为低版本 IE 没这个属性，没法正常渲染样式\n    // 如果 style 写了 attribute 那就自己保证吧\n    // 因为 attrs 具有动态性，compiler 无法保证最终一定会输出 type 属性\n    if (element.isStyle && array.falsy(element.attrs)) {\n      element.attrs = [\n        creator.createProperty('type', config.HINT_STRING, 'text/css')\n      ]\n    }\n\n  },\n\n  bindSpecialAttr = function (element: Element, attr: Attribute) {\n\n    const { name, value } = attr,\n\n    // 这三个属性值要求是字符串\n    isStringValueRequired = name === env.RAW_NAME || name === env.RAW_SLOT\n\n    if (process.env.NODE_ENV === 'dev') {\n      // 因为要拎出来给 element，所以不能用 if\n      if (array.last(nodeStack) !== element) {\n        fatal(`${name} 不能写在 if 内`)\n      }\n      // 对于所有特殊属性来说，空字符串是肯定不行的，没有任何意义\n      if (value === env.EMPTY_STRING) {\n        fatal(`${name} 的值不能是空字符串`)\n      }\n      else if (isStringValueRequired && string.falsy(value)) {\n        fatal(`${name} 的值只能是字符串字面量`)\n      }\n    }\n\n    element[name] = isStringValueRequired ? value : attr\n    replaceChild(attr)\n\n  },\n\n  isSpecialAttr = function (element: Element, attr: Attribute): boolean {\n    return helper.specialAttrs[attr.name]\n      || element.tag === env.RAW_SLOT && attr.name === env.RAW_NAME\n  },\n\n  replaceChild = function (oldNode: Node, newNode?: Node) {\n\n    let currentBranch = array.last(nodeStack),\n\n    isAttr: boolean | void,\n\n    list: Node[] | void,\n\n    index: number\n\n    if (currentBranch) {\n      isAttr = currentElement && currentElement === currentBranch\n      list = isAttr\n        ? (currentBranch as Element).attrs\n        : currentBranch.children\n    }\n    else {\n      list = nodeList\n    }\n\n    if (list) {\n      index = array.indexOf(list, oldNode)\n      if (index >= 0) {\n        if (newNode) {\n          list[index] = newNode\n        }\n        else {\n          list.splice(index, 1)\n          if (currentBranch && !list.length) {\n            if (isAttr) {\n              delete (currentBranch as Element).attrs\n            }\n            else {\n              currentBranch.children = env.UNDEFINED\n            }\n          }\n        }\n      }\n    }\n\n  },\n\n  addChild = function (node: Node) {\n\n    /**\n     * <div>\n     *    <input>\n     *    <div></div>\n     * </div>\n     *\n     * <div>\n     *    <input>xxx\n     * </div>\n     */\n    if (!currentElement) {\n      popSelfClosingElementIfNeeded()\n    }\n\n    const type = node.type, currentBranch = array.last(nodeStack)\n\n    // else 系列只是 if 的递进节点，不需要加入 nodeList\n    if (type === nodeType.ELSE || type === nodeType.ELSE_IF) {\n\n      const lastNode: any = array.pop(ifStack)\n\n      if (lastNode) {\n\n        // 方便 checkCondition 逆向遍历\n        (node as any).prev = lastNode\n\n        // lastNode 只能是 if 或 else if 节点\n        if (lastNode.type === nodeType.ELSE_IF || lastNode.type === nodeType.IF) {\n          lastNode.next = node\n          popStack(lastNode.type)\n          array.push(ifStack, node)\n        }\n        else if (type === nodeType.ELSE_IF) {\n          if (process.env.NODE_ENV === 'dev') {\n            fatal('大哥，else 后面不能跟 else if 啊')\n          }\n        }\n        else if (process.env.NODE_ENV === 'dev') {\n          fatal('大哥，只能写一个 else 啊！！')\n        }\n      }\n      else if (process.env.NODE_ENV === 'dev') {\n        fatal('不写 if 是几个意思？？')\n      }\n\n    }\n    else {\n\n      if (currentBranch) {\n        array.push(\n          // 这里不能写 currentElement && !currentAttribute，举个例子\n          //\n          // <div id=\"x\" {{#if}} name=\"xx\" alt=\"xx\" {{/if}}\n          //\n          // 当 name 属性结束后，条件满足，但此时已不是元素属性层级了\n          currentElement && currentBranch.type === nodeType.ELEMENT\n            ? currentElement.attrs || (currentElement.attrs = [])\n            : currentBranch.children || (currentBranch.children = []),\n          node\n        )\n      }\n      else {\n        array.push(nodeList, node)\n      }\n\n      if (type === nodeType.IF) {\n        // 只要是 if 节点，并且和 element 同级，就加上 stub\n        // 方便 virtual dom 进行对比\n        // 这个跟 virtual dom 的实现原理密切相关，不加 stub 会有问题\n        if (!currentElement) {\n          (node as If).stub = env.TRUE\n        }\n        array.push(ifStack, node)\n      }\n\n    }\n\n\n\n    if (node.isLeaf) {\n      // 当前树枝节点如果是静态的，一旦加入了一个非静态子节点，改变当前树枝节点的 isStatic\n      // 这里不处理树枝节点的进栈，因为当树枝节点出栈时，还有一次处理机会，那时它的 isStatic 已确定下来，不会再变\n      if (currentBranch) {\n        if (currentBranch.isStatic && !node.isStatic) {\n          currentBranch.isStatic = env.FALSE\n        }\n        // 当前树枝节点是简单节点，一旦加入了一个复杂子节点，当前树枝节点变为复杂节点\n        if (!currentBranch.isComplex && node.isComplex) {\n          currentBranch.isComplex = env.TRUE\n        }\n      }\n    }\n    else {\n      array.push(nodeStack, node)\n    }\n\n  },\n\n  addTextChild = function (text: string) {\n    // [注意]\n    // 这里不能随便删掉\n    // 因为收集组件的子节点会受影响，举个例子：\n    // <Component>\n    //\n    // </Component>\n    // 按现在的逻辑，这样的组件是没有子节点的，因为在这里过滤掉了，因此该组件没有 slot\n    // 如果这里放开了，组件就会有一个 slot\n    text = trimBreakline(text)\n    if (text) {\n      addChild(\n        creator.createText(text)\n      )\n    }\n  },\n\n  htmlParsers = [\n    function (content: string): string | void {\n      if (!currentElement) {\n        const match = content.match(tagPattern)\n        // 必须以 <tag 开头才能继续\n        // 如果 <tag 前面有别的字符，会走进第四个 parser\n        if (match && match.index === 0) {\n          const tag = match[2]\n          if (match[1] === '/') {\n            /**\n             * 处理可能存在的自闭合元素，如下\n             *\n             * <div>\n             *    <input>\n             * </div>\n             */\n            popSelfClosingElementIfNeeded(tag)\n            popStack(nodeType.ELEMENT, tag)\n          }\n          else {\n\n            /**\n             * template 只能写在组件的第一级，如下：\n             *\n             * <Component>\n             *   <template slot=\"xx\">\n             *     111\n             *   </template>\n             * </Component>\n             */\n            if (process.env.NODE_ENV === 'dev') {\n              if (tag === env.RAW_TEMPLATE) {\n                const lastNode = array.last(nodeStack)\n                if (!lastNode || !(lastNode as Element).isComponent) {\n                  fatal('<template> 只能写在组件标签内')\n                }\n              }\n            }\n\n            const node = creator.createElement(\n              tag,\n              array.has(svgTagNames, tag),\n              componentNamePattern.test(tag)\n            )\n\n            addChild(node)\n            currentElement = node\n          }\n          return match[0]\n        }\n      }\n    },\n    // 处理标签的 > 或 />，不论开始还是结束标签\n    function (content: string): string | void {\n      const match = content.match(selfClosingTagPattern)\n      if (match) {\n\n        // 处理开始标签的 > 或 />\n        if (currentElement && !currentAttribute) {\n\n          // 自闭合标签\n          if (match[1] === '/') {\n            popStack(currentElement.type, currentElement.tag)\n          }\n\n          currentElement = env.UNDEFINED\n        }\n        // 处理结束标签的 >\n        return match[0]\n      }\n    },\n    // 处理 attribute directive 的 name 部分\n    function (content: string): string | void {\n      // 当前在 element 层级\n      if (currentElement && !currentAttribute) {\n        const match = content.match(attributePattern)\n        if (match) {\n\n          // <div class=\"11 name=\"xxx\"></div>\n          // 这里会匹配上 xxx\"，match[2] 就是那个引号\n          if (process.env.NODE_ENV === 'dev') {\n            if (match[2]) {\n              fatal(`上一个属性似乎没有正常结束`)\n            }\n          }\n\n          let node: Attribute | Directive | Property, name = match[1]\n\n          if (name === config.DIRECTIVE_MODEL || name === env.RAW_TRANSITION) {\n            node = creator.createDirective(\n              string.camelize(name),\n              env.EMPTY_STRING\n            )\n          }\n          // 这里要用 on- 判断前缀，否则 on 太容易重名了\n          else if (string.startsWith(name, config.DIRECTIVE_ON + directiveSeparator)) {\n            const event = slicePrefix(name, config.DIRECTIVE_ON + directiveSeparator)\n            if (process.env.NODE_ENV === 'dev') {\n              if (!event) {\n                fatal('缺少事件名称')\n              }\n            }\n            node = creator.createDirective(\n              config.DIRECTIVE_EVENT,\n              string.camelize(event)\n            )\n          }\n          // 当一个元素绑定了多个事件时，可分别指定每个事件的 lazy\n          // 当只有一个事件时，可简写成 lazy\n          // <div on-click=\"xx\" lazy-click\n          else if (string.startsWith(name, config.DIRECTIVE_LAZY)) {\n            let lazy = slicePrefix(name, config.DIRECTIVE_LAZY)\n            if (string.startsWith(lazy, directiveSeparator)) {\n              lazy = slicePrefix(lazy, directiveSeparator)\n            }\n            node = creator.createDirective(\n              config.DIRECTIVE_LAZY,\n              lazy ? string.camelize(lazy) : env.EMPTY_STRING\n            )\n          }\n          // 这里要用 o- 判断前缀，否则 o 太容易重名了\n          else if (string.startsWith(name, config.DIRECTIVE_CUSTOM + directiveSeparator)) {\n            const custom = slicePrefix(name, config.DIRECTIVE_CUSTOM + directiveSeparator)\n            if (process.env.NODE_ENV === 'dev') {\n              if (!custom) {\n                fatal('缺少自定义指令名称')\n              }\n            }\n            node = creator.createDirective(\n              config.DIRECTIVE_CUSTOM,\n              string.camelize(custom)\n            )\n          }\n          else {\n            // 组件用驼峰格式\n            if (currentElement.isComponent) {\n              node = creator.createAttribute(\n                string.camelize(name)\n              )\n            }\n            // 原生 dom 属性\n            else {\n\n              // 把 attr 优化成 prop\n              const lowerName = string.lower(name)\n\n              // <slot> 、<template> 或 svg 中的属性不用识别为 property\n              if (helper.specialTags[currentElement.tag] || currentElement.isSvg) {\n                node = creator.createAttribute(name)\n              }\n              // 尝试识别成 property\n              else if (array.has(stringProperyNames, lowerName)) {\n                node = creator.createProperty(\n                  attr2Prop[lowerName] || lowerName,\n                  config.HINT_STRING\n                )\n              }\n              else if (array.has(numberProperyNames, lowerName)) {\n                node = creator.createProperty(\n                  attr2Prop[lowerName] || lowerName,\n                  config.HINT_NUMBER\n                )\n              }\n              else if (array.has(booleanProperyNames, lowerName)) {\n                node = creator.createProperty(\n                  attr2Prop[lowerName] || lowerName,\n                  config.HINT_BOOLEAN\n                )\n              }\n              // 没辙，还是个 attribute\n              else {\n                node = creator.createAttribute(name)\n              }\n\n            }\n          }\n\n          addChild(node)\n\n          // 这里先记下，下一个 handler 要匹配结束引号\n          startQuote = match[3]\n\n          // 有属性值才需要设置 currentAttribute，便于后续收集属性值\n          if (startQuote) {\n            currentAttribute = node\n          }\n          else {\n            popStack(node.type)\n          }\n\n          return match[0]\n        }\n      }\n    },\n    function (content: string): string | void {\n\n      let text: string | void, match: RegExpMatchArray | null\n\n      // 处理 attribute directive 的 value 部分\n      if (currentAttribute && startQuote) {\n\n        match = content.match(patternCache[startQuote] || (patternCache[startQuote] = new RegExp(startQuote)))\n\n        // 有结束引号\n        if (match) {\n          text = string.slice(content, 0, match.index)\n          addTextChild(text)\n\n          text += startQuote\n\n          // attribute directive 结束了\n          // 此时如果一个值都没收集到，需设置一个空字符串\n          // 否则无法区分 <div a b=\"\"> 中的 a 和 b\n          if (!currentAttribute.children) {\n            addChild(\n              creator.createText(env.EMPTY_STRING)\n            )\n          }\n\n          popStack(currentAttribute.type)\n          currentAttribute = env.UNDEFINED\n\n        }\n        // 没有结束引号，整段匹配\n        // 如 id=\"1{{x}}2\" 中的 1\n        else if (blockMode !== BLOCK_MODE_NONE) {\n          text = content\n          addTextChild(text)\n        }\n        else if (process.env.NODE_ENV === 'dev') {\n          fatal(`${currentAttribute.name} 没有找到结束引号`)\n        }\n\n      }\n      // 如果不加判断，类似 <div {{...obj}}> 这样写，会把空格当做一个属性\n      // 收集文本只有两处：属性值、元素内容\n      // 属性值通过上面的 if 处理过了，这里只需要处理元素内容\n      else if (!currentElement) {\n\n        // 获取 <tag 前面的字符\n        match = content.match(tagPattern)\n\n        // 元素层级的注释都要删掉\n        if (match) {\n          text = string.slice(content, 0, match.index)\n          if (text) {\n            addTextChild(\n              text.replace(commentPattern, env.EMPTY_STRING)\n            )\n          }\n        }\n        else {\n          text = content\n          addTextChild(\n            text.replace(commentPattern, env.EMPTY_STRING)\n          )\n        }\n\n      }\n      else {\n        if (process.env.NODE_ENV === 'dev') {\n          if (string.trim(content)) {\n            fatal(`<${currentElement.tag}> 属性里不要写乱七八糟的字符`)\n          }\n        }\n        text = content\n      }\n      return text\n    },\n  ],\n\n  blockParsers = [\n    // {{#each xx:index}}\n    function (source: string) {\n      if (string.startsWith(source, config.SYNTAX_EACH)) {\n        source = slicePrefix(source, config.SYNTAX_EACH)\n        const terms = source.replace(/\\s+/g, env.EMPTY_STRING).split(':')\n        if (terms[0]) {\n          const expr = exprCompiler.compile(string.trim(terms[0]))\n          if (expr) {\n            if (!currentElement) {\n              return creator.createEach(\n                expr,\n                string.trim(terms[1])\n              )\n            }\n            else if (process.env.NODE_ENV === 'dev') {\n              fatal(\n                currentAttribute\n                  ? `each 不能写在属性的值里`\n                  : `each 不能写在属性层级`\n              )\n            }\n          }\n        }\n        if (process.env.NODE_ENV === 'dev') {\n          fatal(`无效的 each`)\n        }\n      }\n    },\n    // {{#import name}}\n    function (source: string) {\n      if (string.startsWith(source, config.SYNTAX_IMPORT)) {\n        source = slicePrefix(source, config.SYNTAX_IMPORT)\n        if (source) {\n          if (!currentElement) {\n            return creator.createImport(source)\n          }\n          else if (process.env.NODE_ENV === 'dev') {\n            fatal(\n              currentAttribute\n                ? `import 不能写在属性的值里`\n                : `import 不能写在属性层级`\n            )\n          }\n        }\n        if (process.env.NODE_ENV === 'dev') {\n          fatal(`无效的 import`)\n        }\n      }\n    },\n    // {{#partial name}}\n    function (source: string) {\n      if (string.startsWith(source, config.SYNTAX_PARTIAL)) {\n        source = slicePrefix(source, config.SYNTAX_PARTIAL)\n        if (source) {\n          if (!currentElement) {\n            return creator.createPartial(source)\n          }\n          else if (process.env.NODE_ENV === 'dev') {\n            fatal(\n              currentAttribute\n                ? `partial 不能写在属性的值里`\n                : `partial 不能写在属性层级`\n            )\n          }\n        }\n        if (process.env.NODE_ENV === 'dev') {\n          fatal(`无效的 partial`)\n        }\n      }\n    },\n    // {{#if expr}}\n    function (source: string) {\n      if (string.startsWith(source, config.SYNTAX_IF)) {\n        source = slicePrefix(source, config.SYNTAX_IF)\n        const expr = exprCompiler.compile(source)\n        if (expr) {\n          return creator.createIf(expr)\n        }\n        if (process.env.NODE_ENV === 'dev') {\n          fatal(`无效的 if`)\n        }\n      }\n    },\n    // {{else if expr}}\n    function (source: string) {\n      if (string.startsWith(source, config.SYNTAX_ELSE_IF)) {\n        source = slicePrefix(source, config.SYNTAX_ELSE_IF)\n        const expr = exprCompiler.compile(source)\n        if (expr) {\n          return creator.createElseIf(expr)\n        }\n        if (process.env.NODE_ENV === 'dev') {\n          fatal(`无效的 else if`)\n        }\n      }\n    },\n    // {{else}}\n    function (source: string) {\n      if (string.startsWith(source, config.SYNTAX_ELSE)) {\n        source = slicePrefix(source, config.SYNTAX_ELSE)\n        if (!string.trim(source)) {\n          return creator.createElse()\n        }\n        if (process.env.NODE_ENV === 'dev') {\n          fatal(`else 后面不要写乱七八糟的东西`)\n        }\n      }\n    },\n    // {{...obj}}\n    function (source: string) {\n      if (string.startsWith(source, config.SYNTAX_SPREAD)) {\n        source = slicePrefix(source, config.SYNTAX_SPREAD)\n        const expr = exprCompiler.compile(source)\n        if (expr) {\n          if (currentElement && currentElement.isComponent) {\n            return creator.createSpread(\n              expr,\n              is.string(expr[STATIC_KEYPATH])\n                ? env.TRUE\n                : env.FALSE\n            )\n          }\n          else if (process.env.NODE_ENV === 'dev') {\n            fatal(`延展属性只能用于组件属性`)\n          }\n        }\n        if (process.env.NODE_ENV === 'dev') {\n          fatal(`无效的 spread`)\n        }\n      }\n    },\n    // {{expr}}\n    function (source: string) {\n      if (!config.SYNTAX_COMMENT.test(source)) {\n        source = string.trim(source)\n        const expr = exprCompiler.compile(source)\n        if (expr) {\n          return creator.createExpression(expr, blockMode === BLOCK_MODE_SAFE)\n        }\n        if (process.env.NODE_ENV === 'dev') {\n          fatal(`无效的 expression`)\n        }\n      }\n    },\n  ],\n\n  parseHtml = function (code: string) {\n    while (code) {\n      array.each(\n        htmlParsers,\n        function (parse) {\n          const match = parse(code)\n          if (match) {\n            code = string.slice(code, match.length)\n            return env.FALSE\n          }\n        }\n      )\n    }\n  },\n\n  parseBlock = function (code: string) {\n    if (string.charAt(code) === '/') {\n\n      /**\n       * 处理可能存在的自闭合元素，如下\n       *\n       * {{#if xx}}\n       *    <input>\n       * {{/if}}\n       */\n      popSelfClosingElementIfNeeded()\n\n      const name = string.slice(code, 1)\n\n      let type = helper.name2Type[name], isCondition: true | void\n      if (type === nodeType.IF) {\n        const node = array.pop(ifStack)\n        if (node) {\n          type = node.type\n          isCondition = env.TRUE\n        }\n        else if (process.env.NODE_ENV === 'dev') {\n          fatal(`if 还没开始就结束了？`)\n        }\n      }\n\n      const node: any = popStack(type)\n      if (node && isCondition) {\n        checkCondition(node)\n      }\n    }\n    else {\n      // 开始下一个 block 或表达式\n      array.each(\n        blockParsers,\n        function (parse) {\n          const node = parse(code)\n          if (node) {\n            addChild(node)\n            return env.FALSE\n          }\n        }\n      )\n    }\n  }\n\n  while (env.TRUE) {\n    openBlockIndex = string.indexOf(content, '{{', nextIndex)\n    if (openBlockIndex >= nextIndex) {\n\n      blockMode = BLOCK_MODE_SAFE\n\n      parseHtml(\n        string.slice(content, nextIndex, openBlockIndex)\n      )\n\n      // 跳过 {{\n      openBlockIndex += 2\n\n      // {{ 后面总得有内容吧\n      if (openBlockIndex < length) {\n        if (string.charAt(content, openBlockIndex) === '{') {\n          blockMode = BLOCK_MODE_UNSAFE\n          openBlockIndex++\n        }\n        if (openBlockIndex < length) {\n          closeBlockIndex = string.indexOf(content, '}}', openBlockIndex)\n          if (closeBlockIndex >= openBlockIndex) {\n            // 确定开始和结束定界符能否配对成功，即 {{ 对 }}，{{{ 对 }}}\n            // 这里不能动 openBlockIndex 和 closeBlockIndex，因为等下要用他俩 slice\n            index = closeBlockIndex + 2\n\n            // 这里要用 <=，因为很可能到头了\n            if (index <= length) {\n\n              if (index < length && string.charAt(content, index) === '}') {\n                if (blockMode === BLOCK_MODE_UNSAFE) {\n                  nextIndex = index + 1\n                }\n                else {\n                  fatal(`{{ 和 }}} 无法配对`)\n                }\n              }\n              else {\n                if (blockMode === BLOCK_MODE_SAFE) {\n                  nextIndex = index\n                }\n                else {\n                  fatal(`{{{ 和 }} 无法配对`)\n                }\n              }\n\n              code = string.trim(\n                string.slice(content, openBlockIndex, closeBlockIndex)\n              )\n\n              // 不用处理 {{ }} 和 {{{ }}} 这种空 block\n              if (code) {\n                parseBlock(code)\n              }\n\n            }\n            else {\n              // 到头了\n              break\n            }\n          }\n          else if (process.env.NODE_ENV === 'dev') {\n            fatal('找不到结束定界符')\n          }\n        }\n        else if (process.env.NODE_ENV === 'dev') {\n          fatal('{{{ 后面没字符串了？')\n        }\n      }\n      else if (process.env.NODE_ENV === 'dev') {\n        fatal('{{ 后面没字符串了？')\n      }\n\n    }\n    else {\n      blockMode = BLOCK_MODE_NONE\n      parseHtml(\n        string.slice(content, nextIndex)\n      )\n      break\n    }\n  }\n\n  if (process.env.NODE_ENV === 'dev') {\n    if (nodeStack.length) {\n      fatal('还有节点未出栈')\n    }\n  }\n\n  return compileCache[content] = nodeList\n\n}","export default function (target: any): string {\n  return JSON.stringify(target)\n}\n","import * as config from '../../yox-config/src/config'\nimport * as type from '../../yox-type/src/type'\n\nimport isDef from '../../yox-common/src/function/isDef'\nimport toJSON from '../../yox-common/src/function/toJSON'\n\nimport * as env from '../../yox-common/src/util/env'\nimport * as array from '../../yox-common/src/util/array'\nimport * as string from '../../yox-common/src/util/string'\nimport * as object from '../../yox-common/src/util/object'\n\nimport * as exprNodeType from '../../yox-expression-compiler/src/nodeType'\nimport * as nodeType from './nodeType'\n\nimport ExpressionNode from '../../yox-expression-compiler/src/node/Node'\nimport ExpressionIdentifier from '../../yox-expression-compiler/src/node/Identifier'\nimport ExpressionCall from '../../yox-expression-compiler/src/node/Call'\n\nimport Node from './node/Node'\nimport Text from './node/Text'\nimport Each from './node/Each'\nimport If from './node/If'\nimport ElseIf from './node/ElseIf'\nimport Element from './node/Element'\nimport Attribute from './node/Attribute'\nimport Directive from './node/Directive'\nimport Property from './node/Property'\nimport Expression from './node/Expression'\nimport Import from './node/Import'\nimport Partial from './node/Partial'\nimport Spread from './node/Spread'\n\n/**\n * 这里的难点在于处理 Element 的 children，举个例子：\n *\n * ['1', _x(expr), _l(expr, index, generate), _x(expr) ? ['1', _x(expr), _l(expr, index, generate)] : y]\n *\n * children 用数组表示，其中表达式求出的值可能是任意类型，比如数组或对象，我们无法控制表达式的值最终会是什么类型\n *\n * 像 each 或 import 这样的语法，内部其实会产生一个 vnode 数组，这里就出现了两个难点：\n *\n * 1. 如何区分 each 或其他语法产生的数组和表达式求值的数组\n * 2. 如何避免频繁的创建数组\n *\n * 我能想到的解决方案是，根据当前节点类型，如果是元素，则确保 children 的每一项的值序列化后都是函数调用的形式\n *\n * 这样能确保是从左到右依次执行，也就便于在内部创建一个公共数组，执行一个函数就收集一个值，而不管那个值到底是什么类型\n *\n */\n\n// 是否要执行 join 操作\nconst joinStack: boolean[] = [],\n\n// 是否正在收集子节点\ncollectStack: (boolean | void)[] = [],\n\nnodeStringify = {},\n\nRENDER_SLOT = 'a',\n\nRENDER_EACH = 'b',\n\nRENDER_EXPRESSION = 'c',\n\nRENDER_EXPRESSION_ARG = 'd',\n\nRENDER_EXPRESSION_VNODE = 'e',\n\nRENDER_TEXT_VNODE = 'f',\n\nRENDER_ATTRIBUTE_VNODE = 'g',\n\nRENDER_PROPERTY_VNODE = 'h',\n\nRENDER_LAZY_VNODE = 'i',\n\nRENDER_TRANSITION_VNODE = 'j',\n\nRENDER_MODEL_VNODE = 'k',\n\nRENDER_EVENT_METHOD_VNODE = 'l',\n\nRENDER_EVENT_NAME_VNODE = 'm',\n\nRENDER_DIRECTIVE_VNODE = 'n',\n\nRENDER_SPREAD_VNODE = 'o',\n\nRENDER_ELEMENT_VNODE = 'p',\n\nRENDER_PARTIAL = 'q',\n\nRENDER_IMPORT = 'r',\n\nARG_CONTEXT = 's',\n\nSEP_COMMA = ',',\n\nSEP_COLON = ':',\n\nSEP_PLUS = '+',\n\nSTRING_TRUE = '!0',\n\nSTRING_FALSE = '!1',\n\nSTRING_EMPTY = toJSON(env.EMPTY_STRING),\n\nCODE_RETURN = 'return ',\n\nCODE_PREFIX = `function(${\n  array.join([\n    RENDER_EXPRESSION,\n    RENDER_EXPRESSION_ARG,\n    RENDER_EXPRESSION_VNODE,\n    RENDER_TEXT_VNODE,\n    RENDER_ATTRIBUTE_VNODE,\n    RENDER_PROPERTY_VNODE,\n    RENDER_LAZY_VNODE,\n    RENDER_TRANSITION_VNODE,\n    RENDER_MODEL_VNODE,\n    RENDER_EVENT_METHOD_VNODE,\n    RENDER_EVENT_NAME_VNODE,\n    RENDER_DIRECTIVE_VNODE,\n    RENDER_SPREAD_VNODE,\n    RENDER_ELEMENT_VNODE,\n    RENDER_SLOT,\n    RENDER_PARTIAL,\n    RENDER_IMPORT,\n    RENDER_EACH\n  ], SEP_COMMA)\n}){return `,\n\nCODE_SUFFIX = `}`\n\n// 表达式求值是否要求返回字符串类型\nlet isStringRequired: boolean | void\n\nfunction stringifyObject(obj: Object): string {\n  const fields: string[] = []\n  object.each(\n    obj,\n    function (value: any, key: string) {\n      if (isDef(value)) {\n        array.push(\n          fields,\n          `${toJSON(key)}${SEP_COLON}${value}`\n        )\n      }\n    }\n  )\n  return `{${array.join(fields, SEP_COMMA)}}`\n}\n\nfunction stringifyArray(arr: any[]): string {\n  return `[${array.join(arr, SEP_COMMA)}]`\n}\n\nfunction stringifyCall(name: string, arg: string): string {\n  return `${name}(${arg})`\n}\n\nfunction stringifyFunction(result: string | void, arg?: string): string {\n  return `function(${arg || env.EMPTY_STRING}){${result || env.EMPTY_STRING}}`\n}\n\nfunction stringifyGroup(code: string): string {\n  return `(${code})`\n}\n\nfunction stringifyExpression(renderName: string, expr: ExpressionNode, extra: string[] | void): string {\n  const args = [toJSON(expr)]\n  if (extra) {\n    array.push(args, extra)\n  }\n  return stringifyCall(\n    renderName,\n    array.join(args, SEP_COMMA)\n  )\n}\n\nfunction stringifyExpressionArg(expr: ExpressionNode): string {\n  return stringifyExpression(\n    RENDER_EXPRESSION_ARG,\n    expr,\n    [ARG_CONTEXT]\n  )\n}\n\nfunction stringifyValue(value: any, expr: ExpressionNode | void, children: Node[] | void): string | void {\n  if (isDef(value)) {\n    return toJSON(value)\n  }\n  // 只有一个表达式时，保持原始类型\n  if (expr) {\n    return stringifyExpression(RENDER_EXPRESSION, expr)\n  }\n  // 多个值拼接时，要求是字符串\n  if (children) {\n    isStringRequired = children.length > 1\n    return stringifyChildren(children)\n  }\n}\n\nfunction stringifyChildren(children: Node[], isComplex: boolean | void): string {\n  // 如果是复杂节点的 children，则每个 child 的序列化都是函数调用的形式\n  // 因此最后可以拼接为 fn1(), fn2(), fn3() 这样依次调用，而不用再多此一举的使用数组，因为在 renderer 里也用不上这个数组\n\n  // children 大于一个时，才有 join 的可能，单个值 jion 啥啊...\n  const isJoin = children.length > 1 && !isComplex\n\n  array.push(joinStack, isJoin)\n  const value = array.join(\n    children.map(\n      function (child: Node) {\n        return nodeStringify[child.type](child)\n      }\n    ),\n    isJoin ? SEP_PLUS : SEP_COMMA\n  )\n  array.pop(joinStack)\n\n  return value\n\n}\n\nfunction stringifyConditionChildren(children: Node[] | void, isComplex: boolean | void): string | void {\n  if (children) {\n    const result = stringifyChildren(children, isComplex)\n    return children.length > 1 && isComplex\n      ? stringifyGroup(result)\n      : result\n  }\n}\n\nfunction stringifyIf(node: If | ElseIf, stub: boolean | void) {\n\n  let { children, isComplex, next } = node,\n\n  test = stringifyExpression(RENDER_EXPRESSION, node.expr),\n\n  yes = stringifyConditionChildren(children, isComplex),\n\n  no: string | void,\n\n  result: string\n\n  if (next) {\n    no = next.type === nodeType.ELSE\n      ? stringifyConditionChildren(next.children, next.isComplex)\n      : stringifyIf(next as ElseIf, stub)\n  }\n  // 到达最后一个条件，发现第一个 if 语句带有 stub，需创建一个注释标签占位\n  else if (stub) {\n    no = renderElement(\n      stringifyObject({\n        isComment: STRING_TRUE,\n        text: STRING_EMPTY,\n      })\n    )\n  }\n\n  if (isDef(yes) || isDef(no)) {\n\n    const isJoin = array.last(joinStack)\n\n    if (isJoin) {\n      if (!isDef(yes)) {\n        yes = STRING_EMPTY\n      }\n      if (!isDef(no)) {\n        no = STRING_EMPTY\n      }\n    }\n\n    if (!isDef(no)) {\n      result = `${test} && ${yes}`\n    }\n    else if (!isDef(yes)) {\n      result = `!${test} && ${no}`\n    }\n    else {\n      result = `${test}?${yes}:${no}`\n    }\n\n    // 如果是连接操作，因为 ?: 优先级最低，因此要加 ()\n    return isJoin\n      ? stringifyGroup(result)\n      : result\n\n  }\n\n  return STRING_EMPTY\n\n}\n\n/**\n * 目的是 保证调用参数顺序稳定，减少运行时判断\n */\nfunction trimArgs(list: (string | void)[]) {\n\n  let args: string[] = [], removable = env.TRUE\n\n  array.each(\n    list,\n    function (arg: string | void) {\n      if (isDef(arg)) {\n        removable = env.FALSE\n        array.unshift(args, arg as string)\n      }\n      else if (!removable) {\n        array.unshift(args, STRING_FALSE)\n      }\n    },\n    env.TRUE\n  )\n\n  return args\n\n}\n\nfunction renderElement(data: string, attrs: string | void, childs: string | void, slots: string | void): string {\n  return stringifyCall(\n    RENDER_ELEMENT_VNODE,\n    array.join(\n      trimArgs([data, attrs, childs, slots]),\n      SEP_COMMA\n    )\n  )\n}\n\nfunction getComponentSlots(children: Node[]): string | void {\n\n  const result: Record<string, string> = {},\n\n  slots: Record<string, Node[]> = {},\n\n  addSlot = function (name: string, nodes: Node[] | void) {\n\n    if (!array.falsy(nodes)) {\n      name = config.SLOT_DATA_PREFIX + name\n      array.push(\n        slots[name] || (slots[name] = []),\n        nodes as Node[]\n      )\n    }\n\n  }\n\n  array.each(\n    children,\n    function (child: Node) {\n\n      // 找到具名 slot\n      if (child.type === nodeType.ELEMENT) {\n        const element = child as Element\n        if (element.slot) {\n          addSlot(element.slot, element.children)\n          return\n        }\n      }\n\n      // 匿名 slot，名称统一为 children\n      addSlot(config.SLOT_NAME_DEFAULT, [child])\n\n    }\n  )\n\n  object.each(\n    slots,\n    function (children: any, name: string) {\n      // 强制为复杂节点，因为 slot 的子节点不能用字符串拼接的方式来渲染\n      result[name] = stringifyFunction(\n        stringifyChildren(children, env.TRUE)\n      )\n    }\n  )\n\n  if (!object.falsy(result)) {\n    return stringifyObject(result)\n  }\n\n}\n\nnodeStringify[nodeType.ELEMENT] = function (node: Element): string {\n\n  let { tag, isComponent, isSvg, isStyle, isStatic, isComplex, name, ref, key, html, attrs, children } = node,\n\n  data: type.data = {},\n\n  outputAttrs: string[] = [],\n\n  outputChilds: string | void,\n\n  outputSlots: string | void,\n\n  args: string[]\n\n  if (tag === env.RAW_SLOT) {\n    args = [toJSON(config.SLOT_DATA_PREFIX + name)]\n    if (children) {\n      array.push(\n        args,\n        stringifyFunction(\n          stringifyChildren(children, env.TRUE)\n        )\n      )\n    }\n    return stringifyCall(\n      RENDER_SLOT,\n      array.join(args, SEP_COMMA)\n    )\n  }\n\n  array.push(collectStack, env.FALSE)\n\n  if (attrs) {\n    array.each(\n      attrs,\n      function (attr: Node) {\n        array.push(\n          outputAttrs,\n          nodeStringify[attr.type](attr)\n        )\n      }\n    )\n  }\n\n  data.tag = toJSON(tag)\n\n  if (isSvg) {\n    data.isSvg = STRING_TRUE\n  }\n\n  if (isStyle) {\n    data.isStyle = STRING_TRUE\n  }\n\n  if (isStatic) {\n    data.isStatic = STRING_TRUE\n  }\n\n  if (ref) {\n    data.ref = stringifyValue(ref.value, ref.expr, ref.children)\n  }\n\n  if (key) {\n    data.key = stringifyValue(key.value, key.expr, key.children)\n  }\n\n  if (html) {\n    data.html = stringifyExpression(RENDER_EXPRESSION, html, [STRING_TRUE])\n  }\n\n  if (isComponent) {\n    data.isComponent = STRING_TRUE\n    if (children) {\n      collectStack[collectStack.length - 1] = env.TRUE\n      outputSlots = getComponentSlots(children)\n    }\n  }\n  else if (children) {\n    isStringRequired = env.TRUE\n    collectStack[collectStack.length - 1] = isComplex\n    outputChilds = stringifyChildren(children, isComplex)\n    if (isComplex) {\n      outputChilds = stringifyFunction(outputChilds)\n    }\n    else {\n      data.text = outputChilds\n      outputChilds = env.UNDEFINED\n    }\n  }\n\n  array.pop(collectStack)\n\n  return renderElement(\n    stringifyObject(data),\n    array.falsy(outputAttrs)\n      ? env.UNDEFINED\n      : stringifyFunction(\n          array.join(outputAttrs, SEP_COMMA)\n        ),\n    outputChilds,\n    outputSlots\n  )\n\n}\n\nnodeStringify[nodeType.ATTRIBUTE] = function (node: Attribute): string {\n  const { binding } = node\n  return stringifyCall(\n    RENDER_ATTRIBUTE_VNODE,\n    array.join(\n      trimArgs([\n        toJSON(node.name),\n        binding ? STRING_TRUE : env.UNDEFINED,\n        binding ? toJSON(node.expr) : env.UNDEFINED,\n        binding ? env.UNDEFINED : stringifyValue(node.value, node.expr, node.children)\n      ]),\n      SEP_COMMA\n    )\n  )\n}\n\nnodeStringify[nodeType.PROPERTY] = function (node: Property): string {\n  const { binding } = node\n  return stringifyCall(\n    RENDER_PROPERTY_VNODE,\n    array.join(\n      trimArgs([\n        toJSON(node.name),\n        toJSON(node.hint),\n        binding ? STRING_TRUE : env.UNDEFINED,\n        binding ? toJSON(node.expr) : env.UNDEFINED,\n        binding ? env.UNDEFINED : stringifyValue(node.value, node.expr, node.children)\n      ]),\n      SEP_COMMA\n    )\n  )\n}\n\nnodeStringify[nodeType.DIRECTIVE] = function (node: Directive): string {\n\n  const { ns, name, key, value, expr } = node\n\n  if (ns === config.DIRECTIVE_LAZY) {\n    return stringifyCall(\n      RENDER_LAZY_VNODE,\n      array.join(\n        [toJSON(name), toJSON(value)],\n        SEP_COMMA\n      )\n    )\n  }\n\n  if (ns === env.RAW_TRANSITION) {\n    return stringifyCall(\n      RENDER_TRANSITION_VNODE,\n      toJSON(value)\n    )\n  }\n\n  // <input model=\"id\">\n  if (ns === config.DIRECTIVE_MODEL) {\n    return stringifyCall(\n      RENDER_MODEL_VNODE,\n      toJSON(expr)\n    )\n  }\n\n  let renderName = RENDER_DIRECTIVE_VNODE,\n\n  args: (string | undefined)[] = [\n    toJSON(ns),\n    toJSON(name),\n    toJSON(key),\n    toJSON(value),\n  ]\n\n  // 尽可能把表达式编译成函数，这样对外界最友好\n  //\n  // 众所周知，事件指令会编译成函数，对于自定义指令来说，也要尽可能编译成函数\n  //\n  // 比如 o-tap=\"method()\" 或 o-log=\"{'id': '11'}\"\n  // 前者会编译成 handler（调用方法），后者会编译成 getter（取值）\n\n  if (expr) {\n\n    // 如果表达式明确是在调用方法，则序列化成 method + args 的形式\n    if (expr.type === exprNodeType.CALL) {\n      if (ns === config.DIRECTIVE_EVENT) {\n        renderName = RENDER_EVENT_METHOD_VNODE\n      }\n      // compiler 保证了函数调用的 name 是标识符\n      array.push(\n        args,\n        toJSON(((expr as ExpressionCall).name as ExpressionIdentifier).name)\n      )\n      // 为了实现运行时动态收集参数，这里序列化成函数\n      if (!array.falsy((expr as ExpressionCall).args)) {\n        // args 函数在触发事件时调用，调用时会传入它的作用域，因此这里要加一个参数\n        array.push(\n          args,\n          stringifyFunction(\n            CODE_RETURN + stringifyArray((expr as ExpressionCall).args.map(stringifyExpressionArg)),\n            ARG_CONTEXT\n          )\n        )\n      }\n    }\n    // 不是调用方法，就是事件转换\n    else if (ns === config.DIRECTIVE_EVENT) {\n      renderName = RENDER_EVENT_NAME_VNODE\n      array.push(\n        args,\n        toJSON(expr.raw)\n      )\n    }\n    else if (ns === config.DIRECTIVE_CUSTOM) {\n\n      // 取值函数\n      // getter 函数在触发事件时调用，调用时会传入它的作用域，因此这里要加一个参数\n      if (expr.type !== exprNodeType.LITERAL) {\n        array.push(args, env.UNDEFINED) // method\n        array.push(args, env.UNDEFINED) // args\n        array.push(\n          args,\n          stringifyFunction(\n            CODE_RETURN + stringifyExpressionArg(expr),\n            ARG_CONTEXT\n          )\n        )\n      }\n\n    }\n\n  }\n\n  return stringifyCall(\n    renderName,\n    array.join(\n      trimArgs(args),\n      SEP_COMMA\n    )\n  )\n\n}\n\nnodeStringify[nodeType.SPREAD] = function (node: Spread): string {\n  return stringifyCall(\n    RENDER_SPREAD_VNODE,\n    array.join(\n      trimArgs([toJSON(node.expr), node.binding ? STRING_TRUE : env.UNDEFINED]),\n      SEP_COMMA\n    )\n  )\n}\n\nnodeStringify[nodeType.TEXT] = function (node: Text): string {\n\n  const result = toJSON(node.text)\n\n  if (array.last(collectStack) && !array.last(joinStack)) {\n    return stringifyCall(\n      RENDER_TEXT_VNODE,\n      result\n    )\n  }\n\n  return result\n}\n\nnodeStringify[nodeType.EXPRESSION] = function (node: Expression): string {\n\n  // 强制保留 isStringRequired 参数，减少运行时判断参数是否存在\n  // 因为还有 stack 参数呢，各种判断真的很累\n  let renderName = RENDER_EXPRESSION,\n\n  args = [isStringRequired ? STRING_TRUE : env.UNDEFINED]\n\n  if (array.last(collectStack) && !array.last(joinStack)) {\n    renderName = RENDER_EXPRESSION_VNODE\n  }\n\n  return stringifyExpression(\n    renderName,\n    node.expr,\n    trimArgs(args),\n  )\n}\n\nnodeStringify[nodeType.IF] = function (node: If): string {\n  return stringifyIf(node, node.stub)\n}\n\nnodeStringify[nodeType.EACH] = function (node: Each): string {\n\n  // compiler 保证了 children 一定有值\n  const generate = stringifyFunction(\n    stringifyChildren(node.children as Node[], node.isComplex)\n  )\n\n  return stringifyCall(\n    RENDER_EACH,\n    array.join(\n      trimArgs([generate, toJSON(node.expr), node.index ? toJSON(node.index) : env.UNDEFINED]),\n      SEP_COMMA\n    )\n  )\n\n}\n\nnodeStringify[nodeType.PARTIAL] = function (node: Partial): string {\n\n  const name = toJSON(node.name),\n\n  // compiler 保证了 children 一定有值\n  children = stringifyFunction(\n    stringifyChildren(node.children as Node[], node.isComplex)\n  )\n\n  return stringifyCall(RENDER_PARTIAL, `${name}${SEP_COMMA}${children}`)\n\n}\n\nnodeStringify[nodeType.IMPORT] = function (node: Import): string {\n\n  const name = toJSON(node.name)\n\n  return stringifyCall(RENDER_IMPORT, `${name}`)\n\n}\n\nexport function stringify(node: Node): string {\n  return CODE_PREFIX + nodeStringify[node.type](node) + CODE_SUFFIX\n}\n\nexport function hasStringify(code: string): boolean {\n  return string.startsWith(code, CODE_PREFIX)\n}","import * as env from '../util/env'\n\nexport default function (target: any): boolean {\n  return target === env.UNDEFINED\n}\n","import isDef from '../../yox-common/src/function/isDef'\nimport isUndef from '../../yox-common/src/function/isUndef'\nimport invoke from '../../yox-common/src/function/execute'\n\nimport * as env from '../../yox-common/src/util/env'\nimport * as array from '../../yox-common/src/util/array'\nimport * as object from '../../yox-common/src/util/object'\nimport * as keypathUtil from '../../yox-common/src/util/keypath'\n\nimport * as nodeType from './nodeType'\nimport * as interpreter from './interpreter'\n\nimport Node from './node/Node'\nimport Keypath from './node/Keypath'\nimport Identifier from './node/Identifier'\nimport Literal from './node/Literal'\nimport Member from './node/Member'\nimport Ternary from './node/Ternary'\nimport Binary from './node/Binary'\nimport Unary from './node/Unary'\nimport Call from './node/Call'\n\nimport ArrayNode from './node/Array'\nimport ObjectNode from './node/Object'\n\nconst nodeExecutor = {}\n\nnodeExecutor[nodeType.LITERAL] = function (node: Literal): any {\n  return node.value\n}\n\nnodeExecutor[nodeType.IDENTIFIER] = function (node: Identifier, getter: (keypath: string, node: Keypath) => any): any {\n  return getter(node.name, node)\n}\n\nnodeExecutor[nodeType.MEMBER] = function (node: Member, getter?: (keypath: string, node: Keypath) => any, context?: any): any {\n\n  /**\n   * 先说第一种奇葩情况：\n   *\n   * 'xx'.length\n   *\n   * 没有变量数据，直接执行字面量，这里用不上 getter\n   *\n   * 第二种：\n   *\n   * a.b.c\n   *\n   * 这是常规操作\n   *\n   * 第三种：\n   *\n   * 'xx'[name]\n   *\n   * 以字面量开头，后面会用到变量\n   *\n   */\n\n  let staticKeypath = node.sk, props = node.props, first: any, data: any\n\n  if (isUndef(staticKeypath)) {\n\n    // props 至少两个，否则无法创建 Member\n    first = props[0]\n\n    if (first.type === nodeType.IDENTIFIER) {\n      staticKeypath = (first as Identifier).name\n    }\n    else {\n      staticKeypath = env.EMPTY_STRING\n      data = execute(first, getter, context)\n    }\n\n    for (let i = 1, len = props.length; i < len; i++) {\n      staticKeypath = keypathUtil.join(\n        staticKeypath,\n        execute(props[i], getter, context)\n      )\n    }\n\n  }\n\n  if (isDef(data)) {\n    data = object.get(data, staticKeypath as string)\n    return data ? data.value : env.UNDEFINED\n  }\n\n  if (getter) {\n    return getter(staticKeypath as string, node)\n  }\n\n}\n\nnodeExecutor[nodeType.UNARY] = function (node: Unary, getter?: (keypath: string, node: Keypath) => any, context?: any): any {\n  return interpreter.unary[node.op].exec(\n    execute(node.a, getter, context)\n  )\n}\n\nnodeExecutor[nodeType.BINARY] = function (node: Binary, getter?: (keypath: string, node: Keypath) => any, context?: any): any {\n  return interpreter.binary[node.op].exec(\n    execute(node.a, getter, context),\n    execute(node.b, getter, context)\n  )\n}\n\nnodeExecutor[nodeType.TERNARY] = function (node: Ternary, getter?: (keypath: string, node: Keypath) => any, context?: any): any {\n  return execute(node.test, getter, context)\n    ? execute(node.yes, getter, context)\n    : execute(node.no, getter, context)\n}\n\nnodeExecutor[nodeType.ARRAY] = function (node: ArrayNode, getter?: (keypath: string, node: Keypath) => any, context?: any): any {\n  return node.nodes.map(\n    function (node) {\n      return execute(node, getter, context)\n    }\n  )\n}\n\nnodeExecutor[nodeType.OBJECT] = function (node: ObjectNode, getter?: (keypath: string, node: Keypath) => any, context?: any): any {\n  let result = {}\n  array.each(\n    node.keys,\n    function (key: string, index: number) {\n      result[key] = execute(node.values[index], getter, context)\n    }\n  )\n  return result\n}\n\nnodeExecutor[nodeType.CALL] = function (node: Call, getter?: (keypath: string, node: Keypath) => any, context?: any): any {\n  return invoke(\n    execute(node.name, getter, context),\n    context,\n    node.args.map(\n      function (node) {\n        return execute(node, getter, context)\n      }\n    )\n  )\n}\n\nexport function execute(node: Node, getter?: (keypath: string, node: Keypath) => any, context?: any): any {\n  return nodeExecutor[node.type](node, getter, context)\n}\n","import * as config from '../../yox-config/src/config'\nimport * as type from '../../yox-type/src/type'\n\nimport isDef from '../../yox-common/src/function/isDef'\nimport isUndef from '../../yox-common/src/function/isUndef'\nimport execute from '../../yox-common/src/function/execute'\nimport toString from '../../yox-common/src/function/toString'\n\nimport * as is from '../../yox-common/src/util/is'\nimport * as env from '../../yox-common/src/util/env'\nimport * as array from '../../yox-common/src/util/array'\nimport * as object from '../../yox-common/src/util/object'\nimport * as logger from '../../yox-common/src/util/logger'\nimport * as keypathUtil from '../../yox-common/src/util/keypath'\n\nimport CustomEvent from '../../yox-common/src/util/CustomEvent'\n\nimport ExpressionNode from '../../yox-expression-compiler/src/node/Node'\nimport Keypath from '../../yox-expression-compiler/src/node/Keypath'\n\nimport * as exprExecutor from '../../yox-expression-compiler/src/executor'\n\nimport Yox from '../../yox-type/src/interface/Yox'\nimport VNode from '../../yox-type/src/vnode/VNode'\nimport DirectiveHooks from '../../yox-type/src/hooks/Directive'\nimport TransitionHooks from '../../yox-type/src/hooks/Transition'\n\nfunction setPair(target: any, name: string, key: string, value: any) {\n  const data = target[name] || (target[name] = {})\n  data[key] = value\n}\n\nexport function render(\n  context: Yox,\n  template: Function,\n  filters: Record<string, Function>,\n  partials: Record<string, Function>,\n  directives: Record<string, DirectiveHooks>,\n  transitions: Record<string, TransitionHooks>\n) {\n\n  let $keypath = env.EMPTY_STRING,\n\n  $scope: type.data = { $keypath },\n\n  $stack = [$keypath, $scope],\n\n  $vnode: any,\n\n  vnodeStack: VNode[][] = [],\n\n  localPartials: Record<string, Function> = {},\n\n  lookup = function (stack: any[], index: number, key: string, node: Keypath, depIgnore?: boolean, defaultKeypath?: string) {\n\n    let keypath = keypathUtil.join(stack[index], key),\n\n    scope = stack[index + 1]\n\n    node.ak = keypath\n\n    // 如果最后还是取不到值，用回最初的 keypath\n    if (isUndef(defaultKeypath)) {\n      defaultKeypath = keypath\n    }\n\n    // 如果取的是 scope 上直接有的数据，如 $keypath\n    if (isDef(scope[key])) {\n      return scope[key]\n    }\n\n    // 如果取的是数组项，则要更进一步\n    if (isDef(scope.$item)) {\n      scope = scope.$item\n\n      // 到这里 scope 可能为空\n      // 比如 new Array(10) 然后遍历这个数组，每一项肯定是空\n\n      // 取 this\n      if (key === env.EMPTY_STRING) {\n        return scope\n      }\n      // 取 this.xx\n      if (scope != env.NULL && isDef(scope[key])) {\n        return scope[key]\n      }\n    }\n\n    // 正常取数据\n    const result = context.get(keypath, lookup, depIgnore)\n    if (result === lookup) {\n      // undefined 或 true 都表示需要向上寻找\n      if (node.lookup !== env.FALSE && index > 1) {\n        index -= 2\n        if (process.env.NODE_ENV === 'dev') {\n          logger.warn(`Can't find [${keypath}], start looking up.`)\n        }\n        return lookup(stack, index, key, node, depIgnore, defaultKeypath)\n      }\n      const holder = object.get(filters, key)\n      return holder\n        ? holder.value\n        : (node.ak = defaultKeypath, env.UNDEFINED)\n    }\n\n    return result\n\n  },\n\n  getValue = function (expr: ExpressionNode, depIgnore?: boolean, stack?: any[]): any {\n\n    const renderStack = stack || $stack,\n\n    { length } = renderStack\n\n    return exprExecutor.execute(\n      expr,\n      function (keypath: string, node: Keypath): any {\n        return lookup(\n          renderStack,\n          length - 2 * ((node.offset || 0) + 1),\n          keypath,\n          node,\n          depIgnore\n        )\n      },\n      context\n    )\n\n  },\n\n  addBinding = function (vnode: type.data, name: string, expr: Keypath, hint?: type.hint): any {\n\n    const value = getValue(expr, env.TRUE),\n\n    key = keypathUtil.join(config.DIRECTIVE_BINDING, name)\n\n    setPair(\n      vnode,\n      'directives',\n      key,\n      {\n        ns: config.DIRECTIVE_BINDING,\n        name,\n        key,\n        hooks: directives[config.DIRECTIVE_BINDING],\n        binding: expr.ak,\n        hint,\n      }\n    )\n\n    return value\n\n  },\n\n  createEventListener = function (type: string): type.listener {\n    return function (event: CustomEvent, data?: type.data) {\n      // 事件名称相同的情况，只可能是监听 DOM 事件，比如写一个 Button 组件\n      // <button on-click=\"click\"> 纯粹的封装了一个原生 click 事件\n      if (type !== event.type) {\n        event = new CustomEvent(type, event)\n      }\n      context.fire(event, data)\n    }\n  },\n\n  createMethodListener = function (\n    name: string,\n    args: Function | void,\n    stack: any[]\n  ): type.listener {\n    return function (event: CustomEvent, data?: type.data) {\n\n      const method = context[name]\n\n      if (event instanceof CustomEvent) {\n\n        let result: any | void\n\n        if (args) {\n          const scope = array.last(stack)\n          if (scope) {\n            scope.$event = event\n            scope.$data = data\n            result = execute(method, context, args(stack))\n            scope.$event =\n            scope.$data = env.UNDEFINED\n          }\n        }\n        else {\n          result = execute(method, context, data ? [event, data] : event)\n        }\n\n        return result\n\n      }\n      else {\n        execute(\n          method,\n          context,\n          args ? args(stack) : env.UNDEFINED\n        )\n      }\n\n    }\n  },\n\n  createGetter = function (getter: Function, stack: any[]): type.getter {\n    return function () {\n      return getter(stack)\n    }\n  },\n\n  renderExpression = function (expr: ExpressionNode, stringRequired: boolean | void): any {\n    const value = getValue(expr)\n    return stringRequired\n      ? toString(value)\n      : value\n  },\n\n  renderExpressionArg = function (expr: ExpressionNode, stack: any[]): any {\n    return getValue(expr, env.UNDEFINED, stack)\n  },\n\n  renderExpressionVnode = function (expr: ExpressionNode, stringRequired: boolean) {\n    renderTextVnode(\n      renderExpression(expr, stringRequired)\n    )\n  },\n\n  renderTextVnode = function (text: string) {\n    const vnodeList = array.last(vnodeStack)\n    if (vnodeList) {\n      const lastVnode = array.last(vnodeList)\n      if (lastVnode && lastVnode.isText) {\n        (lastVnode.text as string) += text\n      }\n      else {\n        const textVnode: any = {\n          isText: env.TRUE,\n          text,\n          context,\n          keypath: $keypath,\n        }\n        array.push(vnodeList, textVnode)\n      }\n    }\n  },\n\n  renderAttributeVnode = function (name: string, binding: boolean | void, expr: Keypath | void, value: string | void) {\n    if (binding) {\n      value = addBinding($vnode, name, expr as Keypath)\n    }\n    if ($vnode.isComponent) {\n      setPair($vnode, 'props', name, value)\n    }\n    else {\n      setPair($vnode, 'nativeAttrs', name, { name, value })\n    }\n  },\n\n  renderPropertyVnode = function (name: string, hint: type.hint, binding: boolean | void, expr: Keypath | void, value: any | void) {\n    if (binding) {\n      value = addBinding($vnode, name, expr as Keypath, hint)\n    }\n    setPair($vnode, 'nativeProps', name, { name, value, hint })\n  },\n\n  renderLazyVnode = function (name: string, value: type.lazy) {\n    setPair($vnode, 'lazy', name, value)\n  },\n\n  renderTransitionVnode = function (name: string) {\n    $vnode.transition = transitions[name]\n    if (process.env.NODE_ENV === 'dev') {\n      if (!$vnode.transition) {\n        logger.fatal(`transition [${name}] is not found.`)\n      }\n    }\n  },\n\n  renderModelVnode = function (expr: Keypath) {\n\n    $vnode.model = getValue(expr, env.TRUE)\n\n    setPair(\n      $vnode,\n      'directives',\n      config.DIRECTIVE_MODEL,\n      {\n        ns: config.DIRECTIVE_MODEL,\n        name: env.EMPTY_STRING,\n        key: config.DIRECTIVE_MODEL,\n        binding: expr.ak,\n        hooks: directives[config.DIRECTIVE_MODEL]\n      }\n    )\n  },\n\n  renderEventMethodVnode = function (\n    ns: string, name: string, key: string, value: string,\n    method: string, args: Function | void\n  ) {\n    setPair(\n      $vnode,\n      'directives',\n      key,\n      {\n        ns,\n        name,\n        key,\n        value,\n        hooks: directives[config.DIRECTIVE_EVENT],\n        handler: createMethodListener(method as string, args, $stack)\n      }\n    )\n  },\n\n  renderEventNameVnode = function (\n    ns: string, name: string, key: string, value: string,\n    event: string\n  ) {\n    setPair(\n      $vnode,\n      'directives',\n      key,\n      {\n        ns,\n        name,\n        key,\n        value,\n        hooks: directives[config.DIRECTIVE_EVENT],\n        handler: createEventListener(event)\n      }\n    )\n  },\n\n  renderDirectiveVnode = function (\n    ns: string, name: string, key: string, value: string,\n    method: string | void, args: Function | void, getter: Function | void\n  ) {\n\n    const hooks = directives[name]\n\n    if (process.env.NODE_ENV === 'dev') {\n      if (!hooks) {\n        logger.fatal(`directive [${name}] is not found.`)\n      }\n    }\n\n    setPair(\n      $vnode,\n      'directives',\n      key,\n      {\n        ns,\n        name,\n        key,\n        value,\n        hooks,\n        getter: getter ? createGetter(getter, $stack) : env.UNDEFINED,\n        handler: method ? createMethodListener(method, args, $stack) : env.UNDEFINED,\n      }\n    )\n\n  },\n\n  renderSpreadVnode = function (expr: ExpressionNode, binding?: boolean) {\n\n    const value = getValue(expr, binding)\n\n    // 数组也算一种对象，要排除掉\n    if (is.object(value) && !is.array(value)) {\n\n      object.each(\n        value,\n        function (value: any, key: string) {\n          setPair($vnode, 'props', key, value)\n        }\n      )\n\n      const absoluteKeypath = expr['ak']\n      if (absoluteKeypath) {\n        const key = keypathUtil.join(config.DIRECTIVE_BINDING, absoluteKeypath)\n        setPair(\n          $vnode,\n          'directives',\n          key,\n          {\n            ns: config.DIRECTIVE_BINDING,\n            name: env.EMPTY_STRING,\n            key,\n            hooks: directives[config.DIRECTIVE_BINDING],\n            binding: keypathUtil.join(absoluteKeypath, env.RAW_WILDCARD),\n          }\n        )\n      }\n\n    }\n    else if (process.env.NODE_ENV === 'dev') {\n      logger.warn(`[${expr.raw}] 不是对象，延展个毛啊`)\n    }\n\n  },\n\n  renderElementVnode = function (\n    vnode: type.data,\n    attrs: Function | void,\n    childs: Function | void,\n    slots: Record<string, Function> | void\n  ) {\n\n    if (attrs) {\n      $vnode = vnode\n      attrs()\n      $vnode = env.UNDEFINED\n    }\n\n    // childs 和 slots 不可能同时存在\n    if (childs) {\n      vnodeStack.push(vnode.children = [])\n      childs()\n      array.pop(vnodeStack)\n    }\n    else if (slots) {\n      const renderSlots = {}\n      object.each(\n        slots,\n        function (slot: Function, name: string) {\n          vnodeStack.push([])\n          slot()\n          renderSlots[name] = array.pop(vnodeStack)\n        }\n      )\n      vnode.slots = renderSlots\n    }\n\n    vnode.context = context\n    vnode.keypath = $keypath\n\n    const vnodeList = array.last(vnodeStack)\n    if (vnodeList) {\n      array.push(vnodeList, vnode)\n    }\n\n    return vnode\n\n  },\n\n  // <slot name=\"xx\"/>\n  renderSlot = function (name: string, defaultRender?: Function) {\n\n    const vnodeList = array.last(vnodeStack),\n\n    vnodes = context.get(name)\n\n    if (vnodeList) {\n      if (vnodes) {\n        array.each(\n          vnodes,\n          function (vnode: VNode) {\n            array.push(vnodeList, vnode)\n            vnode.parent = context\n          }\n        )\n      }\n      else if (defaultRender) {\n        defaultRender()\n      }\n    }\n\n  },\n\n  // {{#partial name}}\n  //   xx\n  // {{/partial}}\n  renderPartial = function (name: string, render: Function) {\n    localPartials[name] = render\n  },\n\n  // {{> name}}\n  renderImport = function (name: string) {\n    if (localPartials[name]) {\n      localPartials[name]()\n    }\n    else {\n      const partial = partials[name]\n      if (partial) {\n        partial(\n          renderExpression,\n          renderExpressionArg,\n          renderExpressionVnode,\n          renderTextVnode,\n          renderAttributeVnode,\n          renderPropertyVnode,\n          renderLazyVnode,\n          renderTransitionVnode,\n          renderModelVnode,\n          renderEventMethodVnode,\n          renderEventNameVnode,\n          renderDirectiveVnode,\n          renderSpreadVnode,\n          renderElementVnode,\n          renderSlot,\n          renderPartial,\n          renderImport,\n          renderEach\n        )\n      }\n      else if (process.env.NODE_ENV === 'dev') {\n        logger.fatal(`partial [${name}] is not found.`)\n      }\n    }\n  },\n\n  renderEach = function (handler: Function, expr: ExpressionNode, index: string | void) {\n\n    const value = getValue(expr),\n\n    exprKeypath = expr['ak'],\n\n    eachKeypath = exprKeypath || keypathUtil.join($keypath, expr.raw),\n\n    callback = function (item: any, key: string | number, length?: number) {\n\n      let lastKeypath = $keypath, lastScope = $scope, lastKeypathStack = $stack\n\n      $keypath = keypathUtil.join(eachKeypath, toString(key))\n      $scope = {}\n      $stack = object.copy($stack)\n\n      array.push($stack, $keypath)\n      array.push($stack, $scope)\n\n      // 从下面这几句赋值可以看出\n      // scope 至少会有 '$keypath' '$length' '$item' index 等几个值\n      $scope.$keypath = $keypath\n\n      // 避免模板里频繁读取 list.length\n      $scope.$length = length\n\n      // 类似 {{#each 1 -> 10}} 这样的临时循环，需要在 scope 上加上当前项\n      // 因为通过 context.get() 无法获取数据\n      if (!exprKeypath) {\n        $scope.$item = item\n      }\n\n      if (index) {\n        $scope[index] = key\n      }\n\n      handler()\n\n      $keypath = lastKeypath\n      $scope = lastScope\n      $stack = lastKeypathStack\n\n    }\n\n    if (is.array(value)) {\n      array.each(value, callback)\n    }\n    else if (is.object(value)) {\n      object.each(value, callback)\n    }\n    else if (is.func(value)) {\n      value(callback)\n    }\n\n  }\n\n  return template(\n    renderExpression,\n    renderExpressionArg,\n    renderExpressionVnode,\n    renderTextVnode,\n    renderAttributeVnode,\n    renderPropertyVnode,\n    renderLazyVnode,\n    renderTransitionVnode,\n    renderModelVnode,\n    renderEventMethodVnode,\n    renderEventNameVnode,\n    renderDirectiveVnode,\n    renderSpreadVnode,\n    renderElementVnode,\n    renderSlot,\n    renderPartial,\n    renderImport,\n    renderEach\n  )\n\n}","import execute from '../../yox-common/src/function/execute'\n\nimport * as is from '../../yox-common/src/util/is'\nimport * as env from '../../yox-common/src/util/env'\nimport * as array from '../../yox-common/src/util/array'\nimport * as object from '../../yox-common/src/util/object'\n\nimport * as type from '../../yox-type/src/type'\nimport ComputedInterface from '../../yox-type/src/watcher/Computed'\nimport ObserverInterface from '../../yox-type/src/watcher/Observer'\nimport WatcherOptions from '../../yox-type/src/options/Watcher'\n\n/**\n * 计算属性\n *\n * 可配置 cache、deps、get、set 等\n */\nexport default class Computed implements ComputedInterface {\n\n  static current?: Computed\n\n  /**\n   * 对外的构造器，把用户配置的计算属性对象转换成内部对象\n   *\n   * @param keypath\n   * @param observer\n   * @param options\n   */\n  static build(keypath: string, observer: ObserverInterface, options: any): Computed | void {\n\n    let cache = env.TRUE,\n\n    sync = env.TRUE,\n\n    deps: string[] = [],\n\n    getter: type.getter | void,\n\n    setter: type.setter | void\n\n    if (is.func(options)) {\n      getter = options\n    }\n    else if (is.object(options)) {\n      if (is.boolean(options.cache)) {\n        cache = options.cache\n      }\n      if (is.boolean(options.sync)) {\n        sync = options.sync\n      }\n      // 因为可能会修改 deps，所以这里创建一个新的 deps，避免影响外部传入的 deps\n      if (is.array(options.deps)) {\n        deps = object.copy(options.deps)\n      }\n      if (is.func(options.get)) {\n        getter = options.get\n      }\n      if (is.func(options.set)) {\n        setter = options.set\n      }\n    }\n\n    if (getter) {\n      return new Computed(keypath, sync, cache, deps, observer, getter, setter)\n    }\n\n  }\n\n  keypath: string\n\n  value: any\n\n  deps: string[]\n\n  cache: boolean\n\n  fixed: boolean\n\n  context: any\n\n  observer: ObserverInterface\n\n  getter: type.getter\n\n  setter: type.setter | void\n\n  watcher: type.watcher\n\n  watcherOptions: WatcherOptions\n\n  unique: Record<string, boolean>\n\n  private constructor(\n    keypath: string,\n    sync: boolean,\n    cache: boolean,\n    deps: string[],\n    observer: ObserverInterface,\n    getter: type.getter,\n    setter: type.setter | void\n  ) {\n\n    const instance = this\n\n    instance.keypath = keypath\n    instance.cache = cache\n\n    instance.deps = deps\n\n    instance.context = observer.context\n    instance.observer = observer\n    instance.getter = getter\n    instance.setter = setter\n\n    instance.unique = {}\n\n    instance.watcher = function ($0: any, $1: any, $2: string) {\n\n      // 计算属性的依赖变了会走进这里\n\n      const oldValue = instance.value,\n      newValue = instance.get(env.TRUE)\n\n      if (newValue !== oldValue) {\n        observer.diff(keypath, newValue, oldValue)\n      }\n\n    }\n\n    instance.watcherOptions = {\n      sync,\n      watcher: instance.watcher\n    }\n\n    if (instance.fixed = !array.falsy(deps)) {\n      array.each(\n        deps,\n        function (dep: string) {\n          observer.watch(\n            dep,\n            instance.watcherOptions\n          )\n        }\n      )\n    }\n\n  }\n\n  /**\n   * 读取计算属性的值\n   *\n   * @param force 是否强制刷新缓存\n   */\n  get(force?: boolean): any {\n\n    const instance = this,\n\n    { getter, context } = instance\n\n    // 禁用缓存\n    if (!instance.cache) {\n      instance.value = execute(getter, context)\n    }\n\n    // 减少取值频率，尤其是处理复杂的计算规则\n    else if (force || !object.has(instance, env.RAW_VALUE)) {\n\n      // 如果写死了依赖，则不需要收集依赖\n      if (instance.fixed) {\n        instance.value = execute(getter, context)\n      }\n      else {\n\n        // 清空上次收集的依赖\n        instance.unbind()\n\n        // 开始收集新的依赖\n        const lastComputed = Computed.current\n        Computed.current = instance\n\n        instance.value = execute(getter, context)\n\n        // 绑定新的依赖\n        instance.bind()\n\n        Computed.current = lastComputed\n      }\n\n    }\n\n    return instance.value\n  }\n\n  set(value: any): void {\n    const { setter, context } = this\n    if (setter) {\n      setter.call(context, value)\n    }\n  }\n\n  /**\n   * 添加依赖\n   *\n   * 这里只是为了保证依赖唯一，最后由 bind() 实现绑定\n   *\n   * @param dep\n   */\n  add(dep: string): void {\n    this.unique[dep] = env.TRUE\n  }\n\n  /**\n   * 绑定依赖\n   */\n  bind(): void {\n\n    const { unique, deps, observer, watcherOptions } = this\n\n    object.each(\n      unique,\n      function (_: any, dep: string) {\n        array.push(deps, dep)\n        observer.watch(\n          dep,\n          watcherOptions\n        )\n      }\n    )\n\n    // 用完重置\n    // 方便下次收集依赖\n    this.unique = {}\n\n  }\n\n  /**\n   * 解绑依赖\n   */\n  unbind(): void {\n\n    const { deps, observer, watcher } = this\n\n    array.each(\n      deps,\n      function (dep: string) {\n        observer.unwatch(dep, watcher)\n      },\n      env.TRUE\n    )\n\n    deps.length = 0\n\n  }\n\n}","import * as env from '../../../yox-common/src/util/env'\nimport * as array from '../../../yox-common/src/util/array'\nimport * as string from '../../../yox-common/src/util/string'\nimport * as keypathUtil from '../../../yox-common/src/util/keypath'\n\n/**\n * 从 keypath 数组中选择和 keypath 最匹配的那一个\n *\n * @param sorted 经过排序的 keypath 数组\n * @param keypath\n */\nexport default function (sorted: string[], keypath: string): any {\n\n  let result: any\n\n  array.each(\n    sorted,\n    function (prefix: string) {\n      const length = keypathUtil.match(keypath, prefix)\n      if (length >= 0) {\n        result = {\n          name: prefix,\n          prop: string.slice(keypath, length)\n        }\n        return env.FALSE\n      }\n    }\n  )\n\n  return result\n\n}","import * as env from '../../../yox-common/src/util/env'\nimport * as object from '../../../yox-common/src/util/object'\n\nexport default function (source: any, keypath: string): any {\n\n  if (source == env.NULL || keypath === env.EMPTY_STRING) {\n    return source\n  }\n\n  const result = object.get(source, keypath)\n  if (result) {\n    return result.value\n  }\n\n}","import * as is from '../../../yox-common/src/util/is'\nimport * as env from '../../../yox-common/src/util/env'\n\n/**\n * 对比新旧数组\n *\n * @param newValue\n * @param oldValue\n * @param callback\n */\nexport default function (\n  newValue: any,\n  oldValue: any,\n  callback: (key: string, newValue: any, oldValue: any) => void\n): true | void {\n\n  const newIsString = is.string(newValue),\n\n  oldIsString = is.string(oldValue)\n\n  if (newIsString || oldIsString) {\n    callback(\n      env.RAW_LENGTH,\n      newIsString ? newValue.length : env.UNDEFINED,\n      oldIsString ? oldValue.length : env.UNDEFINED\n    )\n    return env.TRUE\n  }\n\n}","import * as is from '../../../yox-common/src/util/is'\nimport * as env from '../../../yox-common/src/util/env'\n\n/**\n * 对比新旧数组\n *\n * @param newValue\n * @param oldValue\n * @param callback\n */\nexport default function (\n  newValue: any,\n  oldValue: any,\n  callback: (key: string, newValue: any, oldValue: any) => void\n): true | void {\n\n  const newIsArray = is.array(newValue),\n\n  oldIsArray = is.array(oldValue)\n\n  if (newIsArray || oldIsArray) {\n\n    const newLength = newIsArray ? newValue.length : env.UNDEFINED,\n\n    oldLength = oldIsArray ? oldValue.length : env.UNDEFINED\n\n    callback(\n      env.RAW_LENGTH,\n      newLength,\n      oldLength\n    )\n\n    for (let i = 0, length = Math.max(newLength || 0, oldLength || 0); i < length; i++) {\n      callback(\n        '' + i,\n        newValue ? newValue[i] : env.UNDEFINED,\n        oldValue ? oldValue[i] : env.UNDEFINED\n      )\n    }\n\n    return env.TRUE\n\n  }\n\n}","import * as is from '../../../yox-common/src/util/is'\nimport * as env from '../../../yox-common/src/util/env'\nimport * as object from '../../../yox-common/src/util/object'\n\n/**\n * 对比新旧对象\n *\n * @param newValue\n * @param oldValue\n * @param callback\n */\nexport default function (\n  newValue: any,\n  oldValue: any,\n  callback: (key: string, newValue: any, oldValue: any) => void\n) {\n\n  const newIsObject = is.object(newValue),\n\n  oldIsObject = is.object(oldValue)\n\n  if (newIsObject || oldIsObject) {\n\n    newValue = newIsObject ? newValue : env.EMPTY_OBJECT\n    oldValue = oldIsObject ? oldValue : env.EMPTY_OBJECT\n\n    if (newIsObject) {\n      object.each(\n        newValue,\n        function (value: any, key: string) {\n          if (value !== oldValue[key]) {\n            callback(key, value, oldValue[key])\n          }\n        }\n      )\n    }\n\n    if (oldIsObject) {\n      object.each(\n        oldValue,\n        function (value: any, key: string) {\n          if (value !== newValue[key]) {\n            callback(key, newValue[key], value)\n          }\n        }\n      )\n    }\n\n  }\n\n}","import isDef from '../../../yox-common/src/function/isDef'\nimport * as array from '../../../yox-common/src/util/array'\nimport * as keypathUtil from '../../../yox-common/src/util/keypath'\n\nimport diffString from './diffString'\nimport diffArray from './diffArray'\nimport diffObject from './diffObject'\n\nexport default function diffRecursion(\n  keypath: string,\n  newValue: any,\n  oldValue: any,\n  watchFuzzyKeypaths: string[],\n  callback: (watchKeypath: string, keypath: string, newValue: any, oldValue: any) => void\n) {\n\n  const diff = function (subKeypath: string, subNewValue: any, subOldValue: any) {\n\n    if (subNewValue !== subOldValue) {\n\n      const newKeypath = keypathUtil.join(keypath, subKeypath)\n\n      array.each(\n        watchFuzzyKeypaths,\n        function (fuzzyKeypath: string) {\n          if (isDef(keypathUtil.matchFuzzy(newKeypath, fuzzyKeypath))) {\n            callback(\n              fuzzyKeypath, newKeypath, subNewValue, subOldValue\n            )\n          }\n        }\n      )\n\n      diffRecursion(newKeypath, subNewValue, subOldValue, watchFuzzyKeypaths, callback)\n\n    }\n\n  }\n\n  diffString(newValue, oldValue, diff)\n    || diffArray(newValue, oldValue, diff)\n    || diffObject(newValue, oldValue, diff)\n\n}","import isDef from '../../../yox-common/src/function/isDef'\nimport * as array from '../../../yox-common/src/util/array'\nimport * as object from '../../../yox-common/src/util/object'\nimport * as string from '../../../yox-common/src/util/string'\nimport * as keypathUtil from '../../../yox-common/src/util/keypath'\n\nimport readValue from './readValue'\nimport diffRecursion from './diffRecursion'\n\nexport default function (\n  keypath: string,\n  newValue: any,\n  oldValue: any,\n  watcher: Object, isRecursive: boolean,\n  callback: (watchKeypath: string, keypath: string, newValue: any, oldValue: any) => void\n) {\n\n  let fuzzyKeypaths: string[] | undefined\n\n  // 遍历监听的 keypath，如果未被监听，则无需触发任何事件\n  object.each(\n    watcher,\n    function (_, watchKeypath) {\n\n      // 模糊监听，如 users.*.name\n      if (keypathUtil.isFuzzy(watchKeypath)) {\n\n        // 如果当前修改的是 users.0 整个对象\n        // users.0 和 users.*.name 无法匹配\n        // 此时要知道设置 users.0 到底会不会改变 users.*.name 需要靠递归了\n\n        // 如果匹配，则无需递归\n        if (isDef(keypathUtil.matchFuzzy(keypath, watchKeypath))) {\n          callback(\n            watchKeypath, keypath, newValue, oldValue\n          )\n        }\n        else if (isRecursive) {\n          if (fuzzyKeypaths) {\n            array.push(\n              fuzzyKeypaths,\n              watchKeypath\n            )\n          }\n          else {\n            fuzzyKeypaths = [watchKeypath]\n          }\n        }\n\n        return\n      }\n\n      // 不是模糊匹配，直接靠前缀匹配\n      // 比如监听的是 users.0.name，此时修改 users.0，则直接读出子属性值，判断是否相等\n      const length = keypathUtil.match(watchKeypath, keypath)\n      if (length >= 0) {\n\n        const subKeypath = string.slice(watchKeypath, length),\n        subNewValue = readValue(newValue, subKeypath),\n        subOldValue = readValue(oldValue, subKeypath)\n\n        if (subNewValue !== subOldValue) {\n          callback(\n            watchKeypath, watchKeypath, subNewValue, subOldValue\n          )\n        }\n\n      }\n\n    }\n  )\n\n  // 存在模糊匹配的需求\n  // 必须对数据进行递归\n  // 性能确实会慢一些，但是很好用啊，几乎可以监听所有的数据\n  if (fuzzyKeypaths) {\n    diffRecursion(keypath, newValue, oldValue, fuzzyKeypaths, callback)\n  }\n\n}","import EmitterOptions from '../../../yox-type/src/options/Emitter'\n\n/**\n * 触发异步变化时，用此函数过滤下，哪些 listener 应该执行\n *\n * @param item\n * @param data\n */\nexport default function (_: string, args: any[] | void, options: EmitterOptions): boolean | void {\n\n  if (options.count && args) {\n\n    // 采用计数器的原因是，同一个 options 可能执行多次\n    // 比如监听 user.*，如果同批次修改了 user.name 和 user.age\n    // 这个监听器会调用多次，如果第一次执行就把 count 干掉了，第二次就无法执行了\n\n    options.count--\n\n    // 新旧值不相等\n    return args[0] !== args[1]\n\n  }\n\n}","import * as is from '../../../yox-common/src/util/is'\nimport * as env from '../../../yox-common/src/util/env'\nimport * as logger from '../../../yox-common/src/util/logger'\n\nimport * as type from '../../../yox-type/src/type'\nimport WatcherOptions from '../../../yox-type/src/options/Watcher'\n\n// 避免频繁创建对象\nconst optionsHolder: WatcherOptions = {\n  watcher: env.EMPTY_FUNCTION\n}\n\n/**\n * 格式化 watch options\n *\n * @param options\n */\nexport default function (options: type.watcher | WatcherOptions | void, immediate: boolean | void): WatcherOptions | void {\n\n  if (is.func(options)) {\n    optionsHolder.watcher = options as type.watcher\n    optionsHolder.immediate = immediate === env.TRUE\n    return optionsHolder\n  }\n\n  if (options && (options as WatcherOptions).watcher) {\n    return options as WatcherOptions\n  }\n\n  if (process.env.NODE_ENV === 'dev') {\n    logger.fatal(`watcher should be a function or object.`)\n  }\n\n}","import * as is from '../../yox-common/src/util/is'\nimport * as env from '../../yox-common/src/util/env'\nimport * as array from '../../yox-common/src/util/array'\nimport * as object from '../../yox-common/src/util/object'\nimport * as string from '../../yox-common/src/util/string'\n\nimport toNumber from '../../yox-common/src/function/toNumber'\nimport execute from '../../yox-common/src/function/execute'\nimport Emitter from '../../yox-common/src/util/Emitter'\nimport NextTask from '../../yox-common/src/util/NextTask'\n\nimport * as type from '../../yox-type/src/type'\nimport ValueHolder from '../../yox-type/src/interface/ValueHolder'\nimport ComputedOptions from '../../yox-type/src/options/Computed'\nimport WatcherOptions from '../../yox-type/src/options/Watcher'\nimport EmitterOptions from '../../yox-type/src/options/Emitter'\nimport ObserverInterface from '../../yox-type/src/watcher/Observer'\n\nimport Computed from './Computed'\nimport matchBest from './function/matchBest'\nimport diffWatcher from './function/diffWatcher'\nimport filterWatcher from './function/filterWatcher'\nimport formatWatcherOptions from './function/formatWatcherOptions'\n\ninterface AsyncChange {\n\n  // 旧值\n  value: any\n\n  // 监听的 keypath\n  keypaths: string[]\n\n}\n\n/**\n * 观察者有两种观察模式：\n *\n * 1. 同步监听\n * 2. 异步监听\n *\n * 对于`计算属性`这种需要实时变化的对象，即它的依赖变了，它需要立即跟着变，否则会出现不一致的问题\n * 这种属于同步监听\n *\n * 对于外部调用 observer.watch('keypath', listener)，属于异步监听，它只关心是否变了，而不关心是否是立即触发的\n */\nexport default class Observer implements ObserverInterface {\n\n  data: type.data\n\n  context: any\n\n  nextTask: NextTask\n\n  computed?: Record<string, Computed>\n\n  reversedComputedKeys?: string[]\n\n  syncEmitter: Emitter\n\n  asyncEmitter: Emitter\n\n  asyncChanges: Record<string, AsyncChange>\n\n  pending?: boolean\n\n  constructor(data?: type.data, context?: any) {\n\n    const instance = this\n\n    instance.data = data || {}\n    instance.context = context || instance\n    instance.nextTask = new NextTask()\n\n    instance.syncEmitter = new Emitter()\n    instance.asyncEmitter = new Emitter()\n    instance.asyncChanges = {}\n\n  }\n\n  /**\n   * 获取数据\n   *\n   * @param keypath\n   * @param defaultValue\n   * @param depIgnore\n   * @return\n   */\n  get(\n    keypath: string,\n    defaultValue?: any,\n    depIgnore?: boolean\n  ): any {\n\n    const instance = this,\n\n    currentComputed = Computed.current,\n\n    { data, computed, reversedComputedKeys } = instance\n\n    // 传入 '' 获取整个 data\n    if (keypath === env.EMPTY_STRING) {\n      return data\n    }\n\n    // 调用 get 时，外面想要获取依赖必须设置是谁在收集依赖\n    // 如果没设置，则跳过依赖收集\n    if (currentComputed && !depIgnore) {\n      currentComputed.add(keypath)\n    }\n\n    let result: ValueHolder | void, target: Computed | void\n\n    if (computed) {\n      target = computed[keypath]\n      if (target) {\n        return target.get()\n      }\n      if (reversedComputedKeys) {\n        const match = matchBest(reversedComputedKeys, keypath)\n        if (match && match.prop) {\n          result = object.get(\n            computed[match.name].get(),\n            match.prop\n          )\n        }\n      }\n    }\n\n    if (!result) {\n      result = object.get(data, keypath)\n    }\n\n    return result ? result.value : defaultValue\n\n  }\n\n  /**\n   * 更新数据\n   *\n   * @param keypath\n   * @param value\n   */\n  set(\n    keypath: string | type.data,\n    value?: any\n  ) {\n\n    const instance = this,\n\n    { data, computed, reversedComputedKeys } = instance,\n\n    setValue = function (newValue: any, keypath: string) {\n\n      const oldValue = instance.get(keypath)\n      if (newValue === oldValue) {\n        return\n      }\n\n      let target: Computed | void\n\n      if (computed) {\n        target = computed[keypath]\n        if (target) {\n          target.set(newValue)\n        }\n        if (reversedComputedKeys) {\n          const match = matchBest(reversedComputedKeys, keypath)\n          if (match && match.prop) {\n            target = computed[match.name]\n            if (target) {\n              const targetValue = target.get()\n              if (is.object(targetValue)) {\n                object.set(targetValue, match.prop, newValue)\n              }\n            }\n          }\n        }\n      }\n\n      if (!target) {\n        object.set(data, keypath, newValue)\n      }\n\n      instance.diff(keypath, newValue, oldValue)\n\n    }\n\n    if (is.string(keypath)) {\n      setValue(value, keypath as string)\n    }\n    else if (is.object(keypath)) {\n      object.each(keypath, setValue)\n    }\n\n  }\n\n  /**\n   * 同步调用的 diff，用于触发 syncEmitter，以及唤醒 asyncEmitter\n   *\n   * @param keypath\n   * @param newValue\n   * @param oldValue\n   */\n  diff(\n    keypath: string,\n    newValue: any,\n    oldValue: any\n  ): void {\n\n    const instance = this,\n\n    { syncEmitter, asyncEmitter, asyncChanges } = instance,\n\n    /**\n     * 我们认为 $ 开头的变量是不可递归的\n     * 比如浏览器中常见的 $0 表示当前选中元素\n     * DOM 元素是不能递归的\n     */\n    isRecursive = string.codeAt(keypath) !== 36\n\n    diffWatcher(\n      keypath, newValue, oldValue,\n      syncEmitter.listeners, isRecursive,\n      function (watchKeypath: string, keypath: string, newValue: any, oldValue: any) {\n        syncEmitter.fire(watchKeypath, [newValue, oldValue, keypath])\n      }\n    )\n\n    /**\n     * 此处有坑，举个例子\n     *\n     * observer.watch('a', function () {})\n     *\n     * observer.set('a', 1)\n     *\n     * observer.watch('a', function () {})\n     *\n     * 这里，第一个 watcher 应该触发，但第二个不应该，因为它绑定监听时，值已经是最新的了\n     */\n\n    diffWatcher(\n      keypath, newValue, oldValue,\n      asyncEmitter.listeners, isRecursive,\n      function (watchKeypath: string, keypath: string, newValue: any, oldValue: any) {\n\n        array.each(\n          asyncEmitter.listeners[watchKeypath],\n          function (item: EmitterOptions) {\n            (item.count as number)++\n          }\n        )\n\n        const { keypaths } = asyncChanges[keypath] || (asyncChanges[keypath] = { value: oldValue, keypaths: [] })\n        if (!array.has(keypaths, watchKeypath)) {\n          array.push(keypaths, watchKeypath)\n        }\n\n        if (!instance.pending) {\n          instance.pending = env.TRUE\n          instance.nextTask.append(\n            function () {\n              if (instance.pending) {\n                instance.pending = env.UNDEFINED\n                instance.diffAsync()\n              }\n            }\n          )\n        }\n      }\n    )\n\n  }\n\n  /**\n   * 异步触发的 diff\n   */\n  diffAsync(): void {\n\n    const instance = this,\n\n    { asyncEmitter, asyncChanges } = instance\n\n    instance.asyncChanges = {}\n\n    object.each(\n      asyncChanges,\n      function (change: AsyncChange, keypath: string) {\n\n        const args = [instance.get(keypath), change.value, keypath]\n\n        // 不能在这判断新旧值是否相同，相同就不 fire\n        // 因为前面标记了 count，在这中断会导致 count 无法清除\n\n        array.each(\n          change.keypaths,\n          function (watchKeypath: string) {\n            asyncEmitter.fire(watchKeypath, args, filterWatcher)\n          }\n        )\n\n      }\n    )\n\n  }\n\n  /**\n   * 添加计算属性\n   *\n   * @param keypath\n   * @param computed\n   */\n  addComputed(\n    keypath: string,\n    options: type.getter | ComputedOptions\n  ): Computed | void {\n\n    const instance = this,\n\n    computed = Computed.build(keypath, instance, options)\n\n    if (computed) {\n\n      if (!instance.computed) {\n        instance.computed = {}\n      }\n\n      instance.computed[keypath] = computed\n      instance.reversedComputedKeys = object.sort(instance.computed, env.TRUE)\n\n      return computed\n\n    }\n\n  }\n\n  /**\n   * 移除计算属性\n   *\n   * @param keypath\n   */\n  removeComputed(\n    keypath: string\n  ): void {\n\n    const instance = this,\n\n    { computed } = instance\n\n    if (computed && object.has(computed, keypath)) {\n      delete computed[keypath]\n      instance.reversedComputedKeys = object.sort(computed, env.TRUE)\n    }\n\n  }\n\n  /**\n   * 监听数据变化\n   *\n   * @param keypath\n   * @param watcher\n   * @param immediate\n   */\n  watch(\n    keypath: string | Record<string, type.watcher | WatcherOptions>,\n    watcher?: type.watcher | WatcherOptions,\n    immediate?: boolean\n  ) {\n\n    const instance = this,\n\n    { context, syncEmitter, asyncEmitter } = instance,\n\n    bind = function (keypath: string, options: WatcherOptions) {\n\n      const emitter = options.sync ? syncEmitter : asyncEmitter,\n\n      // formatWatcherOptions 保证了 options.watcher 一定存在\n      listener: EmitterOptions = {\n        fn: options.watcher,\n        ctx: context,\n        count: 0,\n      }\n\n      if (options.once) {\n        listener.max = 1\n      }\n\n      emitter.on(keypath, listener)\n\n      if (options.immediate) {\n        execute(\n          options.watcher,\n          context,\n          [\n            instance.get(keypath),\n            env.UNDEFINED,\n            keypath\n          ]\n        )\n      }\n\n    }\n\n    if (is.string(keypath)) {\n      bind(\n        keypath as string,\n        formatWatcherOptions(watcher, immediate) as WatcherOptions\n      )\n      return\n    }\n\n    object.each(\n      keypath,\n      function (options: type.watcher | WatcherOptions, keypath: string) {\n        bind(keypath, formatWatcherOptions(options) as WatcherOptions)\n      }\n    )\n\n  }\n\n  /**\n   * 取消监听数据变化\n   *\n   * @param keypath\n   * @param watcher\n   */\n  unwatch(\n    keypath?: string,\n    watcher?: type.watcher\n  ) {\n    this.syncEmitter.off(keypath, watcher)\n    this.asyncEmitter.off(keypath, watcher)\n  }\n\n  /**\n   * 取反 keypath 对应的数据\n   *\n   * 不管 keypath 对应的数据是什么类型，操作后都是布尔型\n   *\n   * @param keypath\n   * @return 取反后的布尔值\n   */\n  toggle(keypath: string): boolean {\n    const value = !this.get(keypath)\n    this.set(keypath, value)\n    return value\n  }\n\n  /**\n   * 递增 keypath 对应的数据\n   *\n   * 注意，最好是整型的加法，如果涉及浮点型，不保证计算正确\n   *\n   * @param keypath 值必须能转型成数字，如果不能，则默认从 0 开始递增\n   * @param step 步进值，默认是 1\n   * @param max 可以递增到的最大值，默认不限制\n   */\n  increase(keypath: string, step?: number, max?: number): number | void {\n    const value = toNumber(this.get(keypath), 0) + (step || 1)\n    if (!is.number(max) || value <= (max as number)) {\n      this.set(keypath, value)\n      return value\n    }\n  }\n\n  /**\n   * 递减 keypath 对应的数据\n   *\n   * 注意，最好是整型的减法，如果涉及浮点型，不保证计算正确\n   *\n   * @param keypath 值必须能转型成数字，如果不能，则默认从 0 开始递减\n   * @param step 步进值，默认是 1\n   * @param min 可以递减到的最小值，默认不限制\n   */\n  decrease(keypath: string, step?: number, min?: number): number | void {\n    const value = toNumber(this.get(keypath), 0) - (step || 1)\n    if (!is.number(min) || value >= (min as number)) {\n      this.set(keypath, value)\n      return value\n    }\n  }\n\n  /**\n   * 在数组指定位置插入元素\n   *\n   * @param keypath\n   * @param item\n   * @param index\n   */\n  insert(keypath: string, item: any, index: number | boolean): true | void {\n\n    let list = this.get(keypath)\n    list = !is.array(list) ? [] : object.copy(list)\n\n    const { length } = list\n    if (index === env.TRUE || index === length) {\n      list.push(item)\n    }\n    else if (index === env.FALSE || index === 0) {\n      list.unshift(item)\n    }\n    else if (index > 0 && index < length) {\n      list.splice(index, 0, item)\n    }\n    else {\n      return\n    }\n\n    this.set(keypath, list)\n\n    return env.TRUE\n\n  }\n\n  /**\n   * 在数组尾部添加元素\n   *\n   * @param keypath\n   * @param item\n   */\n  append(keypath: string, item: any): true | void {\n    return this.insert(keypath, item, env.TRUE)\n  }\n\n  /**\n   * 在数组首部添加元素\n   *\n   * @param keypath\n   * @param item\n   */\n  prepend(keypath: string, item: any): true | void {\n    return this.insert(keypath, item, env.FALSE)\n  }\n\n  /**\n   * 通过索引移除数组中的元素\n   *\n   * @param keypath\n   * @param index\n   */\n  removeAt(keypath: string, index: number): true | void {\n    let list = this.get(keypath)\n    if (is.array(list)\n      && index >= 0\n      && index < list.length\n    ) {\n      list = object.copy(list)\n      list.splice(index, 1)\n      this.set(keypath, list)\n      return env.TRUE\n    }\n  }\n\n  /**\n   * 直接移除数组中的元素\n   *\n   * @param keypath\n   * @param item\n   */\n  remove(keypath: string, item: any): true | void {\n    let list = this.get(keypath)\n    if (is.array(list)) {\n      list = object.copy(list)\n      if (array.remove(list, item)) {\n        this.set(keypath, list)\n        return env.TRUE\n      }\n    }\n  }\n\n  /**\n   * 拷贝任意数据，支持深拷贝\n   *\n   * @param data\n   * @param deep\n   */\n  copy<T>(data: T, deep?: boolean): T {\n    return object.copy(data, deep)\n  }\n\n  /**\n   * 销毁\n   */\n  destroy() {\n    const instance = this\n    instance.syncEmitter.off()\n    instance.asyncEmitter.off()\n    instance.nextTask.clear()\n    object.clear(instance)\n  }\n\n}\n","import * as type from '../../yox-type/src/type'\nimport * as config from '../../yox-config/src/config'\n\nimport isDef from '../../yox-common/src/function/isDef'\nimport execute from '../../yox-common/src/function/execute'\n\nimport * as env from '../../yox-common/src/util/env'\nimport * as array from '../../yox-common/src/util/array'\nimport * as string from '../../yox-common/src/util/string'\nimport * as object from '../../yox-common/src/util/object'\nimport * as logger from '../../yox-common/src/util/logger'\n\nimport Emitter from '../../yox-common/src/util/Emitter'\nimport CustomEvent from '../../yox-common/src/util/CustomEvent'\n\nimport API from '../../yox-type/src/interface/API'\nimport SpecialEventHooks from '../../yox-type/src/hooks/SpecialEvent'\n\n// 这里先写 IE9 支持的接口\nlet innerText = 'textContent',\n\ninnerHTML = 'innerHTML',\n\nfindElement = function (selector: string): Element | void {\n  const node = (env.DOCUMENT as Document).querySelector(selector)\n  if (node) {\n    return node\n  }\n},\n\naddEventListener = function (node: HTMLElement | Window | Document, type: string, listener: (event: Event) => void) {\n  node.addEventListener(type, listener, env.FALSE)\n},\n\nremoveEventListener = function (node: HTMLElement | Window | Document, type: string, listener: (event: Event) => void) {\n  node.removeEventListener(type, listener, env.FALSE)\n},\n\n// IE9 不支持 classList\naddClass = function (node: HTMLElement, className: string) {\n  node.classList.add(className)\n},\n\nremoveClass = function (node: HTMLElement, className: string) {\n  node.classList.remove(className)\n},\n\ncreateEvent = function (event: any, node: HTMLElement | Window | Document): any {\n  return event\n}\n\nif (env.DOCUMENT) {\n\n  // 此时 document.body 不一定有值，比如 script 放在 head 里\n  if (!env.DOCUMENT.documentElement.classList) {\n    addClass = function (node: HTMLElement, className: string) {\n      const classes = node.className.split(CHAR_WHITESPACE)\n      if (!array.has(classes, className)) {\n        array.push(classes, className)\n        node.className = array.join(classes, CHAR_WHITESPACE)\n      }\n    }\n    removeClass = function (node: HTMLElement, className: string) {\n      const classes = node.className.split(CHAR_WHITESPACE)\n      if (array.remove(classes, className)) {\n        node.className = array.join(classes, CHAR_WHITESPACE)\n      }\n    }\n  }\n\n  // 为 IE9 以下浏览器打补丁\n  if (process.env.NODE_LEGACY) {\n\n    if (!env.DOCUMENT.addEventListener) {\n\n      const PROPERTY_CHANGE = 'propertychange'\n\n      addEventListener = function (node: any, type: string, listener: (event: Event) => void) {\n        if (type === env.EVENT_INPUT) {\n          addEventListener(\n            node,\n            PROPERTY_CHANGE,\n            // 借用 EMITTER，反正只是内部临时用一下...\n            listener[EMITTER] = function (event: any) {\n              if (event.propertyName === env.RAW_VALUE) {\n                event = new CustomEvent(event)\n                event.type = env.EVENT_INPUT\n                execute(listener, this, event)\n              }\n            }\n          )\n        }\n        else if (type === env.EVENT_CHANGE && isBoxElement(node)) {\n          addEventListener(\n            node,\n            env.EVENT_CLICK,\n            listener[EMITTER] = function (event: any) {\n              event = new CustomEvent(event)\n              event.type = env.EVENT_CHANGE\n              execute(listener, this, event)\n            }\n          )\n        }\n        else {\n          node.attachEvent(`on${type}`, listener)\n        }\n      }\n\n      removeEventListener = function (node: any, type: string, listener: (event: Event) => void) {\n        if (type === env.EVENT_INPUT) {\n          removeEventListener(node, PROPERTY_CHANGE, listener[EMITTER])\n          delete listener[EMITTER]\n        }\n        else if (type === env.EVENT_CHANGE && isBoxElement(node)) {\n          removeEventListener(node, env.EVENT_CLICK, listener[EMITTER])\n          delete listener[EMITTER]\n        }\n        else {\n          node.detachEvent(`on${type}`, listener)\n        }\n      }\n\n      const isBoxElement = function (node: HTMLInputElement) {\n        return node.tagName === 'INPUT'\n          && (node.type === 'radio' || node.type === 'checkbox')\n      }\n\n      class IEEvent {\n\n        currentTarget: HTMLElement | Window | Document\n\n        target: HTMLElement | EventTarget\n\n        originalEvent: Event\n\n        constructor(event: Event, element: HTMLElement | Window | Document) {\n\n          object.extend(this, event)\n\n          this.currentTarget = element\n          this.target = event.srcElement || element\n          this.originalEvent = event\n\n        }\n\n        preventDefault() {\n          this.originalEvent.returnValue = env.FALSE\n        }\n\n        stopPropagation() {\n          this.originalEvent.cancelBubble = env.TRUE\n        }\n\n      }\n\n      // textContent 不兼容 IE 678\n      innerText = 'innerText'\n\n      createEvent = function (event, element) {\n        return new IEEvent(event, element)\n      }\n\n      findElement = function (selector: string): Element | void {\n        // 去掉 #\n        if (string.codeAt(selector, 0) === 35) {\n          selector = string.slice(selector, 1)\n        }\n        else if (process.env.NODE_ENV === 'dev') {\n          logger.fatal(`\"#id\" is the only supported selector for legacy version.`)\n        }\n        const node = (env.DOCUMENT as Document).getElementById(selector)\n        if (node) {\n          return node\n        }\n      }\n\n    }\n\n  }\n\n}\n\nconst CHAR_WHITESPACE = ' ',\n\n/**\n * 绑定在 HTML 元素上的事件发射器\n */\nEMITTER = '$emitter',\n\n/**\n * 低版本 IE 上 style 标签的专有属性\n */\nSTYLE_SHEET = 'styleSheet',\n\n/**\n * 跟输入事件配套使用的事件\n */\nCOMPOSITION_START = 'compositionstart',\n\n/**\n * 跟输入事件配套使用的事件\n */\nCOMPOSITION_END = 'compositionend',\n\ndomain = 'http://www.w3.org/',\n\nnamespaces = {\n  svg: domain + '2000/svg',\n  // xml: domain + 'XML/1998/namespace',\n  // xlink: domain + '1999/xlink',\n},\n\nspecialEvents: Record<string, SpecialEventHooks> = {},\n\ndomApi: API = {\n\n  createElement(tag: string, isSvg?: boolean): Element {\n    return isSvg\n      ? (env.DOCUMENT as Document).createElementNS(namespaces.svg, tag)\n      : (env.DOCUMENT as Document).createElement(tag)\n  },\n\n  createText(text: string): Text {\n    return (env.DOCUMENT as Document).createTextNode(text)\n  },\n\n  createComment(text: string): Comment {\n    return (env.DOCUMENT as Document).createComment(text)\n  },\n\n  prop(node: HTMLElement, name: string, value?: string | number | boolean): string | number | boolean | void {\n    if (isDef(value)) {\n      object.set(node, name, value, env.FALSE)\n    }\n    else {\n      const holder = object.get(node, name)\n      if (holder) {\n        return holder.value\n      }\n    }\n  },\n\n  removeProp(node: HTMLElement, name: string, hint?: number): void {\n    object.set(\n      node,\n      name,\n      hint === config.HINT_BOOLEAN\n        ? env.FALSE\n        : env.EMPTY_STRING,\n      env.FALSE\n    )\n  },\n\n  attr(node: HTMLElement, name: string, value?: string): string | void {\n    if (isDef(value)) {\n      node.setAttribute(name, value as string)\n    }\n    else {\n      // value 还可能是 null\n      const value = node.getAttribute(name)\n      if (value != env.NULL) {\n        return value as string\n      }\n    }\n  },\n\n  removeAttr(node: HTMLElement, name: string): void {\n    node.removeAttribute(name)\n  },\n\n  before(parentNode: Node, node: Node, beforeNode: Node): void {\n    parentNode.insertBefore(node, beforeNode)\n  },\n\n  append(parentNode: Node, node: Node): void {\n    parentNode.appendChild(node)\n  },\n\n  replace(parentNode: Node, node: Node, oldNode: Node): void {\n    parentNode.replaceChild(node, oldNode)\n  },\n\n  remove(parentNode: Node, node: Node): void {\n    parentNode.removeChild(node)\n  },\n\n  parent(node: Node): Node | void {\n    const { parentNode } = node\n    if (parentNode) {\n      return parentNode\n    }\n  },\n\n  next(node: Node): Node | void {\n    const { nextSibling } = node\n    if (nextSibling) {\n      return nextSibling\n    }\n  },\n\n  find: findElement,\n\n  tag(node: Node): string | void {\n    if (node.nodeType === 1) {\n      return string.lower((node as HTMLElement).tagName)\n    }\n  },\n\n  text(node: Node, text?: string, isStyle?: boolean): string | void {\n    if (isDef(text)) {\n      if (process.env.NODE_LEGACY) {\n        if (isStyle && object.has(node, STYLE_SHEET)) {\n          node[STYLE_SHEET].cssText = text\n        }\n        else {\n          node[innerText] = text as string\n        }\n      }\n      else {\n        node[innerText] = text as string\n      }\n    }\n    else {\n      return node[innerText]\n    }\n  },\n\n  html(node: Element, html?: string, isStyle?: boolean): string | void {\n    if (isDef(html)) {\n      if (process.env.NODE_LEGACY) {\n        if (isStyle && object.has(node, STYLE_SHEET)) {\n          node[STYLE_SHEET].cssText = html\n        }\n        else {\n          node[innerHTML] = html as string\n        }\n      }\n      else {\n        node[innerHTML] = html as string\n      }\n    }\n    else {\n      return node[innerHTML]\n    }\n  },\n\n  addClass,\n\n  removeClass,\n\n  on(node: HTMLElement | Window | Document, type: string, listener: type.listener): void {\n\n    const emitter: Emitter = node[EMITTER] || (node[EMITTER] = new Emitter()),\n\n    nativeListeners = emitter.nativeListeners || (emitter.nativeListeners = {})\n\n    // 一个元素，相同的事件，只注册一个 native listener\n    if (!nativeListeners[type]) {\n\n      // 特殊事件\n      const special = specialEvents[type],\n\n      // 唯一的原生监听器\n      nativeListener = function (event: Event | CustomEvent) {\n\n        const customEvent = event instanceof CustomEvent\n          ? event\n          : new CustomEvent(event.type, createEvent(event, node))\n\n        if (customEvent.type !== type) {\n          customEvent.type = type\n        }\n\n        emitter.fire(type, [customEvent])\n\n      }\n\n      nativeListeners[type] = nativeListener\n\n      if (special) {\n        special.on(node, nativeListener)\n      }\n      else {\n        addEventListener(node, type, nativeListener)\n      }\n\n    }\n\n    emitter.on(type, listener)\n  },\n\n  off(node: HTMLElement | Window | Document, type: string, listener: type.listener): void {\n\n    const emitter: Emitter = node[EMITTER],\n\n    { listeners, nativeListeners } = emitter\n\n    // emitter 会根据 type 和 listener 参数进行适当的删除\n    emitter.off(type, listener)\n\n    // 如果注册的 type 事件都解绑了，则去掉原生监听器\n    if (nativeListeners && !emitter.has(type)) {\n\n      const special = specialEvents[type],\n\n      nativeListener = nativeListeners[type]\n\n      if (special) {\n        special.off(node, nativeListener)\n      }\n      else {\n        removeEventListener(node, type, nativeListener)\n      }\n\n      delete nativeListeners[type]\n\n    }\n\n    if (object.falsy(listeners)) {\n      node[EMITTER] = env.UNDEFINED\n    }\n\n  },\n\n  addSpecialEvent(type: string, hooks: SpecialEventHooks): void {\n    if (process.env.NODE_ENV === 'dev') {\n      if (specialEvents[type]) {\n        logger.error(`Special event \"${type}\" is existed.`)\n      }\n      logger.success(`Special event \"${type}\" add success.`)\n    }\n    specialEvents[type] = hooks\n  },\n\n}\n\nspecialEvents[env.EVENT_MODEL] = {\n  on(node: HTMLElement | Window | Document, listener: type.nativeListener) {\n    let locked = env.FALSE\n    domApi.on(node, COMPOSITION_START, listener[COMPOSITION_START] = function () {\n      locked = env.TRUE\n    })\n    domApi.on(node, COMPOSITION_END, listener[COMPOSITION_END] = function (event: Event | CustomEvent) {\n      locked = env.FALSE\n      listener(event)\n    })\n    addEventListener(node, env.EVENT_INPUT, listener[env.EVENT_INPUT] = function (event: Event | CustomEvent) {\n      if (!locked) {\n        listener(event)\n      }\n    })\n  },\n  off(node: HTMLElement | Window | Document, listener: type.nativeListener) {\n    domApi.off(node, COMPOSITION_START, listener[COMPOSITION_START])\n    domApi.off(node, COMPOSITION_END, listener[COMPOSITION_END])\n    removeEventListener(node, env.EVENT_INPUT, listener[env.EVENT_INPUT])\n    listener[COMPOSITION_START] =\n    listener[COMPOSITION_END] =\n    listener[env.EVENT_INPUT] = env.UNDEFINED\n  }\n}\n\nexport default domApi","import execute from './execute'\n\nimport * as env from '../util/env'\nimport * as array from '../util/array'\n\n/**\n * 节流调用\n *\n * @param fn 需要节制调用的函数\n * @param delay 调用的时间间隔，单位毫秒\n * @param immediate 是否立即触发\n * @return 节流函数\n */\nexport default function (fn: Function, delay: number, immediate?: boolean) {\n\n  let timer: any\n\n  return function () {\n\n    if (!timer) {\n\n      const args = array.toArray(arguments)\n      if (immediate) {\n        execute(fn, env.UNDEFINED, args)\n      }\n\n      timer = setTimeout(\n        function () {\n          timer = env.UNDEFINED\n          if (!immediate) {\n            execute(fn, env.UNDEFINED, args)\n          }\n        },\n        delay\n      )\n\n    }\n\n  }\n}\n","import execute from '../../../yox-common/src/function/execute'\nimport debounce from '../../../yox-common/src/function/debounce'\n\nimport * as env from '../../../yox-common/src/util/env'\nimport * as array from '../../../yox-common/src/util/array'\n\nimport api from '../../../yox-dom/src/dom'\n\nimport * as type from '../../../yox-type/src/type'\n\nimport Yox from '../../../yox-type/src/interface/Yox'\nimport VNode from '../../../yox-type/src/vnode/VNode'\nimport Directive from '../../../yox-type/src/vnode/Directive'\nimport DirectiveHooks from '../../../yox-type/src/hooks/Directive'\n\n// 避免连续多次点击，主要用于提交表单场景\n// 移动端的 tap 事件可自行在业务层打补丁实现\nconst immediateTypes = array.toObject([env.EVENT_CLICK, env.EVENT_TAP]),\n\ndirective: DirectiveHooks = {\n  bind(node: HTMLElement | Yox, directive: Directive, vnode: VNode) {\n\n    let { name, handler } = directive, { lazy } = vnode\n\n    if (!handler) {\n      return\n    }\n\n    if (lazy) {\n\n      const value = lazy[name] || lazy[env.EMPTY_STRING]\n\n      if (value === env.TRUE) {\n        name = env.EVENT_CHANGE\n      }\n      else if (value > 0) {\n        handler = debounce(\n          handler,\n          value,\n          immediateTypes[name]\n        )\n      }\n\n    }\n\n    if (vnode.isComponent) {\n\n      (node as Yox).on(name, handler)\n      vnode.data[directive.key] = function () {\n        (node as Yox).off(name, handler as type.listener)\n      }\n\n    }\n    else {\n\n      api.on(node as HTMLElement, name, handler)\n      vnode.data[directive.key] = function () {\n        api.off(node as HTMLElement, name, handler as type.listener)\n      }\n\n    }\n\n  },\n\n  unbind(node: HTMLElement | Yox, directive: Directive, vnode: VNode) {\n    execute(vnode.data[directive.key])\n  }\n}\n\nexport default directive\n","import isDef from '../../../yox-common/src/function/isDef'\nimport debounce from '../../../yox-common/src/function/debounce'\nimport execute from '../../../yox-common/src/function/execute'\nimport toString from '../../../yox-common/src/function/toString'\n\nimport * as is from '../../../yox-common/src/util/is'\nimport * as env from '../../../yox-common/src/util/env'\nimport * as array from '../../../yox-common/src/util/array'\n\nimport api from '../../../yox-dom/src/dom'\n\nimport * as config from '../../../yox-config/src/config'\nimport * as type from '../../../yox-type/src/type'\n\nimport Yox from '../../../yox-type/src/interface/Yox'\nimport VNode from '../../../yox-type/src/vnode/VNode'\nimport Directive from '../../../yox-type/src/vnode/Directive'\nimport DirectiveHooks from '../../../yox-type/src/hooks/Directive'\n\ninterface NativeControl {\n\n  set(node: HTMLElement, value: any): void\n\n  sync(node: HTMLElement, keypath: string, context: Yox): void\n\n  name: string\n\n}\n\nfunction getOptionValue(option: HTMLOptionElement) {\n  return isDef(option.value)\n    ? option.value\n    : option.text\n}\n\nconst inputControl: NativeControl = {\n  set(node: HTMLInputElement, value: any) {\n    node.value = toString(value)\n  },\n  sync(node: HTMLInputElement, keypath: string, context: Yox) {\n    context.set(keypath, node.value)\n  },\n  name: env.RAW_VALUE\n},\n\nradioControl: NativeControl = {\n  set(node: HTMLInputElement, value: any) {\n    node.checked = node.value === toString(value)\n  },\n  sync(node: HTMLInputElement, keypath: string, context: Yox) {\n    if (node.checked) {\n      context.set(keypath, node.value)\n    }\n  },\n  name: 'checked'\n},\n\ncheckboxControl: NativeControl = {\n  set(node: HTMLInputElement, value: any) {\n    node.checked = is.array(value)\n      ? array.has(value, node.value, env.FALSE)\n      : !!value\n  },\n  sync(node: HTMLInputElement, keypath: string, context: Yox) {\n    const value = context.get(keypath)\n    if (is.array(value)) {\n      if (node.checked) {\n        context.append(keypath, node.value)\n      }\n      else {\n        context.removeAt(\n          keypath,\n          array.indexOf(value, node.value, env.FALSE)\n        )\n      }\n    }\n    else {\n      context.set(keypath, node.checked)\n    }\n  },\n  name: 'checked'\n},\n\nselectControl: NativeControl = {\n  set(node: HTMLSelectElement, value: any) {\n    array.each(\n      array.toArray(node.options),\n      node.multiple\n        ? function (option: HTMLOptionElement) {\n          option.selected = array.has(value, getOptionValue(option), env.FALSE)\n        }\n        : function (option: HTMLOptionElement, index: number) {\n          if (getOptionValue(option) == value) {\n            node.selectedIndex = index\n            return env.FALSE\n          }\n        }\n    )\n  },\n  sync(node: HTMLSelectElement, keypath: string, context: Yox) {\n    const options = array.toArray(node.options)\n    if (node.multiple) {\n      const values: string[] = []\n      array.each(\n        options,\n        function (option: HTMLOptionElement) {\n          if (option.selected) {\n            array.push(\n              values,\n              getOptionValue(option)\n            )\n          }\n        }\n      )\n      context.set(keypath, values)\n    }\n    else {\n      context.set(\n        keypath,\n        getOptionValue(\n          options[node.selectedIndex]\n        )\n      )\n    }\n  },\n  name: env.RAW_VALUE\n},\n\ninputTypes = {\n  radio: radioControl,\n  checkbox: checkboxControl,\n},\n\ndirective: DirectiveHooks = {\n  bind(node: HTMLElement | Yox, directive: Directive, vnode: VNode) {\n\n    let { context, model, lazy, isComponent } = vnode,\n\n    dataBinding = directive.binding as string,\n\n    viewBinding: string | void,\n\n    eventName: string | void,\n\n    set: type.watcher,\n\n    sync: type.watcher,\n\n    lazyValue: type.lazy | void\n\n    if (lazy) {\n      lazyValue = lazy[config.DIRECTIVE_MODEL] || lazy[env.EMPTY_STRING]\n    }\n\n    if (isComponent) {\n\n      viewBinding = (node as Yox).$options.model || env.RAW_VALUE\n\n      set = function (newValue: any) {\n        (node as Yox).set(viewBinding as string, newValue)\n      }\n\n      sync = function (newValue: any) {\n        context.set(dataBinding, newValue)\n      }\n\n    }\n    else {\n\n      let control = api.tag(node as HTMLElement) === 'select'\n        ? selectControl\n        : inputControl\n\n      // checkbox,radio,select 监听的是 change 事件\n      eventName = env.EVENT_CHANGE\n\n      if (control === inputControl) {\n        const type = (node as HTMLInputElement).type\n        if (inputTypes[type]) {\n          control = inputTypes[type]\n        }\n        // 如果是输入框，则切换成 model 事件\n        // model 事件是个 yox-dom 实现的特殊事件\n        // 不会在输入法组合文字过程中得到触发事件\n        else if (lazyValue !== env.TRUE) {\n          eventName = env.EVENT_MODEL\n        }\n      }\n\n      set = function (newValue: any) {\n        control.set(node as HTMLElement, newValue)\n      }\n\n      sync = function () {\n        control.sync(node as HTMLElement, dataBinding, context)\n      }\n\n    }\n\n    // 不管模板是否设值，统一用数据中的值\n    set(model, env.UNDEFINED, env.EMPTY_STRING)\n\n    // 应用 lazy\n    if (lazyValue && lazyValue !== env.TRUE) {\n      sync = debounce(sync, lazyValue)\n    }\n\n    // 监听交互，修改数据\n    if (isComponent) {\n      (node as Yox).watch(viewBinding as string, sync)\n    }\n    else {\n      api.on(node as HTMLElement, eventName as string, sync as type.listener)\n    }\n\n    // 监听数据，修改界面\n    context.watch(dataBinding, set)\n\n    vnode.data[directive.key] = function () {\n      if (isComponent) {\n        (node as Yox).unwatch(viewBinding as string, sync)\n      }\n      else {\n        api.off(node as HTMLElement, eventName as string, sync as type.listener)\n      }\n      context.unwatch(dataBinding, set)\n    }\n\n  },\n\n  unbind(node: HTMLElement | Yox, directive: Directive, vnode: VNode) {\n    execute(vnode.data[directive.key])\n  }\n}\n\nexport default directive\n","import isDef from '../../../yox-common/src/function/isDef'\nimport execute from '../../../yox-common/src/function/execute'\n\nimport * as keypathUtil from '../../../yox-common/src/util/keypath'\n\nimport Yox from '../../../yox-type/src/interface/Yox'\nimport VNode from '../../../yox-type/src/vnode/VNode'\nimport Directive from '../../../yox-type/src/vnode/Directive'\nimport DirectiveHooks from '../../../yox-type/src/hooks/Directive'\n\nimport api from '../../../yox-dom/src/dom'\n\nconst directive: DirectiveHooks = {\n\n  bind(node: HTMLElement | Yox, directive: Directive, vnode: VNode) {\n\n    // binding 可能是模糊匹配\n    // 比如延展属性 {{...obj}}，这里 binding 会是 `obj.*`\n    const binding = directive.binding as string,\n\n    isFuzzy = keypathUtil.isFuzzy(binding),\n\n    watcher = function (newValue: any, _: any, keypath: string) {\n\n      const name = isFuzzy\n        ? keypathUtil.matchFuzzy(keypath, binding) as string\n        : directive.name\n\n      if (vnode.isComponent) {\n        (node as Yox).set(name, newValue)\n      }\n      else if (isDef(directive.hint)) {\n        api.prop(node as HTMLElement, name, newValue)\n      }\n      else {\n        api.attr(node as HTMLElement, name, newValue)\n      }\n\n    }\n\n    vnode.context.watch(binding, watcher)\n\n    vnode.data[directive.key] = function () {\n      vnode.context.unwatch(binding, watcher)\n    }\n\n  },\n\n  unbind(node: HTMLElement | Yox, directive: Directive, vnode: VNode) {\n    execute(vnode.data[directive.key])\n  }\n\n}\n\nexport default directive\n","import * as config from '../../../yox-config/src/config'\nimport isDef from '../../../yox-common/src/function/isDef'\n\n// this type https://jkchao.github.io/typescript-book-chinese/typings/thisType.html\n\n/**\n * 组件是否存在某个 slot\n *\n * @param name\n */\nexport default function (name: string): boolean {\n  return isDef(this.get(config.SLOT_DATA_PREFIX + name))\n}\n","import isDef from '../../yox-common/src/function/isDef'\nimport execute from '../../yox-common/src/function/execute'\n\nimport CustomEvent from '../../yox-common/src/util/CustomEvent'\nimport Emitter from '../../yox-common/src/util/Emitter'\nimport NextTask from '../../yox-common/src/util/NextTask'\n\nimport * as is from '../../yox-common/src/util/is'\nimport * as env from '../../yox-common/src/util/env'\nimport * as array from '../../yox-common/src/util/array'\nimport * as string from '../../yox-common/src/util/string'\nimport * as object from '../../yox-common/src/util/object'\nimport * as logger from '../../yox-common/src/util/logger'\n\nimport * as config from '../../yox-config/src/config'\nimport * as snabbdom from '../../yox-snabbdom/src/snabbdom'\n\nimport * as templateCompiler from '../../yox-template-compiler/src/compiler'\nimport * as templateStringify from '../../yox-template-compiler/src/stringify'\nimport * as templateRender from '../../yox-template-compiler/src/renderer'\n\nimport * as type from '../../yox-type/src/type'\n\nimport VNode from '../../yox-type/src/vnode/VNode'\nimport YoxInterface from '../../yox-type/src/interface/Yox'\nimport YoxPluginInterface from '../../yox-type/src/interface/YoxPlugin'\nimport YoxOptions from '../../yox-type/src/options/Yox'\nimport ComputedOptions from '../../yox-type/src/options/Computed'\nimport WatcherOptions from '../../yox-type/src/options/Watcher'\nimport EmitterOptions from '../../yox-type/src/options/Emitter'\nimport DirectiveHooks from '../../yox-type/src/hooks/Directive'\nimport TransitionHooks from '../../yox-type/src/hooks/Transition'\nimport PropRule from '../../yox-type/src/interface/PropRule'\n\nimport Computed from '../../yox-observer/src/Computed'\nimport Observer from '../../yox-observer/src/Observer'\n\nimport domApi from '../../yox-dom/src/dom'\n\nimport event from './directive/event'\nimport model from './directive/model'\nimport binding from './directive/binding'\nimport hasSlot from './filter/hasSlot'\n\n\nconst globalDirectives = {},\n\nglobalTransitions = {},\n\nglobalComponents = {},\n\nglobalPartials = {},\n\nglobalFilters = {},\n\nLOADER_QUEUE = '$queue',\n\nTEMPLATE_COMPUTED = '$' + env.RAW_TEMPLATE,\n\nselectorPattern = /^[#.][-\\w+]+$/\n\nexport default class Yox implements YoxInterface {\n\n  $options: YoxOptions\n\n  $observer: Observer\n\n  $emitter: Emitter\n\n  $el?: HTMLElement\n\n  $template?: Function\n\n  $refs?: Record<string, YoxInterface | HTMLElement>\n\n  $root?: YoxInterface\n\n  $parent?: YoxInterface\n\n  $children?: YoxInterface[]\n\n  $vnode: VNode | undefined\n\n  $directives?: Record<string, DirectiveHooks>\n\n  $components?: Record<string, YoxOptions>\n\n  $transitions?: Record<string, TransitionHooks>\n\n  $partials?: Record<string, Function>\n\n  $filters?: Record<string, Function | Record<string, Function>>\n\n  /**\n   * core 版本\n   */\n  public static version = process.env.NODE_VERSION\n\n  /**\n   * 方便外部共用的通用逻辑，特别是写插件，减少重复代码\n   */\n  public static is = is\n  public static array = array\n  public static object = object\n  public static string = string\n  public static logger = logger\n  public static Event = CustomEvent\n  public static Emitter = Emitter\n\n  /**\n   * 安装插件\n   *\n   * 插件必须暴露 install 方法\n   */\n  public static use(plugin: YoxPluginInterface): void {\n    plugin.install(Yox)\n  }\n\n  /**\n   * 因为组件采用的是异步更新机制，为了在更新之后进行一些操作，可使用 nextTick\n   */\n  public static nextTick(task: Function, context?: any): void {\n    NextTask.shared().append(task, context)\n  }\n\n  /**\n   * 编译模板，暴露出来是为了打包阶段的模板预编译\n   */\n  public static compile(template: string, stringify?: boolean): Function | string {\n    if (process.env.NODE_ENV !== 'pure') {\n      if (process.env.NODE_ENV !== 'runtime') {\n        if (!templateStringify.hasStringify(template)) {\n          // 未编译，常出现在开发阶段\n          const nodes = templateCompiler.compile(template)\n          if (process.env.NODE_ENV === 'dev') {\n            if (nodes.length !== 1) {\n              logger.fatal(`\"template\" should have just one root element.`)\n            }\n          }\n          template = templateStringify.stringify(nodes[0])\n          if (stringify) {\n            return template\n          }\n        }\n      }\n      return new Function(`return ${template}`)()\n    }\n    else {\n      return env.EMPTY_STRING\n    }\n  }\n\n  public static directive(\n    name: string | Record<string, DirectiveHooks>,\n    directive?: DirectiveHooks\n  ): DirectiveHooks | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      if (is.string(name) && !directive) {\n        return getResource(globalDirectives, name as string)\n      }\n      setResource(globalDirectives, name, directive)\n    }\n  }\n\n  public static transition(\n    name: string | Record<string, TransitionHooks>,\n    transition?: TransitionHooks\n  ): TransitionHooks | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      if (is.string(name) && !transition) {\n        return getResource(globalTransitions, name as string)\n      }\n      setResource(globalTransitions, name, transition)\n    }\n  }\n\n  public static component(\n    name: string | Record<string, type.component>,\n    component?: type.component\n  ): type.component | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      if (is.string(name) && !component) {\n        return getResource(globalComponents, name as string)\n      }\n      setResource(globalComponents, name, component)\n    }\n  }\n\n  public static partial(\n    name: string | Record<string, string>,\n    partial?: string\n  ): Function | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      if (is.string(name) && !partial) {\n        return getResource(globalPartials, name as string)\n      }\n      setResource(globalPartials, name, partial, Yox.compile)\n    }\n  }\n\n  public static filter(\n    name: string | Record<string, type.filter>,\n    filter?: type.filter\n  ): type.filter | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      if (is.string(name) && !filter) {\n        return getResource(globalFilters, name as string)\n      }\n      setResource(globalFilters, name, filter)\n    }\n  }\n\n  /**\n   * 验证 props，无爱请重写\n   */\n  public static checkPropTypes(props: type.data, propTypes: Record<string, PropRule>): type.data {\n    if (process.env.NODE_ENV === 'dev') {\n      const result = object.copy(props)\n      object.each(\n        propTypes,\n        function (rule: PropRule, key: string) {\n\n          // 类型\n          let type = rule.type,\n\n          // 默认值\n          value = rule.value,\n\n          // 是否必传\n          required = rule.required,\n\n          // 实际的值\n          actual = props[key]\n\n          // 动态化获取是否必填\n          if (is.func(required)) {\n            required = (required as Function)(props)\n          }\n\n          // 传了数据\n          if (isDef(actual)) {\n\n            // 如果不写 type 或 type 不是 字符串 或 数组\n            // 就当做此规则无效，和没写一样\n            if (type) {\n              let matched: boolean | void\n              // type: 'string'\n              if (!string.falsy(type)) {\n                matched = matchType(actual, type as string)\n              }\n              // type: ['string', 'number']\n              else if (!array.falsy(type)) {\n                array.each(\n                  type as string[],\n                  function (item: string) {\n                    if (matchType(actual, item)) {\n                      matched = env.TRUE\n                      return env.FALSE\n                    }\n                  }\n                )\n              }\n              // 动态判断是否匹配类型\n              else if (is.func(type)) {\n                matched = (type as Function)(props)\n              }\n              if (!matched) {\n                logger.warn(`The type of prop \"${key}\" expected to be \"${type}\", but is \"${actual}\".`)\n              }\n            }\n            else {\n              logger.warn(`The prop \"${key}\" in propTypes has no type.`)\n            }\n\n          }\n          // 没传值但此项是必传项\n          else if (required) {\n            logger.warn(`The prop \"${key}\" is marked as required, but its value is not found.`)\n          }\n          // 没传值但是配置了默认值\n          else if (isDef(value)) {\n            result[key] = type === env.RAW_FUNCTION\n              ? value\n              : is.func(value)\n                ? value(props)\n                : value\n          }\n        }\n      )\n      return result\n    }\n    else {\n      return props\n    }\n  }\n\n  constructor(options: YoxOptions | void) {\n\n    const instance = this, $options: YoxOptions = options || env.EMPTY_OBJECT\n\n    // 一进来就执行 before create\n    execute($options[config.HOOK_BEFORE_CREATE], instance, $options)\n\n    // 如果不绑着，其他方法调不到钩子\n    instance.$options = $options\n\n    let {\n      data,\n      props,\n      computed,\n      events,\n      methods,\n      watchers,\n      extensions,\n    } = $options\n\n    // 如果传了 props，则 data 应该是个 function\n    if (process.env.NODE_ENV === 'dev') {\n      if (props && is.object(data)) {\n        logger.fatal('\"data\" option should be a function.')\n      }\n    }\n\n    if (extensions) {\n      object.extend(instance, extensions)\n    }\n\n    // 数据源\n    const source = instance.checkPropTypes(props || {})\n\n    // 先放 props\n    // 当 data 是函数时，可以通过 this.get() 获取到外部数据\n    const observer = instance.$observer = new Observer(source, instance)\n\n    if (computed) {\n      object.each(\n        computed,\n        function (options: type.getter | ComputedOptions, keypath: string) {\n          observer.addComputed(keypath, options)\n        }\n      )\n    }\n\n    // 后放 data\n    const extend = is.func(data) ? execute(data, instance, options) : data\n    if (is.object(extend)) {\n      object.each(\n        extend,\n        function (value, key) {\n          if (process.env.NODE_ENV === 'dev') {\n            if (object.has(source, key)) {\n              logger.warn(`\"${key}\" is already defined as a prop. Use prop default value instead.`)\n            }\n          }\n          source[key] = value\n        }\n      )\n    }\n\n    if (methods) {\n      object.each(\n        methods,\n        function (method: Function, name: string) {\n          if (process.env.NODE_ENV === 'dev') {\n            if (instance[name]) {\n              logger.fatal(`method [${name}] is conflicted with built-in methods.`)\n            }\n          }\n          instance[name] = method\n        }\n      )\n    }\n\n    // 监听各种事件\n    // 支持命名空间\n    instance.$emitter = new Emitter(env.TRUE)\n\n    if (events) {\n      instance.on(events)\n    }\n\n    if (process.env.NODE_ENV !== 'pure') {\n\n      let isComment = env.FALSE,\n\n      placeholder: Node | void,\n\n      {\n        el,\n        root,\n        parent,\n        replace,\n        template,\n        transitions,\n        components,\n        directives,\n        partials,\n        filters,\n        slots,\n      } = $options\n\n      // 把 slots 放进数据里，方便 get\n      if (slots) {\n        object.extend(source, slots)\n      }\n\n      // 检查 template\n      if (is.string(template)) {\n        // 传了选择器，则取对应元素的 html\n        if (selectorPattern.test(template as string)) {\n          placeholder = domApi.find(template as string)\n          if (placeholder) {\n            template = domApi.html(placeholder as Element) as string\n            placeholder = env.UNDEFINED\n          }\n          else if (process.env.NODE_ENV === 'dev') {\n            logger.fatal(`\"${template}\" 选择器找不到对应的元素`)\n          }\n        }\n      }\n      else {\n        template = env.UNDEFINED\n      }\n\n      // 检查 el\n      if (el) {\n        if (is.string(el)) {\n          const selector = el as string\n          if (selectorPattern.test(selector)) {\n            placeholder = domApi.find(selector)\n            if (process.env.NODE_ENV === 'dev') {\n              if (!placeholder) {\n                logger.fatal(`\"${selector}\" 选择器找不到对应的元素`)\n              }\n            }\n          }\n          else if (process.env.NODE_ENV === 'dev') {\n            logger.fatal(`\"el\" option should be a selector.`)\n          }\n        }\n        else {\n          placeholder = el as Node\n        }\n      }\n\n\n      if (placeholder && !replace) {\n        // 如果不是替换占位元素\n        // 则在该元素下新建一个注释节点，等会用新组件替换掉\n        isComment = env.TRUE\n        domApi.append(\n          placeholder as Node,\n          placeholder = domApi.createComment(env.EMPTY_STRING)\n        )\n      }\n\n      if (root) {\n        instance.$root = root\n      }\n      if (parent) {\n        instance.$parent = parent\n      }\n\n      setFlexibleOptions(instance, env.RAW_TRANSITION, transitions)\n      setFlexibleOptions(instance, env.RAW_COMPONENT, components)\n      setFlexibleOptions(instance, env.RAW_DIRECTIVE, directives)\n      setFlexibleOptions(instance, env.RAW_PARTIAL, partials)\n      setFlexibleOptions(instance, env.RAW_FILTER, filters)\n\n      // 当存在模板和计算属性时\n      // 因为这里把模板当做一种特殊的计算属性\n      // 因此模板这个计算属性的优先级应该最高\n      if (template) {\n\n        // 拷贝一份，避免影响外部定义的 watchers\n        const newWatchers = watchers\n          ? object.copy(watchers)\n          : {}\n\n        newWatchers[TEMPLATE_COMPUTED] = {\n          // 模板一旦变化，立即刷新\n          sync: env.TRUE,\n          watcher: function (vnode: VNode) {\n            instance.update(vnode, instance.$vnode as VNode)\n          }\n        }\n\n        // 当模板的依赖变了，则重新创建 virtual dom\n        observer.addComputed(\n          TEMPLATE_COMPUTED,\n          {\n            // 当模板依赖变化时，异步通知模板更新\n            sync: env.FALSE,\n            get: function () {\n              return instance.render()\n            }\n          }\n        )\n\n        afterCreateHook(instance, newWatchers)\n\n        // 编译模板\n        // 在开发阶段，template 是原始的 html 模板\n        // 在产品阶段，template 是编译后且经过 stringify 的字符串\n        // 当然，这个需要外部自己控制传入的 template 是什么\n        // Yox.compile 会自动判断 template 是否经过编译\n        instance.$template = Yox.compile(template) as Function\n\n        // 第一次渲染视图\n        if (!placeholder) {\n          isComment = env.TRUE\n          placeholder = domApi.createComment(env.EMPTY_STRING)\n        }\n\n        instance.update(\n          instance.get(TEMPLATE_COMPUTED),\n          snabbdom.create(\n            domApi,\n            placeholder,\n            isComment,\n            instance,\n            env.EMPTY_STRING\n          )\n        )\n\n        return\n\n      }\n      else if (process.env.NODE_ENV === 'dev') {\n        if (placeholder) {\n          logger.fatal('有 el 没 template 是几个意思？')\n        }\n      }\n\n    }\n\n    afterCreateHook(instance, watchers)\n\n  }\n\n  /**\n   * 添加计算属性\n   */\n  addComputed(\n    keypath: string,\n    computed: type.getter | ComputedOptions\n  ): Computed | void {\n    return this.$observer.addComputed(keypath, computed)\n  }\n\n  /**\n   * 删除计算属性\n   */\n  removeComputed(\n    keypath: string\n  ): void {\n    this.$observer.removeComputed(keypath)\n  }\n\n  /**\n   * 取值\n   */\n  get(\n    keypath: string,\n    defaultValue?: any,\n    depIgnore?: boolean\n  ): any {\n    return this.$observer.get(keypath, defaultValue, depIgnore)\n  }\n\n  /**\n   * 设值\n   */\n  set(\n    keypath: string | type.data,\n    value?: any\n  ): void {\n    // 组件经常有各种异步改值，为了避免组件销毁后依然调用 set\n    // 这里判断一下，至于其他方法的异步调用就算了，业务自己控制吧\n    const { $observer } = this\n    if ($observer) {\n      $observer.set(keypath, value)\n    }\n  }\n\n  /**\n   * 监听事件\n   */\n  on(\n    type: string | Record<string, type.listener>,\n    listener?: type.listener\n  ): YoxInterface {\n    return addEvents(this, type, listener)\n  }\n\n  /**\n   * 监听一次事件\n   */\n  once(\n    type: string | Record<string, type.listener>,\n    listener?: type.listener\n  ): YoxInterface {\n    return addEvents(this, type, listener, env.TRUE)\n  }\n\n  /**\n   * 取消监听事件\n   */\n  off(\n    type?: string,\n    listener?: type.listener\n  ): YoxInterface {\n    this.$emitter.off(type, listener)\n    return this\n  }\n\n  /**\n   * 发射事件\n   */\n  fire(\n    type: string | CustomEvent,\n    data?: type.data | boolean,\n    downward?: boolean\n  ): boolean {\n\n    // 外部为了使用方便，fire(type) 或 fire(type, data) 就行了\n    // 内部为了保持格式统一\n    // 需要转成 Event，这样还能知道 target 是哪个组件\n\n    let instance = this,\n\n    event = type instanceof CustomEvent ? type : new CustomEvent(type),\n\n    args: any[] = [event],\n\n    isComplete: boolean\n\n    // 告诉外部是谁发出的事件\n    if (!event.target) {\n      event.target = instance\n    }\n\n    // 比如 fire('name', true) 直接向下发事件\n    if (is.object(data)) {\n      array.push(args, data as type.data)\n    }\n    else if (data === env.TRUE) {\n      downward = env.TRUE\n    }\n\n    isComplete = instance.$emitter.fire(event.type, args)\n    if (isComplete) {\n      const { $parent, $children } = instance\n      if (downward) {\n        if ($children) {\n          event.phase = CustomEvent.PHASE_DOWNWARD\n          array.each(\n            $children,\n            function (child) {\n              return isComplete = child.fire(event, data, env.TRUE)\n            }\n          )\n        }\n      }\n      else if ($parent) {\n        event.phase = CustomEvent.PHASE_UPWARD\n        isComplete = $parent.fire(event, data)\n      }\n    }\n\n    return isComplete\n\n  }\n\n  /**\n   * 监听数据变化\n   */\n  watch(\n    keypath: string | Record<string, type.watcher | WatcherOptions>,\n    watcher?: type.watcher | WatcherOptions,\n    immediate?: boolean\n  ): YoxInterface {\n    this.$observer.watch(keypath, watcher, immediate)\n    return this\n  }\n\n  /**\n   * 取消监听数据变化\n   */\n  unwatch(\n    keypath?: string,\n    watcher?: type.watcher\n  ): YoxInterface {\n    this.$observer.unwatch(keypath, watcher)\n    return this\n  }\n\n  loadComponent(name: string, callback: type.componentCallback): void {\n    if (!loadComponent(this.$components, name, callback)) {\n      loadComponent(globalComponents, name, callback)\n    }\n  }\n\n  directive(\n    name: string | Record<string, DirectiveHooks>,\n    directive?: DirectiveHooks\n  ): DirectiveHooks | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      const instance = this, { $directives } = instance\n      if (is.string(name) && !directive) {\n        return getResource($directives, name as string, Yox.directive)\n      }\n      setResource(\n        $directives || (instance.$directives = {}),\n        name,\n        directive\n      )\n    }\n  }\n\n  transition(\n    name: string | Record<string, TransitionHooks>,\n    transition?: TransitionHooks\n  ): TransitionHooks | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      const instance = this, { $transitions } = instance\n      if (is.string(name) && !transition) {\n        return getResource($transitions, name as string, Yox.transition)\n      }\n      setResource(\n        $transitions || (instance.$transitions = {}),\n        name,\n        transition\n      )\n    }\n  }\n\n  component(\n    name: string | Record<string, type.component>,\n    component?: type.component\n  ): type.component | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      const instance = this, { $components } = instance\n      if (is.string(name) && !component) {\n        return getResource($components, name as string, Yox.component)\n      }\n      setResource(\n        $components || (instance.$components = {}),\n        name,\n        component\n      )\n    }\n  }\n\n  partial(\n    name: string | Record<string, string>,\n    partial?: string\n  ): Function | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      const instance = this, { $partials } = instance\n      if (is.string(name) && !partial) {\n        return getResource($partials, name as string, Yox.partial)\n      }\n      setResource(\n        $partials || (instance.$partials = {}),\n        name,\n        partial,\n        Yox.compile\n      )\n    }\n  }\n\n  filter(\n    name: string | Record<string, type.filter>,\n    filter?: type.filter\n  ): type.filter | void {\n    if (process.env.NODE_ENV !== 'pure') {\n      const instance = this, { $filters } = instance\n      if (is.string(name) && !filter) {\n        return getResource($filters, name as string, Yox.filter)\n      }\n      setResource(\n        $filters || (instance.$filters = {}),\n        name,\n        filter\n      )\n    }\n  }\n\n  /**\n   * 对于某些特殊场景，修改了数据，但是模板的依赖中并没有这一项\n   * 而你非常确定需要更新模板，强制刷新正是你需要的\n   */\n  forceUpdate(): void {\n    if (process.env.NODE_ENV !== 'pure') {\n\n      const instance = this,\n\n      { $vnode, $observer } = instance,\n\n      { computed } = $observer\n\n      if ($vnode && computed) {\n\n        const template = computed[TEMPLATE_COMPUTED],\n\n        oldValue = template.get()\n\n        // 当前可能正在进行下一轮更新\n        $observer.nextTask.run()\n\n        // 没有更新模板，强制刷新\n        if (oldValue === template.get()) {\n          instance.update(\n            template.get(env.TRUE),\n            $vnode\n          )\n        }\n      }\n    }\n  }\n\n  /**\n   * 把模板抽象语法树渲染成 virtual dom\n   */\n  render() {\n    if (process.env.NODE_ENV !== 'pure') {\n      const instance = this\n      return templateRender.render(\n        instance,\n        instance.$template as Function,\n        mergeResource(instance.$filters, globalFilters),\n        mergeResource(instance.$partials, globalPartials),\n        mergeResource(instance.$directives, globalDirectives),\n        mergeResource(instance.$transitions, globalTransitions)\n      )\n    }\n  }\n\n  /**\n   * 更新 virtual dom\n   *\n   * @param vnode\n   * @param oldVnode\n   */\n  update(vnode: VNode, oldVnode: VNode) {\n    if (process.env.NODE_ENV !== 'pure') {\n      let instance = this,\n\n      { $vnode, $options } = instance,\n\n      hook: Function | void\n\n      // 每次渲染重置 refs\n      // 在渲染过程中收集最新的 ref\n      // 这样可避免更新时，新的 ref，在前面创建，老的 ref 却在后面删除的情况\n      instance.$refs = {}\n\n      if ($vnode) {\n        execute($options[config.HOOK_BEFORE_UPDATE], instance)\n        snabbdom.patch(domApi, vnode, oldVnode)\n        hook = $options[config.HOOK_AFTER_UPDATE]\n      }\n      else {\n        execute($options[config.HOOK_BEFORE_MOUNT], instance)\n        snabbdom.patch(domApi, vnode, oldVnode)\n        instance.$el = vnode.node as HTMLElement\n        hook = $options[config.HOOK_AFTER_MOUNT]\n      }\n\n      instance.$vnode = vnode\n\n      // 跟 nextTask 保持一个节奏\n      // 这样可以预留一些优化的余地\n      if (hook) {\n        instance.nextTick(\n          function () {\n            if (instance.$vnode) {\n              execute(hook, instance)\n            }\n          }\n        )\n      }\n    }\n  }\n\n  /**\n   * 校验组件参数\n   *\n   * @param props\n   */\n  checkPropTypes(props: type.data): type.data {\n    const { propTypes } = this.$options\n    return propTypes\n      ? Yox.checkPropTypes(props, propTypes)\n      : props\n  }\n\n  /**\n   * 创建子组件\n   *\n   * @param options 组件配置\n   * @param vnode 虚拟节点\n   * @param node DOM 元素\n   */\n  create(options: YoxOptions, vnode: VNode, node: Node | void): YoxInterface {\n    if (process.env.NODE_ENV !== 'pure') {\n      options = object.copy(options)\n      options.root = this.$root || this\n      options.parent = this\n\n      // 如果传了 node，表示有一个占位元素，新创建的 child 需要把它替换掉\n      if (node) {\n        options.el = node\n        options.replace = env.TRUE\n      }\n\n      if (vnode.props) {\n        options.props = vnode.props\n      }\n      if (vnode.slots) {\n        options.slots = vnode.slots\n      }\n\n      const child = new Yox(options)\n\n      array.push(\n        this.$children || (this.$children = [ ]),\n        child\n      )\n\n      return child\n    }\n    else {\n      return this\n    }\n  }\n\n  /**\n   * 销毁组件\n   */\n  destroy(): void {\n\n    const instance = this,\n\n    { $options, $emitter, $observer } = instance\n\n    execute($options[config.HOOK_BEFORE_DESTROY], instance)\n\n    if (process.env.NODE_ENV !== 'pure') {\n\n      const { $vnode, $parent } = instance\n\n      if ($parent && $parent.$children) {\n        array.remove($parent.$children, instance)\n      }\n\n      if ($vnode) {\n        // virtual dom 通过判断 parent.$vnode 知道宿主组件是否正在销毁\n        delete instance.$vnode\n        snabbdom.destroy(domApi, $vnode, !$parent)\n      }\n\n    }\n\n    $emitter.off()\n    $observer.destroy()\n\n    object.clear(instance)\n\n    execute($options[config.HOOK_AFTER_DESTROY], instance)\n\n  }\n\n  /**\n   * 因为组件采用的是异步更新机制，为了在更新之后进行一些操作，可使用 nextTick\n   */\n  nextTick(task: Function): void {\n    this.$observer.nextTask.append(task, this)\n  }\n\n  /**\n   * 取反 keypath 对应的数据\n   *\n   * 不管 keypath 对应的数据是什么类型，操作后都是布尔型\n   */\n  toggle(keypath: string): boolean {\n    return this.$observer.toggle(keypath)\n  }\n\n  /**\n   * 递增 keypath 对应的数据\n   *\n   * 注意，最好是整型的加法，如果涉及浮点型，不保证计算正确\n   *\n   * @param keypath 值必须能转型成数字，如果不能，则默认从 0 开始递增\n   * @param step 步进值，默认是 1\n   * @param max 可以递增到的最大值，默认不限制\n   */\n  increase(keypath: string, step?: number, max?: number): number | void {\n    return this.$observer.increase(keypath, step, max)\n  }\n\n  /**\n   * 递减 keypath 对应的数据\n   *\n   * 注意，最好是整型的减法，如果涉及浮点型，不保证计算正确\n   *\n   * @param keypath 值必须能转型成数字，如果不能，则默认从 0 开始递减\n   * @param step 步进值，默认是 1\n   * @param min 可以递减到的最小值，默认不限制\n   */\n  decrease(keypath: string, step?: number, min?: number): number | void {\n    return this.$observer.decrease(keypath, step, min)\n  }\n\n  /**\n   * 在数组指定位置插入元素\n   *\n   * @param keypath\n   * @param item\n   * @param index\n   */\n  insert(keypath: string, item: any, index: number | boolean): true | void {\n    return this.$observer.insert(keypath, item, index)\n  }\n\n  /**\n   * 在数组尾部添加元素\n   *\n   * @param keypath\n   * @param item\n   */\n  append(keypath: string, item: any): true | void {\n    return this.$observer.append(keypath, item)\n  }\n\n  /**\n   * 在数组首部添加元素\n   *\n   * @param keypath\n   * @param item\n   */\n  prepend(keypath: string, item: any): true | void {\n    return this.$observer.prepend(keypath, item)\n  }\n\n  /**\n   * 通过索引移除数组中的元素\n   *\n   * @param keypath\n   * @param index\n   */\n  removeAt(keypath: string, index: number): true | void {\n    return this.$observer.removeAt(keypath, index)\n  }\n\n  /**\n   * 直接移除数组中的元素\n   *\n   * @param keypath\n   * @param item\n   */\n  remove(keypath: string, item: any): true | void {\n    return this.$observer.remove(keypath, item)\n  }\n\n  /**\n   * 拷贝任意数据，支持深拷贝\n   *\n   * @param data\n   * @param deep\n   */\n  copy<T>(data: T, deep?: boolean): T {\n    return this.$observer.copy(data, deep)\n  }\n\n}\n\nconst toString = Object.prototype.toString\n\nfunction matchType(value: any, type: string) {\n  return type === 'numeric'\n    ? is.numeric(value)\n    : string.lower(toString.call(value)) === `[object ${type}]`\n}\n\nfunction afterCreateHook(instance: Yox, watchers: Record<string, type.watcher | WatcherOptions> | void) {\n\n  if (watchers) {\n    instance.watch(watchers)\n  }\n\n  execute(instance.$options[config.HOOK_AFTER_CREATE], instance)\n\n}\n\nfunction setFlexibleOptions(instance: Yox, key: string, value: Function | type.data | void) {\n  if (is.func(value)) {\n    instance[key](execute(value, instance))\n  }\n  else if (is.object(value)) {\n    instance[key](value)\n  }\n}\n\nfunction addEvent(instance: Yox, type: string, listener: type.listener, once?: true) {\n  const options: EmitterOptions = {\n    fn: listener,\n    ctx: instance\n  }\n  if (once) {\n    options.max = 1\n  }\n  instance.$emitter.on(type, options)\n}\n\nfunction addEvents(\n  instance: Yox,\n  type: string | Record<string, type.listener>,\n  listener?: type.listener,\n  once?: true\n): Yox {\n  if (is.string(type)) {\n    addEvent(instance, type as string, listener as type.listener, once)\n  }\n  else {\n    object.each(\n      type,\n      function (value: type.listener, key: string) {\n        addEvent(instance, key, value, once)\n      }\n    )\n  }\n  return instance\n}\n\nfunction loadComponent(data: Record<string, type.component> | void, name: string, callback: type.componentCallback): true | void {\n  if (data && data[name]) {\n    const component = data[name]\n    // 注册的是异步加载函数\n    if (is.func(component)) {\n\n      let loader = component as type.componentLoader,\n\n      queue: type.componentCallback[] = loader[LOADER_QUEUE]\n\n      if (queue) {\n        array.push(queue, callback)\n      }\n      else {\n        queue = component[LOADER_QUEUE] = [callback]\n\n        loader(\n          function (options: YoxOptions) {\n\n            loader[LOADER_QUEUE] = env.UNDEFINED\n\n            data[name] = options\n\n            array.each(\n              queue,\n              function (callback) {\n                callback(options)\n              }\n            )\n\n          }\n        )\n      }\n\n    }\n    // 不是异步加载函数，直接同步返回\n    else {\n      callback(component as YoxOptions)\n    }\n    return env.TRUE\n  }\n}\n\nfunction getResource(data: type.data | void, name: string, lookup?: Function) {\n  if (data && data[name]) {\n    return data[name]\n  }\n  else if (lookup) {\n    return lookup(name)\n  }\n}\n\nfunction setResource(data: type.data, name: string | type.data, value?: any, formatValue?: (value: any) => any) {\n  if (is.string(name)) {\n    data[name as string] = formatValue ? formatValue(value) : value\n  }\n  else {\n    object.each(\n      name,\n      function (value, key) {\n        data[key] = formatValue ? formatValue(value) : value\n      }\n    )\n  }\n}\n\nfunction mergeResource(locals: type.data | void, globals: type.data): type.data {\n  return locals && globals\n    ? object.extend({}, globals, locals)\n    : locals || globals\n}\n\nif (process.env.NODE_ENV !== 'pure') {\n  Yox['dom'] = domApi\n  // 全局注册内置指令\n  Yox.directive({ event, model, binding })\n  // 全局注册内置过滤器\n  Yox.filter({ hasSlot })\n}\n\n"],"names":["env.UNDEFINED","env.RAW_FUNCTION","env.NULL","is.func","is.array","env.TRUE","env.FALSE","array","env.EMPTY_ARRAY","falsy","env.EMPTY_STRING","is.number","indexOf","has","is.string","string.startsWith","each","join","string.has","env.RAW_WILDCARD","array.each","object","is.object","keypathUtil.each","env.RAW_UNDEFINED","env.EMPTY_FUNCTION","env.WINDOW","is.boolean","object.copy","array.has","array.push","logger.fatal","object.each","logger.warn","string.indexOf","string.slice","nextTick","array.unshift","env.EMPTY_OBJECT","update","field.COMPONENT","remove","field.LOADING","component.update","directive.update","field.ID","guid","object.has","field.VNODE","env.RAW_COMPONENT","nativeAttr.update","nativeProp.update","directive.remove","field.LEAVING","is.numeric","nodeType.ARRAY","nodeType.BINARY","nodeType.CALL","nodeType.IDENTIFIER","nodeType.MEMBER","env.KEYPATH_CURRENT","env.KEYPATH_PARENT","nodeType.LITERAL","nodeType.OBJECT","nodeType.TERNARY","nodeType.UNARY","keypathUtil.join","string.codeAt","creator.createArray","interpreter.unary","creator.createLiteral","creator.createUnary","creator.createObject","creator.createIdentifier","creator.createCall","creator.createMemberIfNeeded","interpreter.binary","creator.createBinary","creator.createTernary","env.RAW_TRUE","env.RAW_FALSE","env.RAW_NULL","env.RAW_SLOT","env.RAW_TEMPLATE","env.RAW_KEY","env.RAW_REF","nodeType.IF","nodeType.EACH","nodeType.PARTIAL","nodeType.ATTRIBUTE","nodeType.DIRECTIVE","nodeType.PROPERTY","nodeType.ELEMENT","nodeType.ELSE","nodeType.ELSE_IF","nodeType.EXPRESSION","nodeType.IMPORT","nodeType.SPREAD","nodeType.TEXT","patternCache","string.trim","compile","fatal","array.last","array.pop","config.HINT_BOOLEAN","config.HINT_NUMBER","config.DIRECTIVE_MODEL","config.DIRECTIVE_LAZY","config.DIRECTIVE_EVENT","config.DIRECTIVE_CUSTOM","exprCompiler.compile","exprNodeType.LITERAL","exprNodeType.CALL","exprNodeType.IDENTIFIER","array.falsy","creator.createProperty","config.HINT_STRING","env.RAW_NAME","string.falsy","helper.specialAttrs","array.indexOf","creator.createText","creator.createElement","env.RAW_TRANSITION","creator.createDirective","string.camelize","config.DIRECTIVE_ON","creator.createAttribute","string.lower","helper.specialTags","config.SYNTAX_EACH","creator.createEach","config.SYNTAX_IMPORT","creator.createImport","config.SYNTAX_PARTIAL","creator.createPartial","config.SYNTAX_IF","creator.createIf","config.SYNTAX_ELSE_IF","creator.createElseIf","config.SYNTAX_ELSE","creator.createElse","config.SYNTAX_SPREAD","creator.createSpread","config.SYNTAX_COMMENT","creator.createExpression","string.charAt","helper.name2Type","array.join","config.SLOT_DATA_PREFIX","config.SLOT_NAME_DEFAULT","object.falsy","execute","object.get","invoke","exprExecutor.execute","config.DIRECTIVE_BINDING","env.RAW_VALUE","keypathUtil.match","env.RAW_LENGTH","keypathUtil.matchFuzzy","keypathUtil.isFuzzy","object.set","object.sort","array.remove","object.clear","env.DOCUMENT","env.EVENT_INPUT","env.EVENT_CHANGE","env.EVENT_CLICK","object.extend","logger.error","logger.success","env.EVENT_MODEL","array.toArray","array.toObject","env.EVENT_TAP","api","directive","isFuzzy","config.HOOK_BEFORE_CREATE","extend","env.RAW_DIRECTIVE","env.RAW_PARTIAL","env.RAW_FILTER","snabbdom.create","stringify","templateStringify.hasStringify","templateCompiler.compile","templateStringify.stringify","templateRender.render","config.HOOK_BEFORE_UPDATE","snabbdom.patch","config.HOOK_AFTER_UPDATE","config.HOOK_BEFORE_MOUNT","config.HOOK_AFTER_MOUNT","config.HOOK_BEFORE_DESTROY","snabbdom.destroy","config.HOOK_AFTER_DESTROY","string","toString","config.HOOK_AFTER_CREATE"],"mappings":"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"}